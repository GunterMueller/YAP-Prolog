Build started at 2020-03-21T10:59:50.672803
Main binary: /usr/bin/python
Build Options: -Dbackend=ninja
Python system: Linux
The Meson build system
Version: 0.53.2
Source dir: /home/vsc/github/yap
Build dir: /home/vsc/github/yap/meson
Build type: native build
WARNING: Newline character in a string detected, use ''' (three single quotes) for multiline strings instead.
This will become a hard error in a future Meson release. option( 'gc_no_tags', type : 'boolean', value : true, description: ' use Barts idea of allocating extra memory, 13 67
Project name: yap
Project version: 0.1
C compiler for the build machine: cc (gcc 9.2.1 "cc (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130")
C linker for the build machine: cc ld.bfd 2.34
C++ compiler for the build machine: c++ (gcc 9.2.1 "c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130")
C++ linker for the build machine: c++ ld.bfd 2.34
C compiler for the host machine: cc (gcc 9.2.1 "cc (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130")
C linker for the host machine: cc ld.bfd 2.34
C++ compiler for the host machine: c++ (gcc 9.2.1 "c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130")
C++ linker for the host machine: c++ ld.bfd 2.34
Build machine cpu family: x86_64
Build machine cpu: x86_64
Host machine cpu family: x86_64
Host machine cpu: x86_64
Target machine cpu family: x86_64
Target machine cpu: x86_64
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmpyerx3di3/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("alloca.h")
          #error "Header 'alloca.h' could not be found"
         #endif
        #else
         #include <alloca.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 
Has header "alloca.h" : YES (cached)
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmpwbnjg3zp/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("ctype.h")
          #error "Header 'ctype.h' could not be found"
         #endif
        #else
         #include <ctype.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 
Has header "ctype.h" : YES (cached)
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmp87zaf8cq/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("direct.h")
          #error "Header 'direct.h' could not be found"
         #endif
        #else
         #include <direct.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmp87zaf8cq/testfile.c:4:12: error: #error "Header 'direct.h' could not be found"
    4 |           #error "Header 'direct.h' could not be found"
      |            ^~~~~

Has header "direct.h" : NO (cached)
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmpnv31ppb_/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("errno.h")
          #error "Header 'errno.h' could not be found"
         #endif
        #else
         #include <errno.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 
Has header "errno.h" : YES (cached)
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmplb7_1jwu/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("fcntl.h")
          #error "Header 'fcntl.h' could not be found"
         #endif
        #else
         #include <fcntl.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 
Has header "fcntl.h" : YES (cached)
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmpgun6yaau/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("inttypes.h")
          #error "Header 'inttypes.h' could not be found"
         #endif
        #else
         #include <inttypes.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 
Has header "inttypes.h" : YES (cached)
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmpysq5fab5/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("malloc.h")
          #error "Header 'malloc.h' could not be found"
         #endif
        #else
         #include <malloc.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 
Has header "malloc.h" : YES (cached)
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmphj5i7ueh/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("math.h")
          #error "Header 'math.h' could not be found"
         #endif
        #else
         #include <math.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 
Has header "math.h" : YES (cached)
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmp2z1hsfry/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("mpe.h")
          #error "Header 'mpe.h' could not be found"
         #endif
        #else
         #include <mpe.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmp2z1hsfry/testfile.c:4:12: error: #error "Header 'mpe.h' could not be found"
    4 |           #error "Header 'mpe.h' could not be found"
      |            ^~~~~

Has header "mpe.h" : NO (cached)
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmpiri5k_b2/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("mpi.h")
          #error "Header 'mpi.h' could not be found"
         #endif
        #else
         #include <mpi.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 
Has header "mpi.h" : YES (cached)
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmpmknc4ls8/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("mysql/mysql.h")
          #error "Header 'mysql/mysql.h' could not be found"
         #endif
        #else
         #include <mysql/mysql.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 
Has header "mysql/mysql.h" : YES (cached)
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmp9jre98r3/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("pthread.h")
          #error "Header 'pthread.h' could not be found"
         #endif
        #else
         #include <pthread.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 
Has header "pthread.h" : YES (cached)
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmpythb6xvo/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("regex.h")
          #error "Header 'regex.h' could not be found"
         #endif
        #else
         #include <regex.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 
Has header "regex.h" : YES (cached)
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmp_ny9wrbw/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("setjmp.h")
          #error "Header 'setjmp.h' could not be found"
         #endif
        #else
         #include <setjmp.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 
Has header "setjmp.h" : YES (cached)
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmpp_8m312l/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("stdbool.h")
          #error "Header 'stdbool.h' could not be found"
         #endif
        #else
         #include <stdbool.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 
Has header "stdbool.h" : YES (cached)
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmpjcgab0s6/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("stdint.h")
          #error "Header 'stdint.h' could not be found"
         #endif
        #else
         #include <stdint.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 
Has header "stdint.h" : YES (cached)
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmpvdbqwbqy/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("strings.h")
          #error "Header 'strings.h' could not be found"
         #endif
        #else
         #include <strings.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 
Has header "strings.h" : YES (cached)
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmp6kj2r5nm/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("stropts.h")
          #error "Header 'stropts.h' could not be found"
         #endif
        #else
         #include <stropts.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmp6kj2r5nm/testfile.c:4:12: error: #error "Header 'stropts.h' could not be found"
    4 |           #error "Header 'stropts.h' could not be found"
      |            ^~~~~

Has header "stropts.h" : NO (cached)
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmp0lek2_ja/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("syslog.h")
          #error "Header 'syslog.h' could not be found"
         #endif
        #else
         #include <syslog.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 
Has header "syslog.h" : YES (cached)
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmpgtcv5czn/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("sys/types.h")
          #error "Header 'sys/types.h' could not be found"
         #endif
        #else
         #include <sys/types.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 
Has header "sys/types.h" : YES (cached)
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmpcjgkihtq/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("sys/ucontext.h")
          #error "Header 'sys/ucontext.h' could not be found"
         #endif
        #else
         #include <sys/ucontext.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 
Has header "sys/ucontext.h" : YES (cached)
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmp84_m89qn/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("sys/un.h")
          #error "Header 'sys/un.h' could not be found"
         #endif
        #else
         #include <sys/un.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 
Has header "sys/un.h" : YES (cached)
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmp5mbex04o/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("sys/wait.h")
          #error "Header 'sys/wait.h' could not be found"
         #endif
        #else
         #include <sys/wait.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 
Has header "sys/wait.h" : YES (cached)
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmpajz5yary/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("termios.h")
          #error "Header 'termios.h' could not be found"
         #endif
        #else
         #include <termios.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 
Has header "termios.h" : YES (cached)
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmp0si1jtbl/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("time.h")
          #error "Header 'time.h' could not be found"
         #endif
        #else
         #include <time.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 
Has header "time.h" : YES (cached)
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmpfqlq95eo/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("ucontext.h")
          #error "Header 'ucontext.h' could not be found"
         #endif
        #else
         #include <ucontext.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 
Has header "ucontext.h" : YES (cached)
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmpykhaaqsz/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("unistd.h")
          #error "Header 'unistd.h' could not be found"
         #endif
        #else
         #include <unistd.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 
Has header "unistd.h" : YES (cached)
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmp1a2csqom/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("util.h")
          #error "Header 'util.h' could not be found"
         #endif
        #else
         #include <util.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmp1a2csqom/testfile.c:4:12: error: #error "Header 'util.h' could not be found"
    4 |           #error "Header 'util.h' could not be found"
      |            ^~~~~

Has header "util.h" : NO (cached)
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmpoea4g6wa/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("utime.h")
          #error "Header 'utime.h' could not be found"
         #endif
        #else
         #include <utime.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 
Has header "utime.h" : YES (cached)
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmpmfl3ws6h/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("wchar.h")
          #error "Header 'wchar.h' could not be found"
         #endif
        #else
         #include <wchar.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 
Has header "wchar.h" : YES (cached)
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmpfzxd3880/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("wctype.h")
          #error "Header 'wctype.h' could not be found"
         #endif
        #else
         #include <wctype.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 
Has header "wctype.h" : YES (cached)
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmpo6121pjj/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("windef.h")
          #error "Header 'windef.h' could not be found"
         #endif
        #else
         #include <windef.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmpo6121pjj/testfile.c:4:12: error: #error "Header 'windef.h' could not be found"
    4 |           #error "Header 'windef.h' could not be found"
      |            ^~~~~

Has header "windef.h" : NO (cached)
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmp48t5y93o/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("windows.h")
          #error "Header 'windows.h' could not be found"
         #endif
        #else
         #include <windows.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmp48t5y93o/testfile.c:4:12: error: #error "Header 'windows.h' could not be found"
    4 |           #error "Header 'windows.h' could not be found"
      |            ^~~~~

Has header "windows.h" : NO (cached)
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmpo3wranf7/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("Python.h")
          #error "Header 'Python.h' could not be found"
         #endif
        #else
         #include <Python.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmpo3wranf7/testfile.c:4:12: error: #error "Header 'Python.h' could not be found"
    4 |           #error "Header 'Python.h' could not be found"
      |            ^~~~~

Has header "Python.h" : NO (cached)
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpeek7cem_
Command line:  cc /home/vsc/github/yap/meson/meson-private/tmpeek7cem_/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpeek7cem_/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -Wl,--start-group -lm -Wl,--end-group -Wl,--allow-shlib-undefined 

Code:
 int main(void) { return 0; }
Compiler stdout:
 
Compiler stderr:
 
Library m found: YES
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpdnotyudi
Command line:  cc /home/vsc/github/yap/meson/meson-private/tmpdnotyudi/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpdnotyudi/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -Wl,--start-group -ljudy -Wl,--end-group -Wl,--allow-shlib-undefined 

Code:
 int main(void) { return 0; }
Compiler stdout:
 
Compiler stderr:
 /usr/bin/ld: cannot find -ljudy
collect2: error: ld returned 1 exit status

Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpfaqvmye2
Command line:  cc /home/vsc/github/yap/meson/meson-private/tmpfaqvmye2/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpfaqvmye2/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 

Code:
 #include<stdio.h>
        
        int main(void) {
            printf("%ld\n", (long)(sizeof(void *)));
            return 0;
        };
Compiler stdout:
 
Compiler stderr:
 
Program stdout:

8

Program stderr:


Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmp8nofadgl
Command line:  cc /home/vsc/github/yap/meson/meson-private/tmp8nofadgl/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmp8nofadgl/output.obj -pipe -c -D_FILE_OFFSET_BITS=64 -O0 --print-search-dirs 

Code:
 
Compiler stdout:
 install: /usr/lib/gcc/x86_64-pc-linux-gnu/9.2.1/
programs: =/usr/lib/gcc/x86_64-pc-linux-gnu/9.2.1/:/usr/lib/gcc/x86_64-pc-linux-gnu/9.2.1/:/usr/lib/gcc/x86_64-pc-linux-gnu/:/usr/lib/gcc/x86_64-pc-linux-gnu/9.2.1/:/usr/lib/gcc/x86_64-pc-linux-gnu/:/usr/lib/gcc/x86_64-pc-linux-gnu/9.2.1/../../../../x86_64-pc-linux-gnu/bin/x86_64-pc-linux-gnu/9.2.1/:/usr/lib/gcc/x86_64-pc-linux-gnu/9.2.1/../../../../x86_64-pc-linux-gnu/bin/
libraries: =/usr/lib/gcc/x86_64-pc-linux-gnu/9.2.1/:/usr/lib/gcc/x86_64-pc-linux-gnu/9.2.1/../../../../x86_64-pc-linux-gnu/lib/x86_64-pc-linux-gnu/9.2.1/:/usr/lib/gcc/x86_64-pc-linux-gnu/9.2.1/../../../../x86_64-pc-linux-gnu/lib/../lib/:/usr/lib/gcc/x86_64-pc-linux-gnu/9.2.1/../../../x86_64-pc-linux-gnu/9.2.1/:/usr/lib/gcc/x86_64-pc-linux-gnu/9.2.1/../../../../lib/:/lib/x86_64-pc-linux-gnu/9.2.1/:/lib/../lib/:/usr/lib/x86_64-pc-linux-gnu/9.2.1/:/usr/lib/../lib/:/usr/lib/gcc/x86_64-pc-linux-gnu/9.2.1/../../../../x86_64-pc-linux-gnu/lib/:/usr/lib/gcc/x86_64-pc-linux-gnu/9.2.1/../../../:/lib/:/usr/lib/

Compiler stderr:
 
Library judy found: NO
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmp3yory_ji
Command line:  cc /home/vsc/github/yap/meson/meson-private/tmp3yory_ji/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmp3yory_ji/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -Wl,--start-group -landroid -Wl,--end-group -Wl,--allow-shlib-undefined 

Code:
 int main(void) { return 0; }
Compiler stdout:
 
Compiler stderr:
 /usr/bin/ld: cannot find -landroid
collect2: error: ld returned 1 exit status

Library android found: NO
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpc8uzpd_5
Command line:  cc /home/vsc/github/yap/meson/meson-private/tmpc8uzpd_5/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpc8uzpd_5/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -Wl,--start-group -llog -Wl,--end-group -Wl,--allow-shlib-undefined 

Code:
 int main(void) { return 0; }
Compiler stdout:
 
Compiler stderr:
 /usr/bin/ld: cannot find -llog
collect2: error: ld returned 1 exit status

Library log found: NO
Using cached compile:
Cached command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmp2hnlasbo/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmp2hnlasbo/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -lm -Wl,--end-group 

Code:
 
        #define acosh meson_disable_define_of_acosh
        
        #include <limits.h>
        #undef acosh
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char acosh (void);
        
        #if defined __stub_acosh || defined __stub___acosh
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return acosh ();
        }
Cached compiler stdout:
 
Cached compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmp2hnlasbo/testfile.c:10:14: warning: conflicting types for built-in function 'acosh'; expected 'double(double)' [-Wbuiltin-declaration-mismatch]
   10 |         char acosh (void);
      |              ^~~~~
/home/vsc/github/yap/meson/meson-private/tmp2hnlasbo/testfile.c:5:1: note: 'acosh' is declared in header '<math.h>'
    4 |         #include <limits.h>
  +++ |+#include <math.h>
    5 |         #undef acosh

Checking for function "acosh" with dependency -lm: YES (cached)
Using cached compile:
Cached command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpjqjsixmv/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpjqjsixmv/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -lm -Wl,--end-group 

Code:
 
        #define asinh meson_disable_define_of_asinh
        
        #include <limits.h>
        #undef asinh
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char asinh (void);
        
        #if defined __stub_asinh || defined __stub___asinh
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return asinh ();
        }
Cached compiler stdout:
 
Cached compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmpjqjsixmv/testfile.c:10:14: warning: conflicting types for built-in function 'asinh'; expected 'double(double)' [-Wbuiltin-declaration-mismatch]
   10 |         char asinh (void);
      |              ^~~~~
/home/vsc/github/yap/meson/meson-private/tmpjqjsixmv/testfile.c:5:1: note: 'asinh' is declared in header '<math.h>'
    4 |         #include <limits.h>
  +++ |+#include <math.h>
    5 |         #undef asinh

Checking for function "asinh" with dependency -lm: YES (cached)
Using cached compile:
Cached command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpmo4n5fzs/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpmo4n5fzs/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -lm -Wl,--end-group 

Code:
 
        #define atanh meson_disable_define_of_atanh
        
        #include <limits.h>
        #undef atanh
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char atanh (void);
        
        #if defined __stub_atanh || defined __stub___atanh
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return atanh ();
        }
Cached compiler stdout:
 
Cached compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmpmo4n5fzs/testfile.c:10:14: warning: conflicting types for built-in function 'atanh'; expected 'double(double)' [-Wbuiltin-declaration-mismatch]
   10 |         char atanh (void);
      |              ^~~~~
/home/vsc/github/yap/meson/meson-private/tmpmo4n5fzs/testfile.c:5:1: note: 'atanh' is declared in header '<math.h>'
    4 |         #include <limits.h>
  +++ |+#include <math.h>
    5 |         #undef atanh

Checking for function "atanh" with dependency -lm: YES (cached)
Using cached compile:
Cached command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpuw1f7dm_/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpuw1f7dm_/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -lm -Wl,--end-group 

Code:
 
        #define backtrace meson_disable_define_of_backtrace
        
        #include <limits.h>
        #undef backtrace
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char backtrace (void);
        
        #if defined __stub_backtrace || defined __stub___backtrace
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return backtrace ();
        }
Cached compiler stdout:
 
Cached compiler stderr:
 
Checking for function "backtrace" with dependency -lm: YES (cached)
Using cached compile:
Cached command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpcins9ecs/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpcins9ecs/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -lm -Wl,--end-group 

Code:
 
        #define dynarray meson_disable_define_of_dynarray
        
        #include <limits.h>
        #undef dynarray
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char dynarray (void);
        
        #if defined __stub_dynarray || defined __stub___dynarray
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return dynarray ();
        }
Cached compiler stdout:
 
Cached compiler stderr:
 /usr/bin/ld: /tmp/ccZoghhl.o: in function `main':
testfile.c:(.text+0x5): undefined reference to `dynarray'
collect2: error: ld returned 1 exit status

Using cached compile:
Cached command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmp2eq0nmlw/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmp2eq0nmlw/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -lm -Wl,--end-group 

Code:
 
        int main(void) {
        #ifdef __has_builtin
            #if !__has_builtin(__builtin_dynarray)
                #error "__builtin_dynarray not found"
            #endif
        #elif ! defined(dynarray)
            /* Check for __builtin_dynarray only if no includes were added to the
             * prefix above, which means no definition of dynarray can be found.
             * We would always check for this, but we get false positives on
             * MSYS2 if we do. Their toolchain is broken, but we can at least
             * give them a workaround. */
            #if 1
                __builtin_dynarray;
            #else
                #error "No definition for __builtin_dynarray found in the prefix"
            #endif
        #endif
        return 0;
        }
Cached compiler stdout:
 
Cached compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmp2eq0nmlw/testfile.c: In function 'main':
/home/vsc/github/yap/meson/meson-private/tmp2eq0nmlw/testfile.c:14:17: error: '__builtin_dynarray' undeclared (first use in this function); did you mean '__builtin_isnormal'?
   14 |                 __builtin_dynarray;
      |                 ^~~~~~~~~~~~~~~~~~
      |                 __builtin_isnormal
/home/vsc/github/yap/meson/meson-private/tmp2eq0nmlw/testfile.c:14:17: note: each undeclared identifier is reported only once for each function it appears in

Checking for function "dynarray" with dependency -lm: NO (cached)
Using cached compile:
Cached command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmp0n7bibsm/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmp0n7bibsm/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -lm -Wl,--end-group 

Code:
 
        #define __builtin_ffsll meson_disable_define_of___builtin_ffsll
        
        #include <limits.h>
        #undef __builtin_ffsll
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char __builtin_ffsll (void);
        
        #if defined __stub___builtin_ffsll || defined __stub_____builtin_ffsll
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return __builtin_ffsll ();
        }
Cached compiler stdout:
 
Cached compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmp0n7bibsm/testfile.c:10:14: warning: conflicting types for built-in function '__builtin_ffsll'; expected 'int(long long int)' [-Wbuiltin-declaration-mismatch]
   10 |         char __builtin_ffsll (void);
      |              ^~~~~~~~~~~~~~~
/usr/bin/ld: /tmp/ccQsFMuW.o: in function `main':
testfile.c:(.text+0x5): undefined reference to `__builtin_ffsll'
collect2: error: ld returned 1 exit status

Using cached compile:
Cached command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpzdq6qdbd/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpzdq6qdbd/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -lm -Wl,--end-group 

Code:
 
        int main(void) {
        #ifdef __has_builtin
            #if !__has_builtin(__builtin___builtin_ffsll)
                #error "__builtin___builtin_ffsll not found"
            #endif
        #elif ! defined(__builtin_ffsll)
            /* Check for __builtin___builtin_ffsll only if no includes were added to the
             * prefix above, which means no definition of __builtin_ffsll can be found.
             * We would always check for this, but we get false positives on
             * MSYS2 if we do. Their toolchain is broken, but we can at least
             * give them a workaround. */
            #if 1
                __builtin___builtin_ffsll;
            #else
                #error "No definition for __builtin___builtin_ffsll found in the prefix"
            #endif
        #endif
        return 0;
        }
Cached compiler stdout:
 
Cached compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmpzdq6qdbd/testfile.c: In function 'main':
/home/vsc/github/yap/meson/meson-private/tmpzdq6qdbd/testfile.c:14:17: error: '__builtin___builtin_ffsll' undeclared (first use in this function)
   14 |                 __builtin___builtin_ffsll;
      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~
/home/vsc/github/yap/meson/meson-private/tmpzdq6qdbd/testfile.c:14:17: note: each undeclared identifier is reported only once for each function it appears in

Checking for function "__builtin_ffsll" with dependency -lm: NO (cached)
Using cached compile:
Cached command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpm94it8nz/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpm94it8nz/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -lm -Wl,--end-group 

Code:
 
        #define finite meson_disable_define_of_finite
        
        #include <limits.h>
        #undef finite
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char finite (void);
        
        #if defined __stub_finite || defined __stub___finite
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return finite ();
        }
Cached compiler stdout:
 
Cached compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmpm94it8nz/testfile.c:10:14: warning: conflicting types for built-in function 'finite'; expected 'int(double)' [-Wbuiltin-declaration-mismatch]
   10 |         char finite (void);
      |              ^~~~~~

Checking for function "finite" with dependency -lm: YES (cached)
Using cached compile:
Cached command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmp2kmy384e/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmp2kmy384e/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -lm -Wl,--end-group 

Code:
 
        #define iswblank meson_disable_define_of_iswblank
        
        #include <limits.h>
        #undef iswblank
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char iswblank (void);
        
        #if defined __stub_iswblank || defined __stub___iswblank
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return iswblank ();
        }
Cached compiler stdout:
 
Cached compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmp2kmy384e/testfile.c:10:14: warning: conflicting types for built-in function 'iswblank'; expected 'int(unsigned int)' [-Wbuiltin-declaration-mismatch]
   10 |         char iswblank (void);
      |              ^~~~~~~~
/home/vsc/github/yap/meson/meson-private/tmp2kmy384e/testfile.c:5:1: note: 'iswblank' is declared in header '<wctype.h>'
    4 |         #include <limits.h>
  +++ |+#include <wctype.h>
    5 |         #undef iswblank

Checking for function "iswblank" with dependency -lm: YES (cached)
Using cached compile:
Cached command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpkbakt115/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpkbakt115/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -lm -Wl,--end-group 

Code:
 
        #define iswspace meson_disable_define_of_iswspace
        
        #include <limits.h>
        #undef iswspace
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char iswspace (void);
        
        #if defined __stub_iswspace || defined __stub___iswspace
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return iswspace ();
        }
Cached compiler stdout:
 
Cached compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmpkbakt115/testfile.c:10:14: warning: conflicting types for built-in function 'iswspace'; expected 'int(unsigned int)' [-Wbuiltin-declaration-mismatch]
   10 |         char iswspace (void);
      |              ^~~~~~~~
/home/vsc/github/yap/meson/meson-private/tmpkbakt115/testfile.c:5:1: note: 'iswspace' is declared in header '<wctype.h>'
    4 |         #include <limits.h>
  +++ |+#include <wctype.h>
    5 |         #undef iswspace

Checking for function "iswspace" with dependency -lm: YES (cached)
Using cached compile:
Cached command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpvq0egn5_/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpvq0egn5_/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -lm -Wl,--end-group 

Code:
 
        #define getpagesize meson_disable_define_of_getpagesize
        
        #include <limits.h>
        #undef getpagesize
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char getpagesize (void);
        
        #if defined __stub_getpagesize || defined __stub___getpagesize
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return getpagesize ();
        }
Cached compiler stdout:
 
Cached compiler stderr:
 
Checking for function "getpagesize" with dependency -lm: YES (cached)
Using cached compile:
Cached command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpg550keq9/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpg550keq9/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -lm -Wl,--end-group 

Code:
 
        #define isfinite meson_disable_define_of_isfinite
        
        #include <limits.h>
        #undef isfinite
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char isfinite (void);
        
        #if defined __stub_isfinite || defined __stub___isfinite
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return isfinite ();
        }
Cached compiler stdout:
 
Cached compiler stderr:
 /usr/bin/ld: /tmp/ccunAiz3.o: in function `main':
testfile.c:(.text+0x5): undefined reference to `isfinite'
collect2: error: ld returned 1 exit status

Using cached compile:
Cached command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmp_ak4b8ks/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmp_ak4b8ks/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -lm -Wl,--end-group 

Code:
 
        int main(void) {
        #ifdef __has_builtin
            #if !__has_builtin(__builtin_isfinite)
                #error "__builtin_isfinite not found"
            #endif
        #elif ! defined(isfinite)
            /* Check for __builtin_isfinite only if no includes were added to the
             * prefix above, which means no definition of isfinite can be found.
             * We would always check for this, but we get false positives on
             * MSYS2 if we do. Their toolchain is broken, but we can at least
             * give them a workaround. */
            #if 1
                __builtin_isfinite;
            #else
                #error "No definition for __builtin_isfinite found in the prefix"
            #endif
        #endif
        return 0;
        }
Cached compiler stdout:
 
Cached compiler stderr:
 
Checking for function "isfinite" with dependency -lm: YES (cached)
Using cached compile:
Cached command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpge7d2joa/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpge7d2joa/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -lm -Wl,--end-group 

Code:
 
        #define isinf meson_disable_define_of_isinf
        
        #include <limits.h>
        #undef isinf
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char isinf (void);
        
        #if defined __stub_isinf || defined __stub___isinf
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return isinf ();
        }
Cached compiler stdout:
 
Cached compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmpge7d2joa/testfile.c:10:14: warning: conflicting types for built-in function 'isinf'; expected 'int()' [-Wbuiltin-declaration-mismatch]
   10 |         char isinf (void);
      |              ^~~~~
/home/vsc/github/yap/meson/meson-private/tmpge7d2joa/testfile.c:5:1: note: 'isinf' is declared in header '<math.h>'
    4 |         #include <limits.h>
  +++ |+#include <math.h>
    5 |         #undef isinf

Checking for function "isinf" with dependency -lm: YES (cached)
Using cached compile:
Cached command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpe6atdrbf/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpe6atdrbf/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -lm -Wl,--end-group 

Code:
 
        #define isnan meson_disable_define_of_isnan
        
        #include <limits.h>
        #undef isnan
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char isnan (void);
        
        #if defined __stub_isnan || defined __stub___isnan
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return isnan ();
        }
Cached compiler stdout:
 
Cached compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmpe6atdrbf/testfile.c:10:14: warning: conflicting types for built-in function 'isnan'; expected 'int()' [-Wbuiltin-declaration-mismatch]
   10 |         char isnan (void);
      |              ^~~~~
/home/vsc/github/yap/meson/meson-private/tmpe6atdrbf/testfile.c:5:1: note: 'isnan' is declared in header '<math.h>'
    4 |         #include <limits.h>
  +++ |+#include <math.h>
    5 |         #undef isnan

Checking for function "isnan" with dependency -lm: YES (cached)
Using cached compile:
Cached command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmp8okdeatv/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmp8okdeatv/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -lm -Wl,--end-group 

Code:
 
        #define labs meson_disable_define_of_labs
        
        #include <limits.h>
        #undef labs
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char labs (void);
        
        #if defined __stub_labs || defined __stub___labs
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return labs ();
        }
Cached compiler stdout:
 
Cached compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmp8okdeatv/testfile.c:10:14: warning: conflicting types for built-in function 'labs'; expected 'long int(long int)' [-Wbuiltin-declaration-mismatch]
   10 |         char labs (void);
      |              ^~~~
/home/vsc/github/yap/meson/meson-private/tmp8okdeatv/testfile.c:5:1: note: 'labs' is declared in header '<stdlib.h>'
    4 |         #include <limits.h>
  +++ |+#include <stdlib.h>
    5 |         #undef labs

Checking for function "labs" with dependency -lm: YES (cached)
Using cached compile:
Cached command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpr2ps45sj/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpr2ps45sj/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -lm -Wl,--end-group 

Code:
 
        #define link meson_disable_define_of_link
        
        #include <limits.h>
        #undef link
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char link (void);
        
        #if defined __stub_link || defined __stub___link
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return link ();
        }
Cached compiler stdout:
 
Cached compiler stderr:
 
Checking for function "link" with dependency -lm: YES (cached)
Using cached compile:
Cached command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmp0d8x1j3b/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmp0d8x1j3b/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -lm -Wl,--end-group 

Code:
 
        #define mbscoll meson_disable_define_of_mbscoll
        
        #include <limits.h>
        #undef mbscoll
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char mbscoll (void);
        
        #if defined __stub_mbscoll || defined __stub___mbscoll
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return mbscoll ();
        }
Cached compiler stdout:
 
Cached compiler stderr:
 /usr/bin/ld: /tmp/ccimgD0m.o: in function `main':
testfile.c:(.text+0x5): undefined reference to `mbscoll'
collect2: error: ld returned 1 exit status

Using cached compile:
Cached command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpxjag_bj0/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpxjag_bj0/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -lm -Wl,--end-group 

Code:
 
        int main(void) {
        #ifdef __has_builtin
            #if !__has_builtin(__builtin_mbscoll)
                #error "__builtin_mbscoll not found"
            #endif
        #elif ! defined(mbscoll)
            /* Check for __builtin_mbscoll only if no includes were added to the
             * prefix above, which means no definition of mbscoll can be found.
             * We would always check for this, but we get false positives on
             * MSYS2 if we do. Their toolchain is broken, but we can at least
             * give them a workaround. */
            #if 1
                __builtin_mbscoll;
            #else
                #error "No definition for __builtin_mbscoll found in the prefix"
            #endif
        #endif
        return 0;
        }
Cached compiler stdout:
 
Cached compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmpxjag_bj0/testfile.c: In function 'main':
/home/vsc/github/yap/meson/meson-private/tmpxjag_bj0/testfile.c:14:17: error: '__builtin_mbscoll' undeclared (first use in this function); did you mean '__builtin_acosl'?
   14 |                 __builtin_mbscoll;
      |                 ^~~~~~~~~~~~~~~~~
      |                 __builtin_acosl
/home/vsc/github/yap/meson/meson-private/tmpxjag_bj0/testfile.c:14:17: note: each undeclared identifier is reported only once for each function it appears in

Checking for function "mbscoll" with dependency -lm: NO (cached)
Using cached compile:
Cached command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpb50dytqo/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpb50dytqo/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -lm -Wl,--end-group 

Code:
 
        #define mbscasecoll meson_disable_define_of_mbscasecoll
        
        #include <limits.h>
        #undef mbscasecoll
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char mbscasecoll (void);
        
        #if defined __stub_mbscasecoll || defined __stub___mbscasecoll
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return mbscasecoll ();
        }
Cached compiler stdout:
 
Cached compiler stderr:
 /usr/bin/ld: /tmp/ccWiFDNW.o: in function `main':
testfile.c:(.text+0x5): undefined reference to `mbscasecoll'
collect2: error: ld returned 1 exit status

Using cached compile:
Cached command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpy1m_4ewj/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpy1m_4ewj/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -lm -Wl,--end-group 

Code:
 
        int main(void) {
        #ifdef __has_builtin
            #if !__has_builtin(__builtin_mbscasecoll)
                #error "__builtin_mbscasecoll not found"
            #endif
        #elif ! defined(mbscasecoll)
            /* Check for __builtin_mbscasecoll only if no includes were added to the
             * prefix above, which means no definition of mbscasecoll can be found.
             * We would always check for this, but we get false positives on
             * MSYS2 if we do. Their toolchain is broken, but we can at least
             * give them a workaround. */
            #if 1
                __builtin_mbscasecoll;
            #else
                #error "No definition for __builtin_mbscasecoll found in the prefix"
            #endif
        #endif
        return 0;
        }
Cached compiler stdout:
 
Cached compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmpy1m_4ewj/testfile.c: In function 'main':
/home/vsc/github/yap/meson/meson-private/tmpy1m_4ewj/testfile.c:14:17: error: '__builtin_mbscasecoll' undeclared (first use in this function); did you mean '__builtin_cacosl'?
   14 |                 __builtin_mbscasecoll;
      |                 ^~~~~~~~~~~~~~~~~~~~~
      |                 __builtin_cacosl
/home/vsc/github/yap/meson/meson-private/tmpy1m_4ewj/testfile.c:14:17: note: each undeclared identifier is reported only once for each function it appears in

Checking for function "mbscasecoll" with dependency -lm: NO (cached)
Using cached compile:
Cached command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpo33qj99p/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpo33qj99p/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -lm -Wl,--end-group 

Code:
 
        #define mbsnrtowcs meson_disable_define_of_mbsnrtowcs
        
        #include <limits.h>
        #undef mbsnrtowcs
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char mbsnrtowcs (void);
        
        #if defined __stub_mbsnrtowcs || defined __stub___mbsnrtowcs
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return mbsnrtowcs ();
        }
Cached compiler stdout:
 
Cached compiler stderr:
 
Checking for function "mbsnrtowcs" with dependency -lm: YES (cached)
Using cached compile:
Cached command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmput37456w/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmput37456w/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -lm -Wl,--end-group 

Code:
 
        #define memmove meson_disable_define_of_memmove
        
        #include <limits.h>
        #undef memmove
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char memmove (void);
        
        #if defined __stub_memmove || defined __stub___memmove
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return memmove ();
        }
Cached compiler stdout:
 
Cached compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmput37456w/testfile.c:10:14: warning: conflicting types for built-in function 'memmove'; expected 'void *(void *, const void *, long unsigned int)' [-Wbuiltin-declaration-mismatch]
   10 |         char memmove (void);
      |              ^~~~~~~
/home/vsc/github/yap/meson/meson-private/tmput37456w/testfile.c:5:1: note: 'memmove' is declared in header '<string.h>'
    4 |         #include <limits.h>
  +++ |+#include <string.h>
    5 |         #undef memmove

Checking for function "memmove" with dependency -lm: YES (cached)
Using cached compile:
Cached command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpagqb5iwz/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpagqb5iwz/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -lm -Wl,--end-group 

Code:
 
        #define mtrace meson_disable_define_of_mtrace
        
        #include <limits.h>
        #undef mtrace
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char mtrace (void);
        
        #if defined __stub_mtrace || defined __stub___mtrace
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return mtrace ();
        }
Cached compiler stdout:
 
Cached compiler stderr:
 
Checking for function "mtrace" with dependency -lm: YES (cached)
Using cached compile:
Cached command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpoyjrxz58/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpoyjrxz58/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -lm -Wl,--end-group 

Code:
 
        #define restartable_syscalls meson_disable_define_of_restartable_syscalls
        
        #include <limits.h>
        #undef restartable_syscalls
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char restartable_syscalls (void);
        
        #if defined __stub_restartable_syscalls || defined __stub___restartable_syscalls
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return restartable_syscalls ();
        }
Cached compiler stdout:
 
Cached compiler stderr:
 /usr/bin/ld: /tmp/ccDDumcF.o: in function `main':
testfile.c:(.text+0x5): undefined reference to `restartable_syscalls'
collect2: error: ld returned 1 exit status

Using cached compile:
Cached command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpq7e8mw5n/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpq7e8mw5n/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -lm -Wl,--end-group 

Code:
 
        int main(void) {
        #ifdef __has_builtin
            #if !__has_builtin(__builtin_restartable_syscalls)
                #error "__builtin_restartable_syscalls not found"
            #endif
        #elif ! defined(restartable_syscalls)
            /* Check for __builtin_restartable_syscalls only if no includes were added to the
             * prefix above, which means no definition of restartable_syscalls can be found.
             * We would always check for this, but we get false positives on
             * MSYS2 if we do. Their toolchain is broken, but we can at least
             * give them a workaround. */
            #if 1
                __builtin_restartable_syscalls;
            #else
                #error "No definition for __builtin_restartable_syscalls found in the prefix"
            #endif
        #endif
        return 0;
        }
Cached compiler stdout:
 
Cached compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmpq7e8mw5n/testfile.c: In function 'main':
/home/vsc/github/yap/meson/meson-private/tmpq7e8mw5n/testfile.c:14:17: error: '__builtin_restartable_syscalls' undeclared (first use in this function)
   14 |                 __builtin_restartable_syscalls;
      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/vsc/github/yap/meson/meson-private/tmpq7e8mw5n/testfile.c:14:17: note: each undeclared identifier is reported only once for each function it appears in

Checking for function "restartable_syscalls" with dependency -lm: NO (cached)
Using cached compile:
Cached command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpij151tev/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpij151tev/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -lm -Wl,--end-group 

Code:
 
        #define rint meson_disable_define_of_rint
        
        #include <limits.h>
        #undef rint
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char rint (void);
        
        #if defined __stub_rint || defined __stub___rint
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return rint ();
        }
Cached compiler stdout:
 
Cached compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmpij151tev/testfile.c:10:14: warning: conflicting types for built-in function 'rint'; expected 'double(double)' [-Wbuiltin-declaration-mismatch]
   10 |         char rint (void);
      |              ^~~~
/home/vsc/github/yap/meson/meson-private/tmpij151tev/testfile.c:5:1: note: 'rint' is declared in header '<math.h>'
    4 |         #include <limits.h>
  +++ |+#include <math.h>
    5 |         #undef rint

Checking for function "rint" with dependency -lm: YES (cached)
Using cached compile:
Cached command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpmzl90evx/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpmzl90evx/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -lm -Wl,--end-group 

Code:
 
        #define sbrk meson_disable_define_of_sbrk
        
        #include <limits.h>
        #undef sbrk
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char sbrk (void);
        
        #if defined __stub_sbrk || defined __stub___sbrk
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return sbrk ();
        }
Cached compiler stdout:
 
Cached compiler stderr:
 
Checking for function "sbrk" with dependency -lm: YES (cached)
Using cached compile:
Cached command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmp3qp8utds/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmp3qp8utds/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -lm -Wl,--end-group 

Code:
 
        #define setbuf meson_disable_define_of_setbuf
        
        #include <limits.h>
        #undef setbuf
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char setbuf (void);
        
        #if defined __stub_setbuf || defined __stub___setbuf
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return setbuf ();
        }
Cached compiler stdout:
 
Cached compiler stderr:
 
Checking for function "setbuf" with dependency -lm: YES (cached)
Using cached compile:
Cached command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmps9r7pgf9/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmps9r7pgf9/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -lm -Wl,--end-group 

Code:
 
        #define snprintf meson_disable_define_of_snprintf
        
        #include <limits.h>
        #undef snprintf
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char snprintf (void);
        
        #if defined __stub_snprintf || defined __stub___snprintf
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return snprintf ();
        }
Cached compiler stdout:
 
Cached compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmps9r7pgf9/testfile.c:10:14: warning: conflicting types for built-in function 'snprintf'; expected 'int(char *, long unsigned int,  const char *, ...)' [-Wbuiltin-declaration-mismatch]
   10 |         char snprintf (void);
      |              ^~~~~~~~
/home/vsc/github/yap/meson/meson-private/tmps9r7pgf9/testfile.c:5:1: note: 'snprintf' is declared in header '<stdio.h>'
    4 |         #include <limits.h>
  +++ |+#include <stdio.h>
    5 |         #undef snprintf

Checking for function "snprintf" with dependency -lm: YES (cached)
Using cached compile:
Cached command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpuplj7h8s/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpuplj7h8s/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -lm -Wl,--end-group 

Code:
 
        #define sqllen meson_disable_define_of_sqllen
        
        #include <limits.h>
        #undef sqllen
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char sqllen (void);
        
        #if defined __stub_sqllen || defined __stub___sqllen
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return sqllen ();
        }
Cached compiler stdout:
 
Cached compiler stderr:
 /usr/bin/ld: /tmp/cc6RE3AO.o: in function `main':
testfile.c:(.text+0x5): undefined reference to `sqllen'
collect2: error: ld returned 1 exit status

Using cached compile:
Cached command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpqpjlf1eh/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpqpjlf1eh/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -lm -Wl,--end-group 

Code:
 
        int main(void) {
        #ifdef __has_builtin
            #if !__has_builtin(__builtin_sqllen)
                #error "__builtin_sqllen not found"
            #endif
        #elif ! defined(sqllen)
            /* Check for __builtin_sqllen only if no includes were added to the
             * prefix above, which means no definition of sqllen can be found.
             * We would always check for this, but we get false positives on
             * MSYS2 if we do. Their toolchain is broken, but we can at least
             * give them a workaround. */
            #if 1
                __builtin_sqllen;
            #else
                #error "No definition for __builtin_sqllen found in the prefix"
            #endif
        #endif
        return 0;
        }
Cached compiler stdout:
 
Cached compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmpqpjlf1eh/testfile.c: In function 'main':
/home/vsc/github/yap/meson/meson-private/tmpqpjlf1eh/testfile.c:14:17: error: '__builtin_sqllen' undeclared (first use in this function); did you mean '__builtin_strlen'?
   14 |                 __builtin_sqllen;
      |                 ^~~~~~~~~~~~~~~~
      |                 __builtin_strlen
/home/vsc/github/yap/meson/meson-private/tmpqpjlf1eh/testfile.c:14:17: note: each undeclared identifier is reported only once for each function it appears in

Checking for function "sqllen" with dependency -lm: NO (cached)
Using cached compile:
Cached command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpqkl42kfb/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpqkl42kfb/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -lm -Wl,--end-group 

Code:
 
        #define sqlulen meson_disable_define_of_sqlulen
        
        #include <limits.h>
        #undef sqlulen
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char sqlulen (void);
        
        #if defined __stub_sqlulen || defined __stub___sqlulen
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return sqlulen ();
        }
Cached compiler stdout:
 
Cached compiler stderr:
 /usr/bin/ld: /tmp/cckjSCSo.o: in function `main':
testfile.c:(.text+0x5): undefined reference to `sqlulen'
collect2: error: ld returned 1 exit status

Using cached compile:
Cached command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpbkxdxmob/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpbkxdxmob/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -lm -Wl,--end-group 

Code:
 
        int main(void) {
        #ifdef __has_builtin
            #if !__has_builtin(__builtin_sqlulen)
                #error "__builtin_sqlulen not found"
            #endif
        #elif ! defined(sqlulen)
            /* Check for __builtin_sqlulen only if no includes were added to the
             * prefix above, which means no definition of sqlulen can be found.
             * We would always check for this, but we get false positives on
             * MSYS2 if we do. Their toolchain is broken, but we can at least
             * give them a workaround. */
            #if 1
                __builtin_sqlulen;
            #else
                #error "No definition for __builtin_sqlulen found in the prefix"
            #endif
        #endif
        return 0;
        }
Cached compiler stdout:
 
Cached compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmpbkxdxmob/testfile.c: In function 'main':
/home/vsc/github/yap/meson/meson-private/tmpbkxdxmob/testfile.c:14:17: error: '__builtin_sqlulen' undeclared (first use in this function); did you mean '__builtin_strlen'?
   14 |                 __builtin_sqlulen;
      |                 ^~~~~~~~~~~~~~~~~
      |                 __builtin_strlen
/home/vsc/github/yap/meson/meson-private/tmpbkxdxmob/testfile.c:14:17: note: each undeclared identifier is reported only once for each function it appears in

Checking for function "sqlulen" with dependency -lm: NO (cached)
Using cached compile:
Cached command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpr8k0tz3m/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpr8k0tz3m/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -lm -Wl,--end-group 

Code:
 
        #define srand meson_disable_define_of_srand
        
        #include <limits.h>
        #undef srand
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char srand (void);
        
        #if defined __stub_srand || defined __stub___srand
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return srand ();
        }
Cached compiler stdout:
 
Cached compiler stderr:
 
Checking for function "srand" with dependency -lm: YES (cached)
Using cached compile:
Cached command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmp_agew269/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmp_agew269/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -lm -Wl,--end-group 

Code:
 
        #define srand48 meson_disable_define_of_srand48
        
        #include <limits.h>
        #undef srand48
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char srand48 (void);
        
        #if defined __stub_srand48 || defined __stub___srand48
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return srand48 ();
        }
Cached compiler stdout:
 
Cached compiler stderr:
 
Checking for function "srand48" with dependency -lm: YES (cached)
Using cached compile:
Cached command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpw0_rll9o/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpw0_rll9o/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -lm -Wl,--end-group 

Code:
 
        #define srandom meson_disable_define_of_srandom
        
        #include <limits.h>
        #undef srandom
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char srandom (void);
        
        #if defined __stub_srandom || defined __stub___srandom
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return srandom ();
        }
Cached compiler stdout:
 
Cached compiler stderr:
 
Checking for function "srandom" with dependency -lm: YES (cached)
Using cached compile:
Cached command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpp1g9896s/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpp1g9896s/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -lm -Wl,--end-group 

Code:
 
        #define stat meson_disable_define_of_stat
        
        #include <limits.h>
        #undef stat
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char stat (void);
        
        #if defined __stub_stat || defined __stub___stat
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return stat ();
        }
Cached compiler stdout:
 
Cached compiler stderr:
 
Checking for function "stat" with dependency -lm: YES (cached)
Using cached compile:
Cached command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpufgsv8kv/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpufgsv8kv/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -lm -Wl,--end-group 

Code:
 
        #define strcat meson_disable_define_of_strcat
        
        #include <limits.h>
        #undef strcat
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char strcat (void);
        
        #if defined __stub_strcat || defined __stub___strcat
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return strcat ();
        }
Cached compiler stdout:
 
Cached compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmpufgsv8kv/testfile.c:10:14: warning: conflicting types for built-in function 'strcat'; expected 'char *(char *, const char *)' [-Wbuiltin-declaration-mismatch]
   10 |         char strcat (void);
      |              ^~~~~~
/home/vsc/github/yap/meson/meson-private/tmpufgsv8kv/testfile.c:5:1: note: 'strcat' is declared in header '<string.h>'
    4 |         #include <limits.h>
  +++ |+#include <string.h>
    5 |         #undef strcat

Checking for function "strcat" with dependency -lm: YES (cached)
Using cached compile:
Cached command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpdrmqadfe/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpdrmqadfe/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -lm -Wl,--end-group 

Code:
 
        #define strcasecmp meson_disable_define_of_strcasecmp
        
        #include <limits.h>
        #undef strcasecmp
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char strcasecmp (void);
        
        #if defined __stub_strcasecmp || defined __stub___strcasecmp
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return strcasecmp ();
        }
Cached compiler stdout:
 
Cached compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmpdrmqadfe/testfile.c:10:14: warning: conflicting types for built-in function 'strcasecmp'; expected 'int(const char *, const char *)' [-Wbuiltin-declaration-mismatch]
   10 |         char strcasecmp (void);
      |              ^~~~~~~~~~

Checking for function "strcasecmp" with dependency -lm: YES (cached)
Using cached compile:
Cached command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmp_6p5um0u/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmp_6p5um0u/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -lm -Wl,--end-group 

Code:
 
        #define strcasestr meson_disable_define_of_strcasestr
        
        #include <limits.h>
        #undef strcasestr
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char strcasestr (void);
        
        #if defined __stub_strcasestr || defined __stub___strcasestr
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return strcasestr ();
        }
Cached compiler stdout:
 
Cached compiler stderr:
 
Checking for function "strcasestr" with dependency -lm: YES (cached)
Using cached compile:
Cached command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpxb60r889/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpxb60r889/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -lm -Wl,--end-group 

Code:
 
        #define strchr meson_disable_define_of_strchr
        
        #include <limits.h>
        #undef strchr
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char strchr (void);
        
        #if defined __stub_strchr || defined __stub___strchr
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return strchr ();
        }
Cached compiler stdout:
 
Cached compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmpxb60r889/testfile.c:10:14: warning: conflicting types for built-in function 'strchr'; expected 'char *(const char *, int)' [-Wbuiltin-declaration-mismatch]
   10 |         char strchr (void);
      |              ^~~~~~
/home/vsc/github/yap/meson/meson-private/tmpxb60r889/testfile.c:5:1: note: 'strchr' is declared in header '<string.h>'
    4 |         #include <limits.h>
  +++ |+#include <string.h>
    5 |         #undef strchr

Checking for function "strchr" with dependency -lm: YES (cached)
Using cached compile:
Cached command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpmqwqc4vi/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpmqwqc4vi/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -lm -Wl,--end-group 

Code:
 
        #define strerror meson_disable_define_of_strerror
        
        #include <limits.h>
        #undef strerror
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char strerror (void);
        
        #if defined __stub_strerror || defined __stub___strerror
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return strerror ();
        }
Cached compiler stdout:
 
Cached compiler stderr:
 
Checking for function "strerror" with dependency -lm: YES (cached)
Using cached compile:
Cached command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpscekw23d/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpscekw23d/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -lm -Wl,--end-group 

Code:
 
        #define stricmp meson_disable_define_of_stricmp
        
        #include <limits.h>
        #undef stricmp
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char stricmp (void);
        
        #if defined __stub_stricmp || defined __stub___stricmp
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return stricmp ();
        }
Cached compiler stdout:
 
Cached compiler stderr:
 /usr/bin/ld: /tmp/cci7LLbq.o: in function `main':
testfile.c:(.text+0x5): undefined reference to `stricmp'
collect2: error: ld returned 1 exit status

Using cached compile:
Cached command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpgweqrgkp/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpgweqrgkp/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -lm -Wl,--end-group 

Code:
 
        int main(void) {
        #ifdef __has_builtin
            #if !__has_builtin(__builtin_stricmp)
                #error "__builtin_stricmp not found"
            #endif
        #elif ! defined(stricmp)
            /* Check for __builtin_stricmp only if no includes were added to the
             * prefix above, which means no definition of stricmp can be found.
             * We would always check for this, but we get false positives on
             * MSYS2 if we do. Their toolchain is broken, but we can at least
             * give them a workaround. */
            #if 1
                __builtin_stricmp;
            #else
                #error "No definition for __builtin_stricmp found in the prefix"
            #endif
        #endif
        return 0;
        }
Cached compiler stdout:
 
Cached compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmpgweqrgkp/testfile.c: In function 'main':
/home/vsc/github/yap/meson/meson-private/tmpgweqrgkp/testfile.c:14:17: error: '__builtin_stricmp' undeclared (first use in this function); did you mean '__builtin_strcmp'?
   14 |                 __builtin_stricmp;
      |                 ^~~~~~~~~~~~~~~~~
      |                 __builtin_strcmp
/home/vsc/github/yap/meson/meson-private/tmpgweqrgkp/testfile.c:14:17: note: each undeclared identifier is reported only once for each function it appears in

Checking for function "stricmp" with dependency -lm: NO (cached)
Using cached compile:
Cached command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmp93kkkrdy/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmp93kkkrdy/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -lm -Wl,--end-group 

Code:
 
        #define strlcpy meson_disable_define_of_strlcpy
        
        #include <limits.h>
        #undef strlcpy
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char strlcpy (void);
        
        #if defined __stub_strlcpy || defined __stub___strlcpy
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return strlcpy ();
        }
Cached compiler stdout:
 
Cached compiler stderr:
 /usr/bin/ld: /tmp/cckgAx10.o: in function `main':
testfile.c:(.text+0x5): undefined reference to `strlcpy'
collect2: error: ld returned 1 exit status

Using cached compile:
Cached command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpys86quzo/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpys86quzo/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -lm -Wl,--end-group 

Code:
 
        int main(void) {
        #ifdef __has_builtin
            #if !__has_builtin(__builtin_strlcpy)
                #error "__builtin_strlcpy not found"
            #endif
        #elif ! defined(strlcpy)
            /* Check for __builtin_strlcpy only if no includes were added to the
             * prefix above, which means no definition of strlcpy can be found.
             * We would always check for this, but we get false positives on
             * MSYS2 if we do. Their toolchain is broken, but we can at least
             * give them a workaround. */
            #if 1
                __builtin_strlcpy;
            #else
                #error "No definition for __builtin_strlcpy found in the prefix"
            #endif
        #endif
        return 0;
        }
Cached compiler stdout:
 
Cached compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmpys86quzo/testfile.c: In function 'main':
/home/vsc/github/yap/meson/meson-private/tmpys86quzo/testfile.c:14:17: error: '__builtin_strlcpy' undeclared (first use in this function); did you mean '__builtin_strcpy'?
   14 |                 __builtin_strlcpy;
      |                 ^~~~~~~~~~~~~~~~~
      |                 __builtin_strcpy
/home/vsc/github/yap/meson/meson-private/tmpys86quzo/testfile.c:14:17: note: each undeclared identifier is reported only once for each function it appears in

Checking for function "strlcpy" with dependency -lm: NO (cached)
Using cached compile:
Cached command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmp1nt4q7kr/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmp1nt4q7kr/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -lm -Wl,--end-group 

Code:
 
        #define strlwr meson_disable_define_of_strlwr
        
        #include <limits.h>
        #undef strlwr
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char strlwr (void);
        
        #if defined __stub_strlwr || defined __stub___strlwr
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return strlwr ();
        }
Cached compiler stdout:
 
Cached compiler stderr:
 /usr/bin/ld: /tmp/ccFE6r3B.o: in function `main':
testfile.c:(.text+0x5): undefined reference to `strlwr'
collect2: error: ld returned 1 exit status

Using cached compile:
Cached command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpk4yv09vc/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpk4yv09vc/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -lm -Wl,--end-group 

Code:
 
        int main(void) {
        #ifdef __has_builtin
            #if !__has_builtin(__builtin_strlwr)
                #error "__builtin_strlwr not found"
            #endif
        #elif ! defined(strlwr)
            /* Check for __builtin_strlwr only if no includes were added to the
             * prefix above, which means no definition of strlwr can be found.
             * We would always check for this, but we get false positives on
             * MSYS2 if we do. Their toolchain is broken, but we can at least
             * give them a workaround. */
            #if 1
                __builtin_strlwr;
            #else
                #error "No definition for __builtin_strlwr found in the prefix"
            #endif
        #endif
        return 0;
        }
Cached compiler stdout:
 
Cached compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmpk4yv09vc/testfile.c: In function 'main':
/home/vsc/github/yap/meson/meson-private/tmpk4yv09vc/testfile.c:14:17: error: '__builtin_strlwr' undeclared (first use in this function); did you mean '__builtin_strchr'?
   14 |                 __builtin_strlwr;
      |                 ^~~~~~~~~~~~~~~~
      |                 __builtin_strchr
/home/vsc/github/yap/meson/meson-private/tmpk4yv09vc/testfile.c:14:17: note: each undeclared identifier is reported only once for each function it appears in

Checking for function "strlwr" with dependency -lm: NO (cached)
Using cached compile:
Cached command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpqti51803/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpqti51803/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -lm -Wl,--end-group 

Code:
 
        #define strncasecmp meson_disable_define_of_strncasecmp
        
        #include <limits.h>
        #undef strncasecmp
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char strncasecmp (void);
        
        #if defined __stub_strncasecmp || defined __stub___strncasecmp
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return strncasecmp ();
        }
Cached compiler stdout:
 
Cached compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmpqti51803/testfile.c:10:14: warning: conflicting types for built-in function 'strncasecmp'; expected 'int(const char *, const char *, long unsigned int)' [-Wbuiltin-declaration-mismatch]
   10 |         char strncasecmp (void);
      |              ^~~~~~~~~~~

Checking for function "strncasecmp" with dependency -lm: YES (cached)
Using cached compile:
Cached command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpbam1ky8v/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpbam1ky8v/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -lm -Wl,--end-group 

Code:
 
        #define strncat meson_disable_define_of_strncat
        
        #include <limits.h>
        #undef strncat
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char strncat (void);
        
        #if defined __stub_strncat || defined __stub___strncat
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return strncat ();
        }
Cached compiler stdout:
 
Cached compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmpbam1ky8v/testfile.c:10:14: warning: conflicting types for built-in function 'strncat'; expected 'char *(char *, const char *, long unsigned int)' [-Wbuiltin-declaration-mismatch]
   10 |         char strncat (void);
      |              ^~~~~~~
/home/vsc/github/yap/meson/meson-private/tmpbam1ky8v/testfile.c:5:1: note: 'strncat' is declared in header '<string.h>'
    4 |         #include <limits.h>
  +++ |+#include <string.h>
    5 |         #undef strncat

Checking for function "strncat" with dependency -lm: YES (cached)
Using cached compile:
Cached command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmp55jskusr/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmp55jskusr/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -lm -Wl,--end-group 

Code:
 
        #define strncpy meson_disable_define_of_strncpy
        
        #include <limits.h>
        #undef strncpy
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char strncpy (void);
        
        #if defined __stub_strncpy || defined __stub___strncpy
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return strncpy ();
        }
Cached compiler stdout:
 
Cached compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmp55jskusr/testfile.c:10:14: warning: conflicting types for built-in function 'strncpy'; expected 'char *(char *, const char *, long unsigned int)' [-Wbuiltin-declaration-mismatch]
   10 |         char strncpy (void);
      |              ^~~~~~~
/home/vsc/github/yap/meson/meson-private/tmp55jskusr/testfile.c:5:1: note: 'strncpy' is declared in header '<string.h>'
    4 |         #include <limits.h>
  +++ |+#include <string.h>
    5 |         #undef strncpy

Checking for function "strncpy" with dependency -lm: YES (cached)
Using cached compile:
Cached command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpua9x4k4f/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpua9x4k4f/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -lm -Wl,--end-group 

Code:
 
        #define strnlen meson_disable_define_of_strnlen
        
        #include <limits.h>
        #undef strnlen
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char strnlen (void);
        
        #if defined __stub_strnlen || defined __stub___strnlen
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return strnlen ();
        }
Cached compiler stdout:
 
Cached compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmpua9x4k4f/testfile.c:10:14: warning: conflicting types for built-in function 'strnlen'; expected 'long unsigned int(const char *, long unsigned int)' [-Wbuiltin-declaration-mismatch]
   10 |         char strnlen (void);
      |              ^~~~~~~

Checking for function "strnlen" with dependency -lm: YES (cached)
Using cached compile:
Cached command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpj_ydkhxt/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpj_ydkhxt/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -lm -Wl,--end-group 

Code:
 
        #define strtod meson_disable_define_of_strtod
        
        #include <limits.h>
        #undef strtod
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char strtod (void);
        
        #if defined __stub_strtod || defined __stub___strtod
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return strtod ();
        }
Cached compiler stdout:
 
Cached compiler stderr:
 
Checking for function "strtod" with dependency -lm: YES (cached)
Using cached compile:
Cached command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpkp69koj6/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpkp69koj6/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -lm -Wl,--end-group 

Code:
 
        #define system meson_disable_define_of_system
        
        #include <limits.h>
        #undef system
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char system (void);
        
        #if defined __stub_system || defined __stub___system
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return system ();
        }
Cached compiler stdout:
 
Cached compiler stderr:
 
Checking for function "system" with dependency -lm: YES (cached)
Using cached compile:
Cached command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpg3y9ccnl/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpg3y9ccnl/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -lm -Wl,--end-group 

Code:
 
        #define vfork meson_disable_define_of_vfork
        
        #include <limits.h>
        #undef vfork
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char vfork (void);
        
        #if defined __stub_vfork || defined __stub___vfork
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return vfork ();
        }
Cached compiler stdout:
 
Cached compiler stderr:
 
Checking for function "vfork" with dependency -lm: YES (cached)
Using cached compile:
Cached command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpxok8oz0k/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpxok8oz0k/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -lm -Wl,--end-group 

Code:
 
        #define vsnprintf meson_disable_define_of_vsnprintf
        
        #include <limits.h>
        #undef vsnprintf
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char vsnprintf (void);
        
        #if defined __stub_vsnprintf || defined __stub___vsnprintf
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return vsnprintf ();
        }
Cached compiler stdout:
 
Cached compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmpxok8oz0k/testfile.c:10:14: warning: conflicting types for built-in function 'vsnprintf'; expected 'int(char *, long unsigned int,  const char *, __va_list_tag *)' [-Wbuiltin-declaration-mismatch]
   10 |         char vsnprintf (void);
      |              ^~~~~~~~~
/home/vsc/github/yap/meson/meson-private/tmpxok8oz0k/testfile.c:5:1: note: 'vsnprintf' is declared in header '<stdio.h>'
    4 |         #include <limits.h>
  +++ |+#include <stdio.h>
    5 |         #undef vsnprintf

Checking for function "vsnprintf" with dependency -lm: YES (cached)
Using cached compile:
Cached command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpj7nzyxq3/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpj7nzyxq3/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -lm -Wl,--end-group 

Code:
 
        #define wcsnlen meson_disable_define_of_wcsnlen
        
        #include <limits.h>
        #undef wcsnlen
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char wcsnlen (void);
        
        #if defined __stub_wcsnlen || defined __stub___wcsnlen
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return wcsnlen ();
        }
Cached compiler stdout:
 
Cached compiler stderr:
 
Checking for function "wcsnlen" with dependency -lm: YES (cached)
Using cached compile:
Cached command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmptbsltxdk/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmptbsltxdk/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -lm -Wl,--end-group 

Code:
 
        #define wordexp meson_disable_define_of_wordexp
        
        #include <limits.h>
        #undef wordexp
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char wordexp (void);
        
        #if defined __stub_wordexp || defined __stub___wordexp
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return wordexp ();
        }
Cached compiler stdout:
 
Cached compiler stderr:
 
Checking for function "wordexp" with dependency -lm: YES (cached)
Using cached compile:
Cached command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmp0t42al_i/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmp0t42al_i/output.obj -pipe -c -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 

Code:
 
        #include <stdbool.h>
        int main(void) {
            /* If it's not defined as a macro, try to use as a symbol */
            #ifndef _bool
                _bool;
            #endif
            return 0;
        }
Cached compiler stdout:
 
Cached compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmp0t42al_i/testfile.c: In function 'main':
/home/vsc/github/yap/meson/meson-private/tmp0t42al_i/testfile.c:6:17: error: '_bool' undeclared (first use in this function); did you mean '_Bool'?
    6 |                 _bool;
      |                 ^~~~~
      |                 _Bool
/home/vsc/github/yap/meson/meson-private/tmp0t42al_i/testfile.c:6:17: note: each undeclared identifier is reported only once for each function it appears in

Header <stdbool.h> has symbol "_bool" with dependency -lm: NO (cached)
Using cached compile:
Cached command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpwj641_nz/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpwj641_nz/output.obj -pipe -c -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 

Code:
 
        #include <H>
        int main(void) {
            /* If it's not defined as a macro, try to use as a symbol */
            #ifndef ssize_t
                ssize_t;
            #endif
            return 0;
        }
Cached compiler stdout:
 
Cached compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmpwj641_nz/testfile.c:2:18: fatal error: H: No such file or directory
    2 |         #include <H>
      |                  ^~~
compilation terminated.

Header <H> has symbol "ssize_t" with dependency -lm: NO (cached)
Using cached compile:
Cached command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpiawxuuvb/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpiawxuuvb/output.obj -pipe -c -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 

Code:
 
        #include <time.h>
        int main(void) {
            /* If it's not defined as a macro, try to use as a symbol */
            #ifndef struct_time_tm_gmtoff
                struct_time_tm_gmtoff;
            #endif
            return 0;
        }
Cached compiler stdout:
 
Cached compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmpiawxuuvb/testfile.c: In function 'main':
/home/vsc/github/yap/meson/meson-private/tmpiawxuuvb/testfile.c:6:17: error: 'struct_time_tm_gmtoff' undeclared (first use in this function)
    6 |                 struct_time_tm_gmtoff;
      |                 ^~~~~~~~~~~~~~~~~~~~~
/home/vsc/github/yap/meson/meson-private/tmpiawxuuvb/testfile.c:6:17: note: each undeclared identifier is reported only once for each function it appears in

Header <time.h> has symbol "struct_time_tm_gmtoff" with dependency -lm: NO (cached)
Using cached compile:
Cached command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmp07aoont7/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmp07aoont7/output.obj -pipe -c -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 

Code:
 
        #include <string.h>
        int main(void) {
            /* If it's not defined as a macro, try to use as a symbol */
            #ifndef flsl
                flsl;
            #endif
            return 0;
        }
Cached compiler stdout:
 
Cached compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmp07aoont7/testfile.c: In function 'main':
/home/vsc/github/yap/meson/meson-private/tmp07aoont7/testfile.c:6:17: error: 'flsl' undeclared (first use in this function); did you mean 'ffsl'?
    6 |                 flsl;
      |                 ^~~~
      |                 ffsl
/home/vsc/github/yap/meson/meson-private/tmp07aoont7/testfile.c:6:17: note: each undeclared identifier is reported only once for each function it appears in

Header <string.h> has symbol "flsl" with dependency -lm: NO (cached)
Using cached compile:
Cached command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpersntzqo/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpersntzqo/output.obj -pipe -c -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 

Code:
 
        #include <string.h>
        int main(void) {
            /* If it's not defined as a macro, try to use as a symbol */
            #ifndef ffsl
                ffsl;
            #endif
            return 0;
        }
Cached compiler stdout:
 
Cached compiler stderr:
 
Header <string.h> has symbol "ffsl" with dependency -lm: YES (cached)
Using cached compile:
Cached command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpp6v7xrlw/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpp6v7xrlw/output.obj -pipe -c -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 

Code:
 
        #include <string.h>
        int main(void) {
            /* If it's not defined as a macro, try to use as a symbol */
            #ifndef ffsll
                ffsll;
            #endif
            return 0;
        }
Cached compiler stdout:
 
Cached compiler stderr:
 
Header <string.h> has symbol "ffsll" with dependency -lm: YES (cached)
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmph7da16mf
Command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmph7da16mf/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmph7da16mf/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 

Code:
 #include<stdio.h>
        #include <stdint.h>
#include <stdbool.h>
 #include <wchar.h>
 #include <string.h>
 #include <setjmp.h>
        int main(void) {
            printf("%ld\n", (long)(sizeof(short int)));
            return 0;
        };
Compiler stdout:
 
Compiler stderr:
 
Program stdout:

2

Program stderr:


Checking for size of "short int" : 2
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpyp55ycau
Command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpyp55ycau/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpyp55ycau/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 

Code:
 #include<stdio.h>
        #include <stdint.h>
#include <stdbool.h>
 #include <wchar.h>
 #include <string.h>
 #include <setjmp.h>
        int main(void) {
            printf("%ld\n", (long)(sizeof(int)));
            return 0;
        };
Compiler stdout:
 
Compiler stderr:
 
Program stdout:

4

Program stderr:


Checking for size of "int" : 4
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmp20mswo5o
Command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmp20mswo5o/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmp20mswo5o/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 

Code:
 #include<stdio.h>
        #include <stdint.h>
#include <stdbool.h>
 #include <wchar.h>
 #include <string.h>
 #include <setjmp.h>
        int main(void) {
            printf("%ld\n", (long)(sizeof(long)));
            return 0;
        };
Compiler stdout:
 
Compiler stderr:
 
Program stdout:

8

Program stderr:


Checking for size of "long" : 8
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpzjhxd1zc
Command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpzjhxd1zc/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpzjhxd1zc/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 

Code:
 #include<stdio.h>
        #include <stdint.h>
#include <stdbool.h>
 #include <wchar.h>
 #include <string.h>
 #include <setjmp.h>
        int main(void) {
            printf("%ld\n", (long)(sizeof(long int)));
            return 0;
        };
Compiler stdout:
 
Compiler stderr:
 
Program stdout:

8

Program stderr:


Checking for size of "long int" : 8
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpczxhr9gb
Command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpczxhr9gb/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpczxhr9gb/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 

Code:
 #include<stdio.h>
        #include <stdint.h>
#include <stdbool.h>
 #include <wchar.h>
 #include <string.h>
 #include <setjmp.h>
        int main(void) {
            printf("%ld\n", (long)(sizeof(long long)));
            return 0;
        };
Compiler stdout:
 
Compiler stderr:
 
Program stdout:

8

Program stderr:


Checking for size of "long long" : 8
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpnelsbnmr
Command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpnelsbnmr/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpnelsbnmr/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 

Code:
 #include<stdio.h>
        #include <stdint.h>
#include <stdbool.h>
 #include <wchar.h>
 #include <string.h>
 #include <setjmp.h>
        int main(void) {
            printf("%ld\n", (long)(sizeof(long long int)));
            return 0;
        };
Compiler stdout:
 
Compiler stderr:
 
Program stdout:

8

Program stderr:


Checking for size of "long long int" : 8
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpm2078bjs
Command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpm2078bjs/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpm2078bjs/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 

Code:
 #include<stdio.h>
        #include <stdint.h>
#include <stdbool.h>
 #include <wchar.h>
 #include <string.h>
 #include <setjmp.h>
        int main(void) {
            printf("%ld\n", (long)(sizeof(float)));
            return 0;
        };
Compiler stdout:
 
Compiler stderr:
 
Program stdout:

4

Program stderr:


Checking for size of "float" : 4
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpfjpltzn0
Command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpfjpltzn0/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpfjpltzn0/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 

Code:
 #include<stdio.h>
        #include <stdint.h>
#include <stdbool.h>
 #include <wchar.h>
 #include <string.h>
 #include <setjmp.h>
        int main(void) {
            printf("%ld\n", (long)(sizeof(double)));
            return 0;
        };
Compiler stdout:
 
Compiler stderr:
 
Program stdout:

8

Program stderr:


Checking for size of "double" : 8
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmp7kboqjju
Command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmp7kboqjju/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmp7kboqjju/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 

Code:
 #include<stdio.h>
        #include <stdint.h>
#include <stdbool.h>
 #include <wchar.h>
 #include <string.h>
 #include <setjmp.h>
        int main(void) {
            printf("%ld\n", (long)(sizeof(void *)));
            return 0;
        };
Compiler stdout:
 
Compiler stderr:
 
Program stdout:

8

Program stderr:


Checking for size of "void *" : 8
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpizbcwzws
Command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpizbcwzws/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpizbcwzws/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 

Code:
 #include<stdio.h>
        #include <stdint.h>
#include <stdbool.h>
 #include <wchar.h>
 #include <string.h>
 #include <setjmp.h>
        int main(void) {
            printf("%ld\n", (long)(sizeof(int *)));
            return 0;
        };
Compiler stdout:
 
Compiler stderr:
 
Program stdout:

8

Program stderr:


Checking for size of "int *" : 8
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpp_rpg1o3
Command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpp_rpg1o3/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpp_rpg1o3/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 

Code:
 #include<stdio.h>
        #include <stdint.h>
#include <stdbool.h>
 #include <wchar.h>
 #include <string.h>
 #include <setjmp.h>
        int main(void) {
            printf("%ld\n", (long)(sizeof(ssize_t)));
            return 0;
        };
Compiler stdout:
 
Compiler stderr:
 
Program stdout:

8

Program stderr:


Checking for size of "ssize_t" : 8
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpdbpfuvc3
Command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpdbpfuvc3/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpdbpfuvc3/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 

Code:
 #include<stdio.h>
        #include <stdint.h>
#include <stdbool.h>
 #include <wchar.h>
 #include <string.h>
 #include <setjmp.h>
        int main(void) {
            printf("%ld\n", (long)(sizeof(uintptr_t)));
            return 0;
        };
Compiler stdout:
 
Compiler stderr:
 
Program stdout:

8

Program stderr:


Checking for size of "uintptr_t" : 8
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmp1h9cld9v
Command line:  cc -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmp1h9cld9v/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmp1h9cld9v/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 

Code:
 #include<stdio.h>
        #include <stdint.h>
#include <stdbool.h>
 #include <wchar.h>
 #include <string.h>
 #include <setjmp.h>
        int main(void) {
            printf("%ld\n", (long)(sizeof(wchar_t)));
            return 0;
        };
Compiler stdout:
 
Compiler stderr:
 
Program stdout:

4

Program stderr:


Checking for size of "wchar_t" : 4
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpj5u8329u
Command line:  cc /home/vsc/github/yap/meson/meson-private/tmpj5u8329u/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpj5u8329u/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -Wl,--start-group -lreadline -Wl,--end-group -Wl,--allow-shlib-undefined 

Code:
 int main(void) { return 0; }
Compiler stdout:
 
Compiler stderr:
 
Library readline found: YES
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmpj2u4rffm/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpj2u4rffm/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -lreadline -Wl,--end-group 

Code:
 #include <stdio.h>
 #include <readline/readline.h>
#include <limits.h>

        #if defined __stub_rl_replace_line || defined __stub___rl_replace_line
        fail fail fail this function is not going to work
        #endif
        
int main(void) {
            void *a = (void*) &rl_replace_line;
            long b = (long) a;
            return (int) b;
        }
Cached compiler stdout:
 
Cached compiler stderr:
 
Checking for function "rl_replace_line" with dependency -lreadline: YES (cached)
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmpyfboxyv1/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("arpa/inet.h")
          #error "Header 'arpa/inet.h' could not be found"
         #endif
        #else
         #include <arpa/inet.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 
Has header "arpa/inet.h" : YES (cached)
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmpsq4h5uz6/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("apache2/util_md5.h")
          #error "Header 'apache2/util_md5.h' could not be found"
         #endif
        #else
         #include <apache2/util_md5.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmpsq4h5uz6/testfile.c:4:12: error: #error "Header 'apache2/util_md5.h' could not be found"
    4 |           #error "Header 'apache2/util_md5.h' could not be found"
      |            ^~~~~

Has header "apache2/util_md5.h" : NO (cached)
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmpaau1zc78/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("apr-1/apr_md5.h")
          #error "Header 'apr-1/apr_md5.h' could not be found"
         #endif
        #else
         #include <apr-1/apr_md5.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 
Has header "apr-1/apr_md5.h" : YES (cached)
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmp87zaf8cq/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("direct.h")
          #error "Header 'direct.h' could not be found"
         #endif
        #else
         #include <direct.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmp87zaf8cq/testfile.c:4:12: error: #error "Header 'direct.h' could not be found"
    4 |           #error "Header 'direct.h' could not be found"
      |            ^~~~~

Has header "direct.h" : NO (cached)
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmp4vdz_a46/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("dirent.h")
          #error "Header 'dirent.h' could not be found"
         #endif
        #else
         #include <dirent.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 
Has header "dirent.h" : YES (cached)
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmpygijar3m/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("dlfcn.h")
          #error "Header 'dlfcn.h' could not be found"
         #endif
        #else
         #include <dlfcn.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 
Has header "dlfcn.h" : YES (cached)
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmpl9wdznv8/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("execinfo.h")
          #error "Header 'execinfo.h' could not be found"
         #endif
        #else
         #include <execinfo.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 
Has header "execinfo.h" : YES (cached)
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmpckkreax3/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("fenv.h")
          #error "Header 'fenv.h' could not be found"
         #endif
        #else
         #include <fenv.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 
Has header "fenv.h" : YES (cached)
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmph5nzx_do/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("fmemopen.h")
          #error "Header 'fmemopen.h' could not be found"
         #endif
        #else
         #include <fmemopen.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmph5nzx_do/testfile.c:4:12: error: #error "Header 'fmemopen.h' could not be found"
    4 |           #error "Header 'fmemopen.h' could not be found"
      |            ^~~~~

Has header "fmemopen.h" : NO (cached)
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmphovemx46/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("fpu_control.h")
          #error "Header 'fpu_control.h' could not be found"
         #endif
        #else
         #include <fpu_control.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 
Has header "fpu_control.h" : YES (cached)
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmpi9vj4jow/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("glob.h")
          #error "Header 'glob.h' could not be found"
         #endif
        #else
         #include <glob.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 
Has header "glob.h" : YES (cached)
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmpv12kdwg1/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("ieeefp.h")
          #error "Header 'ieeefp.h' could not be found"
         #endif
        #else
         #include <ieeefp.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmpv12kdwg1/testfile.c:4:12: error: #error "Header 'ieeefp.h' could not be found"
    4 |           #error "Header 'ieeefp.h' could not be found"
      |            ^~~~~

Has header "ieeefp.h" : NO (cached)
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmp1o3itqbu/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("io.h")
          #error "Header 'io.h' could not be found"
         #endif
        #else
         #include <io.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmp1o3itqbu/testfile.c:4:12: error: #error "Header 'io.h' could not be found"
    4 |           #error "Header 'io.h' could not be found"
      |            ^~~~~

Has header "io.h" : NO (cached)
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmp4ip39brk/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("libgen.h")
          #error "Header 'libgen.h' could not be found"
         #endif
        #else
         #include <libgen.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 
Has header "libgen.h" : YES (cached)
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmpf5smkccz/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("LibLoaderAPI.h")
          #error "Header 'LibLoaderAPI.h' could not be found"
         #endif
        #else
         #include <LibLoaderAPI.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmpf5smkccz/testfile.c:4:12: error: #error "Header 'LibLoaderAPI.h' could not be found"
    4 |           #error "Header 'LibLoaderAPI.h' could not be found"
      |            ^~~~~

Has header "LibLoaderAPI.h" : NO (cached)
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmp7rquk4n_/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("limits.h")
          #error "Header 'limits.h' could not be found"
         #endif
        #else
         #include <limits.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 
Has header "limits.h" : YES (cached)
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmplhtb_8it/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("locale.h")
          #error "Header 'locale.h' could not be found"
         #endif
        #else
         #include <locale.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 
Has header "locale.h" : YES (cached)
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmpv7ymdref/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("mach-o/dyld.h")
          #error "Header 'mach-o/dyld.h' could not be found"
         #endif
        #else
         #include <mach-o/dyld.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmpv7ymdref/testfile.c:4:12: error: #error "Header 'mach-o/dyld.h' could not be found"
    4 |           #error "Header 'mach-o/dyld.h' could not be found"
      |            ^~~~~

Has header "mach-o/dyld.h" : NO (cached)
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmpm8g831tb/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("memory.h")
          #error "Header 'memory.h' could not be found"
         #endif
        #else
         #include <memory.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 
Has header "memory.h" : YES (cached)
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmpdxa5ycyk/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("netdb.h")
          #error "Header 'netdb.h' could not be found"
         #endif
        #else
         #include <netdb.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 
Has header "netdb.h" : YES (cached)
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmpuicjbshs/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("netinet/in.h")
          #error "Header 'netinet/in.h' could not be found"
         #endif
        #else
         #include <netinet/in.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 
Has header "netinet/in.h" : YES (cached)
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmp9f94iyi5/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("netinet/tcp.h")
          #error "Header 'netinet/tcp.h' could not be found"
         #endif
        #else
         #include <netinet/tcp.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 
Has header "netinet/tcp.h" : YES (cached)
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmpntnds1r8/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("pwd.h")
          #error "Header 'pwd.h' could not be found"
         #endif
        #else
         #include <pwd.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 
Has header "pwd.h" : YES (cached)
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmpj4cncetc/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("shlobj.h")
          #error "Header 'shlobj.h' could not be found"
         #endif
        #else
         #include <shlobj.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmpj4cncetc/testfile.c:4:12: error: #error "Header 'shlobj.h' could not be found"
    4 |           #error "Header 'shlobj.h' could not be found"
      |            ^~~~~

Has header "shlobj.h" : NO (cached)
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmpqhw5_mtv/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("siginfo.h")
          #error "Header 'siginfo.h' could not be found"
         #endif
        #else
         #include <siginfo.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmpqhw5_mtv/testfile.c:4:12: error: #error "Header 'siginfo.h' could not be found"
    4 |           #error "Header 'siginfo.h' could not be found"
      |            ^~~~~

Has header "siginfo.h" : NO (cached)
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmpblu2xr1w/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("signal.h")
          #error "Header 'signal.h' could not be found"
         #endif
        #else
         #include <signal.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 
Has header "signal.h" : YES (cached)
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmpn72ld2ua/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("sqlite3.h")
          #error "Header 'sqlite3.h' could not be found"
         #endif
        #else
         #include <sqlite3.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 
Has header "sqlite3.h" : YES (cached)
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmphyq5h2dg/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("sql.h")
          #error "Header 'sql.h' could not be found"
         #endif
        #else
         #include <sql.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 
Has header "sql.h" : YES (cached)
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmp0lek2_ja/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("syslog.h")
          #error "Header 'syslog.h' could not be found"
         #endif
        #else
         #include <syslog.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 
Has header "syslog.h" : YES (cached)
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmpgtcv5czn/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("sys/types.h")
          #error "Header 'sys/types.h' could not be found"
         #endif
        #else
         #include <sys/types.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 
Has header "sys/types.h" : YES (cached)
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmpcjgkihtq/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("sys/ucontext.h")
          #error "Header 'sys/ucontext.h' could not be found"
         #endif
        #else
         #include <sys/ucontext.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 
Has header "sys/ucontext.h" : YES (cached)
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmp84_m89qn/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("sys/un.h")
          #error "Header 'sys/un.h' could not be found"
         #endif
        #else
         #include <sys/un.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 
Has header "sys/un.h" : YES (cached)
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmp5mbex04o/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("sys/wait.h")
          #error "Header 'sys/wait.h' could not be found"
         #endif
        #else
         #include <sys/wait.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 
Has header "sys/wait.h" : YES (cached)
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmpajz5yary/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("termios.h")
          #error "Header 'termios.h' could not be found"
         #endif
        #else
         #include <termios.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 
Has header "termios.h" : YES (cached)
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmp0si1jtbl/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("time.h")
          #error "Header 'time.h' could not be found"
         #endif
        #else
         #include <time.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 
Has header "time.h" : YES (cached)
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmpfqlq95eo/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("ucontext.h")
          #error "Header 'ucontext.h' could not be found"
         #endif
        #else
         #include <ucontext.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 
Has header "ucontext.h" : YES (cached)
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmpoea4g6wa/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("utime.h")
          #error "Header 'utime.h' could not be found"
         #endif
        #else
         #include <utime.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 
Has header "utime.h" : YES (cached)
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmpijs_rmq1/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("winsock2.h")
          #error "Header 'winsock2.h' could not be found"
         #endif
        #else
         #include <winsock2.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmpijs_rmq1/testfile.c:4:12: error: #error "Header 'winsock2.h' could not be found"
    4 |           #error "Header 'winsock2.h' could not be found"
      |            ^~~~~

Has header "winsock2.h" : NO (cached)
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmpote2wd8p/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("winsock.h")
          #error "Header 'winsock.h' could not be found"
         #endif
        #else
         #include <winsock.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmpote2wd8p/testfile.c:4:12: error: #error "Header 'winsock.h' could not be found"
    4 |           #error "Header 'winsock.h' could not be found"
      |            ^~~~~

Has header "winsock.h" : NO (cached)
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmpzg24j62c/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("wordexp.h")
          #error "Header 'wordexp.h' could not be found"
         #endif
        #else
         #include <wordexp.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 
Has header "wordexp.h" : YES (cached)
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpwwghlcav
Command line:  cc /home/vsc/github/yap/meson/meson-private/tmpwwghlcav/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpwwghlcav/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -Wl,--start-group -ldl -Wl,--end-group -Wl,--allow-shlib-undefined 

Code:
 int main(void) { return 0; }
Compiler stdout:
 
Compiler stderr:
 
Library dl found: YES
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmptfuijopw
Command line:  cc /home/vsc/github/yap/meson/meson-private/tmptfuijopw/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmptfuijopw/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -Wl,--start-group -lcomdlg32 -Wl,--end-group -Wl,--allow-shlib-undefined 

Code:
 int main(void) { return 0; }
Compiler stdout:
 
Compiler stderr:
 /usr/bin/ld: cannot find -lcomdlg32
collect2: error: ld returned 1 exit status

Library comdlg32 found: NO
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpz7xtq5iq
Command line:  cc /home/vsc/github/yap/meson/meson-private/tmpz7xtq5iq/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpz7xtq5iq/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -Wl,--start-group -lmsvcrt -Wl,--end-group -Wl,--allow-shlib-undefined 

Code:
 int main(void) { return 0; }
Compiler stdout:
 
Compiler stderr:
 /usr/bin/ld: cannot find -lmsvcrt
collect2: error: ld returned 1 exit status

Library msvcrt found: NO
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmptr_mq1gl
Command line:  cc /home/vsc/github/yap/meson/meson-private/tmptr_mq1gl/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmptr_mq1gl/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -Wl,--start-group -lshell32 -Wl,--end-group -Wl,--allow-shlib-undefined 

Code:
 int main(void) { return 0; }
Compiler stdout:
 
Compiler stderr:
 /usr/bin/ld: cannot find -lshell32
collect2: error: ld returned 1 exit status

Library shell32 found: NO
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmp6aonqflj
Command line:  cc /home/vsc/github/yap/meson/meson-private/tmp6aonqflj/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmp6aonqflj/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -Wl,--start-group -lwsock32 -Wl,--end-group -Wl,--allow-shlib-undefined 

Code:
 int main(void) { return 0; }
Compiler stdout:
 
Compiler stderr:
 /usr/bin/ld: cannot find -lwsock32
collect2: error: ld returned 1 exit status

Library wsock32 found: NO
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmprnl13to_
Command line:  cc /home/vsc/github/yap/meson/meson-private/tmprnl13to_/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmprnl13to_/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -Wl,--start-group -lws2_32 -Wl,--end-group -Wl,--allow-shlib-undefined 

Code:
 int main(void) { return 0; }
Compiler stdout:
 
Compiler stderr:
 /usr/bin/ld: cannot find -lws2_32
collect2: error: ld returned 1 exit status

Library ws2_32 found: NO
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpgvhvq6ea
Command line:  cc /home/vsc/github/yap/meson/meson-private/tmpgvhvq6ea/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpgvhvq6ea/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -Wl,--start-group -lunicode -Wl,--end-group -Wl,--allow-shlib-undefined 

Code:
 int main(void) { return 0; }
Compiler stdout:
 
Compiler stderr:
 /usr/bin/ld: cannot find -lunicode
collect2: error: ld returned 1 exit status

Library unicode found: NO
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpxemdchnx
Command line:  cc /home/vsc/github/yap/meson/meson-private/tmpxemdchnx/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpxemdchnx/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -Wl,--start-group -lxnet -Wl,--end-group -Wl,--allow-shlib-undefined 

Code:
 int main(void) { return 0; }
Compiler stdout:
 
Compiler stderr:
 /usr/bin/ld: cannot find -lxnet
collect2: error: ld returned 1 exit status

Library xnet found: NO
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpo43abf82
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpo43abf82/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpo43abf82/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define _NSGetEnviron meson_disable_define_of__NSGetEnviron
        
        #include <limits.h>
        #undef _NSGetEnviron
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char _NSGetEnviron (void);
        
        #if defined __stub__NSGetEnviron || defined __stub____NSGetEnviron
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return _NSGetEnviron ();
        }
Compiler stdout:
 
Compiler stderr:
 /usr/bin/ld: /tmp/ccSBLjG9.o: in function `main':
testfile.c:(.text+0x5): undefined reference to `_NSGetEnviron'
collect2: error: ld returned 1 exit status

Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmprdcsw4js
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmprdcsw4js/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmprdcsw4js/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        int main(void) {
        #ifdef __has_builtin
            #if !__has_builtin(__builtin__NSGetEnviron)
                #error "__builtin__NSGetEnviron not found"
            #endif
        #elif ! defined(_NSGetEnviron)
            /* Check for __builtin__NSGetEnviron only if no includes were added to the
             * prefix above, which means no definition of _NSGetEnviron can be found.
             * We would always check for this, but we get false positives on
             * MSYS2 if we do. Their toolchain is broken, but we can at least
             * give them a workaround. */
            #if 1
                __builtin__NSGetEnviron;
            #else
                #error "No definition for __builtin__NSGetEnviron found in the prefix"
            #endif
        #endif
        return 0;
        }
Compiler stdout:
 
Compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmprdcsw4js/testfile.c: In function 'main':
/home/vsc/github/yap/meson/meson-private/tmprdcsw4js/testfile.c:14:17: error: '__builtin__NSGetEnviron' undeclared (first use in this function)
   14 |                 __builtin__NSGetEnviron;
      |                 ^~~~~~~~~~~~~~~~~~~~~~~
/home/vsc/github/yap/meson/meson-private/tmprdcsw4js/testfile.c:14:17: note: each undeclared identifier is reported only once for each function it appears in

Checking for function "_NSGetEnviron" with dependency -ldl: NO 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmp0sattvh1
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmp0sattvh1/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmp0sattvh1/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define access meson_disable_define_of_access
        
        #include <limits.h>
        #undef access
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char access (void);
        
        #if defined __stub_access || defined __stub___access
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return access ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "access" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpa_syj1xs
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpa_syj1xs/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpa_syj1xs/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define basename meson_disable_define_of_basename
        
        #include <limits.h>
        #undef basename
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char basename (void);
        
        #if defined __stub_basename || defined __stub___basename
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return basename ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "basename" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpgxub0kao
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpgxub0kao/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpgxub0kao/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define chdir meson_disable_define_of_chdir
        
        #include <limits.h>
        #undef chdir
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char chdir (void);
        
        #if defined __stub_chdir || defined __stub___chdir
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return chdir ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "chdir" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmp5r5mmxut
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmp5r5mmxut/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmp5r5mmxut/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define clock meson_disable_define_of_clock
        
        #include <limits.h>
        #undef clock
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char clock (void);
        
        #if defined __stub_clock || defined __stub___clock
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return clock ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "clock" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpn3cahprt
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpn3cahprt/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpn3cahprt/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define clock_gettime meson_disable_define_of_clock_gettime
        
        #include <limits.h>
        #undef clock_gettime
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char clock_gettime (void);
        
        #if defined __stub_clock_gettime || defined __stub___clock_gettime
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return clock_gettime ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "clock_gettime" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmp5byo3ryj
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmp5byo3ryj/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmp5byo3ryj/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define ctime meson_disable_define_of_ctime
        
        #include <limits.h>
        #undef ctime
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char ctime (void);
        
        #if defined __stub_ctime || defined __stub___ctime
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return ctime ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "ctime" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmp39ve_57g
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmp39ve_57g/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmp39ve_57g/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define dlopen meson_disable_define_of_dlopen
        
        #include <limits.h>
        #undef dlopen
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char dlopen (void);
        
        #if defined __stub_dlopen || defined __stub___dlopen
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return dlopen ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "dlopen" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpiwxt2yjc
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpiwxt2yjc/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpiwxt2yjc/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define dup2 meson_disable_define_of_dup2
        
        #include <limits.h>
        #undef dup2
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char dup2 (void);
        
        #if defined __stub_dup2 || defined __stub___dup2
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return dup2 ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "dup2" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmplq4mc7rn
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmplq4mc7rn/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmplq4mc7rn/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define environ meson_disable_define_of_environ
        
        #include <limits.h>
        #undef environ
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char environ (void);
        
        #if defined __stub_environ || defined __stub___environ
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return environ ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "environ" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpb73o9w87
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpb73o9w87/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpb73o9w87/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define erf meson_disable_define_of_erf
        
        #include <limits.h>
        #undef erf
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char erf (void);
        
        #if defined __stub_erf || defined __stub___erf
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return erf ();
        }
Compiler stdout:
 
Compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmpb73o9w87/testfile.c:10:14: warning: conflicting types for built-in function 'erf'; expected 'double(double)' [-Wbuiltin-declaration-mismatch]
   10 |         char erf (void);
      |              ^~~
/home/vsc/github/yap/meson/meson-private/tmpb73o9w87/testfile.c:5:1: note: 'erf' is declared in header '<math.h>'
    4 |         #include <limits.h>
  +++ |+#include <math.h>
    5 |         #undef erf
/usr/bin/ld: /tmp/ccjDVpMc.o: in function `main':
testfile.c:(.text+0x5): undefined reference to `erf'
collect2: error: ld returned 1 exit status

Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmppktxi6vj
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmppktxi6vj/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmppktxi6vj/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        int main(void) {
        #ifdef __has_builtin
            #if !__has_builtin(__builtin_erf)
                #error "__builtin_erf not found"
            #endif
        #elif ! defined(erf)
            /* Check for __builtin_erf only if no includes were added to the
             * prefix above, which means no definition of erf can be found.
             * We would always check for this, but we get false positives on
             * MSYS2 if we do. Their toolchain is broken, but we can at least
             * give them a workaround. */
            #if 1
                __builtin_erf;
            #else
                #error "No definition for __builtin_erf found in the prefix"
            #endif
        #endif
        return 0;
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "erf" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmp438i52ko
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmp438i52ko/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmp438i52ko/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define feclearexcept meson_disable_define_of_feclearexcept
        
        #include <limits.h>
        #undef feclearexcept
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char feclearexcept (void);
        
        #if defined __stub_feclearexcept || defined __stub___feclearexcept
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return feclearexcept ();
        }
Compiler stdout:
 
Compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmp438i52ko/testfile.c:10:14: warning: conflicting types for built-in function 'feclearexcept'; expected 'int(int)' [-Wbuiltin-declaration-mismatch]
   10 |         char feclearexcept (void);
      |              ^~~~~~~~~~~~~
/usr/bin/ld: /tmp/ccRugqVW.o: in function `main':
testfile.c:(.text+0x5): undefined reference to `feclearexcept'
collect2: error: ld returned 1 exit status

Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpify08feq
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpify08feq/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpify08feq/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        int main(void) {
        #ifdef __has_builtin
            #if !__has_builtin(__builtin_feclearexcept)
                #error "__builtin_feclearexcept not found"
            #endif
        #elif ! defined(feclearexcept)
            /* Check for __builtin_feclearexcept only if no includes were added to the
             * prefix above, which means no definition of feclearexcept can be found.
             * We would always check for this, but we get false positives on
             * MSYS2 if we do. Their toolchain is broken, but we can at least
             * give them a workaround. */
            #if 1
                __builtin_feclearexcept;
            #else
                #error "No definition for __builtin_feclearexcept found in the prefix"
            #endif
        #endif
        return 0;
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "feclearexcept" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpb_r2syt0
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpb_r2syt0/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpb_r2syt0/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define feenableexcept meson_disable_define_of_feenableexcept
        
        #include <limits.h>
        #undef feenableexcept
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char feenableexcept (void);
        
        #if defined __stub_feenableexcept || defined __stub___feenableexcept
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return feenableexcept ();
        }
Compiler stdout:
 
Compiler stderr:
 /usr/bin/ld: /tmp/cc5EhbbJ.o: in function `main':
testfile.c:(.text+0x5): undefined reference to `feenableexcept'
collect2: error: ld returned 1 exit status

Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpw7z8nqar
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpw7z8nqar/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpw7z8nqar/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        int main(void) {
        #ifdef __has_builtin
            #if !__has_builtin(__builtin_feenableexcept)
                #error "__builtin_feenableexcept not found"
            #endif
        #elif ! defined(feenableexcept)
            /* Check for __builtin_feenableexcept only if no includes were added to the
             * prefix above, which means no definition of feenableexcept can be found.
             * We would always check for this, but we get false positives on
             * MSYS2 if we do. Their toolchain is broken, but we can at least
             * give them a workaround. */
            #if 1
                __builtin_feenableexcept;
            #else
                #error "No definition for __builtin_feenableexcept found in the prefix"
            #endif
        #endif
        return 0;
        }
Compiler stdout:
 
Compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmpw7z8nqar/testfile.c: In function 'main':
/home/vsc/github/yap/meson/meson-private/tmpw7z8nqar/testfile.c:14:17: error: '__builtin_feenableexcept' undeclared (first use in this function); did you mean '__builtin_feraiseexcept'?
   14 |                 __builtin_feenableexcept;
      |                 ^~~~~~~~~~~~~~~~~~~~~~~~
      |                 __builtin_feraiseexcept
/home/vsc/github/yap/meson/meson-private/tmpw7z8nqar/testfile.c:14:17: note: each undeclared identifier is reported only once for each function it appears in

Checking for function "feenableexcept" with dependency -ldl: NO 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmp3mjcepbv
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmp3mjcepbv/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmp3mjcepbv/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define fesetexceptflag meson_disable_define_of_fesetexceptflag
        
        #include <limits.h>
        #undef fesetexceptflag
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char fesetexceptflag (void);
        
        #if defined __stub_fesetexceptflag || defined __stub___fesetexceptflag
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return fesetexceptflag ();
        }
Compiler stdout:
 
Compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmp3mjcepbv/testfile.c:10:14: warning: conflicting types for built-in function 'fesetexceptflag'; expected 'int(const void *, int)' [-Wbuiltin-declaration-mismatch]
   10 |         char fesetexceptflag (void);
      |              ^~~~~~~~~~~~~~~
/usr/bin/ld: /tmp/cc4z0HRh.o: in function `main':
testfile.c:(.text+0x5): undefined reference to `fesetexceptflag'
collect2: error: ld returned 1 exit status

Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpmsi6htrx
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpmsi6htrx/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpmsi6htrx/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        int main(void) {
        #ifdef __has_builtin
            #if !__has_builtin(__builtin_fesetexceptflag)
                #error "__builtin_fesetexceptflag not found"
            #endif
        #elif ! defined(fesetexceptflag)
            /* Check for __builtin_fesetexceptflag only if no includes were added to the
             * prefix above, which means no definition of fesetexceptflag can be found.
             * We would always check for this, but we get false positives on
             * MSYS2 if we do. Their toolchain is broken, but we can at least
             * give them a workaround. */
            #if 1
                __builtin_fesetexceptflag;
            #else
                #error "No definition for __builtin_fesetexceptflag found in the prefix"
            #endif
        #endif
        return 0;
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "fesetexceptflag" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpxgvrqz10
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpxgvrqz10/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpxgvrqz10/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define fesetround meson_disable_define_of_fesetround
        
        #include <limits.h>
        #undef fesetround
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char fesetround (void);
        
        #if defined __stub_fesetround || defined __stub___fesetround
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return fesetround ();
        }
Compiler stdout:
 
Compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmpxgvrqz10/testfile.c:10:14: warning: conflicting types for built-in function 'fesetround'; expected 'int(int)' [-Wbuiltin-declaration-mismatch]
   10 |         char fesetround (void);
      |              ^~~~~~~~~~
/usr/bin/ld: /tmp/ccH7oFL1.o: in function `main':
testfile.c:(.text+0x5): undefined reference to `fesetround'
collect2: error: ld returned 1 exit status

Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpzfrry51y
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpzfrry51y/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpzfrry51y/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        int main(void) {
        #ifdef __has_builtin
            #if !__has_builtin(__builtin_fesetround)
                #error "__builtin_fesetround not found"
            #endif
        #elif ! defined(fesetround)
            /* Check for __builtin_fesetround only if no includes were added to the
             * prefix above, which means no definition of fesetround can be found.
             * We would always check for this, but we get false positives on
             * MSYS2 if we do. Their toolchain is broken, but we can at least
             * give them a workaround. */
            #if 1
                __builtin_fesetround;
            #else
                #error "No definition for __builtin_fesetround found in the prefix"
            #endif
        #endif
        return 0;
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "fesetround" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmp_b_tp7_7
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmp_b_tp7_7/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmp_b_tp7_7/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define fesettrapenable meson_disable_define_of_fesettrapenable
        
        #include <limits.h>
        #undef fesettrapenable
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char fesettrapenable (void);
        
        #if defined __stub_fesettrapenable || defined __stub___fesettrapenable
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return fesettrapenable ();
        }
Compiler stdout:
 
Compiler stderr:
 /usr/bin/ld: /tmp/cclQmvbN.o: in function `main':
testfile.c:(.text+0x5): undefined reference to `fesettrapenable'
collect2: error: ld returned 1 exit status

Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpx2p0o8ar
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpx2p0o8ar/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpx2p0o8ar/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        int main(void) {
        #ifdef __has_builtin
            #if !__has_builtin(__builtin_fesettrapenable)
                #error "__builtin_fesettrapenable not found"
            #endif
        #elif ! defined(fesettrapenable)
            /* Check for __builtin_fesettrapenable only if no includes were added to the
             * prefix above, which means no definition of fesettrapenable can be found.
             * We would always check for this, but we get false positives on
             * MSYS2 if we do. Their toolchain is broken, but we can at least
             * give them a workaround. */
            #if 1
                __builtin_fesettrapenable;
            #else
                #error "No definition for __builtin_fesettrapenable found in the prefix"
            #endif
        #endif
        return 0;
        }
Compiler stdout:
 
Compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmpx2p0o8ar/testfile.c: In function 'main':
/home/vsc/github/yap/meson/meson-private/tmpx2p0o8ar/testfile.c:14:17: error: '__builtin_fesettrapenable' undeclared (first use in this function); did you mean '__builtin_fesetenv'?
   14 |                 __builtin_fesettrapenable;
      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~
      |                 __builtin_fesetenv
/home/vsc/github/yap/meson/meson-private/tmpx2p0o8ar/testfile.c:14:17: note: each undeclared identifier is reported only once for each function it appears in

Checking for function "fesettrapenable" with dependency -ldl: NO 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmp9gxv3fe2
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmp9gxv3fe2/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmp9gxv3fe2/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define fetestexcept meson_disable_define_of_fetestexcept
        
        #include <limits.h>
        #undef fetestexcept
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char fetestexcept (void);
        
        #if defined __stub_fetestexcept || defined __stub___fetestexcept
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return fetestexcept ();
        }
Compiler stdout:
 
Compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmp9gxv3fe2/testfile.c:10:14: warning: conflicting types for built-in function 'fetestexcept'; expected 'int(int)' [-Wbuiltin-declaration-mismatch]
   10 |         char fetestexcept (void);
      |              ^~~~~~~~~~~~
/usr/bin/ld: /tmp/ccPNhsRp.o: in function `main':
testfile.c:(.text+0x5): undefined reference to `fetestexcept'
collect2: error: ld returned 1 exit status

Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpuxuoor89
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpuxuoor89/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpuxuoor89/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        int main(void) {
        #ifdef __has_builtin
            #if !__has_builtin(__builtin_fetestexcept)
                #error "__builtin_fetestexcept not found"
            #endif
        #elif ! defined(fetestexcept)
            /* Check for __builtin_fetestexcept only if no includes were added to the
             * prefix above, which means no definition of fetestexcept can be found.
             * We would always check for this, but we get false positives on
             * MSYS2 if we do. Their toolchain is broken, but we can at least
             * give them a workaround. */
            #if 1
                __builtin_fetestexcept;
            #else
                #error "No definition for __builtin_fetestexcept found in the prefix"
            #endif
        #endif
        return 0;
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "fetestexcept" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpd5uj0r04
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpd5uj0r04/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpd5uj0r04/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define fgetpos meson_disable_define_of_fgetpos
        
        #include <limits.h>
        #undef fgetpos
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char fgetpos (void);
        
        #if defined __stub_fgetpos || defined __stub___fgetpos
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return fgetpos ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "fgetpos" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpc_e623g6
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpc_e623g6/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpc_e623g6/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define fmemopen meson_disable_define_of_fmemopen
        
        #include <limits.h>
        #undef fmemopen
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char fmemopen (void);
        
        #if defined __stub_fmemopen || defined __stub___fmemopen
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return fmemopen ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "fmemopen" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmp9uyiw6x1
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmp9uyiw6x1/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmp9uyiw6x1/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define fpclass meson_disable_define_of_fpclass
        
        #include <limits.h>
        #undef fpclass
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char fpclass (void);
        
        #if defined __stub_fpclass || defined __stub___fpclass
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return fpclass ();
        }
Compiler stdout:
 
Compiler stderr:
 /usr/bin/ld: /tmp/cc4YFIxW.o: in function `main':
testfile.c:(.text+0x5): undefined reference to `fpclass'
collect2: error: ld returned 1 exit status

Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmp4ul6l2y1
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmp4ul6l2y1/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmp4ul6l2y1/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        int main(void) {
        #ifdef __has_builtin
            #if !__has_builtin(__builtin_fpclass)
                #error "__builtin_fpclass not found"
            #endif
        #elif ! defined(fpclass)
            /* Check for __builtin_fpclass only if no includes were added to the
             * prefix above, which means no definition of fpclass can be found.
             * We would always check for this, but we get false positives on
             * MSYS2 if we do. Their toolchain is broken, but we can at least
             * give them a workaround. */
            #if 1
                __builtin_fpclass;
            #else
                #error "No definition for __builtin_fpclass found in the prefix"
            #endif
        #endif
        return 0;
        }
Compiler stdout:
 
Compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmp4ul6l2y1/testfile.c: In function 'main':
/home/vsc/github/yap/meson/meson-private/tmp4ul6l2y1/testfile.c:14:17: error: '__builtin_fpclass' undeclared (first use in this function); did you mean '__builtin_fpclassify'?
   14 |                 __builtin_fpclass;
      |                 ^~~~~~~~~~~~~~~~~
      |                 __builtin_fpclassify
/home/vsc/github/yap/meson/meson-private/tmp4ul6l2y1/testfile.c:14:17: note: each undeclared identifier is reported only once for each function it appears in

Checking for function "fpclass" with dependency -ldl: NO 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpsghoxgvp
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpsghoxgvp/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpsghoxgvp/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define fpurge meson_disable_define_of_fpurge
        
        #include <limits.h>
        #undef fpurge
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char fpurge (void);
        
        #if defined __stub_fpurge || defined __stub___fpurge
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return fpurge ();
        }
Compiler stdout:
 
Compiler stderr:
 /usr/bin/ld: /tmp/ccbT6uuw.o: in function `main':
testfile.c:(.text+0x5): undefined reference to `fpurge'
collect2: error: ld returned 1 exit status

Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmphhd9623i
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmphhd9623i/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmphhd9623i/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        int main(void) {
        #ifdef __has_builtin
            #if !__has_builtin(__builtin_fpurge)
                #error "__builtin_fpurge not found"
            #endif
        #elif ! defined(fpurge)
            /* Check for __builtin_fpurge only if no includes were added to the
             * prefix above, which means no definition of fpurge can be found.
             * We would always check for this, but we get false positives on
             * MSYS2 if we do. Their toolchain is broken, but we can at least
             * give them a workaround. */
            #if 1
                __builtin_fpurge;
            #else
                #error "No definition for __builtin_fpurge found in the prefix"
            #endif
        #endif
        return 0;
        }
Compiler stdout:
 
Compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmphhd9623i/testfile.c: In function 'main':
/home/vsc/github/yap/meson/meson-private/tmphhd9623i/testfile.c:14:17: error: '__builtin_fpurge' undeclared (first use in this function); did you mean '__builtin_fputc'?
   14 |                 __builtin_fpurge;
      |                 ^~~~~~~~~~~~~~~~
      |                 __builtin_fputc
/home/vsc/github/yap/meson/meson-private/tmphhd9623i/testfile.c:14:17: note: each undeclared identifier is reported only once for each function it appears in

Checking for function "fpurge" with dependency -ldl: NO 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmp64egn3hn
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmp64egn3hn/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmp64egn3hn/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define ftime meson_disable_define_of_ftime
        
        #include <limits.h>
        #undef ftime
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char ftime (void);
        
        #if defined __stub_ftime || defined __stub___ftime
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return ftime ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "ftime" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmprlz_uxoz
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmprlz_uxoz/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmprlz_uxoz/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define ftruncate meson_disable_define_of_ftruncate
        
        #include <limits.h>
        #undef ftruncate
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char ftruncate (void);
        
        #if defined __stub_ftruncate || defined __stub___ftruncate
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return ftruncate ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "ftruncate" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmp6gm7danh
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmp6gm7danh/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmp6gm7danh/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define funopen meson_disable_define_of_funopen
        
        #include <limits.h>
        #undef funopen
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char funopen (void);
        
        #if defined __stub_funopen || defined __stub___funopen
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return funopen ();
        }
Compiler stdout:
 
Compiler stderr:
 /usr/bin/ld: /tmp/ccx0ARpU.o: in function `main':
testfile.c:(.text+0x5): undefined reference to `funopen'
collect2: error: ld returned 1 exit status

Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpeo_5lv5y
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpeo_5lv5y/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpeo_5lv5y/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        int main(void) {
        #ifdef __has_builtin
            #if !__has_builtin(__builtin_funopen)
                #error "__builtin_funopen not found"
            #endif
        #elif ! defined(funopen)
            /* Check for __builtin_funopen only if no includes were added to the
             * prefix above, which means no definition of funopen can be found.
             * We would always check for this, but we get false positives on
             * MSYS2 if we do. Their toolchain is broken, but we can at least
             * give them a workaround. */
            #if 1
                __builtin_funopen;
            #else
                #error "No definition for __builtin_funopen found in the prefix"
            #endif
        #endif
        return 0;
        }
Compiler stdout:
 
Compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmpeo_5lv5y/testfile.c: In function 'main':
/home/vsc/github/yap/meson/meson-private/tmpeo_5lv5y/testfile.c:14:17: error: '__builtin_funopen' undeclared (first use in this function); did you mean '__builtin_finite'?
   14 |                 __builtin_funopen;
      |                 ^~~~~~~~~~~~~~~~~
      |                 __builtin_finite
/home/vsc/github/yap/meson/meson-private/tmpeo_5lv5y/testfile.c:14:17: note: each undeclared identifier is reported only once for each function it appears in

Checking for function "funopen" with dependency -ldl: NO 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpeqzf44dm
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpeqzf44dm/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpeqzf44dm/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define getcwd meson_disable_define_of_getcwd
        
        #include <limits.h>
        #undef getcwd
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char getcwd (void);
        
        #if defined __stub_getcwd || defined __stub___getcwd
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return getcwd ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "getcwd" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpqdxwramw
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpqdxwramw/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpqdxwramw/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define getenv meson_disable_define_of_getenv
        
        #include <limits.h>
        #undef getenv
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char getenv (void);
        
        #if defined __stub_getenv || defined __stub___getenv
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return getenv ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "getenv" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpojlf2wja
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpojlf2wja/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpojlf2wja/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define getexecname meson_disable_define_of_getexecname
        
        #include <limits.h>
        #undef getexecname
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char getexecname (void);
        
        #if defined __stub_getexecname || defined __stub___getexecname
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return getexecname ();
        }
Compiler stdout:
 
Compiler stderr:
 /usr/bin/ld: /tmp/ccvl1Gbh.o: in function `main':
testfile.c:(.text+0x5): undefined reference to `getexecname'
collect2: error: ld returned 1 exit status

Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmple1gpslf
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmple1gpslf/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmple1gpslf/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        int main(void) {
        #ifdef __has_builtin
            #if !__has_builtin(__builtin_getexecname)
                #error "__builtin_getexecname not found"
            #endif
        #elif ! defined(getexecname)
            /* Check for __builtin_getexecname only if no includes were added to the
             * prefix above, which means no definition of getexecname can be found.
             * We would always check for this, but we get false positives on
             * MSYS2 if we do. Their toolchain is broken, but we can at least
             * give them a workaround. */
            #if 1
                __builtin_getexecname;
            #else
                #error "No definition for __builtin_getexecname found in the prefix"
            #endif
        #endif
        return 0;
        }
Compiler stdout:
 
Compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmple1gpslf/testfile.c: In function 'main':
/home/vsc/github/yap/meson/meson-private/tmple1gpslf/testfile.c:14:17: error: '__builtin_getexecname' undeclared (first use in this function); did you mean '__builtin_execle'?
   14 |                 __builtin_getexecname;
      |                 ^~~~~~~~~~~~~~~~~~~~~
      |                 __builtin_execle
/home/vsc/github/yap/meson/meson-private/tmple1gpslf/testfile.c:14:17: note: each undeclared identifier is reported only once for each function it appears in

Checking for function "getexecname" with dependency -ldl: NO 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpq5d8w3xd
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpq5d8w3xd/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpq5d8w3xd/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define gethostbyname meson_disable_define_of_gethostbyname
        
        #include <limits.h>
        #undef gethostbyname
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char gethostbyname (void);
        
        #if defined __stub_gethostbyname || defined __stub___gethostbyname
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return gethostbyname ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "gethostbyname" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmps65oodys
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmps65oodys/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmps65oodys/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define gethostent meson_disable_define_of_gethostent
        
        #include <limits.h>
        #undef gethostent
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char gethostent (void);
        
        #if defined __stub_gethostent || defined __stub___gethostent
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return gethostent ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "gethostent" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmp0ggvx_jh
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmp0ggvx_jh/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmp0ggvx_jh/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define gethostid meson_disable_define_of_gethostid
        
        #include <limits.h>
        #undef gethostid
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char gethostid (void);
        
        #if defined __stub_gethostid || defined __stub___gethostid
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return gethostid ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "gethostid" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpo507ztxz
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpo507ztxz/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpo507ztxz/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define gethostname meson_disable_define_of_gethostname
        
        #include <limits.h>
        #undef gethostname
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char gethostname (void);
        
        #if defined __stub_gethostname || defined __stub___gethostname
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return gethostname ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "gethostname" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmp86aesyfz
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmp86aesyfz/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmp86aesyfz/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define gethrtime meson_disable_define_of_gethrtime
        
        #include <limits.h>
        #undef gethrtime
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char gethrtime (void);
        
        #if defined __stub_gethrtime || defined __stub___gethrtime
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return gethrtime ();
        }
Compiler stdout:
 
Compiler stderr:
 /usr/bin/ld: /tmp/ccxtGsYp.o: in function `main':
testfile.c:(.text+0x5): undefined reference to `gethrtime'
collect2: error: ld returned 1 exit status

Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpod4ey27w
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpod4ey27w/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpod4ey27w/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        int main(void) {
        #ifdef __has_builtin
            #if !__has_builtin(__builtin_gethrtime)
                #error "__builtin_gethrtime not found"
            #endif
        #elif ! defined(gethrtime)
            /* Check for __builtin_gethrtime only if no includes were added to the
             * prefix above, which means no definition of gethrtime can be found.
             * We would always check for this, but we get false positives on
             * MSYS2 if we do. Their toolchain is broken, but we can at least
             * give them a workaround. */
            #if 1
                __builtin_gethrtime;
            #else
                #error "No definition for __builtin_gethrtime found in the prefix"
            #endif
        #endif
        return 0;
        }
Compiler stdout:
 
Compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmpod4ey27w/testfile.c: In function 'main':
/home/vsc/github/yap/meson/meson-private/tmpod4ey27w/testfile.c:14:17: error: '__builtin_gethrtime' undeclared (first use in this function); did you mean '__builtin_strftime'?
   14 |                 __builtin_gethrtime;
      |                 ^~~~~~~~~~~~~~~~~~~
      |                 __builtin_strftime
/home/vsc/github/yap/meson/meson-private/tmpod4ey27w/testfile.c:14:17: note: each undeclared identifier is reported only once for each function it appears in

Checking for function "gethrtime" with dependency -ldl: NO 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmp3j6k8hvo
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmp3j6k8hvo/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmp3j6k8hvo/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define getpagesize meson_disable_define_of_getpagesize
        
        #include <limits.h>
        #undef getpagesize
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char getpagesize (void);
        
        #if defined __stub_getpagesize || defined __stub___getpagesize
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return getpagesize ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "getpagesize" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmp7g4krl57
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmp7g4krl57/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmp7g4krl57/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define getpid meson_disable_define_of_getpid
        
        #include <limits.h>
        #undef getpid
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char getpid (void);
        
        #if defined __stub_getpid || defined __stub___getpid
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return getpid ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "getpid" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmp9cl18398
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmp9cl18398/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmp9cl18398/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define getpwnam meson_disable_define_of_getpwnam
        
        #include <limits.h>
        #undef getpwnam
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char getpwnam (void);
        
        #if defined __stub_getpwnam || defined __stub___getpwnam
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return getpwnam ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "getpwnam" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpnoys05ti
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpnoys05ti/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpnoys05ti/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define getrlimit meson_disable_define_of_getrlimit
        
        #include <limits.h>
        #undef getrlimit
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char getrlimit (void);
        
        #if defined __stub_getrlimit || defined __stub___getrlimit
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return getrlimit ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "getrlimit" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmplk2gpgk3
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmplk2gpgk3/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmplk2gpgk3/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define getrusage meson_disable_define_of_getrusage
        
        #include <limits.h>
        #undef getrusage
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char getrusage (void);
        
        #if defined __stub_getrusage || defined __stub___getrusage
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return getrusage ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "getrusage" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpir0bmx29
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpir0bmx29/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpir0bmx29/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define gettid meson_disable_define_of_gettid
        
        #include <limits.h>
        #undef gettid
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char gettid (void);
        
        #if defined __stub_gettid || defined __stub___gettid
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return gettid ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "gettid" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpiv4f2dvn
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpiv4f2dvn/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpiv4f2dvn/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define gettimeofday meson_disable_define_of_gettimeofday
        
        #include <limits.h>
        #undef gettimeofday
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char gettimeofday (void);
        
        #if defined __stub_gettimeofday || defined __stub___gettimeofday
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return gettimeofday ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "gettimeofday" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpkol1v40z
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpkol1v40z/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpkol1v40z/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define getwd meson_disable_define_of_getwd
        
        #include <limits.h>
        #undef getwd
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char getwd (void);
        
        #if defined __stub_getwd || defined __stub___getwd
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return getwd ();
        }
Compiler stdout:
 
Compiler stderr:
 /usr/bin/ld: /tmp/ccVDBaHE.o: in function `main':
testfile.c:(.text+0x5): warning: the `getwd' function is dangerous and should not be used.

Checking for function "getwd" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpnfy7zs29
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpnfy7zs29/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpnfy7zs29/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define glob meson_disable_define_of_glob
        
        #include <limits.h>
        #undef glob
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char glob (void);
        
        #if defined __stub_glob || defined __stub___glob
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return glob ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "glob" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpx1gsox88
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpx1gsox88/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpx1gsox88/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define gmtime meson_disable_define_of_gmtime
        
        #include <limits.h>
        #undef gmtime
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char gmtime (void);
        
        #if defined __stub_gmtime || defined __stub___gmtime
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return gmtime ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "gmtime" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmp_ni5jg_s
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmp_ni5jg_s/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmp_ni5jg_s/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define h_errno meson_disable_define_of_h_errno
        
        #include <limits.h>
        #undef h_errno
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char h_errno (void);
        
        #if defined __stub_h_errno || defined __stub___h_errno
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return h_errno ();
        }
Compiler stdout:
 
Compiler stderr:
 /usr/bin/ld: /tmp/ccNKSuON.o: in function `main':
testfile.c:(.text+0x5): undefined reference to `h_errno'
collect2: error: ld returned 1 exit status

Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpuajwvmjl
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpuajwvmjl/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpuajwvmjl/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        int main(void) {
        #ifdef __has_builtin
            #if !__has_builtin(__builtin_h_errno)
                #error "__builtin_h_errno not found"
            #endif
        #elif ! defined(h_errno)
            /* Check for __builtin_h_errno only if no includes were added to the
             * prefix above, which means no definition of h_errno can be found.
             * We would always check for this, but we get false positives on
             * MSYS2 if we do. Their toolchain is broken, but we can at least
             * give them a workaround. */
            #if 1
                __builtin_h_errno;
            #else
                #error "No definition for __builtin_h_errno found in the prefix"
            #endif
        #endif
        return 0;
        }
Compiler stdout:
 
Compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmpuajwvmjl/testfile.c: In function 'main':
/home/vsc/github/yap/meson/meson-private/tmpuajwvmjl/testfile.c:14:17: error: '__builtin_h_errno' undeclared (first use in this function); did you mean '__builtin_bzero'?
   14 |                 __builtin_h_errno;
      |                 ^~~~~~~~~~~~~~~~~
      |                 __builtin_bzero
/home/vsc/github/yap/meson/meson-private/tmpuajwvmjl/testfile.c:14:17: note: each undeclared identifier is reported only once for each function it appears in

Checking for function "h_errno" with dependency -ldl: NO 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpmngezitw
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpmngezitw/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpmngezitw/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define isatty meson_disable_define_of_isatty
        
        #include <limits.h>
        #undef isatty
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char isatty (void);
        
        #if defined __stub_isatty || defined __stub___isatty
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return isatty ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "isatty" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpv1keneb4
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpv1keneb4/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpv1keneb4/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define isfinite meson_disable_define_of_isfinite
        
        #include <limits.h>
        #undef isfinite
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char isfinite (void);
        
        #if defined __stub_isfinite || defined __stub___isfinite
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return isfinite ();
        }
Compiler stdout:
 
Compiler stderr:
 /usr/bin/ld: /tmp/cc57IBAK.o: in function `main':
testfile.c:(.text+0x5): undefined reference to `isfinite'
collect2: error: ld returned 1 exit status

Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpzh2hqkqu
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpzh2hqkqu/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpzh2hqkqu/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        int main(void) {
        #ifdef __has_builtin
            #if !__has_builtin(__builtin_isfinite)
                #error "__builtin_isfinite not found"
            #endif
        #elif ! defined(isfinite)
            /* Check for __builtin_isfinite only if no includes were added to the
             * prefix above, which means no definition of isfinite can be found.
             * We would always check for this, but we get false positives on
             * MSYS2 if we do. Their toolchain is broken, but we can at least
             * give them a workaround. */
            #if 1
                __builtin_isfinite;
            #else
                #error "No definition for __builtin_isfinite found in the prefix"
            #endif
        #endif
        return 0;
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "isfinite" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpqzqdyou0
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpqzqdyou0/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpqzqdyou0/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define isinf meson_disable_define_of_isinf
        
        #include <limits.h>
        #undef isinf
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char isinf (void);
        
        #if defined __stub_isinf || defined __stub___isinf
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return isinf ();
        }
Compiler stdout:
 
Compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmpqzqdyou0/testfile.c:10:14: warning: conflicting types for built-in function 'isinf'; expected 'int()' [-Wbuiltin-declaration-mismatch]
   10 |         char isinf (void);
      |              ^~~~~
/home/vsc/github/yap/meson/meson-private/tmpqzqdyou0/testfile.c:5:1: note: 'isinf' is declared in header '<math.h>'
    4 |         #include <limits.h>
  +++ |+#include <math.h>
    5 |         #undef isinf

Checking for function "isinf" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmp7_9vmglh
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmp7_9vmglh/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmp7_9vmglh/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define isnan meson_disable_define_of_isnan
        
        #include <limits.h>
        #undef isnan
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char isnan (void);
        
        #if defined __stub_isnan || defined __stub___isnan
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return isnan ();
        }
Compiler stdout:
 
Compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmp7_9vmglh/testfile.c:10:14: warning: conflicting types for built-in function 'isnan'; expected 'int()' [-Wbuiltin-declaration-mismatch]
   10 |         char isnan (void);
      |              ^~~~~
/home/vsc/github/yap/meson/meson-private/tmp7_9vmglh/testfile.c:5:1: note: 'isnan' is declared in header '<math.h>'
    4 |         #include <limits.h>
  +++ |+#include <math.h>
    5 |         #undef isnan

Checking for function "isnan" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmponuq2860
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmponuq2860/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmponuq2860/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define kill meson_disable_define_of_kill
        
        #include <limits.h>
        #undef kill
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char kill (void);
        
        #if defined __stub_kill || defined __stub___kill
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return kill ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "kill" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpnylfvwib
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpnylfvwib/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpnylfvwib/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define labs meson_disable_define_of_labs
        
        #include <limits.h>
        #undef labs
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char labs (void);
        
        #if defined __stub_labs || defined __stub___labs
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return labs ();
        }
Compiler stdout:
 
Compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmpnylfvwib/testfile.c:10:14: warning: conflicting types for built-in function 'labs'; expected 'long int(long int)' [-Wbuiltin-declaration-mismatch]
   10 |         char labs (void);
      |              ^~~~
/home/vsc/github/yap/meson/meson-private/tmpnylfvwib/testfile.c:5:1: note: 'labs' is declared in header '<stdlib.h>'
    4 |         #include <limits.h>
  +++ |+#include <stdlib.h>
    5 |         #undef labs

Checking for function "labs" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmp46jxowyx
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmp46jxowyx/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmp46jxowyx/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define link meson_disable_define_of_link
        
        #include <limits.h>
        #undef link
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char link (void);
        
        #if defined __stub_link || defined __stub___link
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return link ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "link" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpmq_acgj9
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpmq_acgj9/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpmq_acgj9/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define localtime meson_disable_define_of_localtime
        
        #include <limits.h>
        #undef localtime
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char localtime (void);
        
        #if defined __stub_localtime || defined __stub___localtime
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return localtime ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "localtime" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpjz74gbl1
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpjz74gbl1/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpjz74gbl1/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define lstat meson_disable_define_of_lstat
        
        #include <limits.h>
        #undef lstat
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char lstat (void);
        
        #if defined __stub_lstat || defined __stub___lstat
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return lstat ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "lstat" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpw382xdii
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpw382xdii/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpw382xdii/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define mbscoll meson_disable_define_of_mbscoll
        
        #include <limits.h>
        #undef mbscoll
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char mbscoll (void);
        
        #if defined __stub_mbscoll || defined __stub___mbscoll
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return mbscoll ();
        }
Compiler stdout:
 
Compiler stderr:
 /usr/bin/ld: /tmp/cc2M7ry7.o: in function `main':
testfile.c:(.text+0x5): undefined reference to `mbscoll'
collect2: error: ld returned 1 exit status

Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpmukr8q5f
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpmukr8q5f/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpmukr8q5f/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        int main(void) {
        #ifdef __has_builtin
            #if !__has_builtin(__builtin_mbscoll)
                #error "__builtin_mbscoll not found"
            #endif
        #elif ! defined(mbscoll)
            /* Check for __builtin_mbscoll only if no includes were added to the
             * prefix above, which means no definition of mbscoll can be found.
             * We would always check for this, but we get false positives on
             * MSYS2 if we do. Their toolchain is broken, but we can at least
             * give them a workaround. */
            #if 1
                __builtin_mbscoll;
            #else
                #error "No definition for __builtin_mbscoll found in the prefix"
            #endif
        #endif
        return 0;
        }
Compiler stdout:
 
Compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmpmukr8q5f/testfile.c: In function 'main':
/home/vsc/github/yap/meson/meson-private/tmpmukr8q5f/testfile.c:14:17: error: '__builtin_mbscoll' undeclared (first use in this function); did you mean '__builtin_acosl'?
   14 |                 __builtin_mbscoll;
      |                 ^~~~~~~~~~~~~~~~~
      |                 __builtin_acosl
/home/vsc/github/yap/meson/meson-private/tmpmukr8q5f/testfile.c:14:17: note: each undeclared identifier is reported only once for each function it appears in

Checking for function "mbscoll" with dependency -ldl: NO 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmp7c78gz4q
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmp7c78gz4q/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmp7c78gz4q/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define mbscasecoll meson_disable_define_of_mbscasecoll
        
        #include <limits.h>
        #undef mbscasecoll
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char mbscasecoll (void);
        
        #if defined __stub_mbscasecoll || defined __stub___mbscasecoll
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return mbscasecoll ();
        }
Compiler stdout:
 
Compiler stderr:
 /usr/bin/ld: /tmp/cc8a9L0K.o: in function `main':
testfile.c:(.text+0x5): undefined reference to `mbscasecoll'
collect2: error: ld returned 1 exit status

Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmptrjr4ggc
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmptrjr4ggc/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmptrjr4ggc/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        int main(void) {
        #ifdef __has_builtin
            #if !__has_builtin(__builtin_mbscasecoll)
                #error "__builtin_mbscasecoll not found"
            #endif
        #elif ! defined(mbscasecoll)
            /* Check for __builtin_mbscasecoll only if no includes were added to the
             * prefix above, which means no definition of mbscasecoll can be found.
             * We would always check for this, but we get false positives on
             * MSYS2 if we do. Their toolchain is broken, but we can at least
             * give them a workaround. */
            #if 1
                __builtin_mbscasecoll;
            #else
                #error "No definition for __builtin_mbscasecoll found in the prefix"
            #endif
        #endif
        return 0;
        }
Compiler stdout:
 
Compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmptrjr4ggc/testfile.c: In function 'main':
/home/vsc/github/yap/meson/meson-private/tmptrjr4ggc/testfile.c:14:17: error: '__builtin_mbscasecoll' undeclared (first use in this function); did you mean '__builtin_cacosl'?
   14 |                 __builtin_mbscasecoll;
      |                 ^~~~~~~~~~~~~~~~~~~~~
      |                 __builtin_cacosl
/home/vsc/github/yap/meson/meson-private/tmptrjr4ggc/testfile.c:14:17: note: each undeclared identifier is reported only once for each function it appears in

Checking for function "mbscasecoll" with dependency -ldl: NO 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmprq4n4u2u
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmprq4n4u2u/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmprq4n4u2u/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define mbsnrtowcs meson_disable_define_of_mbsnrtowcs
        
        #include <limits.h>
        #undef mbsnrtowcs
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char mbsnrtowcs (void);
        
        #if defined __stub_mbsnrtowcs || defined __stub___mbsnrtowcs
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return mbsnrtowcs ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "mbsnrtowcs" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmphqblq9ty
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmphqblq9ty/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmphqblq9ty/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define memmove meson_disable_define_of_memmove
        
        #include <limits.h>
        #undef memmove
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char memmove (void);
        
        #if defined __stub_memmove || defined __stub___memmove
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return memmove ();
        }
Compiler stdout:
 
Compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmphqblq9ty/testfile.c:10:14: warning: conflicting types for built-in function 'memmove'; expected 'void *(void *, const void *, long unsigned int)' [-Wbuiltin-declaration-mismatch]
   10 |         char memmove (void);
      |              ^~~~~~~
/home/vsc/github/yap/meson/meson-private/tmphqblq9ty/testfile.c:5:1: note: 'memmove' is declared in header '<string.h>'
    4 |         #include <limits.h>
  +++ |+#include <string.h>
    5 |         #undef memmove

Checking for function "memmove" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpd8fs6zd8
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpd8fs6zd8/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpd8fs6zd8/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define mkstemp meson_disable_define_of_mkstemp
        
        #include <limits.h>
        #undef mkstemp
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char mkstemp (void);
        
        #if defined __stub_mkstemp || defined __stub___mkstemp
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return mkstemp ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "mkstemp" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpjwphc6pl
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpjwphc6pl/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpjwphc6pl/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define mktemp meson_disable_define_of_mktemp
        
        #include <limits.h>
        #undef mktemp
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char mktemp (void);
        
        #if defined __stub_mktemp || defined __stub___mktemp
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return mktemp ();
        }
Compiler stdout:
 
Compiler stderr:
 /usr/bin/ld: /tmp/ccAg6tvw.o: in function `main':
testfile.c:(.text+0x5): warning: the use of `mktemp' is dangerous, better use `mkstemp' or `mkdtemp'

Checking for function "mktemp" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpb2hckwqt
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpb2hckwqt/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpb2hckwqt/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define nanosleep meson_disable_define_of_nanosleep
        
        #include <limits.h>
        #undef nanosleep
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char nanosleep (void);
        
        #if defined __stub_nanosleep || defined __stub___nanosleep
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return nanosleep ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "nanosleep" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmptlajn02j
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmptlajn02j/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmptlajn02j/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define mktime meson_disable_define_of_mktime
        
        #include <limits.h>
        #undef mktime
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char mktime (void);
        
        #if defined __stub_mktime || defined __stub___mktime
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return mktime ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "mktime" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmp71ylhusm
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmp71ylhusm/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmp71ylhusm/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define mtrace meson_disable_define_of_mtrace
        
        #include <limits.h>
        #undef mtrace
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char mtrace (void);
        
        #if defined __stub_mtrace || defined __stub___mtrace
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return mtrace ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "mtrace" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmppc9d2yt9
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmppc9d2yt9/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmppc9d2yt9/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define opendir meson_disable_define_of_opendir
        
        #include <limits.h>
        #undef opendir
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char opendir (void);
        
        #if defined __stub_opendir || defined __stub___opendir
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return opendir ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "opendir" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpakhmiv7n
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpakhmiv7n/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpakhmiv7n/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define open_memstream meson_disable_define_of_open_memstream
        
        #include <limits.h>
        #undef open_memstream
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char open_memstream (void);
        
        #if defined __stub_open_memstream || defined __stub___open_memstream
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return open_memstream ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "open_memstream" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmp4i6n2qtq
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmp4i6n2qtq/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmp4i6n2qtq/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define putenv meson_disable_define_of_putenv
        
        #include <limits.h>
        #undef putenv
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char putenv (void);
        
        #if defined __stub_putenv || defined __stub___putenv
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return putenv ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "putenv" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpoqm6fbei
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpoqm6fbei/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpoqm6fbei/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define rand meson_disable_define_of_rand
        
        #include <limits.h>
        #undef rand
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char rand (void);
        
        #if defined __stub_rand || defined __stub___rand
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return rand ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "rand" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpw38wq2tb
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpw38wq2tb/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpw38wq2tb/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define random meson_disable_define_of_random
        
        #include <limits.h>
        #undef random
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char random (void);
        
        #if defined __stub_random || defined __stub___random
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return random ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "random" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmptj86mnno
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmptj86mnno/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmptj86mnno/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define readlink meson_disable_define_of_readlink
        
        #include <limits.h>
        #undef readlink
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char readlink (void);
        
        #if defined __stub_readlink || defined __stub___readlink
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return readlink ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "readlink" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpzq9slltk
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpzq9slltk/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpzq9slltk/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define realpath meson_disable_define_of_realpath
        
        #include <limits.h>
        #undef realpath
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char realpath (void);
        
        #if defined __stub_realpath || defined __stub___realpath
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return realpath ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "realpath" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmp_kwf7el8
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmp_kwf7el8/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmp_kwf7el8/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define regexec meson_disable_define_of_regexec
        
        #include <limits.h>
        #undef regexec
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char regexec (void);
        
        #if defined __stub_regexec || defined __stub___regexec
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return regexec ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "regexec" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmp3as6bt61
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmp3as6bt61/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmp3as6bt61/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define rename meson_disable_define_of_rename
        
        #include <limits.h>
        #undef rename
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char rename (void);
        
        #if defined __stub_rename || defined __stub___rename
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return rename ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "rename" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpsk92mk7u
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpsk92mk7u/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpsk92mk7u/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define restartable_syscalls meson_disable_define_of_restartable_syscalls
        
        #include <limits.h>
        #undef restartable_syscalls
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char restartable_syscalls (void);
        
        #if defined __stub_restartable_syscalls || defined __stub___restartable_syscalls
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return restartable_syscalls ();
        }
Compiler stdout:
 
Compiler stderr:
 /usr/bin/ld: /tmp/cc4JTx8q.o: in function `main':
testfile.c:(.text+0x5): undefined reference to `restartable_syscalls'
collect2: error: ld returned 1 exit status

Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpm2bb73by
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpm2bb73by/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpm2bb73by/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        int main(void) {
        #ifdef __has_builtin
            #if !__has_builtin(__builtin_restartable_syscalls)
                #error "__builtin_restartable_syscalls not found"
            #endif
        #elif ! defined(restartable_syscalls)
            /* Check for __builtin_restartable_syscalls only if no includes were added to the
             * prefix above, which means no definition of restartable_syscalls can be found.
             * We would always check for this, but we get false positives on
             * MSYS2 if we do. Their toolchain is broken, but we can at least
             * give them a workaround. */
            #if 1
                __builtin_restartable_syscalls;
            #else
                #error "No definition for __builtin_restartable_syscalls found in the prefix"
            #endif
        #endif
        return 0;
        }
Compiler stdout:
 
Compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmpm2bb73by/testfile.c: In function 'main':
/home/vsc/github/yap/meson/meson-private/tmpm2bb73by/testfile.c:14:17: error: '__builtin_restartable_syscalls' undeclared (first use in this function)
   14 |                 __builtin_restartable_syscalls;
      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/vsc/github/yap/meson/meson-private/tmpm2bb73by/testfile.c:14:17: note: each undeclared identifier is reported only once for each function it appears in

Checking for function "restartable_syscalls" with dependency -ldl: NO 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpkk224xm1
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpkk224xm1/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpkk224xm1/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define rint meson_disable_define_of_rint
        
        #include <limits.h>
        #undef rint
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char rint (void);
        
        #if defined __stub_rint || defined __stub___rint
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return rint ();
        }
Compiler stdout:
 
Compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmpkk224xm1/testfile.c:10:14: warning: conflicting types for built-in function 'rint'; expected 'double(double)' [-Wbuiltin-declaration-mismatch]
   10 |         char rint (void);
      |              ^~~~
/home/vsc/github/yap/meson/meson-private/tmpkk224xm1/testfile.c:5:1: note: 'rint' is declared in header '<math.h>'
    4 |         #include <limits.h>
  +++ |+#include <math.h>
    5 |         #undef rint
/usr/bin/ld: /tmp/ccv0VLV1.o: in function `main':
testfile.c:(.text+0x5): undefined reference to `rint'
collect2: error: ld returned 1 exit status

Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpuejzsyvf
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpuejzsyvf/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpuejzsyvf/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        int main(void) {
        #ifdef __has_builtin
            #if !__has_builtin(__builtin_rint)
                #error "__builtin_rint not found"
            #endif
        #elif ! defined(rint)
            /* Check for __builtin_rint only if no includes were added to the
             * prefix above, which means no definition of rint can be found.
             * We would always check for this, but we get false positives on
             * MSYS2 if we do. Their toolchain is broken, but we can at least
             * give them a workaround. */
            #if 1
                __builtin_rint;
            #else
                #error "No definition for __builtin_rint found in the prefix"
            #endif
        #endif
        return 0;
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "rint" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpib_7jdbf
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpib_7jdbf/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpib_7jdbf/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define sbrk meson_disable_define_of_sbrk
        
        #include <limits.h>
        #undef sbrk
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char sbrk (void);
        
        #if defined __stub_sbrk || defined __stub___sbrk
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return sbrk ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "sbrk" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmp2bjk_f9m
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmp2bjk_f9m/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmp2bjk_f9m/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define select meson_disable_define_of_select
        
        #include <limits.h>
        #undef select
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char select (void);
        
        #if defined __stub_select || defined __stub___select
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return select ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "select" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpr0v94udx
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpr0v94udx/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpr0v94udx/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define setbuf meson_disable_define_of_setbuf
        
        #include <limits.h>
        #undef setbuf
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char setbuf (void);
        
        #if defined __stub_setbuf || defined __stub___setbuf
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return setbuf ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "setbuf" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmphjonuj3k
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmphjonuj3k/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmphjonuj3k/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define setitimer meson_disable_define_of_setitimer
        
        #include <limits.h>
        #undef setitimer
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char setitimer (void);
        
        #if defined __stub_setitimer || defined __stub___setitimer
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return setitimer ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "setitimer" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpin2pchpc
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpin2pchpc/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpin2pchpc/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define setlinebuf meson_disable_define_of_setlinebuf
        
        #include <limits.h>
        #undef setlinebuf
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char setlinebuf (void);
        
        #if defined __stub_setlinebuf || defined __stub___setlinebuf
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return setlinebuf ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "setlinebuf" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmp1xwv1jr0
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmp1xwv1jr0/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmp1xwv1jr0/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define setlocale meson_disable_define_of_setlocale
        
        #include <limits.h>
        #undef setlocale
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char setlocale (void);
        
        #if defined __stub_setlocale || defined __stub___setlocale
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return setlocale ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "setlocale" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpg02m21y_
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpg02m21y_/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpg02m21y_/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define setsid meson_disable_define_of_setsid
        
        #include <limits.h>
        #undef setsid
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char setsid (void);
        
        #if defined __stub_setsid || defined __stub___setsid
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return setsid ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "setsid" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpe35qyzhw
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpe35qyzhw/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpe35qyzhw/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define shmat meson_disable_define_of_shmat
        
        #include <limits.h>
        #undef shmat
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char shmat (void);
        
        #if defined __stub_shmat || defined __stub___shmat
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return shmat ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "shmat" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpkzttcfbn
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpkzttcfbn/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpkzttcfbn/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define sigaction meson_disable_define_of_sigaction
        
        #include <limits.h>
        #undef sigaction
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char sigaction (void);
        
        #if defined __stub_sigaction || defined __stub___sigaction
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return sigaction ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "sigaction" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpsocerw0f
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpsocerw0f/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpsocerw0f/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define siggetmask meson_disable_define_of_siggetmask
        
        #include <limits.h>
        #undef siggetmask
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char siggetmask (void);
        
        #if defined __stub_siggetmask || defined __stub___siggetmask
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return siggetmask ();
        }
Compiler stdout:
 
Compiler stderr:
 /usr/bin/ld: /tmp/cc9g5kna.o: in function `main':
testfile.c:(.text+0x5): warning: warning: `siggetmask' is obsolete; `sigprocmask' is best

Checking for function "siggetmask" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpaqfjkhu6
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpaqfjkhu6/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpaqfjkhu6/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define siginterrupt meson_disable_define_of_siginterrupt
        
        #include <limits.h>
        #undef siginterrupt
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char siginterrupt (void);
        
        #if defined __stub_siginterrupt || defined __stub___siginterrupt
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return siginterrupt ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "siginterrupt" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmparhghfro
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmparhghfro/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmparhghfro/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define sigsetjmp meson_disable_define_of_sigsetjmp
        
        #include <limits.h>
        #undef sigsetjmp
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char sigsetjmp (void);
        
        #if defined __stub_sigsetjmp || defined __stub___sigsetjmp
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return sigsetjmp ();
        }
Compiler stdout:
 
Compiler stderr:
 /usr/bin/ld: /tmp/ccPzbZsU.o: in function `main':
testfile.c:(.text+0x5): undefined reference to `sigsetjmp'
collect2: error: ld returned 1 exit status

Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpxjsvjf22
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpxjsvjf22/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpxjsvjf22/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        int main(void) {
        #ifdef __has_builtin
            #if !__has_builtin(__builtin_sigsetjmp)
                #error "__builtin_sigsetjmp not found"
            #endif
        #elif ! defined(sigsetjmp)
            /* Check for __builtin_sigsetjmp only if no includes were added to the
             * prefix above, which means no definition of sigsetjmp can be found.
             * We would always check for this, but we get false positives on
             * MSYS2 if we do. Their toolchain is broken, but we can at least
             * give them a workaround. */
            #if 1
                __builtin_sigsetjmp;
            #else
                #error "No definition for __builtin_sigsetjmp found in the prefix"
            #endif
        #endif
        return 0;
        }
Compiler stdout:
 
Compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmpxjsvjf22/testfile.c: In function 'main':
/home/vsc/github/yap/meson/meson-private/tmpxjsvjf22/testfile.c:14:17: error: '__builtin_sigsetjmp' undeclared (first use in this function); did you mean '__builtin_setjmp'?
   14 |                 __builtin_sigsetjmp;
      |                 ^~~~~~~~~~~~~~~~~~~
      |                 __builtin_setjmp
/home/vsc/github/yap/meson/meson-private/tmpxjsvjf22/testfile.c:14:17: note: each undeclared identifier is reported only once for each function it appears in

Checking for function "sigsetjmp" with dependency -ldl: NO 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpwe79uh3s
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpwe79uh3s/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpwe79uh3s/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define signal meson_disable_define_of_signal
        
        #include <limits.h>
        #undef signal
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char signal (void);
        
        #if defined __stub_signal || defined __stub___signal
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return signal ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "signal" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpnkx4yzuh
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpnkx4yzuh/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpnkx4yzuh/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define sigprocmask meson_disable_define_of_sigprocmask
        
        #include <limits.h>
        #undef sigprocmask
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char sigprocmask (void);
        
        #if defined __stub_sigprocmask || defined __stub___sigprocmask
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return sigprocmask ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "sigprocmask" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpv8go2at4
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpv8go2at4/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpv8go2at4/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define sleep meson_disable_define_of_sleep
        
        #include <limits.h>
        #undef sleep
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char sleep (void);
        
        #if defined __stub_sleep || defined __stub___sleep
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return sleep ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "sleep" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpllv21jgj
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpllv21jgj/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpllv21jgj/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define snprintf meson_disable_define_of_snprintf
        
        #include <limits.h>
        #undef snprintf
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char snprintf (void);
        
        #if defined __stub_snprintf || defined __stub___snprintf
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return snprintf ();
        }
Compiler stdout:
 
Compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmpllv21jgj/testfile.c:10:14: warning: conflicting types for built-in function 'snprintf'; expected 'int(char *, long unsigned int,  const char *, ...)' [-Wbuiltin-declaration-mismatch]
   10 |         char snprintf (void);
      |              ^~~~~~~~
/home/vsc/github/yap/meson/meson-private/tmpllv21jgj/testfile.c:5:1: note: 'snprintf' is declared in header '<stdio.h>'
    4 |         #include <limits.h>
  +++ |+#include <stdio.h>
    5 |         #undef snprintf

Checking for function "snprintf" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmp1bqu31dk
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmp1bqu31dk/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmp1bqu31dk/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define socket meson_disable_define_of_socket
        
        #include <limits.h>
        #undef socket
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char socket (void);
        
        #if defined __stub_socket || defined __stub___socket
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return socket ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "socket" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmplw4lxopd
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmplw4lxopd/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmplw4lxopd/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define srand meson_disable_define_of_srand
        
        #include <limits.h>
        #undef srand
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char srand (void);
        
        #if defined __stub_srand || defined __stub___srand
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return srand ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "srand" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpmp8lab8e
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpmp8lab8e/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpmp8lab8e/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define srand48 meson_disable_define_of_srand48
        
        #include <limits.h>
        #undef srand48
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char srand48 (void);
        
        #if defined __stub_srand48 || defined __stub___srand48
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return srand48 ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "srand48" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpp533ivt4
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpp533ivt4/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpp533ivt4/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define srandom meson_disable_define_of_srandom
        
        #include <limits.h>
        #undef srandom
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char srandom (void);
        
        #if defined __stub_srandom || defined __stub___srandom
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return srandom ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "srandom" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmp3wejdj7e
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmp3wejdj7e/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmp3wejdj7e/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define stpcpy meson_disable_define_of_stpcpy
        
        #include <limits.h>
        #undef stpcpy
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char stpcpy (void);
        
        #if defined __stub_stpcpy || defined __stub___stpcpy
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return stpcpy ();
        }
Compiler stdout:
 
Compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmp3wejdj7e/testfile.c:10:14: warning: conflicting types for built-in function 'stpcpy'; expected 'char *(char *, const char *)' [-Wbuiltin-declaration-mismatch]
   10 |         char stpcpy (void);
      |              ^~~~~~

Checking for function "stpcpy" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmp6mzzoeq0
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmp6mzzoeq0/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmp6mzzoeq0/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define stpncpy meson_disable_define_of_stpncpy
        
        #include <limits.h>
        #undef stpncpy
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char stpncpy (void);
        
        #if defined __stub_stpncpy || defined __stub___stpncpy
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return stpncpy ();
        }
Compiler stdout:
 
Compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmp6mzzoeq0/testfile.c:10:14: warning: conflicting types for built-in function 'stpncpy'; expected 'char *(char *, const char *, long unsigned int)' [-Wbuiltin-declaration-mismatch]
   10 |         char stpncpy (void);
      |              ^~~~~~~

Checking for function "stpncpy" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpf_dygtdd
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpf_dygtdd/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpf_dygtdd/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define ssize_t meson_disable_define_of_ssize_t
        
        #include <limits.h>
        #undef ssize_t
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char ssize_t (void);
        
        #if defined __stub_ssize_t || defined __stub___ssize_t
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return ssize_t ();
        }
Compiler stdout:
 
Compiler stderr:
 /usr/bin/ld: /tmp/ccCc3nii.o: in function `main':
testfile.c:(.text+0x5): undefined reference to `ssize_t'
collect2: error: ld returned 1 exit status

Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpm_i951ta
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpm_i951ta/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpm_i951ta/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        int main(void) {
        #ifdef __has_builtin
            #if !__has_builtin(__builtin_ssize_t)
                #error "__builtin_ssize_t not found"
            #endif
        #elif ! defined(ssize_t)
            /* Check for __builtin_ssize_t only if no includes were added to the
             * prefix above, which means no definition of ssize_t can be found.
             * We would always check for this, but we get false positives on
             * MSYS2 if we do. Their toolchain is broken, but we can at least
             * give them a workaround. */
            #if 1
                __builtin_ssize_t;
            #else
                #error "No definition for __builtin_ssize_t found in the prefix"
            #endif
        #endif
        return 0;
        }
Compiler stdout:
 
Compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmpm_i951ta/testfile.c: In function 'main':
/home/vsc/github/yap/meson/meson-private/tmpm_i951ta/testfile.c:14:17: error: '__builtin_ssize_t' undeclared (first use in this function); did you mean '__builtin_asin'?
   14 |                 __builtin_ssize_t;
      |                 ^~~~~~~~~~~~~~~~~
      |                 __builtin_asin
/home/vsc/github/yap/meson/meson-private/tmpm_i951ta/testfile.c:14:17: note: each undeclared identifier is reported only once for each function it appears in

Checking for function "ssize_t" with dependency -ldl: NO 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmphsqclfdz
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmphsqclfdz/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmphsqclfdz/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define stat meson_disable_define_of_stat
        
        #include <limits.h>
        #undef stat
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char stat (void);
        
        #if defined __stub_stat || defined __stub___stat
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return stat ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "stat" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpfsdgrz40
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpfsdgrz40/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpfsdgrz40/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define system meson_disable_define_of_system
        
        #include <limits.h>
        #undef system
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char system (void);
        
        #if defined __stub_system || defined __stub___system
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return system ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "system" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpa2q5gr4q
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpa2q5gr4q/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpa2q5gr4q/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define tcflush meson_disable_define_of_tcflush
        
        #include <limits.h>
        #undef tcflush
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char tcflush (void);
        
        #if defined __stub_tcflush || defined __stub___tcflush
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return tcflush ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "tcflush" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmplao9vgh1
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmplao9vgh1/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmplao9vgh1/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define time meson_disable_define_of_time
        
        #include <limits.h>
        #undef time
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char time (void);
        
        #if defined __stub_time || defined __stub___time
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return time ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "time" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpu57k0bfy
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpu57k0bfy/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpu57k0bfy/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define timegm meson_disable_define_of_timegm
        
        #include <limits.h>
        #undef timegm
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char timegm (void);
        
        #if defined __stub_timegm || defined __stub___timegm
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return timegm ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "timegm" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmplvpx5san
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmplvpx5san/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmplvpx5san/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define times meson_disable_define_of_times
        
        #include <limits.h>
        #undef times
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char times (void);
        
        #if defined __stub_times || defined __stub___times
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return times ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "times" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpojeeaaj_
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpojeeaaj_/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpojeeaaj_/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define tmpnam meson_disable_define_of_tmpnam
        
        #include <limits.h>
        #undef tmpnam
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char tmpnam (void);
        
        #if defined __stub_tmpnam || defined __stub___tmpnam
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return tmpnam ();
        }
Compiler stdout:
 
Compiler stderr:
 /usr/bin/ld: /tmp/ccnSGLYd.o: in function `main':
testfile.c:(.text+0x5): warning: the use of `tmpnam' is dangerous, better use `mkstemp'

Checking for function "tmpnam" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpxbzc2dqx
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpxbzc2dqx/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpxbzc2dqx/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define ttyname meson_disable_define_of_ttyname
        
        #include <limits.h>
        #undef ttyname
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char ttyname (void);
        
        #if defined __stub_ttyname || defined __stub___ttyname
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return ttyname ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "ttyname" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmp5hktoted
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmp5hktoted/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmp5hktoted/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define usleep meson_disable_define_of_usleep
        
        #include <limits.h>
        #undef usleep
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char usleep (void);
        
        #if defined __stub_usleep || defined __stub___usleep
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return usleep ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "usleep" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpijkti29u
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpijkti29u/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpijkti29u/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define utime meson_disable_define_of_utime
        
        #include <limits.h>
        #undef utime
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char utime (void);
        
        #if defined __stub_utime || defined __stub___utime
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return utime ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "utime" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmp4gg2qzp6
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmp4gg2qzp6/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmp4gg2qzp6/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define var_timezone meson_disable_define_of_var_timezone
        
        #include <limits.h>
        #undef var_timezone
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char var_timezone (void);
        
        #if defined __stub_var_timezone || defined __stub___var_timezone
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return var_timezone ();
        }
Compiler stdout:
 
Compiler stderr:
 /usr/bin/ld: /tmp/cc0VcGqJ.o: in function `main':
testfile.c:(.text+0x5): undefined reference to `var_timezone'
collect2: error: ld returned 1 exit status

Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpwyg4rnll
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpwyg4rnll/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpwyg4rnll/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        int main(void) {
        #ifdef __has_builtin
            #if !__has_builtin(__builtin_var_timezone)
                #error "__builtin_var_timezone not found"
            #endif
        #elif ! defined(var_timezone)
            /* Check for __builtin_var_timezone only if no includes were added to the
             * prefix above, which means no definition of var_timezone can be found.
             * We would always check for this, but we get false positives on
             * MSYS2 if we do. Their toolchain is broken, but we can at least
             * give them a workaround. */
            #if 1
                __builtin_var_timezone;
            #else
                #error "No definition for __builtin_var_timezone found in the prefix"
            #endif
        #endif
        return 0;
        }
Compiler stdout:
 
Compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmpwyg4rnll/testfile.c: In function 'main':
/home/vsc/github/yap/meson/meson-private/tmpwyg4rnll/testfile.c:14:17: error: '__builtin_var_timezone' undeclared (first use in this function); did you mean '__builtin_strftime'?
   14 |                 __builtin_var_timezone;
      |                 ^~~~~~~~~~~~~~~~~~~~~~
      |                 __builtin_strftime
/home/vsc/github/yap/meson/meson-private/tmpwyg4rnll/testfile.c:14:17: note: each undeclared identifier is reported only once for each function it appears in

Checking for function "var_timezone" with dependency -ldl: NO 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpvm7ctmmw
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpvm7ctmmw/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpvm7ctmmw/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define vfork meson_disable_define_of_vfork
        
        #include <limits.h>
        #undef vfork
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char vfork (void);
        
        #if defined __stub_vfork || defined __stub___vfork
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return vfork ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "vfork" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpw7rxyg13
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpw7rxyg13/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpw7rxyg13/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define waitpid meson_disable_define_of_waitpid
        
        #include <limits.h>
        #undef waitpid
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char waitpid (void);
        
        #if defined __stub_waitpid || defined __stub___waitpid
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return waitpid ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "waitpid" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpb66afcxp
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpb66afcxp/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpb66afcxp/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define wcsdup meson_disable_define_of_wcsdup
        
        #include <limits.h>
        #undef wcsdup
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char wcsdup (void);
        
        #if defined __stub_wcsdup || defined __stub___wcsdup
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return wcsdup ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "wcsdup" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpdrogerpd
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpdrogerpd/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpdrogerpd/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define wcsnlen meson_disable_define_of_wcsnlen
        
        #include <limits.h>
        #undef wcsnlen
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char wcsnlen (void);
        
        #if defined __stub_wcsnlen || defined __stub___wcsnlen
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return wcsnlen ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "wcsnlen" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpj3xpnmev
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpj3xpnmev/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpj3xpnmev/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 -Wl,--start-group -ldl -Wl,--end-group 

Code:
 
        #define wordexp meson_disable_define_of_wordexp
        
        #include <limits.h>
        #undef wordexp
        
        #ifdef __cplusplus
        extern "C"
        #endif
        char wordexp (void);
        
        #if defined __stub_wordexp || defined __stub___wordexp
        fail fail fail this function is not going to work
        #endif
        
        int main(void) {
          return wordexp ();
        }
Compiler stdout:
 
Compiler stderr:
 
Checking for function "wordexp" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpup1t2g6r
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpup1t2g6r/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpup1t2g6r/output.obj -pipe -c -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 

Code:
 
        #include <H>
        int main(void) {
            /* If it's not defined as a macro, try to use as a symbol */
            #ifndef socklen_t
                socklen_t;
            #endif
            return 0;
        }
Compiler stdout:
 
Compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmpup1t2g6r/testfile.c:2:18: fatal error: H: No such file or directory
    2 |         #include <H>
      |                  ^~~
compilation terminated.

Header <H> has symbol "socklen_t" with dependency -ldl: NO 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpwnwt2u2p
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpwnwt2u2p/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpwnwt2u2p/output.obj -pipe -c -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 

Code:
 
        #include <signal.h>
        int main(void) {
            /* If it's not defined as a macro, try to use as a symbol */
            #ifndef SIGINFO
                SIGINFO;
            #endif
            return 0;
        }
Compiler stdout:
 
Compiler stderr:
 /home/vsc/github/yap/meson/meson-private/tmpwnwt2u2p/testfile.c: In function 'main':
/home/vsc/github/yap/meson/meson-private/tmpwnwt2u2p/testfile.c:6:17: error: 'SIGINFO' undeclared (first use in this function); did you mean 'SIGIO'?
    6 |                 SIGINFO;
      |                 ^~~~~~~
      |                 SIGIO
/home/vsc/github/yap/meson/meson-private/tmpwnwt2u2p/testfile.c:6:17: note: each undeclared identifier is reported only once for each function it appears in

Header <signal.h> has symbol "SIGINFO" with dependency -ldl: NO 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpbyz8aqqf
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpbyz8aqqf/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpbyz8aqqf/output.obj -pipe -c -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 

Code:
 
        #include <signal.h>
        int main(void) {
            /* If it's not defined as a macro, try to use as a symbol */
            #ifndef SIGFPE
                SIGFPE;
            #endif
            return 0;
        }
Compiler stdout:
 
Compiler stderr:
 
Header <signal.h> has symbol "SIGFPE" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmp7wgrjbt9
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmp7wgrjbt9/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmp7wgrjbt9/output.obj -pipe -c -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 

Code:
 
        #include <signal.h>
        int main(void) {
            /* If it's not defined as a macro, try to use as a symbol */
            #ifndef SIGPROF
                SIGPROF;
            #endif
            return 0;
        }
Compiler stdout:
 
Compiler stderr:
 
Header <signal.h> has symbol "SIGPROF" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpusrf4q5z
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmpusrf4q5z/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpusrf4q5z/output.obj -pipe -c -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 

Code:
 
        #include <signal.h>
        int main(void) {
            /* If it's not defined as a macro, try to use as a symbol */
            #ifndef SIGSEGV
                SIGSEGV;
            #endif
            return 0;
        }
Compiler stdout:
 
Compiler stderr:
 
Header <signal.h> has symbol "SIGSEGV" with dependency -ldl: YES 
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmp9ru_kmvg
Command line:  cc -I/home/vsc/github/yap/os/. -I/home/vsc/github/yap/H -I/home/vsc/github/yap/H/generated -I/home/vsc/github/yap/os -I/home/vsc/github/yap/OPTYap -I/home/vsc/github/yap/utf8proc -I/home/vsc/github/yap/include -I/home/vsc/github/yap/. /home/vsc/github/yap/meson/meson-private/tmp9ru_kmvg/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmp9ru_kmvg/output.obj -pipe -c -D_FILE_OFFSET_BITS=64 -O0 -std=gnu11 

Code:
 
        #include <time.h>
        int main(void) {
            /* If it's not defined as a macro, try to use as a symbol */
            #ifndef timezone
                timezone;
            #endif
            return 0;
        }
Compiler stdout:
 
Compiler stderr:
 
Header <time.h> has symbol "timezone" with dependency -ldl: YES 
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmp418oebml/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("gmp.h")
          #error "Header 'gmp.h' could not be found"
         #endif
        #else
         #include <gmp.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 
Has header "gmp.h" : YES (cached)
Using cached compile:
Cached command line:  cc /home/vsc/github/yap/meson/meson-private/tmpg29zgs9j/testfile.c -pipe -E -P -D_FILE_OFFSET_BITS=64 -P -O0 -std=gnu11 

Code:
 
        #ifdef __has_include
         #if !__has_include("gmpxx.h")
          #error "Header 'gmpxx.h' could not be found"
         #endif
        #else
         #include <gmpxx.h>
        #endif
Cached compiler stdout:
 
Cached compiler stderr:
 
Has header "gmpxx.h" : YES (cached)
Running compile:
Working directory:  /home/vsc/github/yap/meson/meson-private/tmpss2o9dqh
Command line:  cc /home/vsc/github/yap/meson/meson-private/tmpss2o9dqh/testfile.c -o /home/vsc/github/yap/meson/meson-private/tmpss2o9dqh/output.exe -pipe -D_FILE_OFFSET_BITS=64 -O0 -Wl,--start-group -lgmp -Wl,--end-group -Wl,--allow-shlib-undefined 

Code:
 int main(void) { return 0; }
Compiler stdout:
 
Compiler stderr:
 
Library gmp found: YES
Configuring YapConfig.h using configuration
Build targets in project: 4

Found ninja-1.10.0 at /usr/bin/ninja
