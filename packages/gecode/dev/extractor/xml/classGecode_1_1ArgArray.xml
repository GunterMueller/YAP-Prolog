<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classGecode_1_1ArgArray" kind="class" prot="public">
    <compoundname>Gecode::ArgArray</compoundname>
    <basecompoundref refid="classGecode_1_1ArgArrayBase" prot="public" virt="non-virtual">Gecode::ArgArrayBase&lt; T &gt;</basecompoundref>
    <includes refid="kernel_2array_8hpp" local="no">array.hpp</includes>
    <templateparamlist>
      <param>
        <type>class</type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Constructors and initialization</header>
      <memberdef kind="function" id="classGecode_1_1ArgArray_1a288d3cb40e578b413b9e407f84fb7dcd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::ArgArray&lt; T &gt;::ArgArray</definition>
        <argsstring>(void)</argsstring>
        <name>ArgArray</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Allocate empty array. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/array.hpp" line="770" column="1" bodyfile="/usr/include/gecode/kernel/array.hpp" bodystart="1908" bodyend="1908"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1ArgArray_1a7002a33374b4dca1a75f0626b6c6cc44" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::ArgArray&lt; T &gt;::ArgArray</definition>
        <argsstring>(int n)</argsstring>
        <name>ArgArray</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Allocate array with <emphasis>n</emphasis> elements. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/array.hpp" line="772" column="1" bodyfile="/usr/include/gecode/kernel/array.hpp" bodystart="1912" bodyend="1912"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1ArgArray_1a606df052a1c714082c4c217441933271" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Gecode::ArgArray&lt; T &gt;::ArgArray</definition>
        <argsstring>(int n, const T *e)</argsstring>
        <name>ArgArray</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const T *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Allocate array with <emphasis>n</emphasis> elements and initialize with elements from array <emphasis>e</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/array.hpp" line="774" column="1" bodyfile="/usr/include/gecode/kernel/array.hpp" bodystart="1915" bodyend="1919"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1ArgArray_1a12af8926e2b4a1dbfe97cd4976b186cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::ArgArray&lt; T &gt;::ArgArray</definition>
        <argsstring>(const ArgArray&lt; T &gt; &amp;a)</argsstring>
        <name>ArgArray</name>
        <param>
          <type>const <ref refid="classGecode_1_1ArgArray" kindref="compound">ArgArray</ref>&lt; T &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>Initialize from primitive argument array <emphasis>a</emphasis> (copy elements) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/array.hpp" line="776" column="1" bodyfile="/usr/include/gecode/kernel/array.hpp" bodystart="1923" bodyend="1924"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1ArgArray_1af638dc4a69d7f7aeb847455820f2038d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::ArgArray&lt; T &gt;::ArgArray</definition>
        <argsstring>(const std::vector&lt; T &gt; &amp;a)</argsstring>
        <name>ArgArray</name>
        <param>
          <type>const std::vector&lt; T &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>Initialize from vector <emphasis>a</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/array.hpp" line="778" column="1" bodyfile="/usr/include/gecode/kernel/array.hpp" bodystart="1928" bodyend="1929"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1ArgArray_1afdc5f0f577e538b4e2e459b638b0838e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class InputIterator</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>Gecode::ArgArray&lt; class &gt;::ArgArray</definition>
        <argsstring>(InputIterator first, InputIterator last)</argsstring>
        <name>ArgArray</name>
        <param>
          <type>InputIterator</type>
          <declname>first</declname>
        </param>
        <param>
          <type>InputIterator</type>
          <declname>last</declname>
        </param>
        <briefdescription>
<para>Initialize from InputIterator <emphasis>first</emphasis> and <emphasis>last</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/array.hpp" line="781" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Array elements</header>
      <memberdef kind="function" id="classGecode_1_1ArgArray_1a5742aff4e6d84c544e578589fbfccfa7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGecode_1_1ArrayTraits" kindref="compound">ArrayTraits</ref>&lt; <ref refid="classGecode_1_1ArgArray" kindref="compound">ArgArray</ref>&lt; T &gt; &gt;::ArgsType</type>
        <definition>forceinline ArrayTraits&lt; ArgArray&lt; T &gt; &gt;::ArgsType Gecode::ArgArray&lt; T &gt;::slice</definition>
        <argsstring>(int start, int inc=1, int n=-1)</argsstring>
        <name>slice</name>
        <param>
          <type>int</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>inc</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>Return slice <formula id="312">$y$</formula> of length <emphasis>n</emphasis> such that forall <formula id="313">$0\leq i&lt;n$</formula>, <formula id="314">$y_i=x_{\text{start}+i\cdot\text{inc}}$</formula>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/array.hpp" line="787" column="1" bodyfile="/usr/include/gecode/kernel/array.hpp" bodystart="1939" bodyend="1943"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Appending elements</header>
      <memberdef kind="function" id="classGecode_1_1ArgArray_1a3653e6d20a9a233f5a83342cb77df7f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGecode_1_1ArrayTraits" kindref="compound">ArrayTraits</ref>&lt; <ref refid="classGecode_1_1ArgArray" kindref="compound">ArgArray</ref>&lt; T &gt; &gt;::ArgsType &amp;</type>
        <definition>forceinline ArrayTraits&lt; ArgArray&lt; T &gt; &gt;::ArgsType &amp; Gecode::ArgArray&lt; T &gt;::operator&lt;&lt;</definition>
        <argsstring>(const T &amp;x)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>const T &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Insert a new element <emphasis>x</emphasis> at the end of the array (increase size by 1) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/array.hpp" line="792" column="1" bodyfile="/usr/include/gecode/kernel/array.hpp" bodystart="1947" bodyend="1951"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1ArgArray_1a7dc92b81d9cc3d0103ffaa3fd503389d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGecode_1_1ArrayTraits" kindref="compound">ArrayTraits</ref>&lt; <ref refid="classGecode_1_1ArgArray" kindref="compound">ArgArray</ref>&lt; T &gt; &gt;::ArgsType &amp;</type>
        <definition>forceinline ArrayTraits&lt; ArgArray&lt; T &gt; &gt;::ArgsType &amp; Gecode::ArgArray&lt; T &gt;::operator&lt;&lt;</definition>
        <argsstring>(const ArgArray&lt; T &gt; &amp;x)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>const <ref refid="classGecode_1_1ArgArray" kindref="compound">ArgArray</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Append <emphasis>x</emphasis> to the end of the array. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/array.hpp" line="795" column="1" bodyfile="/usr/include/gecode/kernel/array.hpp" bodystart="1955" bodyend="1959"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classGecode_1_1ArgArray_1a86d7fae7caeabaf71ca0e3dfe5dc31d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class InputIterator</type>
          </param>
        </templateparamlist>
        <type>forceinline</type>
        <definition>forceinline Gecode::ArgArray&lt; class &gt;::ArgArray</definition>
        <argsstring>(InputIterator first, InputIterator last)</argsstring>
        <name>ArgArray</name>
        <param>
          <type>InputIterator</type>
          <declname>first</declname>
        </param>
        <param>
          <type>InputIterator</type>
          <declname>last</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/array.hpp" line="1934" column="1" bodyfile="/usr/include/gecode/kernel/array.hpp" bodystart="1934" bodyend="1935"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classGecode_1_1ArgArray_1a83989d43345d42ac81db1759a42236c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classGecode_1_1ArrayTraits" kindref="compound">ArrayTraits</ref>&lt; <ref refid="classGecode_1_1ArgArray" kindref="compound">ArgArray</ref>&lt; T &gt; &gt;::ArgsType</type>
        <definition>ArrayTraits&lt;ArgArray&lt;T&gt; &gt;::ArgsType operator+</definition>
        <argsstring>(const ArgArray&lt; T &gt; &amp;x, const ArgArray&lt; T &gt; &amp;y)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classGecode_1_1ArgArray" kindref="compound">ArgArray</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1ArgArray" kindref="compound">ArgArray</ref>&lt; T &gt; &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/array.hpp" line="800" column="1" bodyfile="/usr/include/gecode/kernel/array.hpp" bodystart="1963" bodyend="1966"/>
      </memberdef>
      <memberdef kind="friend" id="classGecode_1_1ArgArray_1ad66b7d62dbb0a1ac26e03075e914f18d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classGecode_1_1ArrayTraits" kindref="compound">ArrayTraits</ref>&lt; <ref refid="classGecode_1_1ArgArray" kindref="compound">ArgArray</ref>&lt; T &gt; &gt;::ArgsType</type>
        <definition>ArrayTraits&lt;ArgArray&lt;T&gt; &gt;::ArgsType operator+</definition>
        <argsstring>(const ArgArray&lt; T &gt; &amp;x, const T &amp;y)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classGecode_1_1ArgArray" kindref="compound">ArgArray</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/array.hpp" line="802" column="1" bodyfile="/usr/include/gecode/kernel/array.hpp" bodystart="1970" bodyend="1973"/>
      </memberdef>
      <memberdef kind="friend" id="classGecode_1_1ArgArray_1a0b1f216f7a83254b6ca2ef3324aaa3ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classGecode_1_1ArrayTraits" kindref="compound">ArrayTraits</ref>&lt; <ref refid="classGecode_1_1ArgArray" kindref="compound">ArgArray</ref>&lt; T &gt; &gt;::ArgsType</type>
        <definition>ArrayTraits&lt;ArgArray&lt;T&gt; &gt;::ArgsType operator+</definition>
        <argsstring>(const T &amp;x, const ArgArray&lt; T &gt; &amp;y)</argsstring>
        <name>operator+</name>
        <param>
          <type>const T &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1ArgArray" kindref="compound">ArgArray</ref>&lt; T &gt; &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/array.hpp" line="805" column="1" bodyfile="/usr/include/gecode/kernel/array.hpp" bodystart="1977" bodyend="1982"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="related">
      <memberdef kind="function" id="classGecode_1_1ArgArray_1a5cf892f95ec60404040e7d34b3cde041" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type><ref refid="classGecode_1_1ArrayTraits" kindref="compound">ArrayTraits</ref>&lt; <ref refid="classGecode_1_1ArgArray" kindref="compound">ArgArray</ref>&lt; T &gt; &gt;::ArgsType</type>
        <definition>ArrayTraits&lt; ArgArray&lt; T &gt; &gt;::ArgsType operator+</definition>
        <argsstring>(const ArgArray&lt; T &gt; &amp;x, const ArgArray&lt; T &gt; &amp;y)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classGecode_1_1ArgArray" kindref="compound">ArgArray</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1ArgArray" kindref="compound">ArgArray</ref>&lt; T &gt; &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Concatenate <emphasis>x</emphasis> and <emphasis>y</emphasis> and return result </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/array.hpp" line="734" column="1" bodyfile="/usr/include/gecode/kernel/array.hpp" bodystart="1963" bodyend="1966"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1ArgArray_1a127d1af2686672839e56e2fde61c35da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type><ref refid="classGecode_1_1ArrayTraits" kindref="compound">ArrayTraits</ref>&lt; <ref refid="classGecode_1_1ArgArray" kindref="compound">ArgArray</ref>&lt; T &gt; &gt;::ArgsType</type>
        <definition>ArrayTraits&lt; ArgArray&lt; T &gt; &gt;::ArgsType operator+</definition>
        <argsstring>(const ArgArray&lt; T &gt; &amp;x, const T &amp;y)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classGecode_1_1ArgArray" kindref="compound">ArgArray</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Concatenate <emphasis>x</emphasis> and <emphasis>y</emphasis> and return result </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/array.hpp" line="741" column="1" bodyfile="/usr/include/gecode/kernel/array.hpp" bodystart="1970" bodyend="1973"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1ArgArray_1aee6fc4b12b2a31d6b05124658d6b99f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type><ref refid="classGecode_1_1ArrayTraits" kindref="compound">ArrayTraits</ref>&lt; <ref refid="classGecode_1_1ArgArray" kindref="compound">ArgArray</ref>&lt; T &gt; &gt;::ArgsType</type>
        <definition>ArrayTraits&lt; ArgArray&lt; T &gt; &gt;::ArgsType operator+</definition>
        <argsstring>(const T &amp;x, const ArgArray&lt; T &gt; &amp;y)</argsstring>
        <name>operator+</name>
        <param>
          <type>const T &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1ArgArray" kindref="compound">ArgArray</ref>&lt; T &gt; &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Concatenate <emphasis>x</emphasis> and <emphasis>y</emphasis> and return result </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/array.hpp" line="748" column="1" bodyfile="/usr/include/gecode/kernel/array.hpp" bodystart="1977" bodyend="1982"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1ArgArray_1a300a3e20a1acdfe7ea36e43aea341021" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classGecode_1_1Var" kindref="compound">Var</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="classGecode_1_1ArrayTraits" kindref="compound">ArrayTraits</ref>&lt; <ref refid="classGecode_1_1VarArgArray" kindref="compound">VarArgArray</ref>&lt; <ref refid="classGecode_1_1Var" kindref="compound">Var</ref> &gt; &gt;::ArgsType</type>
        <definition>ArrayTraits&lt; VarArgArray&lt; Var &gt; &gt;::ArgsType operator+</definition>
        <argsstring>(const VarArgArray&lt; Var &gt; &amp;x, const VarArgArray&lt; Var &gt; &amp;y)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classGecode_1_1VarArgArray" kindref="compound">VarArgArray</ref>&lt; <ref refid="classGecode_1_1Var" kindref="compound">Var</ref> &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1VarArgArray" kindref="compound">VarArgArray</ref>&lt; <ref refid="classGecode_1_1Var" kindref="compound">Var</ref> &gt; &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Concatenate <emphasis>x</emphasis> and <emphasis>y</emphasis> and return result </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/array.hpp" line="815" column="1" bodyfile="/usr/include/gecode/kernel/array.hpp" bodystart="2047" bodyend="2050"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1ArgArray_1a847d763922f171759a6d83c1205343b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classGecode_1_1Var" kindref="compound">Var</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="classGecode_1_1ArrayTraits" kindref="compound">ArrayTraits</ref>&lt; <ref refid="classGecode_1_1VarArgArray" kindref="compound">VarArgArray</ref>&lt; <ref refid="classGecode_1_1Var" kindref="compound">Var</ref> &gt; &gt;::ArgsType</type>
        <definition>ArrayTraits&lt; VarArgArray&lt; Var &gt; &gt;::ArgsType operator+</definition>
        <argsstring>(const VarArgArray&lt; Var &gt; &amp;x, const Var &amp;y)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classGecode_1_1VarArgArray" kindref="compound">VarArgArray</ref>&lt; <ref refid="classGecode_1_1Var" kindref="compound">Var</ref> &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Concatenate <emphasis>x</emphasis> and <emphasis>y</emphasis> and return result </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/array.hpp" line="822" column="1" bodyfile="/usr/include/gecode/kernel/array.hpp" bodystart="2054" bodyend="2057"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1ArgArray_1afb6ef8dd8e1562be2f5b4d9a2a20808e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classGecode_1_1Var" kindref="compound">Var</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="classGecode_1_1ArrayTraits" kindref="compound">ArrayTraits</ref>&lt; <ref refid="classGecode_1_1VarArgArray" kindref="compound">VarArgArray</ref>&lt; <ref refid="classGecode_1_1Var" kindref="compound">Var</ref> &gt; &gt;::ArgsType</type>
        <definition>ArrayTraits&lt; VarArgArray&lt; Var &gt; &gt;::ArgsType operator+</definition>
        <argsstring>(const Var &amp;x, const VarArgArray&lt; Var &gt; &amp;y)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classGecode_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1VarArgArray" kindref="compound">VarArgArray</ref>&lt; <ref refid="classGecode_1_1Var" kindref="compound">Var</ref> &gt; &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Concatenate <emphasis>x</emphasis> and <emphasis>y</emphasis> and return result </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/array.hpp" line="829" column="1" bodyfile="/usr/include/gecode/kernel/array.hpp" bodystart="2061" bodyend="2066"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Argument array for non-primitive types. </para>    </briefdescription>
    <detaileddescription>
<para>Argument arrays are used as convenient mechanism of passing arguments when calling functions as they combine both the size and the elements of an array. For a small number of elements, memory is allocated by creating an argument array object. Otherwise the memory is allocated from the heap. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="809">
        <label>Gecode::ArgArray&lt; class &gt;</label>
        <link refid="classGecode_1_1ArgArray"/>
        <childnode refid="810" relation="public-inheritance">
        </childnode>
      </node>
      <node id="810">
        <label>Gecode::ArgArrayBase&lt; T &gt;</label>
        <link refid="classGecode_1_1ArgArrayBase"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="811">
        <label>Gecode::ArgArray&lt; class &gt;</label>
        <link refid="classGecode_1_1ArgArray"/>
        <childnode refid="812" relation="public-inheritance">
        </childnode>
      </node>
      <node id="813">
        <label>T</label>
      </node>
      <node id="812">
        <label>Gecode::ArgArrayBase&lt; T &gt;</label>
        <link refid="classGecode_1_1ArgArrayBase"/>
        <childnode refid="813" relation="usage">
          <edgelabel>onstack</edgelabel>
          <edgelabel>a</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/usr/include/gecode/kernel/array.hpp" line="727" column="1" bodyfile="/usr/include/gecode/kernel/array.hpp" bodystart="727" bodyend="-1"/>
    <listofallmembers>
      <member refid="classGecode_1_1ArgArrayBase_1a6ac424d552057a5730b67d9b15b9977c" prot="protected" virt="non-virtual"><scope>Gecode::ArgArray</scope><name>a</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1aa3a75d22c4da142c5f7129561f980399" prot="protected" virt="non-virtual"><scope>Gecode::ArgArray</scope><name>allocate</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1acf7efe7096de3d763d6a894306e56adc" prot="protected" virt="non-virtual"><scope>Gecode::ArgArray</scope><name>append</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1a91d22d529d75c419aa3bd6c93849cb4a" prot="protected" virt="non-virtual"><scope>Gecode::ArgArray</scope><name>append</name></member>
      <member refid="classGecode_1_1ArgArray_1a288d3cb40e578b413b9e407f84fb7dcd" prot="public" virt="non-virtual"><scope>Gecode::ArgArray</scope><name>ArgArray</name></member>
      <member refid="classGecode_1_1ArgArray_1a7002a33374b4dca1a75f0626b6c6cc44" prot="public" virt="non-virtual"><scope>Gecode::ArgArray</scope><name>ArgArray</name></member>
      <member refid="classGecode_1_1ArgArray_1a606df052a1c714082c4c217441933271" prot="public" virt="non-virtual"><scope>Gecode::ArgArray</scope><name>ArgArray</name></member>
      <member refid="classGecode_1_1ArgArray_1a12af8926e2b4a1dbfe97cd4976b186cf" prot="public" virt="non-virtual"><scope>Gecode::ArgArray</scope><name>ArgArray</name></member>
      <member refid="classGecode_1_1ArgArray_1af638dc4a69d7f7aeb847455820f2038d" prot="public" virt="non-virtual"><scope>Gecode::ArgArray</scope><name>ArgArray</name></member>
      <member refid="classGecode_1_1ArgArray_1afdc5f0f577e538b4e2e459b638b0838e" prot="public" virt="non-virtual"><scope>Gecode::ArgArray</scope><name>ArgArray</name></member>
      <member refid="classGecode_1_1ArgArray_1a86d7fae7caeabaf71ca0e3dfe5dc31d4" prot="public" virt="non-virtual"><scope>Gecode::ArgArray</scope><name>ArgArray</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1aaf88593537f41f862b91120c4c6ee104" prot="public" virt="non-virtual"><scope>Gecode::ArgArray</scope><name>ArgArrayBase</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1add5bd614e97033a43636821aeab64ce2" prot="public" virt="non-virtual"><scope>Gecode::ArgArray</scope><name>ArgArrayBase</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1ae30a8e33f63548bf1e8f52bc772686db" prot="public" virt="non-virtual"><scope>Gecode::ArgArray</scope><name>ArgArrayBase</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1ab0a3399a6a484dc36cd3d306a2b8e199" prot="public" virt="non-virtual"><scope>Gecode::ArgArray</scope><name>ArgArrayBase</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1a9e7b606b9971b3344e692a60ac13b223" prot="public" virt="non-virtual"><scope>Gecode::ArgArray</scope><name>ArgArrayBase</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1aa113576241a65d86140bc3419d96b02c" prot="public" virt="non-virtual"><scope>Gecode::ArgArray</scope><name>begin</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1aa56cc30444aa0a1e206475eb2201a281" prot="public" virt="non-virtual"><scope>Gecode::ArgArray</scope><name>begin</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1aba50e7707c86b17f0d4b805939305227" prot="protected" virt="non-virtual"><scope>Gecode::ArgArray</scope><name>capacity</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1a8dfd1207b4479935fb88e517b21bf49f" prot="protected" virt="non-virtual"><scope>Gecode::ArgArray</scope><name>concat</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1ab3e5176857b4d13451f9022f6a72b192" prot="protected" virt="non-virtual"><scope>Gecode::ArgArray</scope><name>concat</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1ad83ae4a7fc5863035e6fe5795b843768" prot="public" virt="non-virtual"><scope>Gecode::ArgArray</scope><name>const_iterator</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1a4c85c82056ab8fbf2772417329d3e802" prot="public" virt="non-virtual"><scope>Gecode::ArgArray</scope><name>const_pointer</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1a097be827923b3a47bacd8918ec73ca6b" prot="public" virt="non-virtual"><scope>Gecode::ArgArray</scope><name>const_reference</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1af2029facbd7b8dcfef6573d43444cde2" prot="public" virt="non-virtual"><scope>Gecode::ArgArray</scope><name>const_reverse_iterator</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1ad90ff8a9bd79af6acfdb72646c52a780" prot="public" virt="non-virtual"><scope>Gecode::ArgArray</scope><name>end</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1a62a0f08722a2eaddd4d9b3bd7d3a216c" prot="public" virt="non-virtual"><scope>Gecode::ArgArray</scope><name>end</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1aa687fceda8a4ae2a64fb5a7bb649a5a7" prot="public" virt="non-virtual"><scope>Gecode::ArgArray</scope><name>iterator</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1ac8bab055302616752818fe5df090a1b9" prot="protected" virt="non-virtual"><scope>Gecode::ArgArray</scope><name>n</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1a4c191ff64ad1876b584048422f9ff29e" prot="protected" virt="non-virtual"><scope>Gecode::ArgArray</scope><name>onstack</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1a2a7e9c76d67fae7aae4f20109eb38317" prot="protected" virt="non-virtual"><scope>Gecode::ArgArray</scope><name>onstack_size</name></member>
      <member refid="classGecode_1_1ArgArray_1a83989d43345d42ac81db1759a42236c1" prot="public" virt="non-virtual"><scope>Gecode::ArgArray</scope><name>operator+</name></member>
      <member refid="classGecode_1_1ArgArray_1ad66b7d62dbb0a1ac26e03075e914f18d" prot="public" virt="non-virtual"><scope>Gecode::ArgArray</scope><name>operator+</name></member>
      <member refid="classGecode_1_1ArgArray_1a0b1f216f7a83254b6ca2ef3324aaa3ff" prot="public" virt="non-virtual"><scope>Gecode::ArgArray</scope><name>operator+</name></member>
      <member refid="classGecode_1_1ArgArray_1a5cf892f95ec60404040e7d34b3cde041" prot="public" virt="non-virtual"><scope>Gecode::ArgArray</scope><name>operator+</name></member>
      <member refid="classGecode_1_1ArgArray_1a127d1af2686672839e56e2fde61c35da" prot="public" virt="non-virtual"><scope>Gecode::ArgArray</scope><name>operator+</name></member>
      <member refid="classGecode_1_1ArgArray_1aee6fc4b12b2a31d6b05124658d6b99f2" prot="public" virt="non-virtual"><scope>Gecode::ArgArray</scope><name>operator+</name></member>
      <member refid="classGecode_1_1ArgArray_1a300a3e20a1acdfe7ea36e43aea341021" prot="public" virt="non-virtual"><scope>Gecode::ArgArray</scope><name>operator+</name></member>
      <member refid="classGecode_1_1ArgArray_1a847d763922f171759a6d83c1205343b8" prot="public" virt="non-virtual"><scope>Gecode::ArgArray</scope><name>operator+</name></member>
      <member refid="classGecode_1_1ArgArray_1afb6ef8dd8e1562be2f5b4d9a2a20808e" prot="public" virt="non-virtual"><scope>Gecode::ArgArray</scope><name>operator+</name></member>
      <member refid="classGecode_1_1ArgArray_1a3653e6d20a9a233f5a83342cb77df7f4" prot="public" virt="non-virtual"><scope>Gecode::ArgArray</scope><name>operator&lt;&lt;</name></member>
      <member refid="classGecode_1_1ArgArray_1a7dc92b81d9cc3d0103ffaa3fd503389d" prot="public" virt="non-virtual"><scope>Gecode::ArgArray</scope><name>operator&lt;&lt;</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1a434ab9157f5572d9ebd9f16c741d4bec" prot="public" virt="non-virtual" ambiguityscope="Gecode::ArgArrayBase::"><scope>Gecode::ArgArray</scope><name>operator&lt;&lt;</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1a7a164914ff7e98d30c7682772c28c755" prot="public" virt="non-virtual"><scope>Gecode::ArgArray</scope><name>operator=</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1a3374c5468b4a8d6fc80c1b7059b62b1a" prot="public" virt="non-virtual"><scope>Gecode::ArgArray</scope><name>operator[]</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1a7d93ce4e7a605a9a450326683831d54a" prot="public" virt="non-virtual"><scope>Gecode::ArgArray</scope><name>operator[]</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1ab3bc773d03a61dd0c04283e749ec0ed2" prot="public" virt="non-virtual"><scope>Gecode::ArgArray</scope><name>pointer</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1aaf6d78bac5609f86601dfb22131bc866" prot="public" virt="non-virtual"><scope>Gecode::ArgArray</scope><name>rbegin</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1a71af78d1d4adeb593e14add9fbc2135a" prot="public" virt="non-virtual"><scope>Gecode::ArgArray</scope><name>rbegin</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1ad0298b4768b0e53ce8ef13f80789ac18" prot="public" virt="non-virtual"><scope>Gecode::ArgArray</scope><name>reference</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1aa6fcebbdd86271d362383f71a3fdbd26" prot="public" virt="non-virtual"><scope>Gecode::ArgArray</scope><name>rend</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1a8c876fa6c631f6d9685ee44194628f6c" prot="public" virt="non-virtual"><scope>Gecode::ArgArray</scope><name>rend</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1a8ed2c153f6a9481eac03f81fc1eb6b14" prot="protected" virt="non-virtual"><scope>Gecode::ArgArray</scope><name>resize</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1a77d09762f3b2d7c017a1c66530c30ba5" prot="public" virt="non-virtual"><scope>Gecode::ArgArray</scope><name>reverse_iterator</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1a5cd6f91808d5560f28f05b75be65ab1d" prot="public" virt="non-virtual"><scope>Gecode::ArgArray</scope><name>size</name></member>
      <member refid="classGecode_1_1ArgArray_1a5742aff4e6d84c544e578589fbfccfa7" prot="public" virt="non-virtual"><scope>Gecode::ArgArray</scope><name>slice</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1a56a36e2a609ea57109c79d43890d62ef" prot="public" virt="non-virtual"><scope>Gecode::ArgArray</scope><name>value_type</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1ab397c8c20972f2bc8d3b53e46145cb24" prot="public" virt="non-virtual"><scope>Gecode::ArgArray</scope><name>~ArgArrayBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
