<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classGecode_1_1BAB" kind="class" prot="public">
    <compoundname>Gecode::BAB</compoundname>
    <basecompoundref refid="classGecode_1_1EngineBase" prot="public" virt="non-virtual">Gecode::EngineBase</basecompoundref>
    <includes refid="search_8hh" local="no">search.hh</includes>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classGecode_1_1BAB_1a517bd5ff0cb8f86d4c38f32ca3b6f263" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::BAB&lt; T &gt;::BAB</definition>
        <argsstring>(T *s, const Search::Options &amp;o=Search::Options::def)</argsstring>
        <name>BAB</name>
        <param>
          <type>T *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1Search_1_1Options" kindref="compound">Search::Options</ref> &amp;</type>
          <declname>o</declname>
          <defval><ref refid="classGecode_1_1Search_1_1Options_1a728fe5135c29f829246e5db81bc81f7f" kindref="member">Search::Options::def</ref></defval>
        </param>
        <briefdescription>
<para>Initialize engine for space <emphasis>s</emphasis> and options <emphasis>o</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/search.hh" line="528" column="1" bodyfile="/usr/include/gecode/search/bab.hpp" bodystart="51" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1BAB_1a56978a4a4f449e6df1364c357aaa6fcc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T *</type>
        <definition>forceinline T * Gecode::BAB&lt; T &gt;::next</definition>
        <argsstring>(void)</argsstring>
        <name>next</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return next better solution (NULL, if none exists or search has been stopped) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/search.hh" line="530" column="1" bodyfile="/usr/include/gecode/search/bab.hpp" bodystart="56" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1BAB_1a2961068bc462fabf097473ac0e882ed6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGecode_1_1Search_1_1Statistics" kindref="compound">Search::Statistics</ref></type>
        <definition>forceinline Search::Statistics Gecode::BAB&lt; T &gt;::statistics</definition>
        <argsstring>(void) const </argsstring>
        <name>statistics</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return statistics. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/search.hh" line="532" column="1" bodyfile="/usr/include/gecode/search/bab.hpp" bodystart="62" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1BAB_1a6da01b86b6d22408becc4789b3a059a9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::BAB&lt; T &gt;::stopped</definition>
        <argsstring>(void) const </argsstring>
        <name>stopped</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Check whether engine has been stopped. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/search.hh" line="534" column="1" bodyfile="/usr/include/gecode/search/bab.hpp" bodystart="68" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1BAB_1a7f4501bd11dfc15268495fe6632eac5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGecode_1_1NoGoods" kindref="compound">NoGoods</ref> &amp;</type>
        <definition>forceinline NoGoods &amp; Gecode::BAB&lt; T &gt;::nogoods</definition>
        <argsstring>(void)</argsstring>
        <name>nogoods</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return no-goods. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/search.hh" line="536" column="1" bodyfile="/usr/include/gecode/search/bab.hpp" bodystart="74" bodyend="76"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Depth-first branch-and-bound search engine. </para>    </briefdescription>
    <detaileddescription>
<para>Additionally, <emphasis>s</emphasis> must implement a member function <programlisting><codeline><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>constrain(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>t)<sp/></highlight></codeline>
</programlisting> Whenever exploration requires to add a constraint to the space <emphasis>c</emphasis> currently being explored, the engine executes <computeroutput>c.constrain(t)</computeroutput> where <emphasis>t</emphasis> is the so-far best solution. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="984">
        <label>Gecode::BAB&lt; T &gt;</label>
        <link refid="classGecode_1_1BAB"/>
        <childnode refid="985" relation="public-inheritance">
        </childnode>
      </node>
      <node id="985">
        <label>Gecode::EngineBase</label>
        <link refid="classGecode_1_1EngineBase"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="986">
        <label>Gecode::BAB&lt; T &gt;</label>
        <link refid="classGecode_1_1BAB"/>
        <childnode refid="987" relation="public-inheritance">
        </childnode>
      </node>
      <node id="987">
        <label>Gecode::EngineBase</label>
        <link refid="classGecode_1_1EngineBase"/>
        <childnode refid="988" relation="usage">
          <edgelabel>e</edgelabel>
        </childnode>
      </node>
      <node id="988">
        <label>Gecode::Search::Engine</label>
        <link refid="classGecode_1_1Search_1_1Engine"/>
      </node>
    </collaborationgraph>
    <location file="/usr/include/gecode/search.hh" line="525" column="1" bodyfile="/usr/include/gecode/search.hh" bodystart="525" bodyend="537"/>
    <listofallmembers>
      <member refid="classGecode_1_1BAB_1a517bd5ff0cb8f86d4c38f32ca3b6f263" prot="public" virt="non-virtual"><scope>Gecode::BAB</scope><name>BAB</name></member>
      <member refid="classGecode_1_1EngineBase_1aad42a01412e5ed2623cfeb52c4b09e82" prot="protected" virt="non-virtual"><scope>Gecode::BAB</scope><name>e</name></member>
      <member refid="classGecode_1_1EngineBase_1af4d765d70c5acafc444eaae03bcc658f" prot="protected" virt="non-virtual"><scope>Gecode::BAB</scope><name>EngineBase</name></member>
      <member refid="classGecode_1_1BAB_1a56978a4a4f449e6df1364c357aaa6fcc" prot="public" virt="non-virtual"><scope>Gecode::BAB</scope><name>next</name></member>
      <member refid="classGecode_1_1BAB_1a7f4501bd11dfc15268495fe6632eac5b" prot="public" virt="non-virtual"><scope>Gecode::BAB</scope><name>nogoods</name></member>
      <member refid="classGecode_1_1BAB_1a2961068bc462fabf097473ac0e882ed6" prot="public" virt="non-virtual"><scope>Gecode::BAB</scope><name>statistics</name></member>
      <member refid="classGecode_1_1BAB_1a6da01b86b6d22408becc4789b3a059a9" prot="public" virt="non-virtual"><scope>Gecode::BAB</scope><name>stopped</name></member>
      <member refid="classGecode_1_1EngineBase_1a81e38a477373df7e3d2c9afa26443614" prot="protected" virt="non-virtual"><scope>Gecode::BAB</scope><name>~EngineBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
