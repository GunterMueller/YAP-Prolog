<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classGecode_1_1Int_1_1Linear_1_1LinTer" kind="class" prot="public">
    <compoundname>Gecode::Int::Linear::LinTer</compoundname>
    <basecompoundref refid="classGecode_1_1Propagator" prot="public" virt="non-virtual">Gecode::Propagator</basecompoundref>
    <includes refid="int_2linear_8hh" local="no">linear.hh</includes>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>Val</declname>
        <defname>Val</defname>
      </param>
      <param>
        <type>class</type>
        <declname>A</declname>
        <defname>A</defname>
      </param>
      <param>
        <type>class</type>
        <declname>B</declname>
        <defname>B</defname>
      </param>
      <param>
        <type>class</type>
        <declname>C</declname>
        <defname>C</defname>
      </param>
      <param>
        <type><ref refid="group__TaskVarMEPC_1gad24536e327a507a903179b6a5efd2e3d" kindref="member">PropCond</ref></type>
        <declname>pc</declname>
        <defname>pc</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classGecode_1_1Int_1_1Linear_1_1LinTer_1a59115704c03fd84da5b9261979cda130" prot="protected" static="no" mutable="no">
        <type>A</type>
        <definition>A Gecode::Int::Linear::LinTer&lt; Val, A, B, C, pc &gt;::x0</definition>
        <argsstring></argsstring>
        <name>x0</name>
        <briefdescription>
<para>View of type <emphasis>A</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/linear.hh" line="349" column="1" bodyfile="/usr/include/gecode/int/linear.hh" bodystart="349" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Int_1_1Linear_1_1LinTer_1af64c51fd91b2acf67734702937360e6e" prot="protected" static="no" mutable="no">
        <type>B</type>
        <definition>B Gecode::Int::Linear::LinTer&lt; Val, A, B, C, pc &gt;::x1</definition>
        <argsstring></argsstring>
        <name>x1</name>
        <briefdescription>
<para>View of type <emphasis>B</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/linear.hh" line="351" column="1" bodyfile="/usr/include/gecode/int/linear.hh" bodystart="351" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Int_1_1Linear_1_1LinTer_1a19638d44e6cb04ec8a0649d2a3be34bb" prot="protected" static="no" mutable="no">
        <type>C</type>
        <definition>C Gecode::Int::Linear::LinTer&lt; Val, A, B, C, pc &gt;::x2</definition>
        <argsstring></argsstring>
        <name>x2</name>
        <briefdescription>
<para>View of type <emphasis>C</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/linear.hh" line="353" column="1" bodyfile="/usr/include/gecode/int/linear.hh" bodystart="353" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Int_1_1Linear_1_1LinTer_1a8073b110daea01fb863af6745e649429" prot="protected" static="no" mutable="no">
        <type>Val</type>
        <definition>Val Gecode::Int::Linear::LinTer&lt; Val, A, B, C, pc &gt;::c</definition>
        <argsstring></argsstring>
        <name>c</name>
        <briefdescription>
<para>Value of type <emphasis>Val</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/linear.hh" line="355" column="1" bodyfile="/usr/include/gecode/int/linear.hh" bodystart="355" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classGecode_1_1Int_1_1Linear_1_1LinTer_1a6ad30f75a65fbdf30ae102d8dc6e065d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Int::Linear::LinTer&lt; Val, A, B, C, pc &gt;::LinTer</definition>
        <argsstring>(Space &amp;home, bool share, LinTer &amp;p)</argsstring>
        <name>LinTer</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>share</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1Linear_1_1LinTer" kindref="compound">LinTer</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Constructor for cloning <emphasis>p</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/linear.hh" line="357" column="1" bodyfile="/usr/include/gecode/int/linear/int-ter.hpp" bodystart="55" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Linear_1_1LinTer_1a80d4b906538983306f718aa4b7d13307" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Int::Linear::LinTer&lt; Val, A, B, C, pc &gt;::LinTer</definition>
        <argsstring>(Home home, A x0, B x1, C x2, Val c)</argsstring>
        <name>LinTer</name>
        <param>
          <type><ref refid="classGecode_1_1Home" kindref="compound">Home</ref></type>
          <declname>home</declname>
        </param>
        <param>
          <type>A</type>
          <declname>x0</declname>
        </param>
        <param>
          <type>B</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>C</type>
          <declname>x2</declname>
        </param>
        <param>
          <type>Val</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Constructor for creation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/linear.hh" line="359" column="1" bodyfile="/usr/include/gecode/int/linear/int-ter.hpp" bodystart="46" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Linear_1_1LinTer_1a4c1ea9e2e79a48d8b1383392f28c57e4" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Int::Linear::LinTer&lt; Val, A, B, C, pc &gt;::LinTer</definition>
        <argsstring>(Space &amp;home, bool share, Propagator &amp;p, A x0, B x1, C x2, Val c)</argsstring>
        <name>LinTer</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>share</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Propagator" kindref="compound">Propagator</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>A</type>
          <declname>x0</declname>
        </param>
        <param>
          <type>B</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>C</type>
          <declname>x2</declname>
        </param>
        <param>
          <type>Val</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Constructor for rewriting <emphasis>p</emphasis> during cloning. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/linear.hh" line="361" column="1" bodyfile="/usr/include/gecode/int/linear/int-ter.hpp" bodystart="65" bodyend="71"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classGecode_1_1Int_1_1Linear_1_1LinTer_1a16035b8b087f4d381299fbc4e7d71f46" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classGecode_1_1PropCost" kindref="compound">PropCost</ref></type>
        <definition>PropCost Gecode::Int::Linear::LinTer&lt; Val, A, B, C, pc &gt;::cost</definition>
        <argsstring>(const Space &amp;home, const ModEventDelta &amp;med) const </argsstring>
        <name>cost</name>
        <reimplements refid="classGecode_1_1Propagator_1a3de049f07a191fb956c9dbd4153efe75">cost</reimplements>
        <param>
          <type>const <ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceGecode_1a129e41c1d037528010d7b6706495a560" kindref="member">ModEventDelta</ref> &amp;</type>
          <declname>med</declname>
        </param>
        <briefdescription>
<para>Cost function (defined as low ternary) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/linear.hh" line="364" column="1" bodyfile="/usr/include/gecode/int/linear/int-ter.hpp" bodystart="75" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Linear_1_1LinTer_1a782203cef789addc69a9b0bb72c72c36" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>size_t</type>
        <definition>forceinline size_t Gecode::Int::Linear::LinTer&lt; Val, A, B, C, pc &gt;::dispose</definition>
        <argsstring>(Space &amp;home)</argsstring>
        <name>dispose</name>
        <reimplements refid="classGecode_1_1Actor_1a143253b3eceda40f36834e38c8ac05d9">dispose</reimplements>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <briefdescription>
<para>Delete propagator and return its size. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/linear.hh" line="366" column="1" bodyfile="/usr/include/gecode/int/linear/int-ter.hpp" bodystart="81" bodyend="87"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Base-class for ternary linear propagators. </para>    </briefdescription>
    <detaileddescription>
<para>The type <emphasis>Val</emphasis> can be either <computeroutput>long</computeroutput> long int or <computeroutput>int</computeroutput>, defining the numerical precision during propagation. The types <emphasis>A</emphasis>, <emphasis>B</emphasis>, and <emphasis>C</emphasis> give the types of the views.</para><para>The propagation condition <emphasis>pc</emphasis> refers to all three views. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="3414">
        <label>Gecode::Int::Linear::LinTer&lt; Val, A, B, C, pc &gt;</label>
        <link refid="classGecode_1_1Int_1_1Linear_1_1LinTer"/>
        <childnode refid="3415" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3415">
        <label>Gecode::Propagator</label>
        <link refid="classGecode_1_1Propagator"/>
        <childnode refid="3416" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3416">
        <label>Gecode::Actor</label>
        <link refid="classGecode_1_1Actor"/>
        <childnode refid="3417" relation="private-inheritance">
        </childnode>
      </node>
      <node id="3417">
        <label>Gecode::ActorLink</label>
        <link refid="classGecode_1_1ActorLink"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3423">
        <label>A</label>
      </node>
      <node id="3424">
        <label>B</label>
      </node>
      <node id="3425">
        <label>C</label>
      </node>
      <node id="3418">
        <label>Gecode::Int::Linear::LinTer&lt; Val, A, B, C, pc &gt;</label>
        <link refid="classGecode_1_1Int_1_1Linear_1_1LinTer"/>
        <childnode refid="3419" relation="public-inheritance">
        </childnode>
        <childnode refid="3422" relation="usage">
          <edgelabel>c</edgelabel>
        </childnode>
        <childnode refid="3423" relation="usage">
          <edgelabel>x0</edgelabel>
        </childnode>
        <childnode refid="3424" relation="usage">
          <edgelabel>x1</edgelabel>
        </childnode>
        <childnode refid="3425" relation="usage">
          <edgelabel>x2</edgelabel>
        </childnode>
      </node>
      <node id="3422">
        <label>Val</label>
      </node>
      <node id="3419">
        <label>Gecode::Propagator</label>
        <link refid="classGecode_1_1Propagator"/>
        <childnode refid="3420" relation="public-inheritance">
        </childnode>
        <childnode refid="3421" relation="usage">
          <edgelabel>advisors</edgelabel>
        </childnode>
      </node>
      <node id="3420">
        <label>Gecode::Actor</label>
        <link refid="classGecode_1_1Actor"/>
        <childnode refid="3421" relation="private-inheritance">
        </childnode>
      </node>
      <node id="3421">
        <label>Gecode::ActorLink</label>
        <link refid="classGecode_1_1ActorLink"/>
      </node>
    </collaborationgraph>
    <location file="/usr/include/gecode/int/linear.hh" line="346" column="1" bodyfile="/usr/include/gecode/int/linear.hh" bodystart="346" bodyend="367"/>
    <listofallmembers>
      <member refid="classGecode_1_1Propagator_1a55629f061a0fd8ecb2a4c41aa1568e28" prot="public" virt="virtual"><scope>Gecode::Int::Linear::LinTer</scope><name>advise</name></member>
      <member refid="classGecode_1_1Propagator_1afee33d8aed2bc9debee126f17b5015cf" prot="public" virt="non-virtual"><scope>Gecode::Int::Linear::LinTer</scope><name>advisors</name></member>
      <member refid="classGecode_1_1Propagator_1a593de773d2204f47ea365a99df2f75d0" prot="public" virt="non-virtual"><scope>Gecode::Int::Linear::LinTer</scope><name>afc</name></member>
      <member refid="classGecode_1_1Int_1_1Linear_1_1LinTer_1a8073b110daea01fb863af6745e649429" prot="protected" virt="non-virtual"><scope>Gecode::Int::Linear::LinTer</scope><name>c</name></member>
      <member refid="classGecode_1_1ActorLink_1a8427f41a27a72b52ceb52d0fdad21063" prot="public" virt="non-virtual" ambiguityscope="Gecode::ActorLink::"><scope>Gecode::Int::Linear::LinTer</scope><name>cast</name></member>
      <member refid="classGecode_1_1ActorLink_1a464526456db41981f82a1193a8b4e569" prot="public" virt="non-virtual" ambiguityscope="Gecode::ActorLink::"><scope>Gecode::Int::Linear::LinTer</scope><name>cast</name></member>
      <member refid="classGecode_1_1Actor_1a67b240e2810720846c3632c94cc9c99d" prot="public" virt="pure-virtual"><scope>Gecode::Int::Linear::LinTer</scope><name>copy</name></member>
      <member refid="classGecode_1_1Int_1_1Linear_1_1LinTer_1a16035b8b087f4d381299fbc4e7d71f46" prot="public" virt="virtual"><scope>Gecode::Int::Linear::LinTer</scope><name>cost</name></member>
      <member refid="classGecode_1_1Int_1_1Linear_1_1LinTer_1a782203cef789addc69a9b0bb72c72c36" prot="public" virt="virtual"><scope>Gecode::Int::Linear::LinTer</scope><name>dispose</name></member>
      <member refid="classGecode_1_1Propagator_1a3b286c7aec9843b60a531b495015b5f7" prot="protected" virt="non-virtual"><scope>Gecode::Int::Linear::LinTer</scope><name>fwd</name></member>
      <member refid="classGecode_1_1Int_1_1Linear_1_1LinTer_1a6ad30f75a65fbdf30ae102d8dc6e065d" prot="protected" virt="non-virtual"><scope>Gecode::Int::Linear::LinTer</scope><name>LinTer</name></member>
      <member refid="classGecode_1_1Int_1_1Linear_1_1LinTer_1a80d4b906538983306f718aa4b7d13307" prot="protected" virt="non-virtual"><scope>Gecode::Int::Linear::LinTer</scope><name>LinTer</name></member>
      <member refid="classGecode_1_1Int_1_1Linear_1_1LinTer_1a4c1ea9e2e79a48d8b1383392f28c57e4" prot="protected" virt="non-virtual"><scope>Gecode::Int::Linear::LinTer</scope><name>LinTer</name></member>
      <member refid="classGecode_1_1Propagator_1ae9dfa55e47e4ff8e0c8e4c2a6efdbfc0" prot="public" virt="non-virtual"><scope>Gecode::Int::Linear::LinTer</scope><name>med</name></member>
      <member refid="classGecode_1_1Propagator_1a4905db55af49af8f38558bdbcf5fd4a2" prot="public" virt="non-virtual"><scope>Gecode::Int::Linear::LinTer</scope><name>modeventdelta</name></member>
      <member refid="classGecode_1_1Actor_1a388f671145dcf906f81d22bde2dc0f3d" prot="public" virt="non-virtual"><scope>Gecode::Int::Linear::LinTer</scope><name>operator delete</name></member>
      <member refid="classGecode_1_1Actor_1ac28b9601b530076a1bda75834487f898" prot="public" virt="non-virtual"><scope>Gecode::Int::Linear::LinTer</scope><name>operator new</name></member>
      <member refid="classGecode_1_1Propagator_1ad2dc98c1345222892592339948c6cde1" prot="public" virt="pure-virtual"><scope>Gecode::Int::Linear::LinTer</scope><name>propagate</name></member>
      <member refid="classGecode_1_1Propagator_1a891f3e84cde2e8e60f8ad9340ad74b05" prot="protected" virt="non-virtual"><scope>Gecode::Int::Linear::LinTer</scope><name>Propagator</name></member>
      <member refid="classGecode_1_1Propagator_1afeaeed8dae67de4313858bd82fdae5d0" prot="protected" virt="non-virtual"><scope>Gecode::Int::Linear::LinTer</scope><name>Propagator</name></member>
      <member refid="classGecode_1_1Propagator_1a1781b5b0df38c39dddca4b44c3a00530" prot="public" virt="non-virtual"><scope>Gecode::Int::Linear::LinTer</scope><name>size</name></member>
      <member refid="classGecode_1_1Int_1_1Linear_1_1LinTer_1a59115704c03fd84da5b9261979cda130" prot="protected" virt="non-virtual"><scope>Gecode::Int::Linear::LinTer</scope><name>x0</name></member>
      <member refid="classGecode_1_1Int_1_1Linear_1_1LinTer_1af64c51fd91b2acf67734702937360e6e" prot="protected" virt="non-virtual"><scope>Gecode::Int::Linear::LinTer</scope><name>x1</name></member>
      <member refid="classGecode_1_1Int_1_1Linear_1_1LinTer_1a19638d44e6cb04ec8a0649d2a3be34bb" prot="protected" virt="non-virtual"><scope>Gecode::Int::Linear::LinTer</scope><name>x2</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
