<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classGecode_1_1Set_1_1SetView" kind="class" prot="public">
    <compoundname>Gecode::Set::SetView</compoundname>
    <basecompoundref refid="classGecode_1_1VarImpView" prot="public" virt="non-virtual">Gecode::VarImpView&lt; SetVar &gt;</basecompoundref>
    <includes refid="set_2view_8hpp" local="no">view.hpp</includes>
      <sectiondef kind="user-defined">
      <header>Constructors and initialization</header>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetView_1acb3ee3ea402a9031a5995839fb941755" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Set::SetView::SetView</definition>
        <argsstring>(void)</argsstring>
        <name>SetView</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="67" column="1" bodyfile="/usr/include/gecode/set/view/set.hpp" bodystart="52" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetView_1a9c6d021efd9880ba1a6ef250165e209d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Set::SetView::SetView</definition>
        <argsstring>(const SetVar &amp;y)</argsstring>
        <name>SetView</name>
        <param>
          <type>const <ref refid="classGecode_1_1SetVar" kindref="compound">SetVar</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Initialize from set variable <emphasis>y</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="69" column="1" bodyfile="/usr/include/gecode/set/view/set.hpp" bodystart="54" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetView_1a21d9e6cb419949bb817e22c5da57a1d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Set::SetView::SetView</definition>
        <argsstring>(SetVarImp *y)</argsstring>
        <name>SetView</name>
        <param>
          <type><ref refid="classGecode_1_1Set_1_1SetVarImp" kindref="compound">SetVarImp</ref> *</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Initialize from set variable implementation <emphasis>y</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="71" column="1" bodyfile="/usr/include/gecode/set/view/set.hpp" bodystart="57" bodyend="58"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Value access</header>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetView_1a2435ad03797438be8beb4acd8b72488b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>forceinline unsigned int Gecode::Set::SetView::cardMin</definition>
        <argsstring>(void) const </argsstring>
        <name>cardMin</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return minimum cardinality. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="78" column="1" bodyfile="/usr/include/gecode/set/view/set.hpp" bodystart="86" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetView_1ad30d079432ed4d01fbeb1dcaeb8921e4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>forceinline unsigned int Gecode::Set::SetView::cardMax</definition>
        <argsstring>(void) const </argsstring>
        <name>cardMax</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return maximum cardinality. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="80" column="1" bodyfile="/usr/include/gecode/set/view/set.hpp" bodystart="90" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetView_1a4b1f5bc41117071fc7d0379e91017d1b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Set::SetView::lubMin</definition>
        <argsstring>(void) const </argsstring>
        <name>lubMin</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return minimum of the least upper bound. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="82" column="1" bodyfile="/usr/include/gecode/set/view/set.hpp" bodystart="94" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetView_1a04c6172c2ad24b589facd2c6daccf748" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Set::SetView::lubMax</definition>
        <argsstring>(void) const </argsstring>
        <name>lubMax</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return maximum of the least upper bound. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="84" column="1" bodyfile="/usr/include/gecode/set/view/set.hpp" bodystart="98" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetView_1aafbe2d448d73f72fd5edce9da8c80f69" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Set::SetView::lubMinN</definition>
        <argsstring>(unsigned int n) const </argsstring>
        <name>lubMinN</name>
        <param>
          <type>unsigned int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Return n-th smallest element of the least upper bound. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="86" column="1" bodyfile="/usr/include/gecode/set/view/set.hpp" bodystart="102" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetView_1a7131265bfbfc8364741658dd95cc7390" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Set::SetView::glbMin</definition>
        <argsstring>(void) const </argsstring>
        <name>glbMin</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return minimum of the greatest lower bound. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="88" column="1" bodyfile="/usr/include/gecode/set/view/set.hpp" bodystart="106" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetView_1afc56799a7b829473add61ddd18c8a7b8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Set::SetView::glbMax</definition>
        <argsstring>(void) const </argsstring>
        <name>glbMax</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return maximum of the greatest lower bound. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="90" column="1" bodyfile="/usr/include/gecode/set/view/set.hpp" bodystart="110" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetView_1ab268174f3ffb1870290b324981162514" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>forceinline unsigned int Gecode::Set::SetView::glbSize</definition>
        <argsstring>(void) const </argsstring>
        <name>glbSize</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return the number of elements in the greatest lower bound. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="93" column="1" bodyfile="/usr/include/gecode/set/view/set.hpp" bodystart="66" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetView_1a6e81d24dcd05c227f043278f43806773" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>forceinline unsigned int Gecode::Set::SetView::lubSize</definition>
        <argsstring>(void) const </argsstring>
        <name>lubSize</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return the number of elements in the least upper bound. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="95" column="1" bodyfile="/usr/include/gecode/set/view/set.hpp" bodystart="70" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetView_1ab9a8d7403dbe725a92989f4d03ca2ded" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>forceinline unsigned int Gecode::Set::SetView::unknownSize</definition>
        <argsstring>(void) const </argsstring>
        <name>unknownSize</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return the number of unknown elements. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="97" column="1" bodyfile="/usr/include/gecode/set/view/set.hpp" bodystart="74" bodyend="76"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Domain tests</header>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetView_1a6b969d42eb9643f6fb9c8439aaa849e2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::Set::SetView::contains</definition>
        <argsstring>(int i) const </argsstring>
        <name>contains</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Test whether <emphasis>i</emphasis> is in the greatest lower bound. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="103" column="1" bodyfile="/usr/include/gecode/set/view/set.hpp" bodystart="78" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetView_1a5a471096560125f77f7ec891c37fe5f2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::Set::SetView::notContains</definition>
        <argsstring>(int i) const </argsstring>
        <name>notContains</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Test whether <emphasis>i</emphasis> is not in the least upper bound. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="105" column="1" bodyfile="/usr/include/gecode/set/view/set.hpp" bodystart="82" bodyend="84"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Domain update by value</header>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetView_1add687e48cd9b34f6d4d2d14e2253f12b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Set::SetView::cardMin</definition>
        <argsstring>(Space &amp;home, unsigned int m)</argsstring>
        <name>cardMin</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Restrict cardinality to be greater than or equal to <emphasis>m</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="112" column="1" bodyfile="/usr/include/gecode/set/view/set.hpp" bodystart="120" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetView_1a1f464f06b5ff33754e6b6b13d359859a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Set::SetView::cardMax</definition>
        <argsstring>(Space &amp;home, unsigned int m)</argsstring>
        <name>cardMax</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Restrict cardinality to be less than or equal to <emphasis>m</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="114" column="1" bodyfile="/usr/include/gecode/set/view/set.hpp" bodystart="125" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetView_1a9364d70bc7dc23b8c687b24125dc0c23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Set::SetView::include</definition>
        <argsstring>(Space &amp;home, int i, int j)</argsstring>
        <name>include</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>Update greatest lower bound to include all elements between and including <emphasis>i</emphasis> and <emphasis>j</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="119" column="1" bodyfile="/usr/include/gecode/set/view/set.hpp" bodystart="130" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetView_1a11d6d0c60a04837bc6ec1956b145affc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Set::SetView::exclude</definition>
        <argsstring>(Space &amp;home, int i, int j)</argsstring>
        <name>exclude</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>Restrict least upper bound to not contain all elements between and including <emphasis>i</emphasis> and <emphasis>j</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="124" column="1" bodyfile="/usr/include/gecode/set/view/set.hpp" bodystart="160" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetView_1ac98a76e474e8bb8d569abd72366c5939" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Set::SetView::include</definition>
        <argsstring>(Space &amp;home, int i)</argsstring>
        <name>include</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Update greatest lower bound to contain <emphasis>i</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="126" column="1" bodyfile="/usr/include/gecode/set/view/set.hpp" bodystart="135" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetView_1a0c96f1147a13dac4e4e7b28840f3cc53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Set::SetView::exclude</definition>
        <argsstring>(Space &amp;home, int i)</argsstring>
        <name>exclude</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Restrict least upper bound to not contain <emphasis>i</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="128" column="1" bodyfile="/usr/include/gecode/set/view/set.hpp" bodystart="140" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetView_1afe40ebafca2b2616e85781dc96ac2dd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Set::SetView::intersect</definition>
        <argsstring>(Space &amp;home, int i, int j)</argsstring>
        <name>intersect</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>Update least upper bound to contain at most all elements between and including <emphasis>i</emphasis> and <emphasis>j</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="133" column="1" bodyfile="/usr/include/gecode/set/view/set.hpp" bodystart="145" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetView_1aefc95abc632969c0943963c2f00839da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Set::SetView::intersect</definition>
        <argsstring>(Space &amp;home, int i)</argsstring>
        <name>intersect</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Update least upper bound to contain at most the element <emphasis>i</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="135" column="1" bodyfile="/usr/include/gecode/set/view/set.hpp" bodystart="150" bodyend="152"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Domain update by range iterator</header>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetView_1adad779040157d77deff728896274dce1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>ModEvent Gecode::Set::SetView::excludeI</definition>
        <argsstring>(Space &amp;home, I &amp;i)</argsstring>
        <name>excludeI</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>I &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Remove range sequence described by <emphasis>i</emphasis> from least upper bound. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="142" column="1" bodyfile="/usr/include/gecode/set/view/set.hpp" bodystart="164" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetView_1aeda1203a701bf25d060849f8a4f37d86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>ModEvent Gecode::Set::SetView::includeI</definition>
        <argsstring>(Space &amp;home, I &amp;i)</argsstring>
        <name>includeI</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>I &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Include range sequence described by <emphasis>i</emphasis> in greatest lower bound. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="144" column="1" bodyfile="/usr/include/gecode/set/view/set.hpp" bodystart="155" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetView_1a3be553b9ccee8845d12aa9378f97f95e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>ModEvent Gecode::Set::SetView::intersectI</definition>
        <argsstring>(Space &amp;home, I &amp;iter)</argsstring>
        <name>intersectI</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>I &amp;</type>
          <declname>iter</declname>
        </param>
        <briefdescription>
<para>Intersect least upper bound with range sequence described by <emphasis>i</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="146" column="1" bodyfile="/usr/include/gecode/set/view/set.hpp" bodystart="168" bodyend="170"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Delta information for advisors</header>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetView_1a4aebded23c847077202a799b5dd2f4b4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Set::SetView::glbMin</definition>
        <argsstring>(const Delta &amp;d) const </argsstring>
        <name>glbMin</name>
        <param>
          <type>const <ref refid="classGecode_1_1Delta" kindref="compound">Delta</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Return minimum value just pruned from glb. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="154" column="1" bodyfile="/usr/include/gecode/set/view/set.hpp" bodystart="182" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetView_1a4a35d95c1a1d5155d45369e529c1511c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Set::SetView::glbMax</definition>
        <argsstring>(const Delta &amp;d) const </argsstring>
        <name>glbMax</name>
        <param>
          <type>const <ref refid="classGecode_1_1Delta" kindref="compound">Delta</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Return maximum value just pruned from glb. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="156" column="1" bodyfile="/usr/include/gecode/set/view/set.hpp" bodystart="185" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetView_1a28c7d02d8deff5667a21f3bd935ff1fe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::Set::SetView::glbAny</definition>
        <argsstring>(const Delta &amp;d) const </argsstring>
        <name>glbAny</name>
        <param>
          <type>const <ref refid="classGecode_1_1Delta" kindref="compound">Delta</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Test whether arbitrary values got pruned from glb. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="158" column="1" bodyfile="/usr/include/gecode/set/view/set.hpp" bodystart="188" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetView_1a9de3dc26cc81a5c1c480f5470129b522" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Set::SetView::lubMin</definition>
        <argsstring>(const Delta &amp;d) const </argsstring>
        <name>lubMin</name>
        <param>
          <type>const <ref refid="classGecode_1_1Delta" kindref="compound">Delta</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Return minimum value just pruned from lub. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="160" column="1" bodyfile="/usr/include/gecode/set/view/set.hpp" bodystart="191" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetView_1a2de2c8a49de4e5457257ecc1120d0ab2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Set::SetView::lubMax</definition>
        <argsstring>(const Delta &amp;d) const </argsstring>
        <name>lubMax</name>
        <param>
          <type>const <ref refid="classGecode_1_1Delta" kindref="compound">Delta</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Return maximum value just pruned from lub. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="162" column="1" bodyfile="/usr/include/gecode/set/view/set.hpp" bodystart="194" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetView_1aa91cd5eb0ce9d02327460f677f9c40a2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::Set::SetView::lubAny</definition>
        <argsstring>(const Delta &amp;d) const </argsstring>
        <name>lubAny</name>
        <param>
          <type>const <ref refid="classGecode_1_1Delta" kindref="compound">Delta</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Test whether arbitrary values got pruned from lub. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="164" column="1" bodyfile="/usr/include/gecode/set/view/set.hpp" bodystart="197" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetView_1a882ef71a21de4c1dbf283edf876a5119" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Set::SetView::modevent</definition>
        <argsstring>(const Delta &amp;d)</argsstring>
        <name>modevent</name>
        <param>
          <type>const <ref refid="classGecode_1_1Delta" kindref="compound">Delta</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Return modification event. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="152" column="1" bodyfile="/usr/include/gecode/set/view/set.hpp" bodystart="179" bodyend="179"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="related">
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetView_1afccaa90d92947223b837c279ff0639c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Char</type>
          </param>
          <param>
            <type>class Traits</type>
          </param>
        </templateparamlist>
        <type>std::basic_ostream&lt; Char, Traits &gt; &amp;</type>
        <definition>std::basic_ostream&lt; Char, Traits &gt; &amp; operator&lt;&lt;</definition>
        <argsstring>(std::basic_ostream&lt; Char, Traits &gt; &amp;os, const SetView &amp;x)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::basic_ostream&lt; Char, Traits &gt; &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1Set_1_1SetView" kindref="compound">SetView</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Print set variable view. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="363" column="1" bodyfile="/usr/include/gecode/set/view/print.hpp" bodystart="85" bodyend="92"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Set view for set variables </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="6467">
        <label>Gecode::Set::SetView</label>
        <link refid="classGecode_1_1Set_1_1SetView"/>
        <childnode refid="6468" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6468">
        <label>Gecode::VarImpView&lt; SetVar &gt;</label>
        <link refid="classGecode_1_1VarImpView"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6469">
        <label>Gecode::Set::SetView</label>
        <link refid="classGecode_1_1Set_1_1SetView"/>
        <childnode refid="6470" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6470">
        <label>Gecode::VarImpView&lt; SetVar &gt;</label>
        <link refid="classGecode_1_1VarImpView"/>
      </node>
    </collaborationgraph>
    <location file="/usr/include/gecode/set/view.hpp" line="60" column="1" bodyfile="/usr/include/gecode/set/view.hpp" bodystart="60" bodyend="166"/>
    <listofallmembers>
      <member refid="classGecode_1_1VarImpView_1a5b16299eecf8f61b8dc0beb8f9bd0beb" prot="public" virt="non-virtual"><scope>Gecode::Set::SetView</scope><name>afc</name></member>
      <member refid="classGecode_1_1VarImpView_1aeee242f0be13f77dc287449dd51e6fd2" prot="public" virt="non-virtual"><scope>Gecode::Set::SetView</scope><name>assigned</name></member>
      <member refid="classGecode_1_1VarImpView_1af550f46509ae9dc6ebe600239da76455" prot="public" virt="non-virtual"><scope>Gecode::Set::SetView</scope><name>cancel</name></member>
      <member refid="classGecode_1_1VarImpView_1a4f1906b462d6d5b8a01fbf76853d3c4d" prot="public" virt="non-virtual"><scope>Gecode::Set::SetView</scope><name>cancel</name></member>
      <member refid="classGecode_1_1Set_1_1SetView_1ad30d079432ed4d01fbeb1dcaeb8921e4" prot="public" virt="non-virtual"><scope>Gecode::Set::SetView</scope><name>cardMax</name></member>
      <member refid="classGecode_1_1Set_1_1SetView_1a1f464f06b5ff33754e6b6b13d359859a" prot="public" virt="non-virtual"><scope>Gecode::Set::SetView</scope><name>cardMax</name></member>
      <member refid="classGecode_1_1Set_1_1SetView_1a2435ad03797438be8beb4acd8b72488b" prot="public" virt="non-virtual"><scope>Gecode::Set::SetView</scope><name>cardMin</name></member>
      <member refid="classGecode_1_1Set_1_1SetView_1add687e48cd9b34f6d4d2d14e2253f12b" prot="public" virt="non-virtual"><scope>Gecode::Set::SetView</scope><name>cardMin</name></member>
      <member refid="classGecode_1_1Set_1_1SetView_1a6b969d42eb9643f6fb9c8439aaa849e2" prot="public" virt="non-virtual"><scope>Gecode::Set::SetView</scope><name>contains</name></member>
      <member refid="classGecode_1_1VarImpView_1aee7a33d9250e05396237e837ea9a308e" prot="public" virt="non-virtual"><scope>Gecode::Set::SetView</scope><name>degree</name></member>
      <member refid="classGecode_1_1Set_1_1SetView_1a11d6d0c60a04837bc6ec1956b145affc" prot="public" virt="non-virtual"><scope>Gecode::Set::SetView</scope><name>exclude</name></member>
      <member refid="classGecode_1_1Set_1_1SetView_1a0c96f1147a13dac4e4e7b28840f3cc53" prot="public" virt="non-virtual"><scope>Gecode::Set::SetView</scope><name>exclude</name></member>
      <member refid="classGecode_1_1Set_1_1SetView_1adad779040157d77deff728896274dce1" prot="public" virt="non-virtual"><scope>Gecode::Set::SetView</scope><name>excludeI</name></member>
      <member refid="classGecode_1_1Set_1_1SetView_1a28c7d02d8deff5667a21f3bd935ff1fe" prot="public" virt="non-virtual"><scope>Gecode::Set::SetView</scope><name>glbAny</name></member>
      <member refid="classGecode_1_1Set_1_1SetView_1afc56799a7b829473add61ddd18c8a7b8" prot="public" virt="non-virtual"><scope>Gecode::Set::SetView</scope><name>glbMax</name></member>
      <member refid="classGecode_1_1Set_1_1SetView_1a4a35d95c1a1d5155d45369e529c1511c" prot="public" virt="non-virtual"><scope>Gecode::Set::SetView</scope><name>glbMax</name></member>
      <member refid="classGecode_1_1Set_1_1SetView_1a7131265bfbfc8364741658dd95cc7390" prot="public" virt="non-virtual"><scope>Gecode::Set::SetView</scope><name>glbMin</name></member>
      <member refid="classGecode_1_1Set_1_1SetView_1a4aebded23c847077202a799b5dd2f4b4" prot="public" virt="non-virtual"><scope>Gecode::Set::SetView</scope><name>glbMin</name></member>
      <member refid="classGecode_1_1Set_1_1SetView_1ab268174f3ffb1870290b324981162514" prot="public" virt="non-virtual"><scope>Gecode::Set::SetView</scope><name>glbSize</name></member>
      <member refid="classGecode_1_1Set_1_1SetView_1a9364d70bc7dc23b8c687b24125dc0c23" prot="public" virt="non-virtual"><scope>Gecode::Set::SetView</scope><name>include</name></member>
      <member refid="classGecode_1_1Set_1_1SetView_1ac98a76e474e8bb8d569abd72366c5939" prot="public" virt="non-virtual"><scope>Gecode::Set::SetView</scope><name>include</name></member>
      <member refid="classGecode_1_1Set_1_1SetView_1aeda1203a701bf25d060849f8a4f37d86" prot="public" virt="non-virtual"><scope>Gecode::Set::SetView</scope><name>includeI</name></member>
      <member refid="classGecode_1_1Set_1_1SetView_1afe40ebafca2b2616e85781dc96ac2dd0" prot="public" virt="non-virtual"><scope>Gecode::Set::SetView</scope><name>intersect</name></member>
      <member refid="classGecode_1_1Set_1_1SetView_1aefc95abc632969c0943963c2f00839da" prot="public" virt="non-virtual"><scope>Gecode::Set::SetView</scope><name>intersect</name></member>
      <member refid="classGecode_1_1Set_1_1SetView_1a3be553b9ccee8845d12aa9378f97f95e" prot="public" virt="non-virtual"><scope>Gecode::Set::SetView</scope><name>intersectI</name></member>
      <member refid="classGecode_1_1Set_1_1SetView_1aa91cd5eb0ce9d02327460f677f9c40a2" prot="public" virt="non-virtual"><scope>Gecode::Set::SetView</scope><name>lubAny</name></member>
      <member refid="classGecode_1_1Set_1_1SetView_1a04c6172c2ad24b589facd2c6daccf748" prot="public" virt="non-virtual"><scope>Gecode::Set::SetView</scope><name>lubMax</name></member>
      <member refid="classGecode_1_1Set_1_1SetView_1a2de2c8a49de4e5457257ecc1120d0ab2" prot="public" virt="non-virtual"><scope>Gecode::Set::SetView</scope><name>lubMax</name></member>
      <member refid="classGecode_1_1Set_1_1SetView_1a4b1f5bc41117071fc7d0379e91017d1b" prot="public" virt="non-virtual"><scope>Gecode::Set::SetView</scope><name>lubMin</name></member>
      <member refid="classGecode_1_1Set_1_1SetView_1a9de3dc26cc81a5c1c480f5470129b522" prot="public" virt="non-virtual"><scope>Gecode::Set::SetView</scope><name>lubMin</name></member>
      <member refid="classGecode_1_1Set_1_1SetView_1aafbe2d448d73f72fd5edce9da8c80f69" prot="public" virt="non-virtual"><scope>Gecode::Set::SetView</scope><name>lubMinN</name></member>
      <member refid="classGecode_1_1Set_1_1SetView_1a6e81d24dcd05c227f043278f43806773" prot="public" virt="non-virtual"><scope>Gecode::Set::SetView</scope><name>lubSize</name></member>
      <member refid="classGecode_1_1VarImpView_1a6dced43c3bf8befaf8cd27dbd53bf24c" prot="public" virt="non-virtual"><scope>Gecode::Set::SetView</scope><name>me</name></member>
      <member refid="classGecode_1_1VarImpView_1a0e39dd0cf9bbe352c819c3fd4babe00b" prot="public" virt="non-virtual"><scope>Gecode::Set::SetView</scope><name>med</name></member>
      <member refid="classGecode_1_1Set_1_1SetView_1a882ef71a21de4c1dbf283edf876a5119" prot="public" virt="non-virtual"><scope>Gecode::Set::SetView</scope><name>modevent</name></member>
      <member refid="classGecode_1_1Set_1_1SetView_1a5a471096560125f77f7ec891c37fe5f2" prot="public" virt="non-virtual"><scope>Gecode::Set::SetView</scope><name>notContains</name></member>
      <member refid="classGecode_1_1Set_1_1SetView_1afccaa90d92947223b837c279ff0639c7" prot="public" virt="non-virtual"><scope>Gecode::Set::SetView</scope><name>operator&lt;&lt;</name></member>
      <member refid="classGecode_1_1VarImpView_1a9861f2a94658e8d7c917367919adc5f6" prot="public" virt="non-virtual"><scope>Gecode::Set::SetView</scope><name>schedule</name></member>
      <member refid="classGecode_1_1Set_1_1SetView_1acb3ee3ea402a9031a5995839fb941755" prot="public" virt="non-virtual"><scope>Gecode::Set::SetView</scope><name>SetView</name></member>
      <member refid="classGecode_1_1Set_1_1SetView_1a9c6d021efd9880ba1a6ef250165e209d" prot="public" virt="non-virtual"><scope>Gecode::Set::SetView</scope><name>SetView</name></member>
      <member refid="classGecode_1_1Set_1_1SetView_1a21d9e6cb419949bb817e22c5da57a1d8" prot="public" virt="non-virtual"><scope>Gecode::Set::SetView</scope><name>SetView</name></member>
      <member refid="classGecode_1_1VarImpView_1a9a475b6d28d2a0f263958aa36a322c50" prot="public" virt="non-virtual"><scope>Gecode::Set::SetView</scope><name>subscribe</name></member>
      <member refid="classGecode_1_1VarImpView_1a6fd19edeff9ba18b8791726ac5e5a149" prot="public" virt="non-virtual"><scope>Gecode::Set::SetView</scope><name>subscribe</name></member>
      <member refid="classGecode_1_1Set_1_1SetView_1ab9a8d7403dbe725a92989f4d03ca2ded" prot="public" virt="non-virtual"><scope>Gecode::Set::SetView</scope><name>unknownSize</name></member>
      <member refid="classGecode_1_1VarImpView_1a5f0569230bea9a229d76eed32716b42a" prot="public" virt="non-virtual"><scope>Gecode::Set::SetView</scope><name>update</name></member>
      <member refid="classGecode_1_1VarImpView_1ad4a4e4dfa41f166978eb9fa1bd15a255" prot="public" virt="non-virtual"><scope>Gecode::Set::SetView</scope><name>varderived</name></member>
      <member refid="classGecode_1_1VarImpView_1a0df1db1c3ac7184748b4e0c74fed40df" prot="public" virt="non-virtual"><scope>Gecode::Set::SetView</scope><name>varimp</name></member>
      <member refid="classGecode_1_1VarImpView_1a425ac8d1c235ca801bcfb0f8afb54765" prot="public" virt="non-virtual"><scope>Gecode::Set::SetView</scope><name>VarImpType</name></member>
      <member refid="classGecode_1_1VarImpView_1aad6311d35eedfdcb341a4f89b14fc666" prot="protected" virt="non-virtual"><scope>Gecode::Set::SetView</scope><name>VarImpView</name></member>
      <member refid="classGecode_1_1VarImpView_1a9affaf70dbab8cca81208453fa895257" prot="protected" virt="non-virtual"><scope>Gecode::Set::SetView</scope><name>VarImpView</name></member>
      <member refid="classGecode_1_1VarImpView_1a0b2acbfe831d91899de6f207aac7ea22" prot="public" virt="non-virtual"><scope>Gecode::Set::SetView</scope><name>VarType</name></member>
      <member refid="classGecode_1_1VarImpView_1af6b0f6f2e4c989a317c6134709c147a7" prot="protected" virt="non-virtual"><scope>Gecode::Set::SetView</scope><name>x</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
