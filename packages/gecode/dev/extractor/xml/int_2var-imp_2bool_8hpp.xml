<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="int_2var-imp_2bool_8hpp" kind="file">
    <compoundname>bool.hpp</compoundname>
    <includedby refid="int_2var-imp_8hpp" local="no">/usr/include/gecode/int/var-imp.hpp</includedby>
    <invincdepgraph>
      <node id="20535">
        <label>/usr/include/gecode/int/nvalues/int-base.hpp</label>
        <link refid="nvalues_2int-base_8hpp_source"/>
        <childnode refid="20527" relation="include">
        </childnode>
      </node>
      <node id="20518">
        <label>/usr/include/gecode/int/arithmetic.hh</label>
        <link refid="int_2arithmetic_8hh_source"/>
      </node>
      <node id="20543">
        <label>/usr/include/gecode/int/view/scale.hpp</label>
        <link refid="int_2view_2scale_8hpp_source"/>
        <childnode refid="20544" relation="include">
        </childnode>
      </node>
      <node id="20541">
        <label>/usr/include/gecode/int/div.hh</label>
        <link refid="div_8hh_source"/>
        <childnode refid="20542" relation="include">
        </childnode>
        <childnode refid="20543" relation="include">
        </childnode>
      </node>
      <node id="20542">
        <label>/usr/include/gecode/int/arithmetic/mult.hpp</label>
        <link refid="int_2arithmetic_2mult_8hpp_source"/>
        <childnode refid="20518" relation="include">
        </childnode>
      </node>
      <node id="20503">
        <label>/usr/include/gecode/flatzinc.hh</label>
        <link refid="flatzinc_8hh_source"/>
        <childnode refid="20504" relation="include">
        </childnode>
        <childnode refid="20505" relation="include">
        </childnode>
      </node>
      <node id="20524">
        <label>/usr/include/gecode/int/gcc/post.hpp</label>
        <link refid="int_2gcc_2post_8hpp_source"/>
        <childnode refid="20525" relation="include">
        </childnode>
      </node>
      <node id="20573">
        <label>/usr/include/gecode/minimodel.hh</label>
        <link refid="minimodel_8hh_source"/>
        <childnode refid="20574" relation="include">
        </childnode>
      </node>
      <node id="20561">
        <label>/usr/include/gecode/int/dom/range.hpp</label>
        <link refid="range_8hpp_source"/>
        <childnode refid="20545" relation="include">
        </childnode>
      </node>
      <node id="20569">
        <label>/usr/include/gecode/int/cumulative.hh</label>
        <link refid="cumulative_8hh_source"/>
      </node>
      <node id="20570">
        <label>/usr/include/gecode/int/unary.hh</label>
        <link refid="unary_8hh_source"/>
        <childnode refid="20569" relation="include">
        </childnode>
      </node>
      <node id="20553">
        <label>/usr/include/gecode/int/no-overlap.hh</label>
        <link refid="no-overlap_8hh_source"/>
      </node>
      <node id="20567">
        <label>/usr/include/gecode/int/support-values.hh</label>
        <link refid="support-values_8hh_source"/>
        <childnode refid="20542" relation="include">
        </childnode>
      </node>
      <node id="20533">
        <label>/usr/include/gecode/int/cumulatives.hh</label>
        <link refid="cumulatives_8hh_source"/>
      </node>
      <node id="20576">
        <label>/usr/include/gecode/set/channel.hh</label>
        <link refid="set_2channel_8hh_source"/>
      </node>
      <node id="20534">
        <label>/usr/include/gecode/int/distinct.hh</label>
        <link refid="int_2distinct_8hh_source"/>
        <childnode refid="20530" relation="include">
        </childnode>
        <childnode refid="20531" relation="include">
        </childnode>
        <childnode refid="20524" relation="include">
        </childnode>
        <childnode refid="20535" relation="include">
        </childnode>
        <childnode refid="20536" relation="include">
        </childnode>
        <childnode refid="20537" relation="include">
        </childnode>
        <childnode refid="20538" relation="include">
        </childnode>
        <childnode refid="20539" relation="include">
        </childnode>
      </node>
      <node id="20512">
        <label>/usr/include/gecode/gist/mainwindow.hh</label>
        <link refid="mainwindow_8hh_source"/>
      </node>
      <node id="20590">
        <label>/usr/include/gecode/set/rel.hh</label>
        <link refid="set_2rel_8hh_source"/>
        <childnode refid="20578" relation="include">
        </childnode>
        <childnode refid="20547" relation="include">
        </childnode>
        <childnode refid="20588" relation="include">
        </childnode>
        <childnode refid="20589" relation="include">
        </childnode>
        <childnode refid="20591" relation="include">
        </childnode>
      </node>
      <node id="20580">
        <label>/usr/include/gecode/set/int.hh</label>
        <link refid="set_2int_8hh_source"/>
      </node>
      <node id="20514">
        <label>/usr/include/gecode/gist/preferences.hh</label>
        <link refid="preferences_8hh_source"/>
      </node>
      <node id="20563">
        <label>/usr/include/gecode/int/member/prop.hpp</label>
        <link refid="member_2prop_8hpp_source"/>
        <childnode refid="20552" relation="include">
        </childnode>
      </node>
      <node id="20548">
        <label>/usr/include/gecode/int/exec.hh</label>
        <link refid="exec_8hh_source"/>
      </node>
      <node id="20555">
        <label>/usr/include/gecode/int/rel.hh</label>
        <link refid="int_2rel_8hh_source"/>
        <childnode refid="20556" relation="include">
        </childnode>
        <childnode refid="20557" relation="include">
        </childnode>
        <childnode refid="20558" relation="include">
        </childnode>
        <childnode refid="20518" relation="include">
        </childnode>
        <childnode refid="20559" relation="include">
        </childnode>
        <childnode refid="20560" relation="include">
        </childnode>
        <childnode refid="20534" relation="include">
        </childnode>
        <childnode refid="20561" relation="include">
        </childnode>
        <childnode refid="20545" relation="include">
        </childnode>
        <childnode refid="20562" relation="include">
        </childnode>
        <childnode refid="20546" relation="include">
        </childnode>
        <childnode refid="20549" relation="include">
        </childnode>
        <childnode refid="20563" relation="include">
        </childnode>
        <childnode refid="20564" relation="include">
        </childnode>
        <childnode refid="20526" relation="include">
        </childnode>
        <childnode refid="20565" relation="include">
        </childnode>
        <childnode refid="20536" relation="include">
        </childnode>
        <childnode refid="20537" relation="include">
        </childnode>
        <childnode refid="20538" relation="include">
        </childnode>
        <childnode refid="20566" relation="include">
        </childnode>
        <childnode refid="20539" relation="include">
        </childnode>
      </node>
      <node id="20574">
        <label>/usr/include/gecode/driver.hh</label>
        <link refid="driver_8hh_source"/>
        <childnode refid="20503" relation="include">
        </childnode>
      </node>
      <node id="20557">
        <label>/usr/include/gecode/int/arithmetic/nroot.hpp</label>
        <link refid="nroot_8hpp_source"/>
        <childnode refid="20518" relation="include">
        </childnode>
      </node>
      <node id="20509">
        <label>/usr/include/gecode/float.hh</label>
        <link refid="float_8hh_source"/>
        <childnode refid="20506" relation="include">
        </childnode>
        <childnode refid="20510" relation="include">
        </childnode>
        <childnode refid="20507" relation="include">
        </childnode>
        <childnode refid="20508" relation="include">
        </childnode>
      </node>
      <node id="20556">
        <label>/usr/include/gecode/int/arithmetic/max.hpp</label>
        <link refid="max_8hpp_source"/>
        <childnode refid="20518" relation="include">
        </childnode>
      </node>
      <node id="20552">
        <label>/usr/include/gecode/int/member.hh</label>
        <link refid="member_8hh_source"/>
      </node>
      <node id="20504">
        <label>/usr/include/gecode/flatzinc/parser.hh</label>
        <link refid="parser_8hh_source"/>
      </node>
      <node id="20517">
        <label>/usr/include/gecode/gist/qtgist.hh</label>
        <link refid="qtgist_8hh_source"/>
        <childnode refid="20512" relation="include">
        </childnode>
        <childnode refid="20513" relation="include">
        </childnode>
      </node>
      <node id="20565">
        <label>/usr/include/gecode/int/nvalues/bool-gq.hpp</label>
        <link refid="bool-gq_8hpp_source"/>
        <childnode refid="20527" relation="include">
        </childnode>
      </node>
      <node id="20584">
        <label>/usr/include/gecode/set/branch.hh</label>
        <link refid="set_2branch_8hh_source"/>
      </node>
      <node id="20532">
        <label>/usr/include/gecode/int/count.hh</label>
        <link refid="count_8hh_source"/>
      </node>
      <node id="20516">
        <label>/usr/include/gecode/gist/treecanvas.hh</label>
        <link refid="treecanvas_8hh_source"/>
        <childnode refid="20517" relation="include">
        </childnode>
      </node>
      <node id="20537">
        <label>/usr/include/gecode/int/nvalues/int-gq.hpp</label>
        <link refid="nvalues_2int-gq_8hpp_source"/>
        <childnode refid="20527" relation="include">
        </childnode>
      </node>
      <node id="20560">
        <label>/usr/include/gecode/int/count/rel.hpp</label>
        <link refid="rel_8hpp_source"/>
        <childnode refid="20532" relation="include">
        </childnode>
      </node>
      <node id="20547">
        <label>/usr/include/gecode/set/element.hh</label>
        <link refid="set_2element_8hh_source"/>
      </node>
      <node id="20586">
        <label>/usr/include/gecode/set/distinct.hh</label>
        <link refid="set_2distinct_8hh_source"/>
      </node>
      <node id="20589">
        <label>/usr/include/gecode/set/rel-op.hh</label>
        <link refid="rel-op_8hh_source"/>
        <childnode refid="20547" relation="include">
        </childnode>
        <childnode refid="20588" relation="include">
        </childnode>
      </node>
      <node id="20538">
        <label>/usr/include/gecode/int/nvalues/int-lq.hpp</label>
        <link refid="nvalues_2int-lq_8hpp_source"/>
        <childnode refid="20527" relation="include">
        </childnode>
      </node>
      <node id="20546">
        <label>/usr/include/gecode/int/element.hh</label>
        <link refid="int_2element_8hh_source"/>
        <childnode refid="20547" relation="include">
        </childnode>
      </node>
      <node id="20530">
        <label>/usr/include/gecode/int/channel.hh</label>
        <link refid="int_2channel_8hh_source"/>
      </node>
      <node id="20551">
        <label>/usr/include/gecode/set/ldsb.hh</label>
        <link refid="set_2ldsb_8hh_source"/>
      </node>
      <node id="20513">
        <label>/usr/include/gecode/gist/nodewidget.hh</label>
        <link refid="nodewidget_8hh_source"/>
      </node>
      <node id="20544">
        <label>/usr/include/gecode/int/view.hpp</label>
        <link refid="int_2view_8hpp_source"/>
        <childnode refid="20502" relation="include">
        </childnode>
      </node>
      <node id="20519">
        <label>/usr/include/gecode/int/bin-packing.hh</label>
        <link refid="bin-packing_8hh_source"/>
      </node>
      <node id="20520">
        <label>/usr/include/gecode/int/bool.hh</label>
        <link refid="bool_8hh_source"/>
        <childnode refid="20521" relation="include">
        </childnode>
        <childnode refid="20526" relation="include">
        </childnode>
        <childnode refid="20528" relation="include">
        </childnode>
      </node>
      <node id="20577">
        <label>/usr/include/gecode/set/channel/int.hpp</label>
        <link refid="set_2channel_2int_8hpp_source"/>
        <childnode refid="20576" relation="include">
        </childnode>
      </node>
      <node id="20578">
        <label>/usr/include/gecode/set/channel/sorted.hpp</label>
        <link refid="sorted_8hpp_source"/>
        <childnode refid="20576" relation="include">
        </childnode>
      </node>
      <node id="20564">
        <label>/usr/include/gecode/int/member/re-prop.hpp</label>
        <link refid="re-prop_8hpp_source"/>
        <childnode refid="20552" relation="include">
        </childnode>
      </node>
      <node id="20550">
        <label>/usr/include/gecode/int/ldsb.hh</label>
        <link refid="int_2ldsb_8hh_source"/>
        <childnode refid="20551" relation="include">
        </childnode>
      </node>
      <node id="20511">
        <label>/usr/include/gecode/gist.hh</label>
        <link refid="gist_8hh_source"/>
        <childnode refid="20512" relation="include">
        </childnode>
        <childnode refid="20513" relation="include">
        </childnode>
        <childnode refid="20514" relation="include">
        </childnode>
        <childnode refid="20515" relation="include">
        </childnode>
        <childnode refid="20516" relation="include">
        </childnode>
      </node>
      <node id="20529">
        <label>/usr/include/gecode/int/branch.hh</label>
        <link refid="int_2branch_8hh_source"/>
      </node>
      <node id="20527">
        <label>/usr/include/gecode/int/nvalues.hh</label>
        <link refid="nvalues_8hh_source"/>
      </node>
      <node id="20559">
        <label>/usr/include/gecode/int/bool/ite.hpp</label>
        <link refid="ite_8hpp_source"/>
        <childnode refid="20520" relation="include">
        </childnode>
      </node>
      <node id="20566">
        <label>/usr/include/gecode/int/sequence.hh</label>
        <link refid="int_2sequence_8hh_source"/>
      </node>
      <node id="20572">
        <label>/usr/include/gecode/int/view-val-graph.hh</label>
        <link refid="view-val-graph_8hh_source"/>
        <childnode refid="20534" relation="include">
        </childnode>
        <childnode refid="20527" relation="include">
        </childnode>
      </node>
      <node id="20521">
        <label>/usr/include/gecode/int/linear/bool-int.hpp</label>
        <link refid="bool-int_8hpp_source"/>
        <childnode refid="20522" relation="include">
        </childnode>
      </node>
      <node id="20539">
        <label>/usr/include/gecode/int/sorted/propagate.hpp</label>
        <link refid="sorted_2propagate_8hpp_source"/>
        <childnode refid="20540" relation="include">
        </childnode>
      </node>
      <node id="20508">
        <label>/usr/include/gecode/float/rel.hh</label>
        <link refid="float_2rel_8hh_source"/>
        <childnode refid="20506" relation="include">
        </childnode>
      </node>
      <node id="20515">
        <label>/usr/include/gecode/gist/stopbrancher.hh</label>
        <link refid="stopbrancher_8hh_source"/>
      </node>
      <node id="20506">
        <label>/usr/include/gecode/float/arithmetic.hh</label>
        <link refid="float_2arithmetic_8hh_source"/>
      </node>
      <node id="20505">
        <label>/usr/include/gecode/flatzinc/registry.hh</label>
        <link refid="registry_8hh_source"/>
      </node>
      <node id="20525">
        <label>/usr/include/gecode/int/gcc.hh</label>
        <link refid="gcc_8hh_source"/>
      </node>
      <node id="20581">
        <label>/usr/include/gecode/set/int/minmax.hpp</label>
        <link refid="minmax_8hpp_source"/>
        <childnode refid="20580" relation="include">
        </childnode>
      </node>
      <node id="20587">
        <label>/usr/include/gecode/set/precede.hh</label>
        <link refid="set_2precede_8hh_source"/>
      </node>
      <node id="20507">
        <label>/usr/include/gecode/float/linear.hh</label>
        <link refid="float_2linear_8hh_source"/>
      </node>
      <node id="20571">
        <label>/usr/include/gecode/int/val-set.hh</label>
        <link refid="val-set_8hh_source"/>
        <childnode refid="20552" relation="include">
        </childnode>
        <childnode refid="20527" relation="include">
        </childnode>
      </node>
      <node id="20502">
        <label>/usr/include/gecode/int.hh</label>
        <link refid="int_8hh_source"/>
        <childnode refid="20503" relation="include">
        </childnode>
        <childnode refid="20506" relation="include">
        </childnode>
        <childnode refid="20507" relation="include">
        </childnode>
        <childnode refid="20508" relation="include">
        </childnode>
        <childnode refid="20509" relation="include">
        </childnode>
        <childnode refid="20511" relation="include">
        </childnode>
        <childnode refid="20518" relation="include">
        </childnode>
        <childnode refid="20519" relation="include">
        </childnode>
        <childnode refid="20520" relation="include">
        </childnode>
        <childnode refid="20529" relation="include">
        </childnode>
        <childnode refid="20530" relation="include">
        </childnode>
        <childnode refid="20531" relation="include">
        </childnode>
        <childnode refid="20532" relation="include">
        </childnode>
        <childnode refid="20533" relation="include">
        </childnode>
        <childnode refid="20534" relation="include">
        </childnode>
        <childnode refid="20541" relation="include">
        </childnode>
        <childnode refid="20545" relation="include">
        </childnode>
        <childnode refid="20546" relation="include">
        </childnode>
        <childnode refid="20548" relation="include">
        </childnode>
        <childnode refid="20549" relation="include">
        </childnode>
        <childnode refid="20525" relation="include">
        </childnode>
        <childnode refid="20550" relation="include">
        </childnode>
        <childnode refid="20522" relation="include">
        </childnode>
        <childnode refid="20552" relation="include">
        </childnode>
        <childnode refid="20553" relation="include">
        </childnode>
        <childnode refid="20527" relation="include">
        </childnode>
        <childnode refid="20554" relation="include">
        </childnode>
        <childnode refid="20555" relation="include">
        </childnode>
        <childnode refid="20566" relation="include">
        </childnode>
        <childnode refid="20540" relation="include">
        </childnode>
        <childnode refid="20567" relation="include">
        </childnode>
        <childnode refid="20568" relation="include">
        </childnode>
        <childnode refid="20571" relation="include">
        </childnode>
        <childnode refid="20572" relation="include">
        </childnode>
        <childnode refid="20573" relation="include">
        </childnode>
        <childnode refid="20575" relation="include">
        </childnode>
        <childnode refid="20577" relation="include">
        </childnode>
        <childnode refid="20578" relation="include">
        </childnode>
        <childnode refid="20579" relation="include">
        </childnode>
        <childnode refid="20581" relation="include">
        </childnode>
        <childnode refid="20582" relation="include">
        </childnode>
        <childnode refid="20583" relation="include">
        </childnode>
      </node>
      <node id="20526">
        <label>/usr/include/gecode/int/nvalues/bool-eq.hpp</label>
        <link refid="bool-eq_8hpp_source"/>
        <childnode refid="20527" relation="include">
        </childnode>
      </node>
      <node id="20528">
        <label>/usr/include/gecode/int/nvalues/bool-lq.hpp</label>
        <link refid="bool-lq_8hpp_source"/>
        <childnode refid="20527" relation="include">
        </childnode>
      </node>
      <node id="20568">
        <label>/usr/include/gecode/int/task.hh</label>
        <link refid="task_8hh_source"/>
        <childnode refid="20569" relation="include">
        </childnode>
        <childnode refid="20570" relation="include">
        </childnode>
      </node>
      <node id="20549">
        <label>/usr/include/gecode/int/extensional.hh</label>
        <link refid="extensional_8hh_source"/>
      </node>
      <node id="20540">
        <label>/usr/include/gecode/int/sorted.hh</label>
        <link refid="sorted_8hh_source"/>
      </node>
      <node id="20582">
        <label>/usr/include/gecode/set/int/weights.hpp</label>
        <link refid="weights_8hpp_source"/>
        <childnode refid="20580" relation="include">
        </childnode>
      </node>
      <node id="20554">
        <label>/usr/include/gecode/int/precede.hh</label>
        <link refid="int_2precede_8hh_source"/>
      </node>
      <node id="20536">
        <label>/usr/include/gecode/int/nvalues/int-eq.hpp</label>
        <link refid="nvalues_2int-eq_8hpp_source"/>
        <childnode refid="20527" relation="include">
        </childnode>
      </node>
      <node id="20510">
        <label>/usr/include/gecode/float/branch.hh</label>
        <link refid="float_2branch_8hh_source"/>
      </node>
      <node id="20591">
        <label>/usr/include/gecode/set/sequence.hh</label>
        <link refid="set_2sequence_8hh_source"/>
      </node>
      <node id="20579">
        <label>/usr/include/gecode/set/int/card.hpp</label>
        <link refid="card_8hpp_source"/>
        <childnode refid="20580" relation="include">
        </childnode>
      </node>
      <node id="20523">
        <label>/usr/include/gecode/int/arithmetic/divmod.hpp</label>
        <link refid="divmod_8hpp_source"/>
        <childnode refid="20518" relation="include">
        </childnode>
      </node>
      <node id="20522">
        <label>/usr/include/gecode/int/linear.hh</label>
        <link refid="int_2linear_8hh_source"/>
        <childnode refid="20523" relation="include">
        </childnode>
        <childnode refid="20518" relation="include">
        </childnode>
        <childnode refid="20524" relation="include">
        </childnode>
      </node>
      <node id="20545">
        <label>/usr/include/gecode/int/dom.hh</label>
        <link refid="dom_8hh_source"/>
      </node>
      <node id="20501">
        <label>/usr/include/gecode/int/var-imp.hpp</label>
        <link refid="int_2var-imp_8hpp_source"/>
        <childnode refid="20502" relation="include">
        </childnode>
      </node>
      <node id="20575">
        <label>/usr/include/gecode/set/channel/bool.hpp</label>
        <link refid="set_2channel_2bool_8hpp_source"/>
        <childnode refid="20576" relation="include">
        </childnode>
      </node>
      <node id="20562">
        <label>/usr/include/gecode/int/element/pair.hpp</label>
        <link refid="pair_8hpp_source"/>
        <childnode refid="20546" relation="include">
        </childnode>
      </node>
      <node id="20583">
        <label>/usr/include/gecode/set.hh</label>
        <link refid="set_8hh_source"/>
        <childnode refid="20584" relation="include">
        </childnode>
        <childnode refid="20578" relation="include">
        </childnode>
        <childnode refid="20576" relation="include">
        </childnode>
        <childnode refid="20585" relation="include">
        </childnode>
        <childnode refid="20586" relation="include">
        </childnode>
        <childnode refid="20547" relation="include">
        </childnode>
        <childnode refid="20579" relation="include">
        </childnode>
        <childnode refid="20581" relation="include">
        </childnode>
        <childnode refid="20582" relation="include">
        </childnode>
        <childnode refid="20580" relation="include">
        </childnode>
        <childnode refid="20551" relation="include">
        </childnode>
        <childnode refid="20587" relation="include">
        </childnode>
        <childnode refid="20588" relation="include">
        </childnode>
        <childnode refid="20589" relation="include">
        </childnode>
        <childnode refid="20590" relation="include">
        </childnode>
        <childnode refid="20591" relation="include">
        </childnode>
      </node>
      <node id="20500">
        <label>/usr/include/gecode/int/var-imp/bool.hpp</label>
        <link refid="int/var-imp/bool.hpp"/>
        <childnode refid="20501" relation="include">
        </childnode>
      </node>
      <node id="20531">
        <label>/usr/include/gecode/int/circuit.hh</label>
        <link refid="circuit_8hh_source"/>
      </node>
      <node id="20588">
        <label>/usr/include/gecode/set/rel-op/post.hpp</label>
        <link refid="set_2rel-op_2post_8hpp_source"/>
        <childnode refid="20589" relation="include">
        </childnode>
      </node>
      <node id="20558">
        <label>/usr/include/gecode/int/arithmetic/pow.hpp</label>
        <link refid="pow_8hpp_source"/>
        <childnode refid="20518" relation="include">
        </childnode>
      </node>
      <node id="20585">
        <label>/usr/include/gecode/set/convex.hh</label>
        <link refid="convex_8hh_source"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespaceGecode">Gecode</innernamespace>
    <innernamespace refid="namespaceGecode_1_1Int">Gecode::Int</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>mode:<sp/>C++;<sp/>c-basic-offset:<sp/>2;<sp/>indent-tabs-mode:<sp/>nil<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/><sp/>Main<sp/>authors:</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Christian<sp/>Schulte<sp/>&lt;schulte@gecode.org&gt;</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>Copyright:</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Christian<sp/>Schulte,<sp/>2006</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/>Last<sp/>modified:</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>$Date:<sp/>2013-02-14<sp/>16:29:11<sp/>+0100<sp/>(Thu,<sp/>14<sp/>Feb<sp/>2013)<sp/>$<sp/>by<sp/>$Author:<sp/>schulte<sp/>$</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>$Revision:<sp/>13292<sp/>$</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>Gecode,<sp/>the<sp/>generic<sp/>constraint</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/>development<sp/>environment:</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.gecode.org</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/><sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/><sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/><sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/><sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/><sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/><sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/><sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/><sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/><sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/><sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Gecode<sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Int<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Creation<sp/>of<sp/>new<sp/>variable<sp/>implementations</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>forceinline</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>BoolVarImp::BoolVarImp(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(bits()<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>bits()<sp/>|=<sp/>(n<sp/>&lt;&lt;<sp/>1)<sp/>|<sp/>n;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>forceinline</highlight></codeline>
<codeline lineno="50" refid="classGecode_1_1Int_1_1BoolVarImp_1a31ae859a8c1c2c09ce80a43a2081a8cd" refkind="member"><highlight class="normal"><sp/><sp/>BoolVarImp::BoolVarImp(<ref refid="classGecode_1_1Space" kindref="compound">Space</ref>&amp;<sp/>home,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>BoolVarImpBase(home)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(bits()<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>bits()<sp/>|=<sp/>(max<sp/>&lt;&lt;<sp/>1)<sp/>|<sp/>min;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Operations<sp/>on<sp/>Boolean<sp/>variable<sp/>implementations</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>forceinline<sp/><ref refid="namespaceGecode_1_1Int_1ab342b6be942d41a4aa1899f20ad3cad8" kindref="member">BoolStatus</ref></highlight></codeline>
<codeline lineno="62" refid="classGecode_1_1Int_1_1BoolVarImp_1a181e25ea54f1e44e8d28bc4d531f2a1d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1a181e25ea54f1e44e8d28bc4d531f2a1d" kindref="member">BoolVarImp::status</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bits()<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="classGecode_1_1Int_1_1BoolVarImp_1ad2a123719240b6947fd015d023f0fd37" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1ad2a123719240b6947fd015d023f0fd37" kindref="member">BoolVarImp::min</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(bits()<sp/>&amp;<sp/>1);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="classGecode_1_1Int_1_1BoolVarImp_1a5b47a7348771f94d333c0ffc6613f15e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1a5b47a7348771f94d333c0ffc6613f15e" kindref="member">BoolVarImp::max</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">((bits()<sp/>&amp;<sp/>2)<sp/>&gt;&gt;<sp/>1);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="classGecode_1_1Int_1_1BoolVarImp_1a39e902678d6a6c69b8631ac7f0490da3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1a39e902678d6a6c69b8631ac7f0490da3" kindref="member">BoolVarImp::med</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1ad2a123719240b6947fd015d023f0fd37" kindref="member">min</ref>();</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="classGecode_1_1Int_1_1BoolVarImp_1a9974469e7776365389f67a6d01455f4e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1a9974469e7776365389f67a6d01455f4e" kindref="member">BoolVarImp::val</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<ref refid="classGecode_1_1Int_1_1BoolVarImp_1a181e25ea54f1e44e8d28bc4d531f2a1d" kindref="member">status</ref>()<sp/>!=<sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1a8af74f1d5e454e7952c628173b5f2299" kindref="member">NONE</ref>);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1ad2a123719240b6947fd015d023f0fd37" kindref="member">min</ref>();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="classGecode_1_1Int_1_1BoolVarImp_1a4ddb696f9c7f6cf51852ca37f1bac5ee" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1a4ddb696f9c7f6cf51852ca37f1bac5ee" kindref="member">BoolVarImp::range</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="classGecode_1_1Int_1_1BoolVarImp_1ad88a9d978e4881013db776781245a54d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1ad88a9d978e4881013db776781245a54d" kindref="member">BoolVarImp::assigned</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1a181e25ea54f1e44e8d28bc4d531f2a1d" kindref="member">status</ref>()<sp/>!=<sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1a8af74f1d5e454e7952c628173b5f2299" kindref="member">NONE</ref>;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="classGecode_1_1Int_1_1BoolVarImp_1aa658ee3bae03872129396e146af6ad48" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1aa658ee3bae03872129396e146af6ad48" kindref="member">BoolVarImp::width</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1ad88a9d978e4881013db776781245a54d" kindref="member">assigned</ref>()<sp/>?<sp/>1U<sp/>:<sp/>2U;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="classGecode_1_1Int_1_1BoolVarImp_1ab003b9d9d211ea42109e40380a6e8dc5" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1ab003b9d9d211ea42109e40380a6e8dc5" kindref="member">BoolVarImp::size</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1ad88a9d978e4881013db776781245a54d" kindref="member">assigned</ref>()<sp/>?<sp/>1U<sp/>:<sp/>2U;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="classGecode_1_1Int_1_1BoolVarImp_1aa03b717c392e9326e776a0bd45a20eab" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1aa03b717c392e9326e776a0bd45a20eab" kindref="member">BoolVarImp::regret_min</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1ad88a9d978e4881013db776781245a54d" kindref="member">assigned</ref>()<sp/>?<sp/>1U<sp/>:<sp/>0U;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="classGecode_1_1Int_1_1BoolVarImp_1acd982d1600ab1c051e16fe0066ff8b3e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1acd982d1600ab1c051e16fe0066ff8b3e" kindref="member">BoolVarImp::regret_max</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1ad88a9d978e4881013db776781245a54d" kindref="member">assigned</ref>()<sp/>?<sp/>1U<sp/>:<sp/>0U;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Tests</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="classGecode_1_1Int_1_1BoolVarImp_1a35b163ab0ae440435b216946dffced22" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1a35b163ab0ae440435b216946dffced22" kindref="member">BoolVarImp::in</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(n<sp/>&gt;=<sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1ad2a123719240b6947fd015d023f0fd37" kindref="member">min</ref>())<sp/>&amp;&amp;<sp/>(n<sp/>&lt;=<sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1a5b47a7348771f94d333c0ffc6613f15e" kindref="member">max</ref>());</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="classGecode_1_1Int_1_1BoolVarImp_1a4e72c61c82885688a55255c8d0a96300" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1a35b163ab0ae440435b216946dffced22" kindref="member">BoolVarImp::in</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(n<sp/>&gt;=<sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1ad2a123719240b6947fd015d023f0fd37" kindref="member">min</ref>())<sp/>&amp;&amp;<sp/>(n<sp/>&lt;=<sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1a5b47a7348771f94d333c0ffc6613f15e" kindref="member">max</ref>());</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Boolean<sp/>domain<sp/>tests</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="classGecode_1_1Int_1_1BoolVarImp_1a2f1b9c2095dd2757baffad6b88fd2f63" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1a2f1b9c2095dd2757baffad6b88fd2f63" kindref="member">BoolVarImp::zero</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1a181e25ea54f1e44e8d28bc4d531f2a1d" kindref="member">status</ref>()<sp/>&lt;<sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1a8af74f1d5e454e7952c628173b5f2299" kindref="member">NONE</ref>;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="classGecode_1_1Int_1_1BoolVarImp_1af0b7ce135f2ebadb7e352a75d55b086a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1af0b7ce135f2ebadb7e352a75d55b086a" kindref="member">BoolVarImp::one</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1a181e25ea54f1e44e8d28bc4d531f2a1d" kindref="member">status</ref>()<sp/>&gt;<sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1a8af74f1d5e454e7952c628173b5f2299" kindref="member">NONE</ref>;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="classGecode_1_1Int_1_1BoolVarImp_1aefddd1ed1e1c764895aa81a373561120" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1aefddd1ed1e1c764895aa81a373561120" kindref="member">BoolVarImp::none</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1a181e25ea54f1e44e8d28bc4d531f2a1d" kindref="member">status</ref>()<sp/>==<sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1a8af74f1d5e454e7952c628173b5f2299" kindref="member">NONE</ref>;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="149"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Support<sp/>for<sp/>delta<sp/>information</highlight></codeline>
<codeline lineno="150"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>forceinline<sp/><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></highlight></codeline>
<codeline lineno="153" refid="classGecode_1_1Int_1_1BoolVarImp_1aae1fe48747faf3b38afb0ba7e7d1263f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1aae1fe48747faf3b38afb0ba7e7d1263f" kindref="member">BoolVarImp::modevent</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Delta" kindref="compound">Delta</ref>&amp;)<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ME_BOOL_VAL;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="classGecode_1_1Int_1_1BoolVarImp_1a8f4d1b36a976985d6d6c26db526bf9ca" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1ad2a123719240b6947fd015d023f0fd37" kindref="member">BoolVarImp::min</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Delta" kindref="compound">Delta</ref>&amp;<sp/>d)<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classGecode_1_1Int_1_1IntDelta" kindref="compound">IntDelta</ref>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(d).<ref refid="classGecode_1_1Int_1_1BoolVarImp_1ad2a123719240b6947fd015d023f0fd37" kindref="member">min</ref>();</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161" refid="classGecode_1_1Int_1_1BoolVarImp_1ad924ea6958c9ab6b3a892817882eadf7" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1a5b47a7348771f94d333c0ffc6613f15e" kindref="member">BoolVarImp::max</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Delta" kindref="compound">Delta</ref>&amp;<sp/>d)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classGecode_1_1Int_1_1IntDelta" kindref="compound">IntDelta</ref>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(d).<ref refid="classGecode_1_1Int_1_1BoolVarImp_1ad2a123719240b6947fd015d023f0fd37" kindref="member">min</ref>();</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="classGecode_1_1Int_1_1BoolVarImp_1a104206ccc19b78d1b4c164cc1d77a5c4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1a104206ccc19b78d1b4c164cc1d77a5c4" kindref="member">BoolVarImp::any</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Delta" kindref="compound">Delta</ref>&amp;)<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169" refid="classGecode_1_1Int_1_1BoolVarImp_1a729a5a1ff7232dee8721ebb1aad8ebe4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1a2f1b9c2095dd2757baffad6b88fd2f63" kindref="member">BoolVarImp::zero</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Delta" kindref="compound">Delta</ref>&amp;<sp/>d)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classGecode_1_1Int_1_1IntDelta" kindref="compound">IntDelta</ref>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(d).<ref refid="classGecode_1_1Int_1_1BoolVarImp_1ad2a123719240b6947fd015d023f0fd37" kindref="member">min</ref>()<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173" refid="classGecode_1_1Int_1_1BoolVarImp_1ac160c3868ede70cd98b21f9fee4ddc81" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1af0b7ce135f2ebadb7e352a75d55b086a" kindref="member">BoolVarImp::one</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Delta" kindref="compound">Delta</ref>&amp;<sp/>d)<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classGecode_1_1Int_1_1IntDelta" kindref="compound">IntDelta</ref>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(d).<ref refid="classGecode_1_1Int_1_1BoolVarImp_1ad2a123719240b6947fd015d023f0fd37" kindref="member">min</ref>()<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="179"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Boolean<sp/>tell<sp/>operations</highlight></codeline>
<codeline lineno="180"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>forceinline<sp/><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></highlight></codeline>
<codeline lineno="183" refid="classGecode_1_1Int_1_1BoolVarImp_1aa4321ab39950feec59cf67f44832adbb" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1a2f1b9c2095dd2757baffad6b88fd2f63" kindref="member">BoolVarImp::zero</ref>(<ref refid="classGecode_1_1Space" kindref="compound">Space</ref>&amp;<sp/>home)<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classGecode_1_1Int_1_1BoolVarImp_1af0b7ce135f2ebadb7e352a75d55b086a" kindref="member">one</ref>())<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ME_BOOL_FAILED;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classGecode_1_1Int_1_1BoolVarImp_1a2f1b9c2095dd2757baffad6b88fd2f63" kindref="member">zero</ref>())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ME_BOOL_NONE;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1a3113f0b5e9dd612367291918639b26cd" kindref="member">zero_none</ref>(home);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>forceinline<sp/><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></highlight></codeline>
<codeline lineno="189" refid="classGecode_1_1Int_1_1BoolVarImp_1a7f6d9aff4ab4bec65acae25ea905e120" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1af0b7ce135f2ebadb7e352a75d55b086a" kindref="member">BoolVarImp::one</ref>(<ref refid="classGecode_1_1Space" kindref="compound">Space</ref>&amp;<sp/>home)<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classGecode_1_1Int_1_1BoolVarImp_1af0b7ce135f2ebadb7e352a75d55b086a" kindref="member">one</ref>())<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ME_BOOL_NONE;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classGecode_1_1Int_1_1BoolVarImp_1a2f1b9c2095dd2757baffad6b88fd2f63" kindref="member">zero</ref>())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ME_BOOL_FAILED;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1ab061cf9e42efe1140798c6a7644ebe9c" kindref="member">one_none</ref>(home);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="197"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Tell<sp/>operations</highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>forceinline<sp/><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></highlight></codeline>
<codeline lineno="201" refid="classGecode_1_1Int_1_1BoolVarImp_1aad612b22310c05a0b685e11a15717d44" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1aad612b22310c05a0b685e11a15717d44" kindref="member">BoolVarImp::gq</ref>(<ref refid="classGecode_1_1Space" kindref="compound">Space</ref>&amp;<sp/>home,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&lt;=<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ME_INT_NONE;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&gt;<sp/>1)<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ME_INT_FAILED;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1af0b7ce135f2ebadb7e352a75d55b086a" kindref="member">one</ref>(home);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>forceinline<sp/><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></highlight></codeline>
<codeline lineno="207" refid="classGecode_1_1Int_1_1BoolVarImp_1a396cc11147b88fdf2ee6f147d3c6ea3f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1aad612b22310c05a0b685e11a15717d44" kindref="member">BoolVarImp::gq</ref>(<ref refid="classGecode_1_1Space" kindref="compound">Space</ref>&amp;<sp/>home,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&lt;=<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ME_INT_NONE;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&gt;<sp/>1)<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ME_INT_FAILED;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1af0b7ce135f2ebadb7e352a75d55b086a" kindref="member">one</ref>(home);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>forceinline<sp/><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></highlight></codeline>
<codeline lineno="214" refid="classGecode_1_1Int_1_1BoolVarImp_1ad72fc453b4661e74d483901e3cc979fb" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1ad72fc453b4661e74d483901e3cc979fb" kindref="member">BoolVarImp::lq</ref>(<ref refid="classGecode_1_1Space" kindref="compound">Space</ref>&amp;<sp/>home,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&lt;<sp/>0)<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ME_INT_FAILED;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&gt;=<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ME_INT_NONE;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1a2f1b9c2095dd2757baffad6b88fd2f63" kindref="member">zero</ref>(home);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>forceinline<sp/><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></highlight></codeline>
<codeline lineno="220" refid="classGecode_1_1Int_1_1BoolVarImp_1a85bc7ec0ec389000161ce2da83eb115c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1ad72fc453b4661e74d483901e3cc979fb" kindref="member">BoolVarImp::lq</ref>(<ref refid="classGecode_1_1Space" kindref="compound">Space</ref>&amp;<sp/>home,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&lt;<sp/>0)<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ME_INT_FAILED;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&gt;=<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ME_INT_NONE;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1a2f1b9c2095dd2757baffad6b88fd2f63" kindref="member">zero</ref>(home);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>forceinline<sp/><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></highlight></codeline>
<codeline lineno="227" refid="classGecode_1_1Int_1_1BoolVarImp_1a7c819b1e1280330f7d6745b7fa061568" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1a7c819b1e1280330f7d6745b7fa061568" kindref="member">BoolVarImp::eq</ref>(<ref refid="classGecode_1_1Space" kindref="compound">Space</ref>&amp;<sp/>home,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((n<sp/>&lt;<sp/>0)<sp/>||<sp/>(n<sp/>&gt;<sp/>1))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ME_INT_FAILED;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(n<sp/>==<sp/>0)<sp/>?<sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1a2f1b9c2095dd2757baffad6b88fd2f63" kindref="member">zero</ref>(home):<sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1af0b7ce135f2ebadb7e352a75d55b086a" kindref="member">one</ref>(home);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>forceinline<sp/><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></highlight></codeline>
<codeline lineno="232" refid="classGecode_1_1Int_1_1BoolVarImp_1a477c6ae61ac3d8029c5048fad830c396" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1a7c819b1e1280330f7d6745b7fa061568" kindref="member">BoolVarImp::eq</ref>(<ref refid="classGecode_1_1Space" kindref="compound">Space</ref>&amp;<sp/>home,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((n<sp/>&lt;<sp/>0)<sp/>||<sp/>(n<sp/>&gt;<sp/>1))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ME_INT_FAILED;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(n<sp/>==<sp/>0)<sp/>?<sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1a2f1b9c2095dd2757baffad6b88fd2f63" kindref="member">zero</ref>(home):<sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1af0b7ce135f2ebadb7e352a75d55b086a" kindref="member">one</ref>(home);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>forceinline<sp/><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></highlight></codeline>
<codeline lineno="238" refid="classGecode_1_1Int_1_1BoolVarImp_1a7d63a12fc3ff7f823220466583410ca0" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1a7d63a12fc3ff7f823220466583410ca0" kindref="member">BoolVarImp::nq</ref>(<ref refid="classGecode_1_1Space" kindref="compound">Space</ref>&amp;<sp/>home,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((n<sp/>&lt;<sp/>0)<sp/>||<sp/>(n<sp/>&gt;<sp/>1))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ME_INT_NONE;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(n<sp/>==<sp/>0)<sp/>?<sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1af0b7ce135f2ebadb7e352a75d55b086a" kindref="member">one</ref>(home):<sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1a2f1b9c2095dd2757baffad6b88fd2f63" kindref="member">zero</ref>(home);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>forceinline<sp/><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></highlight></codeline>
<codeline lineno="243" refid="classGecode_1_1Int_1_1BoolVarImp_1a328dee8e1e4fed4319e0e87ac3c40ef3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1a7d63a12fc3ff7f823220466583410ca0" kindref="member">BoolVarImp::nq</ref>(<ref refid="classGecode_1_1Space" kindref="compound">Space</ref>&amp;<sp/>home,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((n<sp/>&lt;<sp/>0)<sp/>||<sp/>(n<sp/>&gt;<sp/>1))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ME_INT_NONE;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(n<sp/>==<sp/>0)<sp/>?<sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1af0b7ce135f2ebadb7e352a75d55b086a" kindref="member">one</ref>(home):<sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1a2f1b9c2095dd2757baffad6b88fd2f63" kindref="member">zero</ref>(home);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="250"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Copying<sp/>a<sp/>variable</highlight></codeline>
<codeline lineno="251"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="252"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>forceinline</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>BoolVarImp::BoolVarImp(<ref refid="classGecode_1_1Space" kindref="compound">Space</ref>&amp;<sp/>home,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>share,<sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp" kindref="compound">BoolVarImp</ref>&amp;<sp/>x)</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>BoolVarImpBase(home,share,x)<sp/>{}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>forceinline<sp/>BoolVarImp*</highlight></codeline>
<codeline lineno="258" refid="classGecode_1_1Int_1_1BoolVarImp_1ad7c67d5daa7c266d446d9dbe6ccd7504" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1ad7c67d5daa7c266d446d9dbe6ccd7504" kindref="member">BoolVarImp::copy</ref>(<ref refid="classGecode_1_1Space" kindref="compound">Space</ref>&amp;<sp/>home,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>share)<sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(copied())</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="classGecode_1_1Int_1_1BoolVarImp" kindref="compound">BoolVarImp</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(forward());</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classGecode_1_1Int_1_1BoolVarImp_1a2f1b9c2095dd2757baffad6b88fd2f63" kindref="member">zero</ref>())</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;s_zero;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classGecode_1_1Int_1_1BoolVarImp_1af0b7ce135f2ebadb7e352a75d55b086a" kindref="member">one</ref>())</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;s_one;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(home)<sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp" kindref="compound">BoolVarImp</ref>(home,share,*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="271"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Iterator-based<sp/>domain<sp/>operations</highlight></codeline>
<codeline lineno="272"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="273"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>I&gt;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>forceinline<sp/><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1a5d63d161491db0073ad70a0592bffd05" kindref="member">BoolVarImp::narrow_r</ref>(<ref refid="classGecode_1_1Space" kindref="compound">Space</ref>&amp;<sp/>home,<sp/>I&amp;<sp/>i,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Is<sp/>new<sp/>domain<sp/>empty?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!i())</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ME_INT_FAILED;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>assert((i.min()<sp/>==<sp/>0)<sp/>||<sp/>(i.min()<sp/>==<sp/>1));</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>assert((i.max()<sp/>==<sp/>0)<sp/>||<sp/>(i.max()<sp/>==<sp/>1));</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i.max()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(!<ref refid="classGecode_1_1Int_1_1BoolVarImp_1af0b7ce135f2ebadb7e352a75d55b086a" kindref="member">one</ref>());</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Assign<sp/>domain<sp/>to<sp/>be<sp/>zero<sp/>(domain<sp/>cannot<sp/>be<sp/>one)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1a2f1b9c2095dd2757baffad6b88fd2f63" kindref="member">zero</ref>(home);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i.min()<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Assign<sp/>domain<sp/>to<sp/>be<sp/>one<sp/>(domain<sp/>cannot<sp/>be<sp/>zero)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(!<ref refid="classGecode_1_1Int_1_1BoolVarImp_1a2f1b9c2095dd2757baffad6b88fd2f63" kindref="member">zero</ref>());</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1af0b7ce135f2ebadb7e352a75d55b086a" kindref="member">one</ref>(home);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<ref refid="classGecode_1_1Int_1_1BoolVarImp_1aefddd1ed1e1c764895aa81a373561120" kindref="member">none</ref>());</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ME_INT_NONE;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>I&gt;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/>forceinline<sp/><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1a6d3bb35506aa67de2a0a74d8ef2edf33" kindref="member">BoolVarImp::inter_r</ref>(Space&amp;<sp/>home,<sp/>I&amp;<sp/>i,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Skip<sp/>all<sp/>ranges<sp/>that<sp/>are<sp/>too<sp/>small</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i()<sp/>&amp;&amp;<sp/>(i.max()<sp/>&lt;<sp/>0))</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Is<sp/>new<sp/>domain<sp/>empty?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!i()<sp/>||<sp/>(i.min()<sp/>&gt;<sp/>1))</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ME_INT_FAILED;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(i.min()<sp/>&lt;=<sp/>1);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i.min()<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1af0b7ce135f2ebadb7e352a75d55b086a" kindref="member">one</ref>(home);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i.max()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1a2f1b9c2095dd2757baffad6b88fd2f63" kindref="member">zero</ref>(home);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>assert((i.min()<sp/>&lt;=<sp/>0)<sp/>&amp;&amp;<sp/>(i.max()<sp/>&gt;=<sp/>1));</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ME_INT_NONE;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>I&gt;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/>forceinline<sp/><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1aa6c47c26b1747eed65ae5922dafa640f" kindref="member">BoolVarImp::minus_r</ref>(Space&amp;<sp/>home,<sp/>I&amp;<sp/>i,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Skip<sp/>all<sp/>ranges<sp/>that<sp/>are<sp/>too<sp/>small</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i()<sp/>&amp;&amp;<sp/>(i.max()<sp/>&lt;<sp/>0))</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Is<sp/>new<sp/>domain<sp/>empty?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!i()<sp/>||<sp/>(i.min()<sp/>&gt;<sp/>1))</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ME_INT_NONE;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(i.min()<sp/>&lt;=<sp/>1);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i.min()<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1a2f1b9c2095dd2757baffad6b88fd2f63" kindref="member">zero</ref>(home);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i.max()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1af0b7ce135f2ebadb7e352a75d55b086a" kindref="member">one</ref>(home);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>assert((i.min()<sp/>&lt;=<sp/>0)<sp/>&amp;&amp;<sp/>(i.max()<sp/>&gt;=<sp/>1));</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ME_INT_FAILED;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>I&gt;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/>forceinline<sp/><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1a406084e9ff491dec698b958b81a29d1e" kindref="member">BoolVarImp::narrow_v</ref>(Space&amp;<sp/>home,<sp/>I&amp;<sp/>i,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!i())</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ME_INT_FAILED;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classGecode_1_1Int_1_1BoolVarImp_1aefddd1ed1e1c764895aa81a373561120" kindref="member">none</ref>())</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ME_INT_NONE;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i.val()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i()<sp/>&amp;&amp;<sp/>(i.val()<sp/>==<sp/>0));</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!i())</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1a3113f0b5e9dd612367291918639b26cd" kindref="member">zero_none</ref>(home);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ME_INT_NONE;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(i.val()<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1ab061cf9e42efe1140798c6a7644ebe9c" kindref="member">one_none</ref>(home);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>I&gt;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/>forceinline<sp/><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1a23fd0762153dd1131e09938f80ca0bda" kindref="member">BoolVarImp::inter_v</ref>(Space&amp;<sp/>home,<sp/>I&amp;<sp/>i,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i()<sp/>&amp;&amp;<sp/>(i.val()<sp/>&lt;<sp/>0))</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!i()<sp/>||<sp/>(i.val()<sp/>&gt;<sp/>1))</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ME_INT_FAILED;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i.val()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i()<sp/>&amp;&amp;<sp/>(i.val()<sp/>==<sp/>0));</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!i()<sp/>||<sp/>(i.val()<sp/>&gt;<sp/>1))</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1a2f1b9c2095dd2757baffad6b88fd2f63" kindref="member">zero</ref>(home);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ME_INT_NONE;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(i.val()<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1af0b7ce135f2ebadb7e352a75d55b086a" kindref="member">one</ref>(home);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>I&gt;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/>forceinline<sp/><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1ad865da8a73c1086fc2fcd49a131fb59f" kindref="member">BoolVarImp::minus_v</ref>(Space&amp;<sp/>home,<sp/>I&amp;<sp/>i,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i()<sp/>&amp;&amp;<sp/>(i.val()<sp/>&lt;<sp/>0))</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!i()<sp/>||<sp/>(i.val()<sp/>&gt;<sp/>1))</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ME_INT_NONE;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i.val()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i()<sp/>&amp;&amp;<sp/>(i.val()<sp/>==<sp/>0));</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!i()<sp/>||<sp/>(i.val()<sp/>&gt;<sp/>1))</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1af0b7ce135f2ebadb7e352a75d55b086a" kindref="member">one</ref>(home);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ME_INT_FAILED;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(i.val()<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1a2f1b9c2095dd2757baffad6b88fd2f63" kindref="member">zero</ref>(home);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="391"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Dependencies</highlight></codeline>
<codeline lineno="392"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="393"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395" refid="classGecode_1_1Int_1_1BoolVarImp_1a428271261530f2260348a30a5794b788" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1a428271261530f2260348a30a5794b788" kindref="member">BoolVarImp::subscribe</ref>(<ref refid="classGecode_1_1Space" kindref="compound">Space</ref>&amp;<sp/>home,<sp/><ref refid="classGecode_1_1Propagator" kindref="compound">Propagator</ref>&amp;<sp/>p,<sp/><ref refid="group__TaskVarMEPC_1gad24536e327a507a903179b6a5efd2e3d" kindref="member">PropCond</ref>,</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>schedule)<sp/>{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Subscription<sp/>can<sp/>be<sp/>used<sp/>with<sp/>integer<sp/>propagation<sp/>conditions,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>must<sp/>be<sp/>remapped<sp/>to<sp/>the<sp/>single<sp/>Boolean<sp/>propagation<sp/>condition.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>BoolVarImpBase::subscribe(home,p,PC_BOOL_VAL,<ref refid="classGecode_1_1Int_1_1BoolVarImp_1ad88a9d978e4881013db776781245a54d" kindref="member">assigned</ref>(),schedule);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402" refid="classGecode_1_1Int_1_1BoolVarImp_1aaa3d34d54a87c75f4fb6e8fd80e9e96b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1aaa3d34d54a87c75f4fb6e8fd80e9e96b" kindref="member">BoolVarImp::cancel</ref>(<ref refid="classGecode_1_1Space" kindref="compound">Space</ref>&amp;<sp/>home,<sp/><ref refid="classGecode_1_1Propagator" kindref="compound">Propagator</ref>&amp;<sp/>p,<sp/><ref refid="group__TaskVarMEPC_1gad24536e327a507a903179b6a5efd2e3d" kindref="member">PropCond</ref>)<sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>BoolVarImpBase::cancel(home,p,PC_BOOL_VAL,<ref refid="classGecode_1_1Int_1_1BoolVarImp_1ad88a9d978e4881013db776781245a54d" kindref="member">assigned</ref>());</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407" refid="classGecode_1_1Int_1_1BoolVarImp_1a9a7f4db1b635d72d91c53ee7d1930e58" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1a428271261530f2260348a30a5794b788" kindref="member">BoolVarImp::subscribe</ref>(<ref refid="classGecode_1_1Space" kindref="compound">Space</ref>&amp;<sp/>home,<sp/><ref refid="classGecode_1_1Advisor" kindref="compound">Advisor</ref>&amp;<sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>BoolVarImpBase::subscribe(home,a,<ref refid="classGecode_1_1Int_1_1BoolVarImp_1ad88a9d978e4881013db776781245a54d" kindref="member">assigned</ref>());</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411" refid="classGecode_1_1Int_1_1BoolVarImp_1afe60c242dddceccc2601c0c7f85ae937" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1aaa3d34d54a87c75f4fb6e8fd80e9e96b" kindref="member">BoolVarImp::cancel</ref>(<ref refid="classGecode_1_1Space" kindref="compound">Space</ref>&amp;<sp/>home,<sp/><ref refid="classGecode_1_1Advisor" kindref="compound">Advisor</ref>&amp;<sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>BoolVarImpBase::cancel(home,a,<ref refid="classGecode_1_1Int_1_1BoolVarImp_1ad88a9d978e4881013db776781245a54d" kindref="member">assigned</ref>());</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416" refid="classGecode_1_1Int_1_1BoolVarImp_1ab1af3b699eae8e40ee5750586a80a5e2" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1ab1af3b699eae8e40ee5750586a80a5e2" kindref="member">BoolVarImp::schedule</ref>(<ref refid="classGecode_1_1Space" kindref="compound">Space</ref>&amp;<sp/>home,<sp/><ref refid="classGecode_1_1Propagator" kindref="compound">Propagator</ref>&amp;<sp/>p,<sp/><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref><sp/>me)<sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(me<sp/>==<sp/><ref refid="group__TaskVarMEPC_1gad6c95dad88dab9ffcb71b90039157c3c" kindref="member">ME_GEN_ASSIGNED</ref>)</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>BoolVarImpBase::schedule(home,p,me);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/>forceinline<sp/><ref refid="namespaceGecode_1a129e41c1d037528010d7b6706495a560" kindref="member">ModEventDelta</ref></highlight></codeline>
<codeline lineno="422" refid="classGecode_1_1Int_1_1BoolVarImp_1a2570bc0857b22987de0284ac5214ae56" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1BoolVarImp_1a39e902678d6a6c69b8631ac7f0490da3" kindref="member">BoolVarImp::med</ref>(<ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref><sp/>me)<sp/>{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>BoolVarImpBase::med(me);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal">}}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight><highlight class="comment">//<sp/>STATISTICS:<sp/>int-var</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/usr/include/gecode/int/var-imp/bool.hpp"/>
  </compounddef>
</doxygen>
