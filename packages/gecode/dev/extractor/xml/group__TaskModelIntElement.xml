<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="group__TaskModelIntElement" kind="group">
    <compoundname>TaskModelIntElement</compoundname>
    <title>Element constraints</title>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__TaskModelIntElement_1ga43a69cc22f6483357a3cb7febc7b0866" prot="public" static="no">
        <type>SharedArray&lt; int &gt;</type>
        <definition>typedef SharedArray&lt;int&gt; Gecode::IntSharedArray</definition>
        <argsstring></argsstring>
        <name>IntSharedArray</name>
        <briefdescription>
<para>Arrays of integers that can be shared among several element constraints. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int.hh" line="1343" column="1" bodyfile="/usr/include/gecode/int.hh" bodystart="1343" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__TaskModelIntElement_1gac5e765f23e5bb9cc020ebeae7293b373" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GECODE_INT_EXPORT void</type>
        <definition>GECODE_INT_EXPORT void Gecode::element</definition>
        <argsstring>(Home home, IntSharedArray n, IntVar x0, IntVar x1, IntConLevel icl=ICL_DEF)</argsstring>
        <name>element</name>
        <param>
          <type>Home</type>
          <declname>home</declname>
        </param>
        <param>
          <type>IntSharedArray</type>
          <declname>n</declname>
        </param>
        <param>
          <type>IntVar</type>
          <declname>x0</declname>
        </param>
        <param>
          <type>IntVar</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>IntConLevel</type>
          <declname>icl</declname>
          <defval>ICL_DEF</defval>
        </param>
        <briefdescription>
<para>Post domain consistent propagator for <formula id="239">$ n_{x_0}=x_1$</formula>. </para>        </briefdescription>
        <detaileddescription>
<para>Throws an exception of type <ref refid="classGecode_1_1Int_1_1OutOfLimits" kindref="compound">Int::OutOfLimits</ref>, if the integers in <emphasis>n</emphasis> exceed the limits in <ref refid="namespaceGecode_1_1Int_1_1Limits" kindref="compound">Int::Limits</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int.hh" line="1350" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__TaskModelIntElement_1ga396ec3e3c4aa722995c28576059ef693" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GECODE_INT_EXPORT void</type>
        <definition>GECODE_INT_EXPORT void Gecode::element</definition>
        <argsstring>(Home home, IntSharedArray n, IntVar x0, BoolVar x1, IntConLevel icl=ICL_DEF)</argsstring>
        <name>element</name>
        <param>
          <type>Home</type>
          <declname>home</declname>
        </param>
        <param>
          <type>IntSharedArray</type>
          <declname>n</declname>
        </param>
        <param>
          <type>IntVar</type>
          <declname>x0</declname>
        </param>
        <param>
          <type>BoolVar</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>IntConLevel</type>
          <declname>icl</declname>
          <defval>ICL_DEF</defval>
        </param>
        <briefdescription>
<para>Post domain consistent propagator for <formula id="239">$ n_{x_0}=x_1$</formula>. </para>        </briefdescription>
        <detaileddescription>
<para>Throws an exception of type <ref refid="classGecode_1_1Int_1_1OutOfLimits" kindref="compound">Int::OutOfLimits</ref>, if the integers in <emphasis>n</emphasis> exceed the limits in <ref refid="namespaceGecode_1_1Int_1_1Limits" kindref="compound">Int::Limits</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int.hh" line="1358" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__TaskModelIntElement_1gafb684a434197ae48f52b64e084e281f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GECODE_INT_EXPORT void</type>
        <definition>GECODE_INT_EXPORT void Gecode::element</definition>
        <argsstring>(Home home, IntSharedArray n, IntVar x0, int x1, IntConLevel icl=ICL_DEF)</argsstring>
        <name>element</name>
        <param>
          <type>Home</type>
          <declname>home</declname>
        </param>
        <param>
          <type>IntSharedArray</type>
          <declname>n</declname>
        </param>
        <param>
          <type>IntVar</type>
          <declname>x0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>IntConLevel</type>
          <declname>icl</declname>
          <defval>ICL_DEF</defval>
        </param>
        <briefdescription>
<para>Post domain consistent propagator for <formula id="239">$ n_{x_0}=x_1$</formula>. </para>        </briefdescription>
        <detaileddescription>
<para>Throws an exception of type <ref refid="classGecode_1_1Int_1_1OutOfLimits" kindref="compound">Int::OutOfLimits</ref>, if the integers in <emphasis>n</emphasis> exceed the limits in <ref refid="namespaceGecode_1_1Int_1_1Limits" kindref="compound">Int::Limits</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int.hh" line="1366" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__TaskModelIntElement_1ga4a4f5d192db39efd40fd17a3fcf774a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GECODE_INT_EXPORT void</type>
        <definition>GECODE_INT_EXPORT void Gecode::element</definition>
        <argsstring>(Home home, const IntVarArgs &amp;x, IntVar y0, IntVar y1, IntConLevel icl=ICL_DEF)</argsstring>
        <name>element</name>
        <param>
          <type>Home</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const IntVarArgs &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>IntVar</type>
          <declname>y0</declname>
        </param>
        <param>
          <type>IntVar</type>
          <declname>y1</declname>
        </param>
        <param>
          <type>IntConLevel</type>
          <declname>icl</declname>
          <defval>ICL_DEF</defval>
        </param>
        <briefdescription>
<para>Post propagator for <formula id="240">$ x_{y_0}=y_1$</formula>. </para>        </briefdescription>
        <detaileddescription>
<para>Supports both bounds (<emphasis>icl</emphasis> = ICL_BND) and domain consistency (<emphasis>icl</emphasis> = ICL_DOM, default). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int.hh" line="1374" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__TaskModelIntElement_1gad3dd8ff272f224d04fefed054921db65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GECODE_INT_EXPORT void</type>
        <definition>GECODE_INT_EXPORT void Gecode::element</definition>
        <argsstring>(Home home, const IntVarArgs &amp;x, IntVar y0, int y1, IntConLevel icl=ICL_DEF)</argsstring>
        <name>element</name>
        <param>
          <type>Home</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const IntVarArgs &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>IntVar</type>
          <declname>y0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y1</declname>
        </param>
        <param>
          <type>IntConLevel</type>
          <declname>icl</declname>
          <defval>ICL_DEF</defval>
        </param>
        <briefdescription>
<para>Post propagator for <formula id="240">$ x_{y_0}=y_1$</formula>. </para>        </briefdescription>
        <detaileddescription>
<para>Supports both bounds (<emphasis>icl</emphasis> = ICL_BND) and domain consistency (<emphasis>icl</emphasis> = ICL_DOM, default). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int.hh" line="1382" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__TaskModelIntElement_1gaa7b8871c6f1e9450f689086b99dd8e76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GECODE_INT_EXPORT void</type>
        <definition>GECODE_INT_EXPORT void Gecode::element</definition>
        <argsstring>(Home home, const BoolVarArgs &amp;x, IntVar y0, BoolVar y1, IntConLevel icl=ICL_DEF)</argsstring>
        <name>element</name>
        <param>
          <type>Home</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const BoolVarArgs &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>IntVar</type>
          <declname>y0</declname>
        </param>
        <param>
          <type>BoolVar</type>
          <declname>y1</declname>
        </param>
        <param>
          <type>IntConLevel</type>
          <declname>icl</declname>
          <defval>ICL_DEF</defval>
        </param>
        <briefdescription>
<para>Post domain consistent propagator for <formula id="240">$ x_{y_0}=y_1$</formula>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int.hh" line="1386" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__TaskModelIntElement_1ga5532028becd41ae5513e11f9c946b0b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GECODE_INT_EXPORT void</type>
        <definition>GECODE_INT_EXPORT void Gecode::element</definition>
        <argsstring>(Home home, const BoolVarArgs &amp;x, IntVar y0, int y1, IntConLevel icl=ICL_DEF)</argsstring>
        <name>element</name>
        <param>
          <type>Home</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const BoolVarArgs &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>IntVar</type>
          <declname>y0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y1</declname>
        </param>
        <param>
          <type>IntConLevel</type>
          <declname>icl</declname>
          <defval>ICL_DEF</defval>
        </param>
        <briefdescription>
<para>Post domain consistent propagator for <formula id="240">$ x_{y_0}=y_1$</formula>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int.hh" line="1390" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__TaskModelIntElement_1gaa09808b3b12427438baa2674deecab98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GECODE_INT_EXPORT void</type>
        <definition>GECODE_INT_EXPORT void Gecode::element</definition>
        <argsstring>(Home home, IntSharedArray a, IntVar x, int w, IntVar y, int h, IntVar z, IntConLevel icl=ICL_DEF)</argsstring>
        <name>element</name>
        <param>
          <type>Home</type>
          <declname>home</declname>
        </param>
        <param>
          <type>IntSharedArray</type>
          <declname>a</declname>
        </param>
        <param>
          <type>IntVar</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>w</declname>
        </param>
        <param>
          <type>IntVar</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <param>
          <type>IntVar</type>
          <declname>z</declname>
        </param>
        <param>
          <type>IntConLevel</type>
          <declname>icl</declname>
          <defval>ICL_DEF</defval>
        </param>
        <briefdescription>
<para>Post domain consistent propagator for <formula id="241">$ a_{x+w\cdot y}=z$</formula>. </para>        </briefdescription>
        <detaileddescription>
<para>If <emphasis>a</emphasis> is regarded as a two-dimensional array in row-major order of width <emphasis>w</emphasis> and height <emphasis>h</emphasis>, then <emphasis>z</emphasis> is constrained to be the element in column <emphasis>x</emphasis> and row <emphasis>y</emphasis>.</para><para>Throws an exception of type <ref refid="classGecode_1_1Int_1_1OutOfLimits" kindref="compound">Int::OutOfLimits</ref>, if the integers in <emphasis>n</emphasis> exceed the limits in <ref refid="namespaceGecode_1_1Int_1_1Limits" kindref="compound">Int::Limits</ref>.</para><para>Throws an exception of type <ref refid="classGecode_1_1Int_1_1ArgumentSizeMismatch" kindref="compound">Int::ArgumentSizeMismatch</ref>, if <formula id="242">$ w\cdot h\neq|a|$</formula>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int.hh" line="1406" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__TaskModelIntElement_1ga985becb075b85984d4d4f6e779c13ba6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GECODE_INT_EXPORT void</type>
        <definition>GECODE_INT_EXPORT void Gecode::element</definition>
        <argsstring>(Home home, IntSharedArray a, IntVar x, int w, IntVar y, int h, BoolVar z, IntConLevel icl=ICL_DEF)</argsstring>
        <name>element</name>
        <param>
          <type>Home</type>
          <declname>home</declname>
        </param>
        <param>
          <type>IntSharedArray</type>
          <declname>a</declname>
        </param>
        <param>
          <type>IntVar</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>w</declname>
        </param>
        <param>
          <type>IntVar</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <param>
          <type>BoolVar</type>
          <declname>z</declname>
        </param>
        <param>
          <type>IntConLevel</type>
          <declname>icl</declname>
          <defval>ICL_DEF</defval>
        </param>
        <briefdescription>
<para>Post domain consistent propagator for <formula id="241">$ a_{x+w\cdot y}=z$</formula>. </para>        </briefdescription>
        <detaileddescription>
<para>If <emphasis>a</emphasis> is regarded as a two-dimensional array in row-major order of width <emphasis>w</emphasis> and height <emphasis>h</emphasis>, then <emphasis>z</emphasis> is constrained to be the element in column <emphasis>x</emphasis> and row <emphasis>y</emphasis>.</para><para>Throws an exception of type <ref refid="classGecode_1_1Int_1_1OutOfLimits" kindref="compound">Int::OutOfLimits</ref>, if the integers in <emphasis>n</emphasis> exceed the limits in <ref refid="namespaceGecode_1_1Int_1_1Limits" kindref="compound">Int::Limits</ref>.</para><para>Throws an exception of type <ref refid="classGecode_1_1Int_1_1ArgumentSizeMismatch" kindref="compound">Int::ArgumentSizeMismatch</ref>, if <formula id="242">$ w\cdot h\neq|a|$</formula>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int.hh" line="1422" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__TaskModelIntElement_1gafeaebae4c55f092fcbec081d4da42047" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GECODE_INT_EXPORT void</type>
        <definition>GECODE_INT_EXPORT void Gecode::element</definition>
        <argsstring>(Home home, const IntVarArgs &amp;a, IntVar x, int w, IntVar y, int h, IntVar z, IntConLevel icl=ICL_DEF)</argsstring>
        <name>element</name>
        <param>
          <type>Home</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const IntVarArgs &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>IntVar</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>w</declname>
        </param>
        <param>
          <type>IntVar</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <param>
          <type>IntVar</type>
          <declname>z</declname>
        </param>
        <param>
          <type>IntConLevel</type>
          <declname>icl</declname>
          <defval>ICL_DEF</defval>
        </param>
        <briefdescription>
<para>Post propagator for <formula id="241">$ a_{x+w\cdot y}=z$</formula>. </para>        </briefdescription>
        <detaileddescription>
<para>If <emphasis>a</emphasis> is regarded as a two-dimensional array in row-major order of width <emphasis>w</emphasis> and height <emphasis>h</emphasis>, then <emphasis>z</emphasis> is constrained to be the element in column <emphasis>x</emphasis> and row <emphasis>y</emphasis>.</para><para>Supports both bounds (<emphasis>icl</emphasis> = ICL_BND) and domain consistency (<emphasis>icl</emphasis> = ICL_DOM, default).</para><para>Throws an exception of type <ref refid="classGecode_1_1Int_1_1OutOfLimits" kindref="compound">Int::OutOfLimits</ref>, if the integers in <emphasis>n</emphasis> exceed the limits in <ref refid="namespaceGecode_1_1Int_1_1Limits" kindref="compound">Int::Limits</ref>.</para><para>Throws an exception of type <ref refid="classGecode_1_1Int_1_1ArgumentSizeMismatch" kindref="compound">Int::ArgumentSizeMismatch</ref>, if <formula id="242">$ w\cdot h\neq|a|$</formula>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int.hh" line="1441" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__TaskModelIntElement_1ga018c078d219bb61d4900e710728e38a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GECODE_INT_EXPORT void</type>
        <definition>GECODE_INT_EXPORT void Gecode::element</definition>
        <argsstring>(Home home, const BoolVarArgs &amp;a, IntVar x, int w, IntVar y, int h, BoolVar z, IntConLevel icl=ICL_DEF)</argsstring>
        <name>element</name>
        <param>
          <type>Home</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const BoolVarArgs &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>IntVar</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>w</declname>
        </param>
        <param>
          <type>IntVar</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <param>
          <type>BoolVar</type>
          <declname>z</declname>
        </param>
        <param>
          <type>IntConLevel</type>
          <declname>icl</declname>
          <defval>ICL_DEF</defval>
        </param>
        <briefdescription>
<para>Post domain consistent propagator for <formula id="241">$ a_{x+w\cdot y}=z$</formula>. </para>        </briefdescription>
        <detaileddescription>
<para>If <emphasis>a</emphasis> is regarded as a two-dimensional array in row-major order of width <emphasis>w</emphasis> and height <emphasis>h</emphasis>, then <emphasis>z</emphasis> is constrained to be the element in column <emphasis>x</emphasis> and row <emphasis>y</emphasis>.</para><para>Throws an exception of type <ref refid="classGecode_1_1Int_1_1OutOfLimits" kindref="compound">Int::OutOfLimits</ref>, if the integers in <emphasis>n</emphasis> exceed the limits in <ref refid="namespaceGecode_1_1Int_1_1Limits" kindref="compound">Int::Limits</ref>.</para><para>Throws an exception of type <ref refid="classGecode_1_1Int_1_1ArgumentSizeMismatch" kindref="compound">Int::ArgumentSizeMismatch</ref>, if <formula id="242">$ w\cdot h\neq|a|$</formula>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int.hh" line="1457" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
