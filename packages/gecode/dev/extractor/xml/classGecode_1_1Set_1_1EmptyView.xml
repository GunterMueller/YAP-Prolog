<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classGecode_1_1Set_1_1EmptyView" kind="class" prot="public">
    <compoundname>Gecode::Set::EmptyView</compoundname>
    <basecompoundref refid="classGecode_1_1ConstView" prot="public" virt="non-virtual">Gecode::ConstView&lt; SetView &gt;</basecompoundref>
    <includes refid="set_2view_8hpp" local="no">view.hpp</includes>
      <sectiondef kind="user-defined">
      <header>View comparison</header>
      <memberdef kind="function" id="classGecode_1_1Set_1_1EmptyView_1a7778f782d4edd37c77d119b9bb02b6ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool same</definition>
        <argsstring>(const EmptyView &amp;x, const EmptyView &amp;y)</argsstring>
        <name>same</name>
        <param>
          <type>const <ref refid="classGecode_1_1Set_1_1EmptyView" kindref="compound">EmptyView</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1Set_1_1EmptyView" kindref="compound">EmptyView</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Test whether views <emphasis>x</emphasis> and <emphasis>y</emphasis> are the same. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="449" column="1" bodyfile="/usr/include/gecode/set/view/const.hpp" bodystart="712" bodyend="714"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Constructors and initialization</header>
      <memberdef kind="function" id="classGecode_1_1Set_1_1EmptyView_1a36499db69c57ab65b350c7edecb4502f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Set::EmptyView::EmptyView</definition>
        <argsstring>(void)</argsstring>
        <name>EmptyView</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="340" column="1" bodyfile="/usr/include/gecode/set/view/const.hpp" bodystart="278" bodyend="278"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Value access</header>
      <memberdef kind="function" id="classGecode_1_1Set_1_1EmptyView_1a259fa797bacdb52a10d9d60508cc534d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>forceinline unsigned int Gecode::Set::EmptyView::cardMin</definition>
        <argsstring>(void) const </argsstring>
        <name>cardMin</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return minimum cardinality. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="346" column="1" bodyfile="/usr/include/gecode/set/view/const.hpp" bodystart="298" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1EmptyView_1a2b4be915ce410a3375bfa9c88f5cf5ce" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>forceinline unsigned int Gecode::Set::EmptyView::cardMax</definition>
        <argsstring>(void) const </argsstring>
        <name>cardMax</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return maximum cardinality. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="348" column="1" bodyfile="/usr/include/gecode/set/view/const.hpp" bodystart="301" bodyend="301"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1EmptyView_1ae494fcee6fec11a8365da9cd98b6abe0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Set::EmptyView::lubMin</definition>
        <argsstring>(void) const </argsstring>
        <name>lubMin</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return minimum of the least upper bound. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="350" column="1" bodyfile="/usr/include/gecode/set/view/const.hpp" bodystart="304" bodyend="304"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1EmptyView_1a01e21f142a67fd667bc1166e89ca9c2d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Set::EmptyView::lubMax</definition>
        <argsstring>(void) const </argsstring>
        <name>lubMax</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return maximum of the least upper bound. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="352" column="1" bodyfile="/usr/include/gecode/set/view/const.hpp" bodystart="307" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1EmptyView_1a5014138258a62dfc50cb241e5f9cefd3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Gecode::Set::EmptyView::lubMinN</definition>
        <argsstring>(unsigned int n) const </argsstring>
        <name>lubMinN</name>
        <param>
          <type>unsigned int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Return n-th smallest element of the least upper bound. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="354" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1EmptyView_1a0695d237b2602b3407e902bf86afa090" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Set::EmptyView::glbMin</definition>
        <argsstring>(void) const </argsstring>
        <name>glbMin</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return minimum of the greatest lower bound. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="356" column="1" bodyfile="/usr/include/gecode/set/view/const.hpp" bodystart="310" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1EmptyView_1afe3a5fd27f2d90c889981f50e5d1c2ac" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Set::EmptyView::glbMax</definition>
        <argsstring>(void) const </argsstring>
        <name>glbMax</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return maximum of the greatest lower bound. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="358" column="1" bodyfile="/usr/include/gecode/set/view/const.hpp" bodystart="313" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1EmptyView_1a5bbc1e1c6970ceb8290aa0f5e2b233ef" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>forceinline unsigned int Gecode::Set::EmptyView::glbSize</definition>
        <argsstring>(void) const </argsstring>
        <name>glbSize</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return the number of elements in the greatest lower bound. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="361" column="1" bodyfile="/usr/include/gecode/set/view/const.hpp" bodystart="283" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1EmptyView_1a41aa8c009b3eabbabd8931851ba55a07" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>forceinline unsigned int Gecode::Set::EmptyView::lubSize</definition>
        <argsstring>(void) const </argsstring>
        <name>lubSize</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return the number of elements in the least upper bound. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="363" column="1" bodyfile="/usr/include/gecode/set/view/const.hpp" bodystart="286" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1EmptyView_1af741de1798ce542b44c53cec9136eef8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>forceinline unsigned int Gecode::Set::EmptyView::unknownSize</definition>
        <argsstring>(void) const </argsstring>
        <name>unknownSize</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return the number of unknown elements. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="365" column="1" bodyfile="/usr/include/gecode/set/view/const.hpp" bodystart="289" bodyend="289"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Domain tests</header>
      <memberdef kind="function" id="classGecode_1_1Set_1_1EmptyView_1a777bc8b21e247eda0403792b665ffa3b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::Set::EmptyView::contains</definition>
        <argsstring>(int i) const </argsstring>
        <name>contains</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Test whether <emphasis>i</emphasis> is in the greatest lower bound. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="371" column="1" bodyfile="/usr/include/gecode/set/view/const.hpp" bodystart="292" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1EmptyView_1acb695e7984f25e063c9e1335693e74fd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::Set::EmptyView::notContains</definition>
        <argsstring>(int i) const </argsstring>
        <name>notContains</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Test whether <emphasis>i</emphasis> is not in the least upper bound. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="373" column="1" bodyfile="/usr/include/gecode/set/view/const.hpp" bodystart="295" bodyend="295"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Domain update by value</header>
      <memberdef kind="function" id="classGecode_1_1Set_1_1EmptyView_1aeecedb3db45aaed852d732f2c63ec0c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Set::EmptyView::cardMin</definition>
        <argsstring>(Space &amp;home, unsigned int m)</argsstring>
        <name>cardMin</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Restrict cardinality to be greater than or equal to <emphasis>m</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="380" column="1" bodyfile="/usr/include/gecode/set/view/const.hpp" bodystart="316" bodyend="318"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1EmptyView_1af32aae687237fd1e34e484f85eb08b46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Set::EmptyView::cardMax</definition>
        <argsstring>(Space &amp;home, unsigned int m)</argsstring>
        <name>cardMax</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Restrict cardinality to be less than or equal to <emphasis>m</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="382" column="1" bodyfile="/usr/include/gecode/set/view/const.hpp" bodystart="321" bodyend="323"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1EmptyView_1a60da50029b6d5cce05c18189b752164a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Set::EmptyView::include</definition>
        <argsstring>(Space &amp;home, int i, int j)</argsstring>
        <name>include</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>Update greatest lower bound to include all elements between and including <emphasis>i</emphasis> and <emphasis>j</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="387" column="1" bodyfile="/usr/include/gecode/set/view/const.hpp" bodystart="341" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1EmptyView_1aee40f1355795063fb287af7917bde02c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Set::EmptyView::exclude</definition>
        <argsstring>(Space &amp;home, int i, int j)</argsstring>
        <name>exclude</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>Restrict least upper bound to not contain all elements between and including <emphasis>i</emphasis> and <emphasis>j</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="392" column="1" bodyfile="/usr/include/gecode/set/view/const.hpp" bodystart="345" bodyend="345"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1EmptyView_1a821d156ca2cd26cc19cd084e0acc0907" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Set::EmptyView::include</definition>
        <argsstring>(Space &amp;home, int i)</argsstring>
        <name>include</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Update greatest lower bound to contain <emphasis>i</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="394" column="1" bodyfile="/usr/include/gecode/set/view/const.hpp" bodystart="327" bodyend="329"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1EmptyView_1a6a8db640c7cd4f4b526b285abe6ea8a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Set::EmptyView::exclude</definition>
        <argsstring>(Space &amp;home, int i)</argsstring>
        <name>exclude</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Restrict least upper bound to not contain <emphasis>i</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="396" column="1" bodyfile="/usr/include/gecode/set/view/const.hpp" bodystart="332" bodyend="332"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1EmptyView_1aa5e3070d30c515f89c7da04d7658e5dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Set::EmptyView::intersect</definition>
        <argsstring>(Space &amp;home, int i, int j)</argsstring>
        <name>intersect</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>Update least upper bound to contain at most all elements between and including <emphasis>i</emphasis> and <emphasis>j</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="401" column="1" bodyfile="/usr/include/gecode/set/view/const.hpp" bodystart="338" bodyend="338"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1EmptyView_1aa71f8e4cb7754bd3e0e82a1c68a570b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Set::EmptyView::intersect</definition>
        <argsstring>(Space &amp;home, int i)</argsstring>
        <name>intersect</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Update least upper bound to contain at most the element <emphasis>i</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="403" column="1" bodyfile="/usr/include/gecode/set/view/const.hpp" bodystart="335" bodyend="335"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Domain update by range iterator</header>
      <memberdef kind="function" id="classGecode_1_1Set_1_1EmptyView_1a9bd1b737a7af310e72de4a138e3003bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>ModEvent Gecode::Set::EmptyView::excludeI</definition>
        <argsstring>(Space &amp;home, I &amp;i)</argsstring>
        <name>excludeI</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>I &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Remove range sequence described by <emphasis>i</emphasis> from least upper bound. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="410" column="1" bodyfile="/usr/include/gecode/set/view/const.hpp" bodystart="348" bodyend="350"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1EmptyView_1a0b3d75145c3544f5ffb69b41e4179c7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>ModEvent Gecode::Set::EmptyView::includeI</definition>
        <argsstring>(Space &amp;home, I &amp;i)</argsstring>
        <name>includeI</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>I &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Include range sequence described by <emphasis>i</emphasis> in greatest lower bound. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="412" column="1" bodyfile="/usr/include/gecode/set/view/const.hpp" bodystart="353" bodyend="355"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1EmptyView_1adba1fecbfdd18a205e7860276eda505b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>ModEvent Gecode::Set::EmptyView::intersectI</definition>
        <argsstring>(Space &amp;home, I &amp;iter)</argsstring>
        <name>intersectI</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>I &amp;</type>
          <declname>iter</declname>
        </param>
        <briefdescription>
<para>Intersect least upper bound with range sequence described by <emphasis>i</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="414" column="1" bodyfile="/usr/include/gecode/set/view/const.hpp" bodystart="358" bodyend="360"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Delta information for advisors</header>
      <memberdef kind="function" id="classGecode_1_1Set_1_1EmptyView_1a40afaa608e186f561044302365e4d54d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Set::EmptyView::glbMin</definition>
        <argsstring>(const Delta &amp;d) const </argsstring>
        <name>glbMin</name>
        <param>
          <type>const <ref refid="classGecode_1_1Delta" kindref="compound">Delta</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Return minimum value just pruned from glb. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="420" column="1" bodyfile="/usr/include/gecode/set/view/const.hpp" bodystart="367" bodyend="370"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1EmptyView_1aca51cc47cd57d98d6a172484345c9d32" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Set::EmptyView::glbMax</definition>
        <argsstring>(const Delta &amp;d) const </argsstring>
        <name>glbMax</name>
        <param>
          <type>const <ref refid="classGecode_1_1Delta" kindref="compound">Delta</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Return maximum value just pruned from glb. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="422" column="1" bodyfile="/usr/include/gecode/set/view/const.hpp" bodystart="373" bodyend="376"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1EmptyView_1afbb7f6fc85c8fbe2b19ff10b1c844607" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::Set::EmptyView::glbAny</definition>
        <argsstring>(const Delta &amp;d) const </argsstring>
        <name>glbAny</name>
        <param>
          <type>const <ref refid="classGecode_1_1Delta" kindref="compound">Delta</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Test whether arbitrary values got pruned from glb. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="424" column="1" bodyfile="/usr/include/gecode/set/view/const.hpp" bodystart="379" bodyend="382"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1EmptyView_1ac7b395dbe8da310828af370783a79ec8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Set::EmptyView::lubMin</definition>
        <argsstring>(const Delta &amp;d) const </argsstring>
        <name>lubMin</name>
        <param>
          <type>const <ref refid="classGecode_1_1Delta" kindref="compound">Delta</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Return minimum value just pruned from lub. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="426" column="1" bodyfile="/usr/include/gecode/set/view/const.hpp" bodystart="385" bodyend="388"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1EmptyView_1a3c6801c84e9e82928b047908ab35e37e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Set::EmptyView::lubMax</definition>
        <argsstring>(const Delta &amp;d) const </argsstring>
        <name>lubMax</name>
        <param>
          <type>const <ref refid="classGecode_1_1Delta" kindref="compound">Delta</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Return maximum value just pruned from lub. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="428" column="1" bodyfile="/usr/include/gecode/set/view/const.hpp" bodystart="391" bodyend="394"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1EmptyView_1a490e406bf5393d1fe49888c42d3fa878" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::Set::EmptyView::lubAny</definition>
        <argsstring>(const Delta &amp;d) const </argsstring>
        <name>lubAny</name>
        <param>
          <type>const <ref refid="classGecode_1_1Delta" kindref="compound">Delta</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Test whether arbitrary values got pruned from lub. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="430" column="1" bodyfile="/usr/include/gecode/set/view/const.hpp" bodystart="397" bodyend="400"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="related">
      <memberdef kind="function" id="classGecode_1_1Set_1_1EmptyView_1a637191c3e5c93acfd3fdcb15502393a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Char</type>
          </param>
          <param>
            <type>class Traits</type>
          </param>
        </templateparamlist>
        <type>std::basic_ostream&lt; Char, Traits &gt; &amp;</type>
        <definition>std::basic_ostream&lt; Char, Traits &gt; &amp; operator&lt;&lt;</definition>
        <argsstring>(std::basic_ostream&lt; Char, Traits &gt; &amp;os, const EmptyView &amp;x)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::basic_ostream&lt; Char, Traits &gt; &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1Set_1_1EmptyView" kindref="compound">EmptyView</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Print empty set view. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="323" column="1" bodyfile="/usr/include/gecode/set/view/print.hpp" bodystart="96" bodyend="98"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Constant view for the empty set. </para>    </briefdescription>
    <detaileddescription>
<para>A constant set view <formula id="31">$x$</formula> for the empty set provides operations such that <formula id="31">$x$</formula> behaves like the empty set. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="1954">
        <label>Gecode::ConstView&lt; SetView &gt;</label>
        <link refid="classGecode_1_1ConstView"/>
      </node>
      <node id="1953">
        <label>Gecode::Set::EmptyView</label>
        <link refid="classGecode_1_1Set_1_1EmptyView"/>
        <childnode refid="1954" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1956">
        <label>Gecode::ConstView&lt; SetView &gt;</label>
        <link refid="classGecode_1_1ConstView"/>
      </node>
      <node id="1955">
        <label>Gecode::Set::EmptyView</label>
        <link refid="classGecode_1_1Set_1_1EmptyView"/>
        <childnode refid="1956" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/usr/include/gecode/set/view.hpp" line="335" column="1" bodyfile="/usr/include/gecode/set/view.hpp" bodystart="335" bodyend="433"/>
    <listofallmembers>
      <member refid="classGecode_1_1ConstView_1a4081cb5a97e8391b235dc11ff3c90ad9" prot="public" virt="non-virtual"><scope>Gecode::Set::EmptyView</scope><name>afc</name></member>
      <member refid="classGecode_1_1ConstView_1a1e7c7e5b36175dd5a06382781f84df24" prot="public" virt="non-virtual"><scope>Gecode::Set::EmptyView</scope><name>assigned</name></member>
      <member refid="classGecode_1_1ConstView_1a0cc7502ec1d81feab4035e7e78233186" prot="public" virt="non-virtual"><scope>Gecode::Set::EmptyView</scope><name>cancel</name></member>
      <member refid="classGecode_1_1ConstView_1a892e95a4cef1530ac569f4b1fdd5ff4f" prot="public" virt="non-virtual"><scope>Gecode::Set::EmptyView</scope><name>cancel</name></member>
      <member refid="classGecode_1_1Set_1_1EmptyView_1a2b4be915ce410a3375bfa9c88f5cf5ce" prot="public" virt="non-virtual"><scope>Gecode::Set::EmptyView</scope><name>cardMax</name></member>
      <member refid="classGecode_1_1Set_1_1EmptyView_1af32aae687237fd1e34e484f85eb08b46" prot="public" virt="non-virtual"><scope>Gecode::Set::EmptyView</scope><name>cardMax</name></member>
      <member refid="classGecode_1_1Set_1_1EmptyView_1a259fa797bacdb52a10d9d60508cc534d" prot="public" virt="non-virtual"><scope>Gecode::Set::EmptyView</scope><name>cardMin</name></member>
      <member refid="classGecode_1_1Set_1_1EmptyView_1aeecedb3db45aaed852d732f2c63ec0c3" prot="public" virt="non-virtual"><scope>Gecode::Set::EmptyView</scope><name>cardMin</name></member>
      <member refid="classGecode_1_1Set_1_1EmptyView_1a777bc8b21e247eda0403792b665ffa3b" prot="public" virt="non-virtual"><scope>Gecode::Set::EmptyView</scope><name>contains</name></member>
      <member refid="classGecode_1_1ConstView_1add4ca8530b19051f6bb64f38b0a943c0" prot="public" virt="non-virtual"><scope>Gecode::Set::EmptyView</scope><name>degree</name></member>
      <member refid="classGecode_1_1Set_1_1EmptyView_1a36499db69c57ab65b350c7edecb4502f" prot="public" virt="non-virtual"><scope>Gecode::Set::EmptyView</scope><name>EmptyView</name></member>
      <member refid="classGecode_1_1Set_1_1EmptyView_1aee40f1355795063fb287af7917bde02c" prot="public" virt="non-virtual"><scope>Gecode::Set::EmptyView</scope><name>exclude</name></member>
      <member refid="classGecode_1_1Set_1_1EmptyView_1a6a8db640c7cd4f4b526b285abe6ea8a5" prot="public" virt="non-virtual"><scope>Gecode::Set::EmptyView</scope><name>exclude</name></member>
      <member refid="classGecode_1_1Set_1_1EmptyView_1a9bd1b737a7af310e72de4a138e3003bd" prot="public" virt="non-virtual"><scope>Gecode::Set::EmptyView</scope><name>excludeI</name></member>
      <member refid="classGecode_1_1Set_1_1EmptyView_1afbb7f6fc85c8fbe2b19ff10b1c844607" prot="public" virt="non-virtual"><scope>Gecode::Set::EmptyView</scope><name>glbAny</name></member>
      <member refid="classGecode_1_1Set_1_1EmptyView_1afe3a5fd27f2d90c889981f50e5d1c2ac" prot="public" virt="non-virtual"><scope>Gecode::Set::EmptyView</scope><name>glbMax</name></member>
      <member refid="classGecode_1_1Set_1_1EmptyView_1aca51cc47cd57d98d6a172484345c9d32" prot="public" virt="non-virtual"><scope>Gecode::Set::EmptyView</scope><name>glbMax</name></member>
      <member refid="classGecode_1_1Set_1_1EmptyView_1a0695d237b2602b3407e902bf86afa090" prot="public" virt="non-virtual"><scope>Gecode::Set::EmptyView</scope><name>glbMin</name></member>
      <member refid="classGecode_1_1Set_1_1EmptyView_1a40afaa608e186f561044302365e4d54d" prot="public" virt="non-virtual"><scope>Gecode::Set::EmptyView</scope><name>glbMin</name></member>
      <member refid="classGecode_1_1Set_1_1EmptyView_1a5bbc1e1c6970ceb8290aa0f5e2b233ef" prot="public" virt="non-virtual"><scope>Gecode::Set::EmptyView</scope><name>glbSize</name></member>
      <member refid="classGecode_1_1Set_1_1EmptyView_1a60da50029b6d5cce05c18189b752164a" prot="public" virt="non-virtual"><scope>Gecode::Set::EmptyView</scope><name>include</name></member>
      <member refid="classGecode_1_1Set_1_1EmptyView_1a821d156ca2cd26cc19cd084e0acc0907" prot="public" virt="non-virtual"><scope>Gecode::Set::EmptyView</scope><name>include</name></member>
      <member refid="classGecode_1_1Set_1_1EmptyView_1a0b3d75145c3544f5ffb69b41e4179c7e" prot="public" virt="non-virtual"><scope>Gecode::Set::EmptyView</scope><name>includeI</name></member>
      <member refid="classGecode_1_1Set_1_1EmptyView_1aa5e3070d30c515f89c7da04d7658e5dc" prot="public" virt="non-virtual"><scope>Gecode::Set::EmptyView</scope><name>intersect</name></member>
      <member refid="classGecode_1_1Set_1_1EmptyView_1aa71f8e4cb7754bd3e0e82a1c68a570b8" prot="public" virt="non-virtual"><scope>Gecode::Set::EmptyView</scope><name>intersect</name></member>
      <member refid="classGecode_1_1Set_1_1EmptyView_1adba1fecbfdd18a205e7860276eda505b" prot="public" virt="non-virtual"><scope>Gecode::Set::EmptyView</scope><name>intersectI</name></member>
      <member refid="classGecode_1_1Set_1_1EmptyView_1a490e406bf5393d1fe49888c42d3fa878" prot="public" virt="non-virtual"><scope>Gecode::Set::EmptyView</scope><name>lubAny</name></member>
      <member refid="classGecode_1_1Set_1_1EmptyView_1a01e21f142a67fd667bc1166e89ca9c2d" prot="public" virt="non-virtual"><scope>Gecode::Set::EmptyView</scope><name>lubMax</name></member>
      <member refid="classGecode_1_1Set_1_1EmptyView_1a3c6801c84e9e82928b047908ab35e37e" prot="public" virt="non-virtual"><scope>Gecode::Set::EmptyView</scope><name>lubMax</name></member>
      <member refid="classGecode_1_1Set_1_1EmptyView_1ae494fcee6fec11a8365da9cd98b6abe0" prot="public" virt="non-virtual"><scope>Gecode::Set::EmptyView</scope><name>lubMin</name></member>
      <member refid="classGecode_1_1Set_1_1EmptyView_1ac7b395dbe8da310828af370783a79ec8" prot="public" virt="non-virtual"><scope>Gecode::Set::EmptyView</scope><name>lubMin</name></member>
      <member refid="classGecode_1_1Set_1_1EmptyView_1a5014138258a62dfc50cb241e5f9cefd3" prot="public" virt="non-virtual"><scope>Gecode::Set::EmptyView</scope><name>lubMinN</name></member>
      <member refid="classGecode_1_1Set_1_1EmptyView_1a41aa8c009b3eabbabd8931851ba55a07" prot="public" virt="non-virtual"><scope>Gecode::Set::EmptyView</scope><name>lubSize</name></member>
      <member refid="classGecode_1_1ConstView_1aac6f95f0c055e27122643a9b1abd56f7" prot="public" virt="non-virtual"><scope>Gecode::Set::EmptyView</scope><name>me</name></member>
      <member refid="classGecode_1_1ConstView_1a7a73566c33cdb56acedb6a44dd919a8a" prot="public" virt="non-virtual"><scope>Gecode::Set::EmptyView</scope><name>med</name></member>
      <member refid="classGecode_1_1ConstView_1a4cd961b1afc7330ca276cf905840182a" prot="public" virt="non-virtual"><scope>Gecode::Set::EmptyView</scope><name>modevent</name></member>
      <member refid="classGecode_1_1Set_1_1EmptyView_1acb695e7984f25e063c9e1335693e74fd" prot="public" virt="non-virtual"><scope>Gecode::Set::EmptyView</scope><name>notContains</name></member>
      <member refid="classGecode_1_1Set_1_1EmptyView_1a637191c3e5c93acfd3fdcb15502393a4" prot="public" virt="non-virtual"><scope>Gecode::Set::EmptyView</scope><name>operator&lt;&lt;</name></member>
      <member refid="classGecode_1_1Set_1_1EmptyView_1a7778f782d4edd37c77d119b9bb02b6ae" prot="public" virt="non-virtual"><scope>Gecode::Set::EmptyView</scope><name>same</name></member>
      <member refid="classGecode_1_1ConstView_1a88bd3f6f1de1748f08d6f386bd661c12" prot="public" virt="non-virtual"><scope>Gecode::Set::EmptyView</scope><name>schedule</name></member>
      <member refid="classGecode_1_1ConstView_1a2501b26a166e241f1fe0a3fb1f574682" prot="public" virt="non-virtual"><scope>Gecode::Set::EmptyView</scope><name>subscribe</name></member>
      <member refid="classGecode_1_1ConstView_1a7661595fd39f25b91d0b8a55e9645c12" prot="public" virt="non-virtual"><scope>Gecode::Set::EmptyView</scope><name>subscribe</name></member>
      <member refid="classGecode_1_1Set_1_1EmptyView_1af741de1798ce542b44c53cec9136eef8" prot="public" virt="non-virtual"><scope>Gecode::Set::EmptyView</scope><name>unknownSize</name></member>
      <member refid="classGecode_1_1ConstView_1aa707302c7d06b42165f614cff5dc6fc0" prot="public" virt="non-virtual"><scope>Gecode::Set::EmptyView</scope><name>update</name></member>
      <member refid="classGecode_1_1ConstView_1aee74dc7502b456703a1f44a8c34736c5" prot="public" virt="non-virtual"><scope>Gecode::Set::EmptyView</scope><name>varderived</name></member>
      <member refid="classGecode_1_1ConstView_1aa39169631d6411a2c21e7b9785e7427d" prot="public" virt="non-virtual"><scope>Gecode::Set::EmptyView</scope><name>varimp</name></member>
      <member refid="classGecode_1_1ConstView_1ab14fccf8cab1048f2c7bf4e30d89a338" prot="public" virt="non-virtual"><scope>Gecode::Set::EmptyView</scope><name>VarImpType</name></member>
      <member refid="classGecode_1_1ConstView_1af241f74e7ca3d2a53b8d962a3fd36bcd" prot="public" virt="non-virtual"><scope>Gecode::Set::EmptyView</scope><name>VarType</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
