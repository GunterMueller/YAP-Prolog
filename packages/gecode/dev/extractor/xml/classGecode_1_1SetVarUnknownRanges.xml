<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classGecode_1_1SetVarUnknownRanges" kind="class" prot="public">
    <compoundname>Gecode::SetVarUnknownRanges</compoundname>
    <includes refid="set_8hh" local="no">set.hh</includes>
      <sectiondef kind="user-defined">
      <header>Constructors and initialization</header>
      <memberdef kind="function" id="classGecode_1_1SetVarUnknownRanges_1ace50390541087933170417e65b761c1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::SetVarUnknownRanges::SetVarUnknownRanges</definition>
        <argsstring>(void)</argsstring>
        <name>SetVarUnknownRanges</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set.hh" line="343" column="1" bodyfile="/usr/include/gecode/set/var/set.hpp" bodystart="161" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1SetVarUnknownRanges_1ac5c3bf1632d3bd8983466289b7aa20d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::SetVarUnknownRanges::SetVarUnknownRanges</definition>
        <argsstring>(const SetVar &amp;x)</argsstring>
        <name>SetVarUnknownRanges</name>
        <param>
          <type>const <ref refid="classGecode_1_1SetVar" kindref="compound">SetVar</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Initialize to iterate ranges of variable <emphasis>x</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set.hh" line="345" column="1" bodyfile="/usr/include/gecode/set/var/set.hpp" bodystart="164" bodyend="166"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Iteration control</header>
      <memberdef kind="function" id="classGecode_1_1SetVarUnknownRanges_1a9b35b4f7ba4d33ed9fdc97be18661daf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::SetVarUnknownRanges::operator()</definition>
        <argsstring>(void) const </argsstring>
        <name>operator()</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test whether iterator is still at a range or done. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set.hh" line="351" column="1" bodyfile="/usr/include/gecode/set/var/set.hpp" bodystart="170" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1SetVarUnknownRanges_1a80f743b63befb58541a396605475870c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::SetVarUnknownRanges::operator++</definition>
        <argsstring>(void)</argsstring>
        <name>operator++</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Move iterator to next range (if possible) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set.hh" line="353" column="1" bodyfile="/usr/include/gecode/set/var/set.hpp" bodystart="174" bodyend="174"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Range access</header>
      <memberdef kind="function" id="classGecode_1_1SetVarUnknownRanges_1a0fc87aec58d45fd8855a804f779bb8ee" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::SetVarUnknownRanges::min</definition>
        <argsstring>(void) const </argsstring>
        <name>min</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return smallest value of range. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set.hh" line="359" column="1" bodyfile="/usr/include/gecode/set/var/set.hpp" bodystart="178" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1SetVarUnknownRanges_1a2beb48e30df61006171777349bf98891" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::SetVarUnknownRanges::max</definition>
        <argsstring>(void) const </argsstring>
        <name>max</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return largest value of range. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set.hh" line="361" column="1" bodyfile="/usr/include/gecode/set/var/set.hpp" bodystart="182" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1SetVarUnknownRanges_1aa8343c5823394622f8237cf188227dda" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>forceinline unsigned int Gecode::SetVarUnknownRanges::width</definition>
        <argsstring>(void) const </argsstring>
        <name>width</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return width of range (distance between minimum and maximum) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set.hh" line="363" column="1" bodyfile="/usr/include/gecode/set/var/set.hpp" bodystart="186" bodyend="186"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classGecode_1_1SetVarUnknownRanges_1a6d95f7ef3fcaefca8d01778dc65ced63" prot="private" static="no" mutable="no">
        <type><ref refid="classGecode_1_1Set_1_1UnknownRanges" kindref="compound">Set::UnknownRanges</ref>&lt; <ref refid="classGecode_1_1Set_1_1SetVarImp" kindref="compound">Set::SetVarImp</ref> * &gt;</type>
        <definition>Set::UnknownRanges&lt;Set::SetVarImp*&gt; Gecode::SetVarUnknownRanges::iter</definition>
        <argsstring></argsstring>
        <name>iter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set.hh" line="338" column="1" bodyfile="/usr/include/gecode/set.hh" bodystart="338" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Iterator for the unknown ranges of a set variable. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/usr/include/gecode/set.hh" line="336" column="1" bodyfile="/usr/include/gecode/set.hh" bodystart="336" bodyend="365"/>
    <listofallmembers>
      <member refid="classGecode_1_1SetVarUnknownRanges_1a6d95f7ef3fcaefca8d01778dc65ced63" prot="private" virt="non-virtual"><scope>Gecode::SetVarUnknownRanges</scope><name>iter</name></member>
      <member refid="classGecode_1_1SetVarUnknownRanges_1a2beb48e30df61006171777349bf98891" prot="public" virt="non-virtual"><scope>Gecode::SetVarUnknownRanges</scope><name>max</name></member>
      <member refid="classGecode_1_1SetVarUnknownRanges_1a0fc87aec58d45fd8855a804f779bb8ee" prot="public" virt="non-virtual"><scope>Gecode::SetVarUnknownRanges</scope><name>min</name></member>
      <member refid="classGecode_1_1SetVarUnknownRanges_1a9b35b4f7ba4d33ed9fdc97be18661daf" prot="public" virt="non-virtual"><scope>Gecode::SetVarUnknownRanges</scope><name>operator()</name></member>
      <member refid="classGecode_1_1SetVarUnknownRanges_1a80f743b63befb58541a396605475870c" prot="public" virt="non-virtual"><scope>Gecode::SetVarUnknownRanges</scope><name>operator++</name></member>
      <member refid="classGecode_1_1SetVarUnknownRanges_1ace50390541087933170417e65b761c1a" prot="public" virt="non-virtual"><scope>Gecode::SetVarUnknownRanges</scope><name>SetVarUnknownRanges</name></member>
      <member refid="classGecode_1_1SetVarUnknownRanges_1ac5c3bf1632d3bd8983466289b7aa20d9" prot="public" virt="non-virtual"><scope>Gecode::SetVarUnknownRanges</scope><name>SetVarUnknownRanges</name></member>
      <member refid="classGecode_1_1SetVarUnknownRanges_1aa8343c5823394622f8237cf188227dda" prot="public" virt="non-virtual"><scope>Gecode::SetVarUnknownRanges</scope><name>width</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
