<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classGecode_1_1Gist_1_1Node" kind="class" prot="public">
    <compoundname>Gecode::Gist::Node</compoundname>
    <derivedcompoundref refid="classGecode_1_1Gist_1_1SpaceNode" prot="public" virt="non-virtual">Gecode::Gist::SpaceNode</derivedcompoundref>
    <includes refid="node_8hh" local="no">node.hh</includes>
      <sectiondef kind="private-type">
      <memberdef kind="enum" id="classGecode_1_1Gist_1_1Node_1a176875065c850441aafdf0bcef45bfdc" prot="private" static="no">
        <name>@1</name>
        <enumvalue id="classGecode_1_1Gist_1_1Node_1a176875065c850441aafdf0bcef45bfdca57499d40c7e103426264bd2b4019b350" prot="private">
          <name>UNDET</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classGecode_1_1Gist_1_1Node_1a176875065c850441aafdf0bcef45bfdca51660b1ed3e347d3fa213bc0dd70d5b6" prot="private">
          <name>LEAF</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classGecode_1_1Gist_1_1Node_1a176875065c850441aafdf0bcef45bfdcacde7f286f9d47b378736039be410d746" prot="private">
          <name>TWO_CHILDREN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classGecode_1_1Gist_1_1Node_1a176875065c850441aafdf0bcef45bfdcaee0edd2c1dfd2b58dd488b1a86707702" prot="private">
          <name>MORE_CHILDREN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Tags that are used to encode the number of children. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/gist/node.hh" line="113" column="1" bodyfile="/usr/include/gecode/gist/node.hh" bodystart="113" bodyend="118"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classGecode_1_1Gist_1_1Node_1a21ef10b538b71bd34825e488a42f11b9" prot="public" static="no">
        <type><ref refid="classGecode_1_1Gist_1_1NodeAllocatorBase" kindref="compound">NodeAllocatorBase</ref>&lt; <ref refid="classGecode_1_1Gist_1_1VisualNode" kindref="compound">VisualNode</ref> &gt;</type>
        <definition>typedef NodeAllocatorBase&lt;VisualNode&gt; Gecode::Gist::Node::NodeAllocator</definition>
        <argsstring></argsstring>
        <name>NodeAllocator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/gist/node.hh" line="147" column="1" bodyfile="/usr/include/gecode/gist/node.hh" bodystart="147" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classGecode_1_1Gist_1_1Node_1aad19ceabd715401445703301ebddaf0f" prot="private" static="no" mutable="no">
        <type>void *</type>
        <definition>void* Gecode::Gist::Node::childrenOrFirstChild</definition>
        <argsstring></argsstring>
        <name>childrenOrFirstChild</name>
        <briefdescription>
<para>The children, or in case there are at most two, the first child. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/gist/node.hh" line="121" column="1" bodyfile="/usr/include/gecode/gist/node.hh" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Gist_1_1Node_1a96b9578e7d2bc4b6fa9ea33c6a2a3c9c" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Gecode::Gist::Node::noOfChildren</definition>
        <argsstring></argsstring>
        <name>noOfChildren</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The number of children, in case it is greater than 2, or the first child (if negative) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/gist/node.hh" line="126" column="1" bodyfile="/usr/include/gecode/gist/node.hh" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Gist_1_1Node_1a322f7d825cf1ffcb79e2f5c7209324b2" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Gecode::Gist::Node::parent</definition>
        <argsstring></argsstring>
        <name>parent</name>
        <briefdescription>
<para>The parent of this node, or NULL for the root. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/gist/node.hh" line="129" column="1" bodyfile="/usr/include/gecode/gist/node.hh" bodystart="129" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classGecode_1_1Gist_1_1Node_1a3e6f02e5171c2fe4e25a2b13d84ac672" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>forceinline unsigned int Gecode::Gist::Node::getTag</definition>
        <argsstring>(void) const </argsstring>
        <name>getTag</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Read the tag of childrenOrFirstChild. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/gist/node.hh" line="132" column="1" bodyfile="/usr/include/gecode/gist/node.hpp" bodystart="153" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Gist_1_1Node_1a4f7cf20fe23acfd793214fafc279693a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Gist::Node::setTag</definition>
        <argsstring>(unsigned int tag)</argsstring>
        <name>setTag</name>
        <param>
          <type>unsigned int</type>
          <declname>tag</declname>
        </param>
        <briefdescription>
<para><ref refid="namespaceGecode_1_1Set" kindref="compound">Set</ref> the tag of childrenOrFirstChild. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/gist/node.hh" line="134" column="1" bodyfile="/usr/include/gecode/gist/node.hpp" bodystart="159" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Gist_1_1Node_1ae4a28b02b73bfad23b0cbd5bf13de245" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>forceinline void * Gecode::Gist::Node::getPtr</definition>
        <argsstring>(void) const </argsstring>
        <name>getPtr</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return childrenOrFirstChild without tag. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/gist/node.hh" line="136" column="1" bodyfile="/usr/include/gecode/gist/node.hpp" bodystart="167" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Gist_1_1Node_1a50c5614d16dddae2bbf572880b7d9664" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Gist::Node::getFirstChild</definition>
        <argsstring>(void) const </argsstring>
        <name>getFirstChild</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return childrenOrFirstChild as integer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/gist/node.hh" line="138" column="1" bodyfile="/usr/include/gecode/gist/node.hpp" bodystart="173" bodyend="176"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classGecode_1_1Gist_1_1Node_1a3c539ac10e753095aeafa88722b9dd37" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::Gist::Node::isUndetermined</definition>
        <argsstring>(void) const </argsstring>
        <name>isUndetermined</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return whether this node is undetermined. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/gist/node.hh" line="142" column="1" bodyfile="/usr/include/gecode/gist/node.hpp" bodystart="196" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Gist_1_1Node_1a81a3ee39115b6771a4d63edfeef2fe47" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Gist::Node::getChild</definition>
        <argsstring>(int n) const </argsstring>
        <name>getChild</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Return index of child no <emphasis>n</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/gist/node.hh" line="145" column="1" bodyfile="/usr/include/gecode/gist/node.hpp" bodystart="199" bodyend="207"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classGecode_1_1Gist_1_1Node_1a71b358f00310f2776ebfe4c491e4399d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Gist::Node::Node</definition>
        <argsstring>(int p, bool failed=false)</argsstring>
        <name>Node</name>
        <param>
          <type>int</type>
          <declname>p</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>failed</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Construct node with parent <emphasis>p</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/gist/node.hh" line="150" column="1" bodyfile="/usr/include/gecode/gist/node.hpp" bodystart="179" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Gist_1_1Node_1af832b649d232c4d03b6fcf534c3482e7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Gist::Node::getParent</definition>
        <argsstring>(void) const </argsstring>
        <name>getParent</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return the parent. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/gist/node.hh" line="153" column="1" bodyfile="/usr/include/gecode/gist/node.hpp" bodystart="186" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Gist_1_1Node_1a20e1a0cd69047563508f91e3fca0d5c2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGecode_1_1Gist_1_1VisualNode" kindref="compound">VisualNode</ref> *</type>
        <definition>forceinline VisualNode * Gecode::Gist::Node::getParent</definition>
        <argsstring>(const NodeAllocator &amp;na) const </argsstring>
        <name>getParent</name>
        <param>
          <type>const <ref refid="classGecode_1_1Gist_1_1NodeAllocatorBase" kindref="compound">NodeAllocator</ref> &amp;</type>
          <declname>na</declname>
        </param>
        <briefdescription>
<para>Return the parent. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/gist/node.hh" line="155" column="1" bodyfile="/usr/include/gecode/gist/node.hpp" bodystart="191" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Gist_1_1Node_1a799e7bc0bb7c2e99a916d47b8366990a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGecode_1_1Gist_1_1VisualNode" kindref="compound">VisualNode</ref> *</type>
        <definition>forceinline VisualNode * Gecode::Gist::Node::getChild</definition>
        <argsstring>(const NodeAllocator &amp;na, int n) const </argsstring>
        <name>getChild</name>
        <param>
          <type>const <ref refid="classGecode_1_1Gist_1_1NodeAllocatorBase" kindref="compound">NodeAllocator</ref> &amp;</type>
          <declname>na</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Return child no <emphasis>n</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/gist/node.hh" line="157" column="1" bodyfile="/usr/include/gecode/gist/node.hpp" bodystart="210" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Gist_1_1Node_1adff3aae1f3bb07f9c73d23482b756ddf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Gecode::Gist::Node::getIndex</definition>
        <argsstring>(const NodeAllocator &amp;na) const </argsstring>
        <name>getIndex</name>
        <param>
          <type>const <ref refid="classGecode_1_1Gist_1_1NodeAllocatorBase" kindref="compound">NodeAllocator</ref> &amp;</type>
          <declname>na</declname>
        </param>
        <briefdescription>
<para>Return index of this node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/gist/node.hh" line="160" column="1" bodyfile="/usr/include/gecode/gist/node.hpp" bodystart="228" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Gist_1_1Node_1a2b0f5b6e8ab7b1c0ca0dd91abbac7a97" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::Gist::Node::isRoot</definition>
        <argsstring>(void) const </argsstring>
        <name>isRoot</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Check if this node is the root of a tree. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/gist/node.hh" line="163" column="1" bodyfile="/usr/include/gecode/gist/node.hpp" bodystart="215" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Gist_1_1Node_1a4d03aa68107480cfe62dedf6b369f389" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gecode::Gist::Node::setNumberOfChildren</definition>
        <argsstring>(unsigned int n, NodeAllocator &amp;na)</argsstring>
        <name>setNumberOfChildren</name>
        <param>
          <type>unsigned int</type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Gist_1_1NodeAllocatorBase" kindref="compound">NodeAllocator</ref> &amp;</type>
          <declname>na</declname>
        </param>
        <briefdescription>
<para><ref refid="namespaceGecode_1_1Set" kindref="compound">Set</ref> the number of children to <emphasis>n</emphasis> and initialize children. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/gist/node.hh" line="166" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Gist_1_1Node_1afbbbcaf065a9cf68d2bee0414468000d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>forceinline unsigned int Gecode::Gist::Node::getNumberOfChildren</definition>
        <argsstring>(void) const </argsstring>
        <name>getNumberOfChildren</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return the number of children. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/gist/node.hh" line="169" column="1" bodyfile="/usr/include/gecode/gist/node.hpp" bodystart="218" bodyend="225"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Base class for nodes of the search tree. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4448">
        <label>Gecode::Gist::VisualNode</label>
        <link refid="classGecode_1_1Gist_1_1VisualNode"/>
        <childnode refid="4447" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4446">
        <label>Gecode::Gist::Node</label>
        <link refid="classGecode_1_1Gist_1_1Node"/>
      </node>
      <node id="4447">
        <label>Gecode::Gist::SpaceNode</label>
        <link refid="classGecode_1_1Gist_1_1SpaceNode"/>
        <childnode refid="4446" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/usr/include/gecode/gist/node.hh" line="110" column="1" bodyfile="/usr/include/gecode/gist/node.hh" bodystart="110" bodyend="171"/>
    <listofallmembers>
      <member refid="classGecode_1_1Gist_1_1Node_1aad19ceabd715401445703301ebddaf0f" prot="private" virt="non-virtual"><scope>Gecode::Gist::Node</scope><name>childrenOrFirstChild</name></member>
      <member refid="classGecode_1_1Gist_1_1Node_1a81a3ee39115b6771a4d63edfeef2fe47" prot="protected" virt="non-virtual"><scope>Gecode::Gist::Node</scope><name>getChild</name></member>
      <member refid="classGecode_1_1Gist_1_1Node_1a799e7bc0bb7c2e99a916d47b8366990a" prot="public" virt="non-virtual"><scope>Gecode::Gist::Node</scope><name>getChild</name></member>
      <member refid="classGecode_1_1Gist_1_1Node_1a50c5614d16dddae2bbf572880b7d9664" prot="private" virt="non-virtual"><scope>Gecode::Gist::Node</scope><name>getFirstChild</name></member>
      <member refid="classGecode_1_1Gist_1_1Node_1adff3aae1f3bb07f9c73d23482b756ddf" prot="public" virt="non-virtual"><scope>Gecode::Gist::Node</scope><name>getIndex</name></member>
      <member refid="classGecode_1_1Gist_1_1Node_1afbbbcaf065a9cf68d2bee0414468000d" prot="public" virt="non-virtual"><scope>Gecode::Gist::Node</scope><name>getNumberOfChildren</name></member>
      <member refid="classGecode_1_1Gist_1_1Node_1af832b649d232c4d03b6fcf534c3482e7" prot="public" virt="non-virtual"><scope>Gecode::Gist::Node</scope><name>getParent</name></member>
      <member refid="classGecode_1_1Gist_1_1Node_1a20e1a0cd69047563508f91e3fca0d5c2" prot="public" virt="non-virtual"><scope>Gecode::Gist::Node</scope><name>getParent</name></member>
      <member refid="classGecode_1_1Gist_1_1Node_1ae4a28b02b73bfad23b0cbd5bf13de245" prot="private" virt="non-virtual"><scope>Gecode::Gist::Node</scope><name>getPtr</name></member>
      <member refid="classGecode_1_1Gist_1_1Node_1a3e6f02e5171c2fe4e25a2b13d84ac672" prot="private" virt="non-virtual"><scope>Gecode::Gist::Node</scope><name>getTag</name></member>
      <member refid="classGecode_1_1Gist_1_1Node_1a2b0f5b6e8ab7b1c0ca0dd91abbac7a97" prot="public" virt="non-virtual"><scope>Gecode::Gist::Node</scope><name>isRoot</name></member>
      <member refid="classGecode_1_1Gist_1_1Node_1a3c539ac10e753095aeafa88722b9dd37" prot="protected" virt="non-virtual"><scope>Gecode::Gist::Node</scope><name>isUndetermined</name></member>
      <member refid="classGecode_1_1Gist_1_1Node_1a176875065c850441aafdf0bcef45bfdca51660b1ed3e347d3fa213bc0dd70d5b6" prot="private" virt="non-virtual"><scope>Gecode::Gist::Node</scope><name>LEAF</name></member>
      <member refid="classGecode_1_1Gist_1_1Node_1a176875065c850441aafdf0bcef45bfdcaee0edd2c1dfd2b58dd488b1a86707702" prot="private" virt="non-virtual"><scope>Gecode::Gist::Node</scope><name>MORE_CHILDREN</name></member>
      <member refid="classGecode_1_1Gist_1_1Node_1a71b358f00310f2776ebfe4c491e4399d" prot="public" virt="non-virtual"><scope>Gecode::Gist::Node</scope><name>Node</name></member>
      <member refid="classGecode_1_1Gist_1_1Node_1a21ef10b538b71bd34825e488a42f11b9" prot="public" virt="non-virtual"><scope>Gecode::Gist::Node</scope><name>NodeAllocator</name></member>
      <member refid="classGecode_1_1Gist_1_1Node_1a96b9578e7d2bc4b6fa9ea33c6a2a3c9c" prot="private" virt="non-virtual"><scope>Gecode::Gist::Node</scope><name>noOfChildren</name></member>
      <member refid="classGecode_1_1Gist_1_1Node_1a322f7d825cf1ffcb79e2f5c7209324b2" prot="private" virt="non-virtual"><scope>Gecode::Gist::Node</scope><name>parent</name></member>
      <member refid="classGecode_1_1Gist_1_1Node_1a4d03aa68107480cfe62dedf6b369f389" prot="public" virt="non-virtual"><scope>Gecode::Gist::Node</scope><name>setNumberOfChildren</name></member>
      <member refid="classGecode_1_1Gist_1_1Node_1a4f7cf20fe23acfd793214fafc279693a" prot="private" virt="non-virtual"><scope>Gecode::Gist::Node</scope><name>setTag</name></member>
      <member refid="classGecode_1_1Gist_1_1Node_1a176875065c850441aafdf0bcef45bfdcacde7f286f9d47b378736039be410d746" prot="private" virt="non-virtual"><scope>Gecode::Gist::Node</scope><name>TWO_CHILDREN</name></member>
      <member refid="classGecode_1_1Gist_1_1Node_1a176875065c850441aafdf0bcef45bfdca57499d40c7e103426264bd2b4019b350" prot="private" virt="non-virtual"><scope>Gecode::Gist::Node</scope><name>UNDET</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
