<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="namespaceGecode_1_1Int_1_1Unary" kind="namespace">
    <compoundname>Gecode::Int::Unary</compoundname>
    <innerclass refid="classGecode_1_1Int_1_1Unary_1_1ManFixPTask" prot="public">Gecode::Int::Unary::ManFixPTask</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1Unary_1_1ManFixPSETask" prot="public">Gecode::Int::Unary::ManFixPSETask</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1Unary_1_1OptFixPTask" prot="public">Gecode::Int::Unary::OptFixPTask</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1Unary_1_1OptFixPSETask" prot="public">Gecode::Int::Unary::OptFixPSETask</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1Unary_1_1ManFlexTask" prot="public">Gecode::Int::Unary::ManFlexTask</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1Unary_1_1OptFlexTask" prot="public">Gecode::Int::Unary::OptFlexTask</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1Unary_1_1OmegaNode" prot="public">Gecode::Int::Unary::OmegaNode</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1Unary_1_1OmegaTree" prot="public">Gecode::Int::Unary::OmegaTree</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaNode" prot="public">Gecode::Int::Unary::OmegaLambdaNode</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaTree" prot="public">Gecode::Int::Unary::OmegaLambdaTree</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1Unary_1_1ManProp" prot="public">Gecode::Int::Unary::ManProp</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1Unary_1_1OptProp" prot="public">Gecode::Int::Unary::OptProp</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespaceGecode_1_1Int_1_1Unary_1aa30d93074dccf16dd89d810214a2ee21" prot="public" static="no">
        <type><ref refid="classGecode_1_1Int_1_1Unary_1_1ManFixPTask" kindref="compound">ManFixPTask</ref></type>
        <definition>typedef ManFixPTask Gecode::Int::Unary::ManFixPTaskFwd</definition>
        <argsstring></argsstring>
        <name>ManFixPTaskFwd</name>
        <briefdescription>
<para>Forward mandatory fixed task view. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/unary.hh" line="400" column="1" bodyfile="/usr/include/gecode/int/unary.hh" bodystart="400" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceGecode_1_1Int_1_1Unary_1ac33fc9cb706a7f9a131af941646d274b" prot="public" static="no">
        <type><ref refid="classGecode_1_1Int_1_1FwdToBwd" kindref="compound">FwdToBwd</ref>&lt; <ref refid="namespaceGecode_1_1Int_1_1Unary_1aa30d93074dccf16dd89d810214a2ee21" kindref="member">ManFixPTaskFwd</ref> &gt;</type>
        <definition>typedef FwdToBwd&lt;ManFixPTaskFwd&gt; Gecode::Int::Unary::ManFixPTaskBwd</definition>
        <argsstring></argsstring>
        <name>ManFixPTaskBwd</name>
        <briefdescription>
<para>Backward (dual) mandatory fixed task view. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/unary.hh" line="403" column="1" bodyfile="/usr/include/gecode/int/unary.hh" bodystart="403" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceGecode_1_1Int_1_1Unary_1aa8fc35dd056f6571475bb25a32110e5a" prot="public" static="no">
        <type><ref refid="classGecode_1_1Int_1_1Unary_1_1ManFixPSETask" kindref="compound">ManFixPSETask</ref></type>
        <definition>typedef ManFixPSETask Gecode::Int::Unary::ManFixPSETaskFwd</definition>
        <argsstring></argsstring>
        <name>ManFixPSETaskFwd</name>
        <briefdescription>
<para>Forward mandatory fixed task view. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/unary.hh" line="406" column="1" bodyfile="/usr/include/gecode/int/unary.hh" bodystart="406" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceGecode_1_1Int_1_1Unary_1a6ebaeed0bb327c5802ff0963ce96b816" prot="public" static="no">
        <type><ref refid="classGecode_1_1Int_1_1FwdToBwd" kindref="compound">FwdToBwd</ref>&lt; <ref refid="namespaceGecode_1_1Int_1_1Unary_1aa8fc35dd056f6571475bb25a32110e5a" kindref="member">ManFixPSETaskFwd</ref> &gt;</type>
        <definition>typedef FwdToBwd&lt;ManFixPSETaskFwd&gt; Gecode::Int::Unary::ManFixPSETaskBwd</definition>
        <argsstring></argsstring>
        <name>ManFixPSETaskBwd</name>
        <briefdescription>
<para>Backward (dual) mandatory fixed task view. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/unary.hh" line="409" column="1" bodyfile="/usr/include/gecode/int/unary.hh" bodystart="409" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceGecode_1_1Int_1_1Unary_1a6abb54090d4ec2e9337ca6bc5c30f6ca" prot="public" static="no">
        <type><ref refid="classGecode_1_1Int_1_1Unary_1_1OptFixPTask" kindref="compound">OptFixPTask</ref></type>
        <definition>typedef OptFixPTask Gecode::Int::Unary::OptFixPTaskFwd</definition>
        <argsstring></argsstring>
        <name>OptFixPTaskFwd</name>
        <briefdescription>
<para>Forward optional fixed task view. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/unary.hh" line="412" column="1" bodyfile="/usr/include/gecode/int/unary.hh" bodystart="412" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceGecode_1_1Int_1_1Unary_1a70814e6ddb8fe84a4dbb3a86042135e0" prot="public" static="no">
        <type><ref refid="classGecode_1_1Int_1_1FwdToBwd" kindref="compound">FwdToBwd</ref>&lt; <ref refid="namespaceGecode_1_1Int_1_1Unary_1a6abb54090d4ec2e9337ca6bc5c30f6ca" kindref="member">OptFixPTaskFwd</ref> &gt;</type>
        <definition>typedef FwdToBwd&lt;OptFixPTaskFwd&gt; Gecode::Int::Unary::OptFixPTaskBwd</definition>
        <argsstring></argsstring>
        <name>OptFixPTaskBwd</name>
        <briefdescription>
<para>Backward (dual) optional fixed task view. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/unary.hh" line="415" column="1" bodyfile="/usr/include/gecode/int/unary.hh" bodystart="415" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceGecode_1_1Int_1_1Unary_1a8a74ff8fb71c93f0e9ae4da8e2e62534" prot="public" static="no">
        <type><ref refid="classGecode_1_1Int_1_1Unary_1_1OptFixPSETask" kindref="compound">OptFixPSETask</ref></type>
        <definition>typedef OptFixPSETask Gecode::Int::Unary::OptFixPSETaskFwd</definition>
        <argsstring></argsstring>
        <name>OptFixPSETaskFwd</name>
        <briefdescription>
<para>Forward optional fixed task view. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/unary.hh" line="418" column="1" bodyfile="/usr/include/gecode/int/unary.hh" bodystart="418" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceGecode_1_1Int_1_1Unary_1a4567b1a8c3b1d18765b4086d32d35c86" prot="public" static="no">
        <type><ref refid="classGecode_1_1Int_1_1FwdToBwd" kindref="compound">FwdToBwd</ref>&lt; <ref refid="namespaceGecode_1_1Int_1_1Unary_1a8a74ff8fb71c93f0e9ae4da8e2e62534" kindref="member">OptFixPSETaskFwd</ref> &gt;</type>
        <definition>typedef FwdToBwd&lt;OptFixPSETaskFwd&gt; Gecode::Int::Unary::OptFixPSETaskBwd</definition>
        <argsstring></argsstring>
        <name>OptFixPSETaskBwd</name>
        <briefdescription>
<para>Backward (dual) optional fixed task view. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/unary.hh" line="421" column="1" bodyfile="/usr/include/gecode/int/unary.hh" bodystart="421" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceGecode_1_1Int_1_1Unary_1aba020eb055358332023c794a39127da0" prot="public" static="no">
        <type><ref refid="classGecode_1_1Int_1_1Unary_1_1ManFlexTask" kindref="compound">ManFlexTask</ref></type>
        <definition>typedef ManFlexTask Gecode::Int::Unary::ManFlexTaskFwd</definition>
        <argsstring></argsstring>
        <name>ManFlexTaskFwd</name>
        <briefdescription>
<para>Forward mandatory flexible task view. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/unary.hh" line="424" column="1" bodyfile="/usr/include/gecode/int/unary.hh" bodystart="424" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceGecode_1_1Int_1_1Unary_1a46ad97cb5a177756224655f9414b5717" prot="public" static="no">
        <type><ref refid="classGecode_1_1Int_1_1FwdToBwd" kindref="compound">FwdToBwd</ref>&lt; <ref refid="namespaceGecode_1_1Int_1_1Unary_1aba020eb055358332023c794a39127da0" kindref="member">ManFlexTaskFwd</ref> &gt;</type>
        <definition>typedef FwdToBwd&lt;ManFlexTaskFwd&gt; Gecode::Int::Unary::ManFlexTaskBwd</definition>
        <argsstring></argsstring>
        <name>ManFlexTaskBwd</name>
        <briefdescription>
<para>Backward (dual) mandatory flexible task view. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/unary.hh" line="427" column="1" bodyfile="/usr/include/gecode/int/unary.hh" bodystart="427" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceGecode_1_1Int_1_1Unary_1a53e332385134f48248d569bd6de29acd" prot="public" static="no">
        <type><ref refid="classGecode_1_1Int_1_1Unary_1_1OptFlexTask" kindref="compound">OptFlexTask</ref></type>
        <definition>typedef OptFlexTask Gecode::Int::Unary::OptFlexTaskFwd</definition>
        <argsstring></argsstring>
        <name>OptFlexTaskFwd</name>
        <briefdescription>
<para>Forward optional flexible task view. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/unary.hh" line="430" column="1" bodyfile="/usr/include/gecode/int/unary.hh" bodystart="430" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceGecode_1_1Int_1_1Unary_1a4c01594ddcfd091a4946dcb99a0bd2f2" prot="public" static="no">
        <type><ref refid="classGecode_1_1Int_1_1FwdToBwd" kindref="compound">FwdToBwd</ref>&lt; <ref refid="namespaceGecode_1_1Int_1_1Unary_1a53e332385134f48248d569bd6de29acd" kindref="member">OptFlexTaskFwd</ref> &gt;</type>
        <definition>typedef FwdToBwd&lt;OptFlexTaskFwd&gt; Gecode::Int::Unary::OptFlexTaskBwd</definition>
        <argsstring></argsstring>
        <name>OptFlexTaskBwd</name>
        <briefdescription>
<para>Backward (dual) optional flexible task view. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/unary.hh" line="433" column="1" bodyfile="/usr/include/gecode/int/unary.hh" bodystart="433" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Unary_1a7c2bb0dd017021f7cdabeb651dc8db4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ManTaskView</type>
          </param>
        </templateparamlist>
        <type>forceinline <ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>forceinline ExecStatus Gecode::Int::Unary::detectable</definition>
        <argsstring>(Space &amp;home, TaskViewArray&lt; ManTaskView &gt; &amp;t)</argsstring>
        <name>detectable</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1TaskViewArray" kindref="compound">TaskViewArray</ref>&lt; ManTaskView &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/unary/detectable.hpp" line="42" column="1" bodyfile="/usr/include/gecode/int/unary/detectable.hpp" bodystart="42" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Unary_1abd57b2a49fd35e5a6ada3216e8ac4e4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ManTask</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>ExecStatus Gecode::Int::Unary::detectable</definition>
        <argsstring>(Space &amp;home, TaskArray&lt; ManTask &gt; &amp;t)</argsstring>
        <name>detectable</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1TaskArray" kindref="compound">TaskArray</ref>&lt; ManTask &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Propagate detectable precedences. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/unary/detectable.hpp" line="66" column="1" bodyfile="/usr/include/gecode/int/unary/detectable.hpp" bodystart="66" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Unary_1ac7a886538bbb37bc0a00edd2f25dadf0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class OptTaskView</type>
          </param>
        </templateparamlist>
        <type>forceinline <ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>forceinline ExecStatus Gecode::Int::Unary::detectable</definition>
        <argsstring>(Space &amp;home, Propagator &amp;p, TaskViewArray&lt; OptTaskView &gt; &amp;t)</argsstring>
        <name>detectable</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Propagator" kindref="compound">Propagator</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1TaskViewArray" kindref="compound">TaskViewArray</ref>&lt; OptTaskView &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/unary/detectable.hpp" line="76" column="1" bodyfile="/usr/include/gecode/int/unary/detectable.hpp" bodystart="76" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Unary_1a3b6bc2b4805c005371d825c947b5463f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class OptTask</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>ExecStatus Gecode::Int::Unary::detectable</definition>
        <argsstring>(Space &amp;home, Propagator &amp;p, TaskArray&lt; OptTask &gt; &amp;t)</argsstring>
        <name>detectable</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Propagator" kindref="compound">Propagator</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1TaskArray" kindref="compound">TaskArray</ref>&lt; OptTask &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Propagate detectable precedences. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/unary/detectable.hpp" line="107" column="1" bodyfile="/usr/include/gecode/int/unary/detectable.hpp" bodystart="107" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Unary_1ad9c4621315fda5a05213c2aa5b7b1fac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TaskView</type>
          </param>
        </templateparamlist>
        <type>forceinline <ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>forceinline ExecStatus Gecode::Int::Unary::edgefinding</definition>
        <argsstring>(Space &amp;home, TaskViewArray&lt; TaskView &gt; &amp;t)</argsstring>
        <name>edgefinding</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1TaskViewArray" kindref="compound">TaskViewArray</ref>&lt; TaskView &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/unary/edge-finding.hpp" line="44" column="1" bodyfile="/usr/include/gecode/int/unary/edge-finding.hpp" bodystart="44" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Unary_1ad851dba80a4846ab8a6dc9945bcc7493" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Task</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>ExecStatus Gecode::Int::Unary::edgefinding</definition>
        <argsstring>(Space &amp;home, TaskArray&lt; Task &gt; &amp;t)</argsstring>
        <name>edgefinding</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1TaskArray" kindref="compound">TaskArray</ref>&lt; Task &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Propagate by edge finding. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/unary/edge-finding.hpp" line="69" column="1" bodyfile="/usr/include/gecode/int/unary/edge-finding.hpp" bodystart="69" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Unary_1ae4cc7a71255b158439ce8948a7e3c5e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ManTaskView</type>
          </param>
        </templateparamlist>
        <type>forceinline <ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>forceinline ExecStatus Gecode::Int::Unary::notlast</definition>
        <argsstring>(Space &amp;home, TaskViewArray&lt; ManTaskView &gt; &amp;t)</argsstring>
        <name>notlast</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1TaskViewArray" kindref="compound">TaskViewArray</ref>&lt; ManTaskView &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/unary/not-first-not-last.hpp" line="44" column="1" bodyfile="/usr/include/gecode/int/unary/not-first-not-last.hpp" bodystart="44" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Unary_1acd770450438ed71f269482b841b7575f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ManTask</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>ExecStatus Gecode::Int::Unary::notfirstnotlast</definition>
        <argsstring>(Space &amp;home, TaskArray&lt; ManTask &gt; &amp;t)</argsstring>
        <name>notfirstnotlast</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1TaskArray" kindref="compound">TaskArray</ref>&lt; ManTask &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Propagate not-first and not-last. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/unary/not-first-not-last.hpp" line="76" column="1" bodyfile="/usr/include/gecode/int/unary/not-first-not-last.hpp" bodystart="76" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Unary_1a49da2c8093e548d22c49116965b514ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class OptTaskView</type>
          </param>
        </templateparamlist>
        <type>forceinline <ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>forceinline ExecStatus Gecode::Int::Unary::notlast</definition>
        <argsstring>(Space &amp;home, Propagator &amp;p, TaskViewArray&lt; OptTaskView &gt; &amp;t)</argsstring>
        <name>notlast</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Propagator" kindref="compound">Propagator</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1TaskViewArray" kindref="compound">TaskViewArray</ref>&lt; OptTaskView &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/unary/not-first-not-last.hpp" line="85" column="1" bodyfile="/usr/include/gecode/int/unary/not-first-not-last.hpp" bodystart="85" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Unary_1ace223857b90f199e565ec7df3ed403d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class OptTask</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>ExecStatus Gecode::Int::Unary::notfirstnotlast</definition>
        <argsstring>(Space &amp;home, Propagator &amp;p, TaskArray&lt; OptTask &gt; &amp;t)</argsstring>
        <name>notfirstnotlast</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Propagator" kindref="compound">Propagator</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1TaskArray" kindref="compound">TaskArray</ref>&lt; OptTask &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Propagate not-first and not-last. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/unary/not-first-not-last.hpp" line="124" column="1" bodyfile="/usr/include/gecode/int/unary/not-first-not-last.hpp" bodystart="124" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Unary_1a532b02249c0e8bd688d5b5e169106b67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ManTask</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>ExecStatus Gecode::Int::Unary::overload</definition>
        <argsstring>(Space &amp;home, TaskArray&lt; ManTask &gt; &amp;t)</argsstring>
        <name>overload</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1TaskArray" kindref="compound">TaskArray</ref>&lt; ManTask &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Check mandatory tasks <emphasis>t</emphasis> for overload. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/unary/overload.hpp" line="43" column="1" bodyfile="/usr/include/gecode/int/unary/overload.hpp" bodystart="43" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Unary_1a4eaa9fad1bafcd1ab25c9ec29874e7d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class OptTask</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>ExecStatus Gecode::Int::Unary::overload</definition>
        <argsstring>(Space &amp;home, Propagator &amp;p, TaskArray&lt; OptTask &gt; &amp;t)</argsstring>
        <name>overload</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Propagator" kindref="compound">Propagator</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1TaskArray" kindref="compound">TaskArray</ref>&lt; OptTask &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Check optional tasks <emphasis>t</emphasis> for overload. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/unary/overload.hpp" line="61" column="1" bodyfile="/usr/include/gecode/int/unary/overload.hpp" bodystart="61" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Unary_1a8d462563cef249f56739d32ae8c9651d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Task</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>ExecStatus Gecode::Int::Unary::subsumed</definition>
        <argsstring>(Space &amp;home, Propagator &amp;p, TaskArray&lt; Task &gt; &amp;t)</argsstring>
        <name>subsumed</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Propagator" kindref="compound">Propagator</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1TaskArray" kindref="compound">TaskArray</ref>&lt; Task &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Check tasks <emphasis>t</emphasis> for subsumption. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/unary/subsumption.hpp" line="42" column="1" bodyfile="/usr/include/gecode/int/unary/subsumption.hpp" bodystart="42" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Unary_1ad7501d22199c71d3cb1c24e1e0f3daab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Char</type>
          </param>
          <param>
            <type>class Traits</type>
          </param>
        </templateparamlist>
        <type>std::basic_ostream&lt; Char, Traits &gt; &amp;</type>
        <definition>std::basic_ostream&lt;Char,Traits&gt;&amp; Gecode::Int::Unary::operator&lt;&lt;</definition>
        <argsstring>(std::basic_ostream&lt; Char, Traits &gt; &amp;os, const ManFixPTaskBwd &amp;t)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::basic_ostream&lt; Char, Traits &gt; &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceGecode_1_1Int_1_1Unary_1ac33fc9cb706a7f9a131af941646d274b" kindref="member">ManFixPTaskBwd</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/unary/task-view.hpp" line="42" column="1" bodyfile="/usr/include/gecode/int/unary/task-view.hpp" bodystart="44" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Unary_1a10a9fb1f6e1d1284c95558c73fb26798" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Char</type>
          </param>
          <param>
            <type>class Traits</type>
          </param>
        </templateparamlist>
        <type>std::basic_ostream&lt; Char, Traits &gt; &amp;</type>
        <definition>std::basic_ostream&lt;Char,Traits&gt;&amp; Gecode::Int::Unary::operator&lt;&lt;</definition>
        <argsstring>(std::basic_ostream&lt; Char, Traits &gt; &amp;os, const ManFixPSETaskBwd &amp;t)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::basic_ostream&lt; Char, Traits &gt; &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceGecode_1_1Int_1_1Unary_1a6ebaeed0bb327c5802ff0963ce96b816" kindref="member">ManFixPSETaskBwd</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/unary/task-view.hpp" line="42" column="1" bodyfile="/usr/include/gecode/int/unary/task-view.hpp" bodystart="53" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Unary_1a7aa706693e4a2f9233c1e28086353f7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Char</type>
          </param>
          <param>
            <type>class Traits</type>
          </param>
        </templateparamlist>
        <type>std::basic_ostream&lt; Char, Traits &gt; &amp;</type>
        <definition>std::basic_ostream&lt;Char,Traits&gt;&amp; Gecode::Int::Unary::operator&lt;&lt;</definition>
        <argsstring>(std::basic_ostream&lt; Char, Traits &gt; &amp;os, const OptFixPTaskBwd &amp;t)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::basic_ostream&lt; Char, Traits &gt; &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceGecode_1_1Int_1_1Unary_1a70814e6ddb8fe84a4dbb3a86042135e0" kindref="member">OptFixPTaskBwd</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/unary/task-view.hpp" line="42" column="1" bodyfile="/usr/include/gecode/int/unary/task-view.hpp" bodystart="63" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Unary_1abd141c7330729b77084cd95f446fbbce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Char</type>
          </param>
          <param>
            <type>class Traits</type>
          </param>
        </templateparamlist>
        <type>std::basic_ostream&lt; Char, Traits &gt; &amp;</type>
        <definition>std::basic_ostream&lt;Char,Traits&gt;&amp; Gecode::Int::Unary::operator&lt;&lt;</definition>
        <argsstring>(std::basic_ostream&lt; Char, Traits &gt; &amp;os, const OptFixPSETaskBwd &amp;t)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::basic_ostream&lt; Char, Traits &gt; &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceGecode_1_1Int_1_1Unary_1a4567b1a8c3b1d18765b4086d32d35c86" kindref="member">OptFixPSETaskBwd</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/unary/task-view.hpp" line="42" column="1" bodyfile="/usr/include/gecode/int/unary/task-view.hpp" bodystart="73" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Unary_1a94a8502d04b9b56509388714d5d328f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Char</type>
          </param>
          <param>
            <type>class Traits</type>
          </param>
        </templateparamlist>
        <type>std::basic_ostream&lt; Char, Traits &gt; &amp;</type>
        <definition>std::basic_ostream&lt;Char,Traits&gt;&amp; Gecode::Int::Unary::operator&lt;&lt;</definition>
        <argsstring>(std::basic_ostream&lt; Char, Traits &gt; &amp;os, const ManFlexTaskBwd &amp;t)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::basic_ostream&lt; Char, Traits &gt; &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceGecode_1_1Int_1_1Unary_1a46ad97cb5a177756224655f9414b5717" kindref="member">ManFlexTaskBwd</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/unary/task-view.hpp" line="42" column="1" bodyfile="/usr/include/gecode/int/unary/task-view.hpp" bodystart="84" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Unary_1af3d203ffbd9b207e9b20805db9463c13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Char</type>
          </param>
          <param>
            <type>class Traits</type>
          </param>
        </templateparamlist>
        <type>std::basic_ostream&lt; Char, Traits &gt; &amp;</type>
        <definition>std::basic_ostream&lt;Char,Traits&gt;&amp; Gecode::Int::Unary::operator&lt;&lt;</definition>
        <argsstring>(std::basic_ostream&lt; Char, Traits &gt; &amp;os, const OptFlexTaskBwd &amp;t)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::basic_ostream&lt; Char, Traits &gt; &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceGecode_1_1Int_1_1Unary_1a4c01594ddcfd091a4946dcb99a0bd2f2" kindref="member">OptFlexTaskBwd</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/unary/task-view.hpp" line="42" column="1" bodyfile="/usr/include/gecode/int/unary/task-view.hpp" bodystart="94" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Unary_1a08168288b60ed6626ebea3ddddb4eb6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Char</type>
          </param>
          <param>
            <type>class Traits</type>
          </param>
        </templateparamlist>
        <type>std::basic_ostream&lt; Char, Traits &gt; &amp;</type>
        <definition>std::basic_ostream&lt;Char,Traits&gt;&amp; Gecode::Int::Unary::operator&lt;&lt;</definition>
        <argsstring>(std::basic_ostream&lt; Char, Traits &gt; &amp;os, const ManFixPTask &amp;t)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::basic_ostream&lt; Char, Traits &gt; &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1Int_1_1Unary_1_1ManFixPTask" kindref="compound">ManFixPTask</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/unary/task.hpp" line="152" column="1" bodyfile="/usr/include/gecode/int/unary/task.hpp" bodystart="158" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Unary_1a515e8cf3c5626e37f835cb09ac5e22d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Char</type>
          </param>
          <param>
            <type>class Traits</type>
          </param>
        </templateparamlist>
        <type>std::basic_ostream&lt; Char, Traits &gt; &amp;</type>
        <definition>std::basic_ostream&lt;Char,Traits&gt;&amp; Gecode::Int::Unary::operator&lt;&lt;</definition>
        <argsstring>(std::basic_ostream&lt; Char, Traits &gt; &amp;os, const ManFixPSETask &amp;t)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::basic_ostream&lt; Char, Traits &gt; &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1Int_1_1Unary_1_1ManFixPSETask" kindref="compound">ManFixPSETask</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/unary/task.hpp" line="299" column="1" bodyfile="/usr/include/gecode/int/unary/task.hpp" bodystart="305" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Unary_1a22ee848ca88951520e0de4a5ad5ef2e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Char</type>
          </param>
          <param>
            <type>class Traits</type>
          </param>
        </templateparamlist>
        <type>std::basic_ostream&lt; Char, Traits &gt; &amp;</type>
        <definition>std::basic_ostream&lt;Char,Traits&gt;&amp; Gecode::Int::Unary::operator&lt;&lt;</definition>
        <argsstring>(std::basic_ostream&lt; Char, Traits &gt; &amp;os, const ManFlexTask &amp;t)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::basic_ostream&lt; Char, Traits &gt; &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1Int_1_1Unary_1_1ManFlexTask" kindref="compound">ManFlexTask</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/unary/task.hpp" line="438" column="1" bodyfile="/usr/include/gecode/int/unary/task.hpp" bodystart="446" bodyend="452"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Unary_1a55f651a0db25f1561e3571c7d295b10b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Char</type>
          </param>
          <param>
            <type>class Traits</type>
          </param>
        </templateparamlist>
        <type>std::basic_ostream&lt; Char, Traits &gt; &amp;</type>
        <definition>std::basic_ostream&lt;Char,Traits&gt;&amp; Gecode::Int::Unary::operator&lt;&lt;</definition>
        <argsstring>(std::basic_ostream&lt; Char, Traits &gt; &amp;os, const OptFixPTask &amp;t)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::basic_ostream&lt; Char, Traits &gt; &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1Int_1_1Unary_1_1OptFixPTask" kindref="compound">OptFixPTask</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/unary/task.hpp" line="465" column="1" bodyfile="/usr/include/gecode/int/unary/task.hpp" bodystart="471" bodyend="477"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Unary_1af519055f99f877c977b63d5cab11009d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Char</type>
          </param>
          <param>
            <type>class Traits</type>
          </param>
        </templateparamlist>
        <type>std::basic_ostream&lt; Char, Traits &gt; &amp;</type>
        <definition>std::basic_ostream&lt;Char,Traits&gt;&amp; Gecode::Int::Unary::operator&lt;&lt;</definition>
        <argsstring>(std::basic_ostream&lt; Char, Traits &gt; &amp;os, const OptFixPSETask &amp;t)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::basic_ostream&lt; Char, Traits &gt; &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1Int_1_1Unary_1_1OptFixPSETask" kindref="compound">OptFixPSETask</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/unary/task.hpp" line="490" column="1" bodyfile="/usr/include/gecode/int/unary/task.hpp" bodystart="496" bodyend="502"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Unary_1a59f00588e2eb90c58e68983092a3b59c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Char</type>
          </param>
          <param>
            <type>class Traits</type>
          </param>
        </templateparamlist>
        <type>std::basic_ostream&lt; Char, Traits &gt; &amp;</type>
        <definition>std::basic_ostream&lt;Char,Traits&gt;&amp; Gecode::Int::Unary::operator&lt;&lt;</definition>
        <argsstring>(std::basic_ostream&lt; Char, Traits &gt; &amp;os, const OptFlexTask &amp;t)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::basic_ostream&lt; Char, Traits &gt; &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1Int_1_1Unary_1_1OptFlexTask" kindref="compound">OptFlexTask</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/unary/task.hpp" line="515" column="1" bodyfile="/usr/include/gecode/int/unary/task.hpp" bodystart="521" bodyend="528"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Int for unary resources </para>    </briefdescription>
    <detaileddescription>
<para>The algorithms and data structures follow (mostly): Petr Vilím, Global Constraints in <ref refid="namespaceGecode_1_1Int" kindref="compound">Int</ref>, PhD thesis, Charles University, Prague, Czech Republic, 2007. </para>    </detaileddescription>
    <location file="/usr/include/gecode/int/unary/detectable.hpp" line="38" column="1"/>
  </compounddef>
</doxygen>
