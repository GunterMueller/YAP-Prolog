<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classGecode_1_1Int_1_1Element_1_1Int_1_1IterIdxUnmark" kind="class" prot="protected">
    <compoundname>Gecode::Int::Element::Int::IterIdxUnmark</compoundname>
    <includes refid="int_2element_8hh" local="no">element.hh</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classGecode_1_1Int_1_1Element_1_1Int_1_1IterIdxUnmark_1aea28cd24755711e14f9736509be2034c" prot="private" static="no" mutable="no">
        <type><ref refid="classGecode_1_1Int_1_1Element_1_1Int_1_1IdxVal" kindref="compound">IdxVal</ref> *</type>
        <definition>IdxVal* Gecode::Int::Element::Int&lt; V0, V1, Idx, Val &gt;::IterIdxUnmark::iv</definition>
        <argsstring></argsstring>
        <name>iv</name>
        <briefdescription>
<para>The index value data structure. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/element.hh" line="89" column="1" bodyfile="/usr/include/gecode/int/element.hh" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Int_1_1Element_1_1Int_1_1IterIdxUnmark_1af6bc2f9f93406e5d3f0b55dc8488fdf7" prot="private" static="no" mutable="no">
        <type>Idx</type>
        <definition>Idx Gecode::Int::Element::Int&lt; V0, V1, Idx, Val &gt;::IterIdxUnmark::i</definition>
        <argsstring></argsstring>
        <name>i</name>
        <briefdescription>
<para>Current index value pair. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/element.hh" line="90" column="1" bodyfile="/usr/include/gecode/int/element.hh" bodystart="90" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classGecode_1_1Int_1_1Element_1_1Int_1_1IterIdxUnmark_1a078e217d2f47f7b70bb53b131702a463" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Int::Element::Int&lt; V0, V1, Idx, Val &gt;::IterIdxUnmark::IterIdxUnmark</definition>
        <argsstring>(IdxVal *iv)</argsstring>
        <name>IterIdxUnmark</name>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1Element_1_1Int_1_1IdxVal" kindref="compound">IdxVal</ref> *</type>
          <declname>iv</declname>
        </param>
        <briefdescription>
<para>Initialize with start. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/element.hh" line="93" column="1" bodyfile="/usr/include/gecode/int/element/int.hpp" bodystart="57" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Element_1_1Int_1_1IterIdxUnmark_1a9a2ba9e2352cf084b62c8a04324d8045" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::Int::Element::Int&lt; V0, V1, Idx, Val &gt;::IterIdxUnmark::operator()</definition>
        <argsstring>(void) const </argsstring>
        <name>operator()</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test whether more pairs to be iterated. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/element.hh" line="95" column="1" bodyfile="/usr/include/gecode/int/element/int.hpp" bodystart="67" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Element_1_1Int_1_1IterIdxUnmark_1a37d1f354c7358baf6b886629031076a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Int::Element::Int&lt; V0, V1, Idx, Val &gt;::IterIdxUnmark::operator++</definition>
        <argsstring>(void)</argsstring>
        <name>operator++</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Move to next index value pair (next index) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/element.hh" line="97" column="1" bodyfile="/usr/include/gecode/int/element/int.hpp" bodystart="72" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Element_1_1Int_1_1IterIdxUnmark_1adb21f12c4522eb2ee8e9e15df1d9b637" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Idx</type>
        <definition>forceinline Idx Gecode::Int::Element::Int&lt; V0, V1, Idx, Val &gt;::IterIdxUnmark::val</definition>
        <argsstring>(void) const </argsstring>
        <name>val</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return index of current index value pair. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/element.hh" line="99" column="1" bodyfile="/usr/include/gecode/int/element/int.hpp" bodystart="81" bodyend="84"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Value iterator for indices in index-value map. </para>    </briefdescription>
    <detaileddescription>
<para>The iterator also removes marked index-value pairs. </para>    </detaileddescription>
    <location file="/usr/include/gecode/int/element.hh" line="87" column="1" bodyfile="/usr/include/gecode/int/element.hh" bodystart="87" bodyend="100"/>
    <listofallmembers>
      <member refid="classGecode_1_1Int_1_1Element_1_1Int_1_1IterIdxUnmark_1af6bc2f9f93406e5d3f0b55dc8488fdf7" prot="private" virt="non-virtual"><scope>Gecode::Int::Element::Int::IterIdxUnmark</scope><name>i</name></member>
      <member refid="classGecode_1_1Int_1_1Element_1_1Int_1_1IterIdxUnmark_1a078e217d2f47f7b70bb53b131702a463" prot="public" virt="non-virtual"><scope>Gecode::Int::Element::Int::IterIdxUnmark</scope><name>IterIdxUnmark</name></member>
      <member refid="classGecode_1_1Int_1_1Element_1_1Int_1_1IterIdxUnmark_1aea28cd24755711e14f9736509be2034c" prot="private" virt="non-virtual"><scope>Gecode::Int::Element::Int::IterIdxUnmark</scope><name>iv</name></member>
      <member refid="classGecode_1_1Int_1_1Element_1_1Int_1_1IterIdxUnmark_1a9a2ba9e2352cf084b62c8a04324d8045" prot="public" virt="non-virtual"><scope>Gecode::Int::Element::Int::IterIdxUnmark</scope><name>operator()</name></member>
      <member refid="classGecode_1_1Int_1_1Element_1_1Int_1_1IterIdxUnmark_1a37d1f354c7358baf6b886629031076a0" prot="public" virt="non-virtual"><scope>Gecode::Int::Element::Int::IterIdxUnmark</scope><name>operator++</name></member>
      <member refid="classGecode_1_1Int_1_1Element_1_1Int_1_1IterIdxUnmark_1adb21f12c4522eb2ee8e9e15df1d9b637" prot="public" virt="non-virtual"><scope>Gecode::Int::Element::Int::IterIdxUnmark</scope><name>val</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
