<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classGecode_1_1Int_1_1Bool_1_1Clause" kind="class" prot="public">
    <compoundname>Gecode::Int::Bool::Clause</compoundname>
    <basecompoundref refid="classGecode_1_1Propagator" prot="public" virt="non-virtual">Gecode::Propagator</basecompoundref>
    <includes refid="bool_8hh" local="no">bool.hh</includes>
    <innerclass refid="classGecode_1_1Int_1_1Bool_1_1Clause_1_1Tagged" prot="protected">Gecode::Int::Bool::Clause::Tagged</innerclass>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>VX</declname>
        <defname>VX</defname>
      </param>
      <param>
        <type>class</type>
        <declname>VY</declname>
        <defname>VY</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classGecode_1_1Int_1_1Bool_1_1Clause_1a150418beef8f3471ed88582da1f7ff6d" prot="protected" static="no" mutable="no">
        <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; VX &gt;</type>
        <definition>ViewArray&lt;VX&gt; Gecode::Int::Bool::Clause&lt; VX, VY &gt;::x</definition>
        <argsstring></argsstring>
        <name>x</name>
        <briefdescription>
<para>Positive views. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/bool.hh" line="493" column="1" bodyfile="/usr/include/gecode/int/bool.hh" bodystart="493" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Int_1_1Bool_1_1Clause_1abe5521d9006ad739afa69b889bcc8645" prot="protected" static="no" mutable="no">
        <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; VY &gt;</type>
        <definition>ViewArray&lt;VY&gt; Gecode::Int::Bool::Clause&lt; VX, VY &gt;::y</definition>
        <argsstring></argsstring>
        <name>y</name>
        <briefdescription>
<para>Positive views (origin from negative variables) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/bool.hh" line="495" column="1" bodyfile="/usr/include/gecode/int/bool.hh" bodystart="495" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Int_1_1Bool_1_1Clause_1a0fddbf3859dd7e32b54f1dce37c1de53" prot="protected" static="no" mutable="no">
        <type>VX</type>
        <definition>VX Gecode::Int::Bool::Clause&lt; VX, VY &gt;::z</definition>
        <argsstring></argsstring>
        <name>z</name>
        <briefdescription>
<para>Result. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/bool.hh" line="497" column="1" bodyfile="/usr/include/gecode/int/bool.hh" bodystart="497" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Int_1_1Bool_1_1Clause_1a7297306227a4e3c02c9af032679069bc" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int Gecode::Int::Bool::Clause&lt; VX, VY &gt;::n_zero</definition>
        <argsstring></argsstring>
        <name>n_zero</name>
        <briefdescription>
<para>The number of views assigned to zero in <emphasis>x</emphasis> and <emphasis>y</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/bool.hh" line="499" column="1" bodyfile="/usr/include/gecode/int/bool.hh" bodystart="499" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Int_1_1Bool_1_1Clause_1ab74ccba36e0a57f2966cd7f0ebcd1a24" prot="protected" static="no" mutable="no">
        <type><ref refid="classGecode_1_1Council" kindref="compound">Council</ref>&lt; <ref refid="classGecode_1_1Int_1_1Bool_1_1Clause_1_1Tagged" kindref="compound">Tagged</ref> &gt;</type>
        <definition>Council&lt;Tagged&gt; Gecode::Int::Bool::Clause&lt; VX, VY &gt;::c</definition>
        <argsstring></argsstring>
        <name>c</name>
        <briefdescription>
<para>The advisor council. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/bool.hh" line="511" column="1" bodyfile="/usr/include/gecode/int/bool.hh" bodystart="511" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classGecode_1_1Int_1_1Bool_1_1Clause_1a17cede48d8574ef8473a6979292136f2" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Int::Bool::Clause&lt; VX, VY &gt;::cancel</definition>
        <argsstring>(Space &amp;home)</argsstring>
        <name>cancel</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <briefdescription>
<para>Cancel subscriptions. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/bool.hh" line="513" column="1" bodyfile="/usr/include/gecode/int/bool/clause.hpp" bodystart="297" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Bool_1_1Clause_1a0896e4875d37d7c1a65ed772c5b662f7" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Int::Bool::Clause&lt; VX, VY &gt;::Clause</definition>
        <argsstring>(Home home, ViewArray&lt; VX &gt; &amp;x, ViewArray&lt; VY &gt; &amp;y, VX z)</argsstring>
        <name>Clause</name>
        <param>
          <type><ref refid="classGecode_1_1Home" kindref="compound">Home</ref></type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; VX &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; VY &gt; &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>VX</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>Constructor for posting. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/bool.hh" line="515" column="1" bodyfile="/usr/include/gecode/int/bool/clause.hpp" bodystart="208" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Bool_1_1Clause_1ad055a9fef9f32eba1050979fec836072" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Int::Bool::Clause&lt; VX, VY &gt;::Clause</definition>
        <argsstring>(Space &amp;home, bool share, Clause&lt; VX, VY &gt; &amp;p)</argsstring>
        <name>Clause</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>share</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1Bool_1_1Clause" kindref="compound">Clause</ref>&lt; VX, VY &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Constructor for cloning <emphasis>p</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/bool.hh" line="517" column="1" bodyfile="/usr/include/gecode/int/bool/clause.hpp" bodystart="218" bodyend="224"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classGecode_1_1Int_1_1Bool_1_1Clause_1ac45e8dd0f5fb8c4e92e0fcb47c08f1af" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classGecode_1_1Actor" kindref="compound">Actor</ref> *</type>
        <definition>Actor * Gecode::Int::Bool::Clause&lt; VX, VY &gt;::copy</definition>
        <argsstring>(Space &amp;home, bool share)</argsstring>
        <name>copy</name>
        <reimplements refid="classGecode_1_1Actor_1a67b240e2810720846c3632c94cc9c99d">copy</reimplements>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>share</declname>
        </param>
        <briefdescription>
<para>Copy propagator during cloning. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/bool.hh" line="520" column="1" bodyfile="/usr/include/gecode/int/bool/clause.hpp" bodystart="242" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Bool_1_1Clause_1a2b953b3117fd83ffd201853e0f7e825d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>ExecStatus Gecode::Int::Bool::Clause&lt; VX, VY &gt;::advise</definition>
        <argsstring>(Space &amp;home, Advisor &amp;a, const Delta &amp;d)</argsstring>
        <name>advise</name>
        <reimplements refid="classGecode_1_1Propagator_1a55629f061a0fd8ecb2a4c41aa1568e28">advise</reimplements>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Advisor" kindref="compound">Advisor</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1Delta" kindref="compound">Delta</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Give advice to propagator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/bool.hh" line="522" column="1" bodyfile="/usr/include/gecode/int/bool/clause.hpp" bodystart="320" bodyend="327"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Bool_1_1Clause_1aa653597e25f6e57d50a49c2b91b42f9d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classGecode_1_1PropCost" kindref="compound">PropCost</ref></type>
        <definition>PropCost Gecode::Int::Bool::Clause&lt; VX, VY &gt;::cost</definition>
        <argsstring>(const Space &amp;home, const ModEventDelta &amp;med) const </argsstring>
        <name>cost</name>
        <reimplements refid="classGecode_1_1Propagator_1a3de049f07a191fb956c9dbd4153efe75">cost</reimplements>
        <param>
          <type>const <ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceGecode_1a129e41c1d037528010d7b6706495a560" kindref="member">ModEventDelta</ref> &amp;</type>
          <declname>med</declname>
        </param>
        <briefdescription>
<para>Cost function (defined as low unary) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/bool.hh" line="524" column="1" bodyfile="/usr/include/gecode/int/bool/clause.hpp" bodystart="291" bodyend="293"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Bool_1_1Clause_1a0923dd4525eeb19628d32afa7585c167" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>ExecStatus Gecode::Int::Bool::Clause&lt; VX, VY &gt;::propagate</definition>
        <argsstring>(Space &amp;home, const ModEventDelta &amp;med)</argsstring>
        <name>propagate</name>
        <reimplements refid="classGecode_1_1Propagator_1ad2dc98c1345222892592339948c6cde1">propagate</reimplements>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceGecode_1a129e41c1d037528010d7b6706495a560" kindref="member">ModEventDelta</ref> &amp;</type>
          <declname>med</declname>
        </param>
        <briefdescription>
<para>Perform propagation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/bool.hh" line="526" column="1" bodyfile="/usr/include/gecode/int/bool/clause.hpp" bodystart="331" bodyend="348"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Bool_1_1Clause_1ab2eed81efbecdbac5d3075dd8d4d6404" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>size_t</type>
        <definition>forceinline size_t Gecode::Int::Bool::Clause&lt; VX, VY &gt;::dispose</definition>
        <argsstring>(Space &amp;home)</argsstring>
        <name>dispose</name>
        <reimplements refid="classGecode_1_1Actor_1a143253b3eceda40f36834e38c8ac05d9">dispose</reimplements>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <briefdescription>
<para>Delete propagator and return its size. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/bool.hh" line="531" column="1" bodyfile="/usr/include/gecode/int/bool/clause.hpp" bodystart="311" bodyend="315"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classGecode_1_1Int_1_1Bool_1_1Clause_1a10f61db8ab167c37015d655b703121c9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>ExecStatus Gecode::Int::Bool::Clause&lt; VX, VY &gt;::post</definition>
        <argsstring>(Home home, ViewArray&lt; VX &gt; &amp;x, ViewArray&lt; VY &gt; &amp;y, VX z)</argsstring>
        <name>post</name>
        <param>
          <type><ref refid="classGecode_1_1Home" kindref="compound">Home</ref></type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; VX &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; VY &gt; &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>VX</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>Post propagator <formula id="110">$ \bigvee_{i=0}^{|x|-1} x_i \vee \bigvee_{i=0}^{|x|-1} y_i = z$</formula>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/bool.hh" line="528" column="1" bodyfile="/usr/include/gecode/int/bool/clause.hpp" bodystart="250" bodyend="287"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Boolean clause propagator (disjunctive) </para>    </briefdescription>
    <detaileddescription>
<para>Requires<programlisting><codeline><highlight class="preprocessor">#include<sp/>&lt;gecode/int/bool.hh&gt;</highlight><highlight class="normal"><sp/></highlight></codeline>
</programlisting> </para>    </detaileddescription>
    <inheritancegraph>
      <node id="1490">
        <label>Gecode::Propagator</label>
        <link refid="classGecode_1_1Propagator"/>
        <childnode refid="1491" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1491">
        <label>Gecode::Actor</label>
        <link refid="classGecode_1_1Actor"/>
        <childnode refid="1492" relation="private-inheritance">
        </childnode>
      </node>
      <node id="1492">
        <label>Gecode::ActorLink</label>
        <link refid="classGecode_1_1ActorLink"/>
      </node>
      <node id="1489">
        <label>Gecode::Int::Bool::Clause&lt; VX, VY &gt;</label>
        <link refid="classGecode_1_1Int_1_1Bool_1_1Clause"/>
        <childnode refid="1490" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1497">
        <label>Gecode::Council&lt; Gecode::Int::Bool::Clause::Tagged &gt;</label>
        <link refid="classGecode_1_1Council"/>
      </node>
      <node id="1498">
        <label>VX</label>
      </node>
      <node id="1499">
        <label>Gecode::ViewArray&lt; VX &gt;</label>
        <link refid="classGecode_1_1ViewArray"/>
      </node>
      <node id="1494">
        <label>Gecode::Propagator</label>
        <link refid="classGecode_1_1Propagator"/>
        <childnode refid="1495" relation="public-inheritance">
        </childnode>
        <childnode refid="1496" relation="usage">
          <edgelabel>advisors</edgelabel>
        </childnode>
      </node>
      <node id="1500">
        <label>Gecode::ViewArray&lt; VY &gt;</label>
        <link refid="classGecode_1_1ViewArray"/>
      </node>
      <node id="1495">
        <label>Gecode::Actor</label>
        <link refid="classGecode_1_1Actor"/>
        <childnode refid="1496" relation="private-inheritance">
        </childnode>
      </node>
      <node id="1496">
        <label>Gecode::ActorLink</label>
        <link refid="classGecode_1_1ActorLink"/>
      </node>
      <node id="1493">
        <label>Gecode::Int::Bool::Clause&lt; VX, VY &gt;</label>
        <link refid="classGecode_1_1Int_1_1Bool_1_1Clause"/>
        <childnode refid="1494" relation="public-inheritance">
        </childnode>
        <childnode refid="1497" relation="usage">
          <edgelabel>c</edgelabel>
        </childnode>
        <childnode refid="1498" relation="usage">
          <edgelabel>z</edgelabel>
        </childnode>
        <childnode refid="1499" relation="usage">
          <edgelabel>x</edgelabel>
        </childnode>
        <childnode refid="1500" relation="usage">
          <edgelabel>y</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/usr/include/gecode/int/bool.hh" line="490" column="1" bodyfile="/usr/include/gecode/int/bool.hh" bodystart="490" bodyend="532"/>
    <listofallmembers>
      <member refid="classGecode_1_1Int_1_1Bool_1_1Clause_1a2b953b3117fd83ffd201853e0f7e825d" prot="public" virt="virtual"><scope>Gecode::Int::Bool::Clause</scope><name>advise</name></member>
      <member refid="classGecode_1_1Propagator_1afee33d8aed2bc9debee126f17b5015cf" prot="public" virt="non-virtual"><scope>Gecode::Int::Bool::Clause</scope><name>advisors</name></member>
      <member refid="classGecode_1_1Propagator_1a593de773d2204f47ea365a99df2f75d0" prot="public" virt="non-virtual"><scope>Gecode::Int::Bool::Clause</scope><name>afc</name></member>
      <member refid="classGecode_1_1Int_1_1Bool_1_1Clause_1ab74ccba36e0a57f2966cd7f0ebcd1a24" prot="protected" virt="non-virtual"><scope>Gecode::Int::Bool::Clause</scope><name>c</name></member>
      <member refid="classGecode_1_1Int_1_1Bool_1_1Clause_1a17cede48d8574ef8473a6979292136f2" prot="protected" virt="non-virtual"><scope>Gecode::Int::Bool::Clause</scope><name>cancel</name></member>
      <member refid="classGecode_1_1ActorLink_1a8427f41a27a72b52ceb52d0fdad21063" prot="public" virt="non-virtual" ambiguityscope="Gecode::ActorLink::"><scope>Gecode::Int::Bool::Clause</scope><name>cast</name></member>
      <member refid="classGecode_1_1ActorLink_1a464526456db41981f82a1193a8b4e569" prot="public" virt="non-virtual" ambiguityscope="Gecode::ActorLink::"><scope>Gecode::Int::Bool::Clause</scope><name>cast</name></member>
      <member refid="classGecode_1_1Int_1_1Bool_1_1Clause_1a0896e4875d37d7c1a65ed772c5b662f7" prot="protected" virt="non-virtual"><scope>Gecode::Int::Bool::Clause</scope><name>Clause</name></member>
      <member refid="classGecode_1_1Int_1_1Bool_1_1Clause_1ad055a9fef9f32eba1050979fec836072" prot="protected" virt="non-virtual"><scope>Gecode::Int::Bool::Clause</scope><name>Clause</name></member>
      <member refid="classGecode_1_1Int_1_1Bool_1_1Clause_1ac45e8dd0f5fb8c4e92e0fcb47c08f1af" prot="public" virt="virtual"><scope>Gecode::Int::Bool::Clause</scope><name>copy</name></member>
      <member refid="classGecode_1_1Int_1_1Bool_1_1Clause_1aa653597e25f6e57d50a49c2b91b42f9d" prot="public" virt="virtual"><scope>Gecode::Int::Bool::Clause</scope><name>cost</name></member>
      <member refid="classGecode_1_1Int_1_1Bool_1_1Clause_1ab2eed81efbecdbac5d3075dd8d4d6404" prot="public" virt="virtual"><scope>Gecode::Int::Bool::Clause</scope><name>dispose</name></member>
      <member refid="classGecode_1_1Propagator_1a3b286c7aec9843b60a531b495015b5f7" prot="protected" virt="non-virtual"><scope>Gecode::Int::Bool::Clause</scope><name>fwd</name></member>
      <member refid="classGecode_1_1Propagator_1ae9dfa55e47e4ff8e0c8e4c2a6efdbfc0" prot="public" virt="non-virtual"><scope>Gecode::Int::Bool::Clause</scope><name>med</name></member>
      <member refid="classGecode_1_1Propagator_1a4905db55af49af8f38558bdbcf5fd4a2" prot="public" virt="non-virtual"><scope>Gecode::Int::Bool::Clause</scope><name>modeventdelta</name></member>
      <member refid="classGecode_1_1Int_1_1Bool_1_1Clause_1a7297306227a4e3c02c9af032679069bc" prot="protected" virt="non-virtual"><scope>Gecode::Int::Bool::Clause</scope><name>n_zero</name></member>
      <member refid="classGecode_1_1Actor_1a388f671145dcf906f81d22bde2dc0f3d" prot="public" virt="non-virtual"><scope>Gecode::Int::Bool::Clause</scope><name>operator delete</name></member>
      <member refid="classGecode_1_1Actor_1ac28b9601b530076a1bda75834487f898" prot="public" virt="non-virtual"><scope>Gecode::Int::Bool::Clause</scope><name>operator new</name></member>
      <member refid="classGecode_1_1Int_1_1Bool_1_1Clause_1a10f61db8ab167c37015d655b703121c9" prot="public" virt="non-virtual"><scope>Gecode::Int::Bool::Clause</scope><name>post</name></member>
      <member refid="classGecode_1_1Int_1_1Bool_1_1Clause_1a0923dd4525eeb19628d32afa7585c167" prot="public" virt="virtual"><scope>Gecode::Int::Bool::Clause</scope><name>propagate</name></member>
      <member refid="classGecode_1_1Propagator_1a891f3e84cde2e8e60f8ad9340ad74b05" prot="protected" virt="non-virtual"><scope>Gecode::Int::Bool::Clause</scope><name>Propagator</name></member>
      <member refid="classGecode_1_1Propagator_1afeaeed8dae67de4313858bd82fdae5d0" prot="protected" virt="non-virtual"><scope>Gecode::Int::Bool::Clause</scope><name>Propagator</name></member>
      <member refid="classGecode_1_1Propagator_1a1781b5b0df38c39dddca4b44c3a00530" prot="public" virt="non-virtual"><scope>Gecode::Int::Bool::Clause</scope><name>size</name></member>
      <member refid="classGecode_1_1Int_1_1Bool_1_1Clause_1a150418beef8f3471ed88582da1f7ff6d" prot="protected" virt="non-virtual"><scope>Gecode::Int::Bool::Clause</scope><name>x</name></member>
      <member refid="classGecode_1_1Int_1_1Bool_1_1Clause_1abe5521d9006ad739afa69b889bcc8645" prot="protected" virt="non-virtual"><scope>Gecode::Int::Bool::Clause</scope><name>y</name></member>
      <member refid="classGecode_1_1Int_1_1Bool_1_1Clause_1a0fddbf3859dd7e32b54f1dce37c1de53" prot="protected" virt="non-virtual"><scope>Gecode::Int::Bool::Clause</scope><name>z</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
