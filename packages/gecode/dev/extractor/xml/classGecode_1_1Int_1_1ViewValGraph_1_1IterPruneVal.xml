<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classGecode_1_1Int_1_1ViewValGraph_1_1IterPruneVal" kind="class" prot="public">
    <compoundname>Gecode::Int::ViewValGraph::IterPruneVal</compoundname>
    <includes refid="view-val-graph_8hh" local="no">view-val-graph.hh</includes>
    <templateparamlist>
      <param>
        <type>class View</type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Constructors and initialization</header>
      <memberdef kind="function" id="classGecode_1_1Int_1_1ViewValGraph_1_1IterPruneVal_1af25f37b4e16fbfda60f50133c5dffe14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Int::ViewValGraph::IterPruneVal&lt; View &gt;::IterPruneVal</definition>
        <argsstring>(ViewNode&lt; View &gt; *x)</argsstring>
        <name>IterPruneVal</name>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1ViewValGraph_1_1ViewNode" kindref="compound">ViewNode</ref>&lt; View &gt; *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Initialize with edges for view node <emphasis>x</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view-val-graph.hh" line="268" column="1" bodyfile="/usr/include/gecode/int/view-val-graph/iter-prune-val.hpp" bodystart="42" bodyend="46"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Iteration control</header>
      <memberdef kind="function" id="classGecode_1_1Int_1_1ViewValGraph_1_1IterPruneVal_1a8490ad4e2ca3af460c089e4be533ae65" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::Int::ViewValGraph::IterPruneVal&lt; View &gt;::operator()</definition>
        <argsstring>(void) const </argsstring>
        <name>operator()</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test whether iterator is still at a value or done. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view-val-graph.hh" line="274" column="1" bodyfile="/usr/include/gecode/int/view-val-graph/iter-prune-val.hpp" bodystart="49" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1ViewValGraph_1_1IterPruneVal_1a14d863f6be2463870bdd4933e3e1c7fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Int::ViewValGraph::IterPruneVal&lt; View &gt;::operator++</definition>
        <argsstring>(void)</argsstring>
        <name>operator++</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Move iterator to next value (if possible) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view-val-graph.hh" line="276" column="1" bodyfile="/usr/include/gecode/int/view-val-graph/iter-prune-val.hpp" bodystart="54" bodyend="59"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Value access</header>
      <memberdef kind="function" id="classGecode_1_1Int_1_1ViewValGraph_1_1IterPruneVal_1a0a08009cce2808b64c74ef1cb0589d7c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Int::ViewValGraph::IterPruneVal&lt; View &gt;::val</definition>
        <argsstring>(void) const </argsstring>
        <name>val</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return current value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view-val-graph.hh" line="282" column="1" bodyfile="/usr/include/gecode/int/view-val-graph/iter-prune-val.hpp" bodystart="62" bodyend="65"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classGecode_1_1Int_1_1ViewValGraph_1_1IterPruneVal_1a1ddb53bb2da36c8f9e62e84273c214f7" prot="protected" static="no" mutable="no">
        <type><ref refid="classGecode_1_1Int_1_1ViewValGraph_1_1ViewNode" kindref="compound">ViewNode</ref>&lt; View &gt; *</type>
        <definition>ViewNode&lt;View&gt;* Gecode::Int::ViewValGraph::IterPruneVal&lt; View &gt;::x</definition>
        <argsstring></argsstring>
        <name>x</name>
        <briefdescription>
<para>View node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view-val-graph.hh" line="261" column="1" bodyfile="/usr/include/gecode/int/view-val-graph.hh" bodystart="261" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Int_1_1ViewValGraph_1_1IterPruneVal_1ab4745458cc02c5740c338235e9a98a8c" prot="protected" static="no" mutable="no">
        <type><ref refid="classGecode_1_1Int_1_1ViewValGraph_1_1Edge" kindref="compound">Edge</ref>&lt; View &gt; *</type>
        <definition>Edge&lt;View&gt;* Gecode::Int::ViewValGraph::IterPruneVal&lt; View &gt;::e</definition>
        <argsstring></argsstring>
        <name>e</name>
        <briefdescription>
<para>Current value edge. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view-val-graph.hh" line="263" column="1" bodyfile="/usr/include/gecode/int/view-val-graph.hh" bodystart="263" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Iterates the values to be pruned from a view node. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/usr/include/gecode/int/view-val-graph.hh" line="258" column="1" bodyfile="/usr/include/gecode/int/view-val-graph.hh" bodystart="258" bodyend="284"/>
    <listofallmembers>
      <member refid="classGecode_1_1Int_1_1ViewValGraph_1_1IterPruneVal_1ab4745458cc02c5740c338235e9a98a8c" prot="protected" virt="non-virtual"><scope>Gecode::Int::ViewValGraph::IterPruneVal</scope><name>e</name></member>
      <member refid="classGecode_1_1Int_1_1ViewValGraph_1_1IterPruneVal_1af25f37b4e16fbfda60f50133c5dffe14" prot="public" virt="non-virtual"><scope>Gecode::Int::ViewValGraph::IterPruneVal</scope><name>IterPruneVal</name></member>
      <member refid="classGecode_1_1Int_1_1ViewValGraph_1_1IterPruneVal_1a8490ad4e2ca3af460c089e4be533ae65" prot="public" virt="non-virtual"><scope>Gecode::Int::ViewValGraph::IterPruneVal</scope><name>operator()</name></member>
      <member refid="classGecode_1_1Int_1_1ViewValGraph_1_1IterPruneVal_1a14d863f6be2463870bdd4933e3e1c7fc" prot="public" virt="non-virtual"><scope>Gecode::Int::ViewValGraph::IterPruneVal</scope><name>operator++</name></member>
      <member refid="classGecode_1_1Int_1_1ViewValGraph_1_1IterPruneVal_1a0a08009cce2808b64c74ef1cb0589d7c" prot="public" virt="non-virtual"><scope>Gecode::Int::ViewValGraph::IterPruneVal</scope><name>val</name></member>
      <member refid="classGecode_1_1Int_1_1ViewValGraph_1_1IterPruneVal_1a1ddb53bb2da36c8f9e62e84273c214f7" prot="protected" virt="non-virtual"><scope>Gecode::Int::ViewValGraph::IterPruneVal</scope><name>x</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
