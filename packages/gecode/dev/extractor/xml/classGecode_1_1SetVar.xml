<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classGecode_1_1SetVar" kind="class" prot="public">
    <compoundname>Gecode::SetVar</compoundname>
    <basecompoundref refid="classGecode_1_1VarImpVar" prot="public" virt="non-virtual">Gecode::VarImpVar&lt; Set::SetVarImp &gt;</basecompoundref>
    <includes refid="set_8hh" local="no">set.hh</includes>
      <sectiondef kind="user-defined">
      <header>Constructors and initialization</header>
      <memberdef kind="function" id="classGecode_1_1SetVar_1a2b81f26aac27590d0189afabc2f00121" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::SetVar::SetVar</definition>
        <argsstring>(void)</argsstring>
        <name>SetVar</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set.hh" line="137" column="1" bodyfile="/usr/include/gecode/set/var/set.hpp" bodystart="50" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1SetVar_1a4e65e3cfd92312d411e41d03b86e0412" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::SetVar::SetVar</definition>
        <argsstring>(const SetVar &amp;y)</argsstring>
        <name>SetVar</name>
        <param>
          <type>const <ref refid="classGecode_1_1SetVar" kindref="compound">SetVar</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Initialize from set variable <emphasis>y</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set.hh" line="139" column="1" bodyfile="/usr/include/gecode/set/var/set.hpp" bodystart="53" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1SetVar_1af7943d83e45a5eae8eb97f223e4f8b54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::SetVar::SetVar</definition>
        <argsstring>(const Set::SetView &amp;y)</argsstring>
        <name>SetVar</name>
        <param>
          <type>const <ref refid="classGecode_1_1Set_1_1SetView" kindref="compound">Set::SetView</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Initialize from set view <emphasis>y</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set.hh" line="141" column="1" bodyfile="/usr/include/gecode/set/var/set.hpp" bodystart="57" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1SetVar_1a7ceb541ca9ccd6bd3c4a44b1bb48a815" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GECODE_SET_EXPORT</type>
        <definition>GECODE_SET_EXPORT Gecode::SetVar::SetVar</definition>
        <argsstring>(Space &amp;home)</argsstring>
        <name>SetVar</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <briefdescription>
<para>Initialize variable with empty greatest lower and full least upper bound. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set.hh" line="144" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1SetVar_1a927a620d2a68d544d46e6b1e8c40796b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GECODE_SET_EXPORT</type>
        <definition>GECODE_SET_EXPORT Gecode::SetVar::SetVar</definition>
        <argsstring>(Space &amp;home, int glbMin, int glbMax, int lubMin, int lubMax, unsigned int cardMin=0, unsigned int cardMax=Set::Limits::card)</argsstring>
        <name>SetVar</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>int</type>
          <declname>glbMin</declname>
        </param>
        <param>
          <type>int</type>
          <declname>glbMax</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lubMin</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lubMax</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>cardMin</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>cardMax</declname>
          <defval><ref refid="namespaceGecode_1_1Set_1_1Limits_1a82e5a0891d539b2d58db3a9347ac138b" kindref="member">Set::Limits::card</ref></defval>
        </param>
        <briefdescription>
<para>Initialize variable with given bounds and cardinality. </para>        </briefdescription>
        <detaileddescription>
<para>The variable is created with greatest lower bound <formula id="401">$\{\mathit{glbMin},\dots,\mathit{glbMax}\}$</formula>, least upper bound <formula id="402">$\{\mathit{lubMin},\dots,\mathit{lubMax}\}$</formula>, and cardinality minimum <emphasis>cardMin</emphasis> and maximum <emphasis>cardMax</emphasis>. The following exceptions might be thrown:<itemizedlist>
<listitem><para>If the bounds are no legal set bounds (between <ref refid="namespaceGecode_1_1Set_1_1Limits_1a768af29a2cbf9eec75b4376b325f6cc4" kindref="member">Set::Limits::min</ref> and <ref refid="namespaceGecode_1_1Set_1_1Limits_1aa0057c6b80521aaf8485343580d0eed5" kindref="member">Set::Limits::max</ref>), an exception of type <ref refid="classGecode_1_1Set_1_1OutOfLimits" kindref="compound">Gecode::Set::OutOfLimits</ref> is thrown.</para></listitem><listitem><para>If the cardinality is greater than Set::Limits::max_set_size, an exception of type <ref refid="classGecode_1_1Set_1_1OutOfLimits" kindref="compound">Gecode::Set::OutOfLimits</ref> is thrown.</para></listitem><listitem><para>If <emphasis>cardMin</emphasis> &gt; <emphasis>cardMax</emphasis>, an exception of type <ref refid="classGecode_1_1Set_1_1VariableEmptyDomain" kindref="compound">Gecode::Set::VariableEmptyDomain</ref> is thrown. </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set.hh" line="164" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1SetVar_1aa194c595b3a86e4f5afa5d8bc53ace7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GECODE_SET_EXPORT</type>
        <definition>GECODE_SET_EXPORT Gecode::SetVar::SetVar</definition>
        <argsstring>(Space &amp;home, const IntSet &amp;glbD, int lubMin, int lubMax, unsigned int cardMin=0, unsigned int cardMax=Set::Limits::card)</argsstring>
        <name>SetVar</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1IntSet" kindref="compound">IntSet</ref> &amp;</type>
          <declname>glbD</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lubMin</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lubMax</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>cardMin</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>cardMax</declname>
          <defval><ref refid="namespaceGecode_1_1Set_1_1Limits_1a82e5a0891d539b2d58db3a9347ac138b" kindref="member">Set::Limits::card</ref></defval>
        </param>
        <briefdescription>
<para>Initialize variable with given bounds and cardinality. </para>        </briefdescription>
        <detaileddescription>
<para>The variable is created with greatest lower bound <emphasis>glbD</emphasis>, least upper bound <formula id="402">$\{\mathit{lubMin},\dots,\mathit{lubMax}\}$</formula>, and cardinality minimum <emphasis>cardMin</emphasis> and maximum <emphasis>cardMax</emphasis>. The following exceptions might be thrown:<itemizedlist>
<listitem><para>If the bounds are no legal set bounds (between <ref refid="namespaceGecode_1_1Set_1_1Limits_1a768af29a2cbf9eec75b4376b325f6cc4" kindref="member">Set::Limits::min</ref> and <ref refid="namespaceGecode_1_1Set_1_1Limits_1aa0057c6b80521aaf8485343580d0eed5" kindref="member">Set::Limits::max</ref>), an exception of type <ref refid="classGecode_1_1Set_1_1OutOfLimits" kindref="compound">Gecode::Set::OutOfLimits</ref> is thrown.</para></listitem><listitem><para>If the cardinality is greater than Set::Limits::max_set_size, an exception of type <ref refid="classGecode_1_1Set_1_1OutOfLimits" kindref="compound">Gecode::Set::OutOfLimits</ref> is thrown.</para></listitem><listitem><para>If <emphasis>cardMin</emphasis> &gt; <emphasis>cardMax</emphasis>, an exception of type <ref refid="classGecode_1_1Set_1_1VariableEmptyDomain" kindref="compound">Gecode::Set::VariableEmptyDomain</ref> is thrown. </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set.hh" line="185" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1SetVar_1a06baab362711fef3375e8cf969849d12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GECODE_SET_EXPORT</type>
        <definition>GECODE_SET_EXPORT Gecode::SetVar::SetVar</definition>
        <argsstring>(Space &amp;home, int glbMin, int glbMax, const IntSet &amp;lubD, unsigned int cardMin=0, unsigned int cardMax=Set::Limits::card)</argsstring>
        <name>SetVar</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>int</type>
          <declname>glbMin</declname>
        </param>
        <param>
          <type>int</type>
          <declname>glbMax</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1IntSet" kindref="compound">IntSet</ref> &amp;</type>
          <declname>lubD</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>cardMin</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>cardMax</declname>
          <defval><ref refid="namespaceGecode_1_1Set_1_1Limits_1a82e5a0891d539b2d58db3a9347ac138b" kindref="member">Set::Limits::card</ref></defval>
        </param>
        <briefdescription>
<para>Initialize variable with given bounds and cardinality. </para>        </briefdescription>
        <detaileddescription>
<para>The variable is created with greatest lower bound <formula id="401">$\{\mathit{glbMin},\dots,\mathit{glbMax}\}$</formula>, least upper bound <emphasis>lubD</emphasis>, and cardinality minimum <emphasis>cardMin</emphasis> and maximum <emphasis>cardMax</emphasis>. The following exceptions might be thrown:<itemizedlist>
<listitem><para>If the bounds are no legal set bounds (between <ref refid="namespaceGecode_1_1Set_1_1Limits_1a768af29a2cbf9eec75b4376b325f6cc4" kindref="member">Set::Limits::min</ref> and <ref refid="namespaceGecode_1_1Set_1_1Limits_1aa0057c6b80521aaf8485343580d0eed5" kindref="member">Set::Limits::max</ref>), an exception of type <ref refid="classGecode_1_1Set_1_1OutOfLimits" kindref="compound">Gecode::Set::OutOfLimits</ref> is thrown.</para></listitem><listitem><para>If the cardinality is greater than Set::Limits::max_set_size, an exception of type <ref refid="classGecode_1_1Set_1_1OutOfLimits" kindref="compound">Gecode::Set::OutOfLimits</ref> is thrown.</para></listitem><listitem><para>If <emphasis>minCard</emphasis> &gt; <emphasis>maxCard</emphasis>, an exception of type <ref refid="classGecode_1_1Set_1_1VariableEmptyDomain" kindref="compound">Gecode::Set::VariableEmptyDomain</ref> is thrown. </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set.hh" line="207" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1SetVar_1a9f35a49fb781323678474ea82e96866d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GECODE_SET_EXPORT</type>
        <definition>GECODE_SET_EXPORT Gecode::SetVar::SetVar</definition>
        <argsstring>(Space &amp;home, const IntSet &amp;glbD, const IntSet &amp;lubD, unsigned int cardMin=0, unsigned int cardMax=Set::Limits::card)</argsstring>
        <name>SetVar</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1IntSet" kindref="compound">IntSet</ref> &amp;</type>
          <declname>glbD</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1IntSet" kindref="compound">IntSet</ref> &amp;</type>
          <declname>lubD</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>cardMin</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>cardMax</declname>
          <defval><ref refid="namespaceGecode_1_1Set_1_1Limits_1a82e5a0891d539b2d58db3a9347ac138b" kindref="member">Set::Limits::card</ref></defval>
        </param>
        <briefdescription>
<para>Initialize variable with given bounds and cardinality. </para>        </briefdescription>
        <detaileddescription>
<para>The variable is created with greatest lower bound <emphasis>glbD</emphasis>, least upper bound <emphasis>lubD</emphasis>, and cardinality minimum <emphasis>cardMin</emphasis> and maximum <emphasis>cardMax</emphasis>. The following exceptions might be thrown:<itemizedlist>
<listitem><para>If the bounds are no legal set bounds (between <ref refid="namespaceGecode_1_1Set_1_1Limits_1a768af29a2cbf9eec75b4376b325f6cc4" kindref="member">Set::Limits::min</ref> and <ref refid="namespaceGecode_1_1Set_1_1Limits_1aa0057c6b80521aaf8485343580d0eed5" kindref="member">Set::Limits::max</ref>), an exception of type <ref refid="classGecode_1_1Set_1_1OutOfLimits" kindref="compound">Gecode::Set::OutOfLimits</ref> is thrown.</para></listitem><listitem><para>If the cardinality is greater than Set::Limits::max_set_size, an exception of type <ref refid="classGecode_1_1Set_1_1OutOfLimits" kindref="compound">Gecode::Set::OutOfLimits</ref> is thrown.</para></listitem><listitem><para>If <emphasis>minCard</emphasis> &gt; <emphasis>maxCard</emphasis>, an exception of type <ref refid="classGecode_1_1Set_1_1VariableEmptyDomain" kindref="compound">Gecode::Set::VariableEmptyDomain</ref> is thrown. </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set.hh" line="229" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Value access</header>
      <memberdef kind="function" id="classGecode_1_1SetVar_1a70d1ae0d622ad675d9a8c7c5737c803c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>forceinline unsigned int Gecode::SetVar::glbSize</definition>
        <argsstring>(void) const </argsstring>
        <name>glbSize</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return number of elements in the greatest lower bound. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set.hh" line="237" column="1" bodyfile="/usr/include/gecode/set/var/set.hpp" bodystart="67" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1SetVar_1a339600343fc17aa45a4cc0fa8d3f3aa2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>forceinline unsigned int Gecode::SetVar::lubSize</definition>
        <argsstring>(void) const </argsstring>
        <name>lubSize</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return number of elements in the least upper bound. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set.hh" line="239" column="1" bodyfile="/usr/include/gecode/set/var/set.hpp" bodystart="70" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1SetVar_1a601dc4bbc6f244828f3d566a5f17fa61" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>forceinline unsigned int Gecode::SetVar::unknownSize</definition>
        <argsstring>(void) const </argsstring>
        <name>unknownSize</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return number of unknown elements (elements in lub but not in glb) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set.hh" line="241" column="1" bodyfile="/usr/include/gecode/set/var/set.hpp" bodystart="73" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1SetVar_1acffacfce212b30659c8395280bce695e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>forceinline unsigned int Gecode::SetVar::cardMin</definition>
        <argsstring>(void) const </argsstring>
        <name>cardMin</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return cardinality minimum. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set.hh" line="243" column="1" bodyfile="/usr/include/gecode/set/var/set.hpp" bodystart="82" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1SetVar_1acc16a7decd12bd340faa56a505537856" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>forceinline unsigned int Gecode::SetVar::cardMax</definition>
        <argsstring>(void) const </argsstring>
        <name>cardMax</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return cardinality maximum. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set.hh" line="245" column="1" bodyfile="/usr/include/gecode/set/var/set.hpp" bodystart="85" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1SetVar_1ab62c5357992e5ccecad786136d69e152" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::SetVar::lubMin</definition>
        <argsstring>(void) const </argsstring>
        <name>lubMin</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return minimum element of least upper bound. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set.hh" line="247" column="1" bodyfile="/usr/include/gecode/set/var/set.hpp" bodystart="88" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1SetVar_1ae4f0d028fe9fd452331ff84e54f56461" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::SetVar::lubMax</definition>
        <argsstring>(void) const </argsstring>
        <name>lubMax</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return maximum element of least upper bound. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set.hh" line="249" column="1" bodyfile="/usr/include/gecode/set/var/set.hpp" bodystart="91" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1SetVar_1ae97f74c0377795cf4d6e71e57b38b041" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::SetVar::glbMin</definition>
        <argsstring>(void) const </argsstring>
        <name>glbMin</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return minimum element of greatest lower bound. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set.hh" line="251" column="1" bodyfile="/usr/include/gecode/set/var/set.hpp" bodystart="94" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1SetVar_1a246aac4f3bf1b4b801978b240301d4b6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::SetVar::glbMax</definition>
        <argsstring>(void) const </argsstring>
        <name>glbMax</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return maximum of greatest lower bound. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set.hh" line="253" column="1" bodyfile="/usr/include/gecode/set/var/set.hpp" bodystart="97" bodyend="97"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Domain tests</header>
      <memberdef kind="function" id="classGecode_1_1SetVar_1aac7776cb7072d20edd67878ff83c7bdd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::SetVar::contains</definition>
        <argsstring>(int i) const </argsstring>
        <name>contains</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Test whether <emphasis>i</emphasis> is in greatest lower bound. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set.hh" line="259" column="1" bodyfile="/usr/include/gecode/set/var/set.hpp" bodystart="76" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1SetVar_1a31582a2ac473009352531e0b92296e88" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::SetVar::notContains</definition>
        <argsstring>(int i) const </argsstring>
        <name>notContains</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Test whether <emphasis>i</emphasis> is not in the least upper bound. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set.hh" line="261" column="1" bodyfile="/usr/include/gecode/set/var/set.hpp" bodystart="79" bodyend="79"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classGecode_1_1SetVar_1a7de98569d56afc43e68a13502342c25f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class SetVarArray</definition>
        <argsstring></argsstring>
        <name>SetVarArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set.hh" line="130" column="1" bodyfile="/usr/include/gecode/set.hh" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classGecode_1_1SetVar_1a3a16376347e02552d847cf4191fd06fd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class SetVarArgs</definition>
        <argsstring></argsstring>
        <name>SetVarArgs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set.hh" line="131" column="1" bodyfile="/usr/include/gecode/set.hh" bodystart="131" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="related">
      <memberdef kind="function" id="classGecode_1_1SetVar_1a2f70d0eb688bd612dd922cb509f48088" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Char</type>
          </param>
          <param>
            <type>class Traits</type>
          </param>
        </templateparamlist>
        <type>std::basic_ostream&lt; Char, Traits &gt; &amp;</type>
        <definition>std::basic_ostream&lt; Char, Traits &gt; &amp; operator&lt;&lt;</definition>
        <argsstring>(std::basic_ostream&lt; Char, Traits &gt; &amp;os, const SetVar &amp;x)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::basic_ostream&lt; Char, Traits &gt; &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1SetVar" kindref="compound">SetVar</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Print set variable <emphasis>x</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set.hh" line="109" column="1" bodyfile="/usr/include/gecode/set/var/print.hpp" bodystart="42" bodyend="45"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Set variables </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="6402">
        <label>Gecode::Var</label>
        <link refid="classGecode_1_1Var"/>
      </node>
      <node id="6401">
        <label>Gecode::VarImpVar&lt; Set::SetVarImp &gt;</label>
        <link refid="classGecode_1_1VarImpVar"/>
        <childnode refid="6402" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6400">
        <label>Gecode::SetVar</label>
        <link refid="classGecode_1_1SetVar"/>
        <childnode refid="6401" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6406">
        <label>Gecode::Set::SetVarImp</label>
        <link refid="classGecode_1_1Set_1_1SetVarImp"/>
        <childnode refid="6407" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6405">
        <label>Gecode::Var</label>
        <link refid="classGecode_1_1Var"/>
      </node>
      <node id="6407">
        <label>SetVarImpBase</label>
      </node>
      <node id="6404">
        <label>Gecode::VarImpVar&lt; Set::SetVarImp &gt;</label>
        <link refid="classGecode_1_1VarImpVar"/>
        <childnode refid="6405" relation="public-inheritance">
        </childnode>
        <childnode refid="6406" relation="usage">
          <edgelabel>x</edgelabel>
        </childnode>
      </node>
      <node id="6403">
        <label>Gecode::SetVar</label>
        <link refid="classGecode_1_1SetVar"/>
        <childnode refid="6404" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/usr/include/gecode/set.hh" line="129" column="1" bodyfile="/usr/include/gecode/set.hh" bodystart="129" bodyend="263"/>
    <listofallmembers>
      <member refid="classGecode_1_1VarImpVar_1a7d2b5ff6179ac3200ebc4d05046192b9" prot="public" virt="non-virtual"><scope>Gecode::SetVar</scope><name>afc</name></member>
      <member refid="classGecode_1_1VarImpVar_1a46d10d8d6c4d60627a1d14bf6e7a8ccf" prot="public" virt="non-virtual"><scope>Gecode::SetVar</scope><name>assigned</name></member>
      <member refid="classGecode_1_1VarImpVar_1a523eac9883d95fce3bbaf14313ada660" prot="public" virt="non-virtual"><scope>Gecode::SetVar</scope><name>before</name></member>
      <member refid="classGecode_1_1SetVar_1acc16a7decd12bd340faa56a505537856" prot="public" virt="non-virtual"><scope>Gecode::SetVar</scope><name>cardMax</name></member>
      <member refid="classGecode_1_1SetVar_1acffacfce212b30659c8395280bce695e" prot="public" virt="non-virtual"><scope>Gecode::SetVar</scope><name>cardMin</name></member>
      <member refid="classGecode_1_1SetVar_1aac7776cb7072d20edd67878ff83c7bdd" prot="public" virt="non-virtual"><scope>Gecode::SetVar</scope><name>contains</name></member>
      <member refid="classGecode_1_1VarImpVar_1a75b6d985437329ba108580b9f8415284" prot="public" virt="non-virtual"><scope>Gecode::SetVar</scope><name>degree</name></member>
      <member refid="classGecode_1_1SetVar_1a246aac4f3bf1b4b801978b240301d4b6" prot="public" virt="non-virtual"><scope>Gecode::SetVar</scope><name>glbMax</name></member>
      <member refid="classGecode_1_1SetVar_1ae97f74c0377795cf4d6e71e57b38b041" prot="public" virt="non-virtual"><scope>Gecode::SetVar</scope><name>glbMin</name></member>
      <member refid="classGecode_1_1SetVar_1a70d1ae0d622ad675d9a8c7c5737c803c" prot="public" virt="non-virtual"><scope>Gecode::SetVar</scope><name>glbSize</name></member>
      <member refid="classGecode_1_1SetVar_1ae4f0d028fe9fd452331ff84e54f56461" prot="public" virt="non-virtual"><scope>Gecode::SetVar</scope><name>lubMax</name></member>
      <member refid="classGecode_1_1SetVar_1ab62c5357992e5ccecad786136d69e152" prot="public" virt="non-virtual"><scope>Gecode::SetVar</scope><name>lubMin</name></member>
      <member refid="classGecode_1_1SetVar_1a339600343fc17aa45a4cc0fa8d3f3aa2" prot="public" virt="non-virtual"><scope>Gecode::SetVar</scope><name>lubSize</name></member>
      <member refid="classGecode_1_1SetVar_1a31582a2ac473009352531e0b92296e88" prot="public" virt="non-virtual"><scope>Gecode::SetVar</scope><name>notContains</name></member>
      <member refid="classGecode_1_1SetVar_1a2f70d0eb688bd612dd922cb509f48088" prot="public" virt="non-virtual"><scope>Gecode::SetVar</scope><name>operator&lt;&lt;</name></member>
      <member refid="classGecode_1_1VarImpVar_1a9b85f0619f18004aaaa3bd94a7d0eec0" prot="public" virt="non-virtual"><scope>Gecode::SetVar</scope><name>same</name></member>
      <member refid="classGecode_1_1SetVar_1a2b81f26aac27590d0189afabc2f00121" prot="public" virt="non-virtual"><scope>Gecode::SetVar</scope><name>SetVar</name></member>
      <member refid="classGecode_1_1SetVar_1a4e65e3cfd92312d411e41d03b86e0412" prot="public" virt="non-virtual"><scope>Gecode::SetVar</scope><name>SetVar</name></member>
      <member refid="classGecode_1_1SetVar_1af7943d83e45a5eae8eb97f223e4f8b54" prot="public" virt="non-virtual"><scope>Gecode::SetVar</scope><name>SetVar</name></member>
      <member refid="classGecode_1_1SetVar_1a7ceb541ca9ccd6bd3c4a44b1bb48a815" prot="public" virt="non-virtual"><scope>Gecode::SetVar</scope><name>SetVar</name></member>
      <member refid="classGecode_1_1SetVar_1a927a620d2a68d544d46e6b1e8c40796b" prot="public" virt="non-virtual"><scope>Gecode::SetVar</scope><name>SetVar</name></member>
      <member refid="classGecode_1_1SetVar_1aa194c595b3a86e4f5afa5d8bc53ace7a" prot="public" virt="non-virtual"><scope>Gecode::SetVar</scope><name>SetVar</name></member>
      <member refid="classGecode_1_1SetVar_1a06baab362711fef3375e8cf969849d12" prot="public" virt="non-virtual"><scope>Gecode::SetVar</scope><name>SetVar</name></member>
      <member refid="classGecode_1_1SetVar_1a9f35a49fb781323678474ea82e96866d" prot="public" virt="non-virtual"><scope>Gecode::SetVar</scope><name>SetVar</name></member>
      <member refid="classGecode_1_1SetVar_1a3a16376347e02552d847cf4191fd06fd" prot="private" virt="non-virtual"><scope>Gecode::SetVar</scope><name>SetVarArgs</name></member>
      <member refid="classGecode_1_1SetVar_1a7de98569d56afc43e68a13502342c25f" prot="private" virt="non-virtual"><scope>Gecode::SetVar</scope><name>SetVarArray</name></member>
      <member refid="classGecode_1_1SetVar_1a601dc4bbc6f244828f3d566a5f17fa61" prot="public" virt="non-virtual"><scope>Gecode::SetVar</scope><name>unknownSize</name></member>
      <member refid="classGecode_1_1VarImpVar_1abdbe8fe5fcdbac6679e255058e3b716c" prot="public" virt="non-virtual"><scope>Gecode::SetVar</scope><name>update</name></member>
      <member refid="classGecode_1_1VarImpVar_1a908cddb663db8f85c53391dd63befb53" prot="public" virt="non-virtual"><scope>Gecode::SetVar</scope><name>varimp</name></member>
      <member refid="classGecode_1_1VarImpVar_1af8ea39682fc7b0251df684ace1063a65" prot="public" virt="non-virtual"><scope>Gecode::SetVar</scope><name>VarImpType</name></member>
      <member refid="classGecode_1_1VarImpVar_1a8297a58d748bdb1dd081dc920f21d44a" prot="protected" virt="non-virtual"><scope>Gecode::SetVar</scope><name>VarImpVar</name></member>
      <member refid="classGecode_1_1VarImpVar_1a5c99d2d1dba56a32e8ff8f326b6204be" prot="protected" virt="non-virtual"><scope>Gecode::SetVar</scope><name>VarImpVar</name></member>
      <member refid="classGecode_1_1VarImpVar_1ac9314cfea4cf6ccd9f34e79e6f41dda3" prot="protected" virt="non-virtual"><scope>Gecode::SetVar</scope><name>x</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
