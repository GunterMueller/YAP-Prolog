<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classGecode_1_1Int_1_1LDSB_1_1Literal" kind="class" prot="public">
    <compoundname>Gecode::Int::LDSB::Literal</compoundname>
    <includes refid="int_2ldsb_8hh" local="no">ldsb.hh</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classGecode_1_1Int_1_1LDSB_1_1Literal_1ad42fafef399deeeb4a1cb44607dbc0b7" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int Gecode::Int::LDSB::Literal::_variable</definition>
        <argsstring></argsstring>
        <name>_variable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Variable index. The <ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref> that the index is meant for is assumed to be known by context. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/ldsb.hh" line="59" column="1" bodyfile="/usr/include/gecode/int/ldsb.hh" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Int_1_1LDSB_1_1Literal_1add49a0fe4c8c26d6041d53737ca25107" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int Gecode::Int::LDSB::Literal::_value</definition>
        <argsstring></argsstring>
        <name>_value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The value of the literal. For int and bool variables, this is the value itself; for set variables, this is one of the possible elements of the set. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/ldsb.hh" line="63" column="1" bodyfile="/usr/include/gecode/int/ldsb.hh" bodystart="63" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classGecode_1_1Int_1_1LDSB_1_1Literal_1a4887a5b79b5658d44908a437374a9bfa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Int::LDSB::Literal::Literal</definition>
        <argsstring>(void)</argsstring>
        <name>Literal</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Constructor for an empty literal. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/ldsb.hh" line="53" column="1" bodyfile="/usr/include/gecode/int/ldsb/brancher.hpp" bodystart="44" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1LDSB_1_1Literal_1aa66f07ebf436f5b5725d3845a9be657d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Int::LDSB::Literal::Literal</definition>
        <argsstring>(int _var, int _val)</argsstring>
        <name>Literal</name>
        <param>
          <type>int</type>
          <declname>_var</declname>
        </param>
        <param>
          <type>int</type>
          <declname>_val</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/ldsb.hh" line="55" column="1" bodyfile="/usr/include/gecode/int/ldsb/brancher.hpp" bodystart="48" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1LDSB_1_1Literal_1a2c674ef57eaad2889bff3847f25d9ddd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::Int::LDSB::Literal::operator&lt;</definition>
        <argsstring>(const Literal &amp;rhs) const </argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="classGecode_1_1Int_1_1LDSB_1_1Literal" kindref="compound">Literal</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Less than. The ordering is the lexicographical order on the (variable,value) pair. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/ldsb.hh" line="67" column="1" bodyfile="/usr/include/gecode/int/ldsb/brancher.hpp" bodystart="53" bodyend="58"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A <ref refid="classGecode_1_1Int_1_1LDSB_1_1Literal" kindref="compound">Literal</ref> is a pair of variable index and value. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/usr/include/gecode/int/ldsb.hh" line="50" column="1" bodyfile="/usr/include/gecode/int/ldsb.hh" bodystart="50" bodyend="68"/>
    <listofallmembers>
      <member refid="classGecode_1_1Int_1_1LDSB_1_1Literal_1add49a0fe4c8c26d6041d53737ca25107" prot="public" virt="non-virtual"><scope>Gecode::Int::LDSB::Literal</scope><name>_value</name></member>
      <member refid="classGecode_1_1Int_1_1LDSB_1_1Literal_1ad42fafef399deeeb4a1cb44607dbc0b7" prot="public" virt="non-virtual"><scope>Gecode::Int::LDSB::Literal</scope><name>_variable</name></member>
      <member refid="classGecode_1_1Int_1_1LDSB_1_1Literal_1a4887a5b79b5658d44908a437374a9bfa" prot="public" virt="non-virtual"><scope>Gecode::Int::LDSB::Literal</scope><name>Literal</name></member>
      <member refid="classGecode_1_1Int_1_1LDSB_1_1Literal_1aa66f07ebf436f5b5725d3845a9be657d" prot="public" virt="non-virtual"><scope>Gecode::Int::LDSB::Literal</scope><name>Literal</name></member>
      <member refid="classGecode_1_1Int_1_1LDSB_1_1Literal_1a2c674ef57eaad2889bff3847f25d9ddd" prot="public" virt="non-virtual"><scope>Gecode::Int::LDSB::Literal</scope><name>operator&lt;</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
