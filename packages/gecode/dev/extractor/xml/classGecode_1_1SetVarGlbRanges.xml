<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classGecode_1_1SetVarGlbRanges" kind="class" prot="public">
    <compoundname>Gecode::SetVarGlbRanges</compoundname>
    <includes refid="set_8hh" local="no">set.hh</includes>
      <sectiondef kind="user-defined">
      <header>Constructors and initialization</header>
      <memberdef kind="function" id="classGecode_1_1SetVarGlbRanges_1af3a5901ec6a201af6607812bc2f2b3eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::SetVarGlbRanges::SetVarGlbRanges</definition>
        <argsstring>(void)</argsstring>
        <name>SetVarGlbRanges</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set.hh" line="279" column="1" bodyfile="/usr/include/gecode/set/var/set.hpp" bodystart="107" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1SetVarGlbRanges_1a86105a303a4f78c1d835fb58af6198e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::SetVarGlbRanges::SetVarGlbRanges</definition>
        <argsstring>(const SetVar &amp;x)</argsstring>
        <name>SetVarGlbRanges</name>
        <param>
          <type>const <ref refid="classGecode_1_1SetVar" kindref="compound">SetVar</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Initialize to iterate ranges of variable <emphasis>x</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set.hh" line="281" column="1" bodyfile="/usr/include/gecode/set/var/set.hpp" bodystart="110" bodyend="111"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Iteration control</header>
      <memberdef kind="function" id="classGecode_1_1SetVarGlbRanges_1a6e2015f96de680b9d07f45bf1690a180" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::SetVarGlbRanges::operator()</definition>
        <argsstring>(void) const </argsstring>
        <name>operator()</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test whether iterator is still at a range or done. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set.hh" line="287" column="1" bodyfile="/usr/include/gecode/set/var/set.hpp" bodystart="115" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1SetVarGlbRanges_1aba31bcda3fe5ebedb66220d289843bbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::SetVarGlbRanges::operator++</definition>
        <argsstring>(void)</argsstring>
        <name>operator++</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Move iterator to next range (if possible) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set.hh" line="289" column="1" bodyfile="/usr/include/gecode/set/var/set.hpp" bodystart="119" bodyend="119"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Range access</header>
      <memberdef kind="function" id="classGecode_1_1SetVarGlbRanges_1aefd52a46c7c7498dbe1d76a507015a04" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::SetVarGlbRanges::min</definition>
        <argsstring>(void) const </argsstring>
        <name>min</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return smallest value of range. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set.hh" line="295" column="1" bodyfile="/usr/include/gecode/set/var/set.hpp" bodystart="123" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1SetVarGlbRanges_1aacc26d9b8bf75f3bb6543fa1d63e0e64" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::SetVarGlbRanges::max</definition>
        <argsstring>(void) const </argsstring>
        <name>max</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return largest value of range. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set.hh" line="297" column="1" bodyfile="/usr/include/gecode/set/var/set.hpp" bodystart="127" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1SetVarGlbRanges_1a6e42d4e67571c3f047672c21070c0462" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>forceinline unsigned int Gecode::SetVarGlbRanges::width</definition>
        <argsstring>(void) const </argsstring>
        <name>width</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return width of range (distance between minimum and maximum) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set.hh" line="299" column="1" bodyfile="/usr/include/gecode/set/var/set.hpp" bodystart="131" bodyend="131"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classGecode_1_1SetVarGlbRanges_1afce6094057ba85d80b472b5639834242" prot="private" static="no" mutable="no">
        <type><ref refid="classGecode_1_1Set_1_1GlbRanges" kindref="compound">Set::GlbRanges</ref>&lt; <ref refid="classGecode_1_1Set_1_1SetVarImp" kindref="compound">Set::SetVarImp</ref> * &gt;</type>
        <definition>Set::GlbRanges&lt;Set::SetVarImp*&gt; Gecode::SetVarGlbRanges::iter</definition>
        <argsstring></argsstring>
        <name>iter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set.hh" line="274" column="1" bodyfile="/usr/include/gecode/set.hh" bodystart="274" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Iterator for the greatest lower bound ranges of a set variable. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/usr/include/gecode/set.hh" line="272" column="1" bodyfile="/usr/include/gecode/set.hh" bodystart="272" bodyend="301"/>
    <listofallmembers>
      <member refid="classGecode_1_1SetVarGlbRanges_1afce6094057ba85d80b472b5639834242" prot="private" virt="non-virtual"><scope>Gecode::SetVarGlbRanges</scope><name>iter</name></member>
      <member refid="classGecode_1_1SetVarGlbRanges_1aacc26d9b8bf75f3bb6543fa1d63e0e64" prot="public" virt="non-virtual"><scope>Gecode::SetVarGlbRanges</scope><name>max</name></member>
      <member refid="classGecode_1_1SetVarGlbRanges_1aefd52a46c7c7498dbe1d76a507015a04" prot="public" virt="non-virtual"><scope>Gecode::SetVarGlbRanges</scope><name>min</name></member>
      <member refid="classGecode_1_1SetVarGlbRanges_1a6e2015f96de680b9d07f45bf1690a180" prot="public" virt="non-virtual"><scope>Gecode::SetVarGlbRanges</scope><name>operator()</name></member>
      <member refid="classGecode_1_1SetVarGlbRanges_1aba31bcda3fe5ebedb66220d289843bbc" prot="public" virt="non-virtual"><scope>Gecode::SetVarGlbRanges</scope><name>operator++</name></member>
      <member refid="classGecode_1_1SetVarGlbRanges_1af3a5901ec6a201af6607812bc2f2b3eb" prot="public" virt="non-virtual"><scope>Gecode::SetVarGlbRanges</scope><name>SetVarGlbRanges</name></member>
      <member refid="classGecode_1_1SetVarGlbRanges_1a86105a303a4f78c1d835fb58af6198e6" prot="public" virt="non-virtual"><scope>Gecode::SetVarGlbRanges</scope><name>SetVarGlbRanges</name></member>
      <member refid="classGecode_1_1SetVarGlbRanges_1a6e42d4e67571c3f047672c21070c0462" prot="public" virt="non-virtual"><scope>Gecode::SetVarGlbRanges</scope><name>width</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
