<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classGecode_1_1Support_1_1DynamicStack" kind="class" prot="public">
    <compoundname>Gecode::Support::DynamicStack</compoundname>
    <includes refid="dynamic-stack_8hpp" local="no">dynamic-stack.hpp</includes>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
      <param>
        <type>class</type>
        <declname>A</declname>
        <defname>A</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classGecode_1_1Support_1_1DynamicStack_1a0e53b9421bce1ac89a72d3741625d951" prot="private" static="no" mutable="no">
        <type>A &amp;</type>
        <definition>A&amp; Gecode::Support::DynamicStack&lt; T, A &gt;::a</definition>
        <argsstring></argsstring>
        <name>a</name>
        <briefdescription>
<para>Memory allocator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/support/dynamic-stack.hpp" line="49" column="1" bodyfile="/usr/include/gecode/support/dynamic-stack.hpp" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Support_1_1DynamicStack_1a9a47fc9a9b1093d1eac351888993f99e" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Gecode::Support::DynamicStack&lt; T, A &gt;::limit</definition>
        <argsstring></argsstring>
        <name>limit</name>
        <briefdescription>
<para>Current size of the stack. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/support/dynamic-stack.hpp" line="51" column="1" bodyfile="/usr/include/gecode/support/dynamic-stack.hpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Support_1_1DynamicStack_1aee1a57b52cd3082fcf5224906aeed3dd" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Gecode::Support::DynamicStack&lt; T, A &gt;::tos</definition>
        <argsstring></argsstring>
        <name>tos</name>
        <briefdescription>
<para>Top of stack. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/support/dynamic-stack.hpp" line="53" column="1" bodyfile="/usr/include/gecode/support/dynamic-stack.hpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Support_1_1DynamicStack_1a5f3c5ea59c19e7e700af3a4d7e7fa33c" prot="private" static="no" mutable="no">
        <type>T *</type>
        <definition>T* Gecode::Support::DynamicStack&lt; T, A &gt;::stack</definition>
        <argsstring></argsstring>
        <name>stack</name>
        <briefdescription>
<para>Elements on stack. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/support/dynamic-stack.hpp" line="55" column="1" bodyfile="/usr/include/gecode/support/dynamic-stack.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classGecode_1_1Support_1_1DynamicStack_1ac2557b918b90552070818f6de2c8175f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gecode::Support::DynamicStack&lt; T, A &gt;::resize</definition>
        <argsstring>(void)</argsstring>
        <name>resize</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Resize stack (increase size) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/support/dynamic-stack.hpp" line="57" column="1" bodyfile="/usr/include/gecode/support/dynamic-stack.hpp" bodystart="107" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Support_1_1DynamicStack_1aaa9bcef3850109ae68342f10e3b75e7b" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Gecode::Support::DynamicStack&lt; T, A &gt;::DynamicStack</definition>
        <argsstring>(const DynamicStack &amp;s)</argsstring>
        <name>DynamicStack</name>
        <param>
          <type>const <ref refid="classGecode_1_1Support_1_1DynamicStack" kindref="compound">DynamicStack</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Copy constructor (disabled) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/support/dynamic-stack.hpp" line="99" column="1" bodyfile="/usr/include/gecode/support/dynamic-stack.hpp" bodystart="99" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Support_1_1DynamicStack_1a4f93a95385911744f6e5f792616c8d75" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classGecode_1_1Support_1_1DynamicStack" kindref="compound">DynamicStack</ref> &amp;</type>
        <definition>const DynamicStack&amp; Gecode::Support::DynamicStack&lt; T, A &gt;::operator=</definition>
        <argsstring>(const DynamicStack &amp;)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classGecode_1_1Support_1_1DynamicStack" kindref="compound">DynamicStack</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Assignment operator (disabled) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/support/dynamic-stack.hpp" line="101" column="1" bodyfile="/usr/include/gecode/support/dynamic-stack.hpp" bodystart="101" bodyend="101"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classGecode_1_1Support_1_1DynamicStack_1a67cbb7d1ba81312226baeb3d2f1cd6ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Support::DynamicStack&lt; T, A &gt;::DynamicStack</definition>
        <argsstring>(A &amp;a, int n=64)</argsstring>
        <name>DynamicStack</name>
        <param>
          <type>A &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
          <defval>64</defval>
        </param>
        <briefdescription>
<para>Initialize stack with <emphasis>n</emphasis> elements. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/support/dynamic-stack.hpp" line="60" column="1" bodyfile="/usr/include/gecode/support/dynamic-stack.hpp" bodystart="115" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Support_1_1DynamicStack_1a65730852397784f8dca4113f827ca2ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Support::DynamicStack&lt; T, A &gt;::~DynamicStack</definition>
        <argsstring>(void)</argsstring>
        <name>~DynamicStack</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Release memory. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/support/dynamic-stack.hpp" line="62" column="1" bodyfile="/usr/include/gecode/support/dynamic-stack.hpp" bodystart="120" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Support_1_1DynamicStack_1adfbb71130615ea9eb3dffe2ed02efb3f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::Support::DynamicStack&lt; T, A &gt;::empty</definition>
        <argsstring>(void) const </argsstring>
        <name>empty</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test whether stack is empty. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/support/dynamic-stack.hpp" line="65" column="1" bodyfile="/usr/include/gecode/support/dynamic-stack.hpp" bodystart="152" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Support_1_1DynamicStack_1a45e8e6702442c86ff6e03ee7cbd931d9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Support::DynamicStack&lt; T, A &gt;::entries</definition>
        <argsstring>(void) const </argsstring>
        <name>entries</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return number of entries currently on stack. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/support/dynamic-stack.hpp" line="67" column="1" bodyfile="/usr/include/gecode/support/dynamic-stack.hpp" bodystart="158" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Support_1_1DynamicStack_1a2b9121dcfa8104e0916751e49dd390de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>forceinline T Gecode::Support::DynamicStack&lt; T, A &gt;::pop</definition>
        <argsstring>(void)</argsstring>
        <name>pop</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Pop topmost element from stack and return it. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/support/dynamic-stack.hpp" line="70" column="1" bodyfile="/usr/include/gecode/support/dynamic-stack.hpp" bodystart="126" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Support_1_1DynamicStack_1a910d29c956a8b1f3e74594597b646487" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>T &amp;</type>
        <definition>forceinline T &amp; Gecode::Support::DynamicStack&lt; T, A &gt;::top</definition>
        <argsstring>(void) const </argsstring>
        <name>top</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return element on top of stack. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/support/dynamic-stack.hpp" line="72" column="1" bodyfile="/usr/include/gecode/support/dynamic-stack.hpp" bodystart="132" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Support_1_1DynamicStack_1a2d3ab0ae1077a3a439c388c25cfe72ec" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>T &amp;</type>
        <definition>forceinline T &amp; Gecode::Support::DynamicStack&lt; T, A &gt;::last</definition>
        <argsstring>(void) const </argsstring>
        <name>last</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return element that has just been popped. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/support/dynamic-stack.hpp" line="74" column="1" bodyfile="/usr/include/gecode/support/dynamic-stack.hpp" bodystart="138" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Support_1_1DynamicStack_1ac979900e1fcb20bcf2954232857c0836" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Support::DynamicStack&lt; T, A &gt;::push</definition>
        <argsstring>(const T &amp;x)</argsstring>
        <name>push</name>
        <param>
          <type>const T &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Push element <emphasis>x</emphasis> on top of stack. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/support/dynamic-stack.hpp" line="76" column="1" bodyfile="/usr/include/gecode/support/dynamic-stack.hpp" bodystart="144" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Support_1_1DynamicStack_1ab9ed9cfd3dacc8e58b56c4399ac849d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T &amp;</type>
        <definition>forceinline T &amp; Gecode::Support::DynamicStack&lt; T, A &gt;::operator[]</definition>
        <argsstring>(int i)</argsstring>
        <name>operator[]</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Return entry at position <emphasis>i</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>Position 0 corresponds to the element first pushed, whereas position <computeroutput><ref refid="classGecode_1_1Support_1_1DynamicStack_1a45e8e6702442c86ff6e03ee7cbd931d9" kindref="member">entries()</ref>-1</computeroutput> corresponds to the element pushed last. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/support/dynamic-stack.hpp" line="85" column="1" bodyfile="/usr/include/gecode/support/dynamic-stack.hpp" bodystart="164" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Support_1_1DynamicStack_1adb2c5ba01256c11991e7926861d3ec55" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const T &amp;</type>
        <definition>forceinline const T &amp; Gecode::Support::DynamicStack&lt; T, A &gt;::operator[]</definition>
        <argsstring>(int i) const </argsstring>
        <name>operator[]</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Return entry at position <emphasis>i</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>Position 0 corresponds to the element first pushed, whereas position <computeroutput><ref refid="classGecode_1_1Support_1_1DynamicStack_1a45e8e6702442c86ff6e03ee7cbd931d9" kindref="member">entries()</ref>-1</computeroutput> corresponds to the element pushed last. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/support/dynamic-stack.hpp" line="92" column="1" bodyfile="/usr/include/gecode/support/dynamic-stack.hpp" bodystart="170" bodyend="172"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classGecode_1_1Support_1_1DynamicStack_1a69397f17a8824903699de23f05a48548" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void *</type>
        <definition>static void* Gecode::Support::DynamicStack&lt; T, A &gt;::operator new</definition>
        <argsstring>(size_t s)</argsstring>
        <name>operator new</name>
        <param>
          <type>size_t</type>
          <declname>s</declname>
        </param>
        <exceptions> throw ()</exceptions>
        <briefdescription>
<para>Allocate memory from heap (disabled) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/support/dynamic-stack.hpp" line="95" column="1" bodyfile="/usr/include/gecode/support/dynamic-stack.hpp" bodystart="95" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Support_1_1DynamicStack_1a6840ae7707350b31e943cc583ce2fe5b" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Gecode::Support::DynamicStack&lt; T, A &gt;::operator delete</definition>
        <argsstring>(void *p)</argsstring>
        <name>operator delete</name>
        <param>
          <type>void *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Free memory allocated from heap (disabled) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/support/dynamic-stack.hpp" line="97" column="1" bodyfile="/usr/include/gecode/support/dynamic-stack.hpp" bodystart="97" bodyend="97"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Stack with arbitrary number of elements. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/usr/include/gecode/support/dynamic-stack.hpp" line="46" column="1" bodyfile="/usr/include/gecode/support/dynamic-stack.hpp" bodystart="46" bodyend="102"/>
    <listofallmembers>
      <member refid="classGecode_1_1Support_1_1DynamicStack_1a0e53b9421bce1ac89a72d3741625d951" prot="private" virt="non-virtual"><scope>Gecode::Support::DynamicStack</scope><name>a</name></member>
      <member refid="classGecode_1_1Support_1_1DynamicStack_1a67cbb7d1ba81312226baeb3d2f1cd6ef" prot="public" virt="non-virtual"><scope>Gecode::Support::DynamicStack</scope><name>DynamicStack</name></member>
      <member refid="classGecode_1_1Support_1_1DynamicStack_1aaa9bcef3850109ae68342f10e3b75e7b" prot="private" virt="non-virtual"><scope>Gecode::Support::DynamicStack</scope><name>DynamicStack</name></member>
      <member refid="classGecode_1_1Support_1_1DynamicStack_1adfbb71130615ea9eb3dffe2ed02efb3f" prot="public" virt="non-virtual"><scope>Gecode::Support::DynamicStack</scope><name>empty</name></member>
      <member refid="classGecode_1_1Support_1_1DynamicStack_1a45e8e6702442c86ff6e03ee7cbd931d9" prot="public" virt="non-virtual"><scope>Gecode::Support::DynamicStack</scope><name>entries</name></member>
      <member refid="classGecode_1_1Support_1_1DynamicStack_1a2d3ab0ae1077a3a439c388c25cfe72ec" prot="public" virt="non-virtual"><scope>Gecode::Support::DynamicStack</scope><name>last</name></member>
      <member refid="classGecode_1_1Support_1_1DynamicStack_1a9a47fc9a9b1093d1eac351888993f99e" prot="private" virt="non-virtual"><scope>Gecode::Support::DynamicStack</scope><name>limit</name></member>
      <member refid="classGecode_1_1Support_1_1DynamicStack_1a6840ae7707350b31e943cc583ce2fe5b" prot="private" virt="non-virtual"><scope>Gecode::Support::DynamicStack</scope><name>operator delete</name></member>
      <member refid="classGecode_1_1Support_1_1DynamicStack_1a69397f17a8824903699de23f05a48548" prot="private" virt="non-virtual"><scope>Gecode::Support::DynamicStack</scope><name>operator new</name></member>
      <member refid="classGecode_1_1Support_1_1DynamicStack_1a4f93a95385911744f6e5f792616c8d75" prot="private" virt="non-virtual"><scope>Gecode::Support::DynamicStack</scope><name>operator=</name></member>
      <member refid="classGecode_1_1Support_1_1DynamicStack_1ab9ed9cfd3dacc8e58b56c4399ac849d1" prot="public" virt="non-virtual"><scope>Gecode::Support::DynamicStack</scope><name>operator[]</name></member>
      <member refid="classGecode_1_1Support_1_1DynamicStack_1adb2c5ba01256c11991e7926861d3ec55" prot="public" virt="non-virtual"><scope>Gecode::Support::DynamicStack</scope><name>operator[]</name></member>
      <member refid="classGecode_1_1Support_1_1DynamicStack_1a2b9121dcfa8104e0916751e49dd390de" prot="public" virt="non-virtual"><scope>Gecode::Support::DynamicStack</scope><name>pop</name></member>
      <member refid="classGecode_1_1Support_1_1DynamicStack_1ac979900e1fcb20bcf2954232857c0836" prot="public" virt="non-virtual"><scope>Gecode::Support::DynamicStack</scope><name>push</name></member>
      <member refid="classGecode_1_1Support_1_1DynamicStack_1ac2557b918b90552070818f6de2c8175f" prot="private" virt="non-virtual"><scope>Gecode::Support::DynamicStack</scope><name>resize</name></member>
      <member refid="classGecode_1_1Support_1_1DynamicStack_1a5f3c5ea59c19e7e700af3a4d7e7fa33c" prot="private" virt="non-virtual"><scope>Gecode::Support::DynamicStack</scope><name>stack</name></member>
      <member refid="classGecode_1_1Support_1_1DynamicStack_1a910d29c956a8b1f3e74594597b646487" prot="public" virt="non-virtual"><scope>Gecode::Support::DynamicStack</scope><name>top</name></member>
      <member refid="classGecode_1_1Support_1_1DynamicStack_1aee1a57b52cd3082fcf5224906aeed3dd" prot="private" virt="non-virtual"><scope>Gecode::Support::DynamicStack</scope><name>tos</name></member>
      <member refid="classGecode_1_1Support_1_1DynamicStack_1a65730852397784f8dca4113f827ca2ee" prot="public" virt="non-virtual"><scope>Gecode::Support::DynamicStack</scope><name>~DynamicStack</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
