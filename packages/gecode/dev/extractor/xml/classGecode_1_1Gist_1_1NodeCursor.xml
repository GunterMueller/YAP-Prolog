<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classGecode_1_1Gist_1_1NodeCursor" kind="class" prot="public">
    <compoundname>Gecode::Gist::NodeCursor</compoundname>
    <includes refid="nodecursor_8hh" local="no">nodecursor.hh</includes>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>Node</declname>
        <defname>Node</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Cursor interface</header>
      <memberdef kind="function" id="classGecode_1_1Gist_1_1NodeCursor_1ac09a2c1a196d04d08271b77c0f53d60c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::Gist::NodeCursor&lt; Node &gt;::mayMoveUpwards</definition>
        <argsstring>(void)</argsstring>
        <name>mayMoveUpwards</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test if the cursor may move to the parent node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/gist/nodecursor.hh" line="75" column="1" bodyfile="/usr/include/gecode/gist/nodecursor.hpp" bodystart="70" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Gist_1_1NodeCursor_1a51383e2a893a05d6260cf2bfc3850481" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Gist::NodeCursor&lt; Node &gt;::moveUpwards</definition>
        <argsstring>(void)</argsstring>
        <name>moveUpwards</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Move cursor to the parent node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/gist/nodecursor.hh" line="77" column="1" bodyfile="/usr/include/gecode/gist/nodecursor.hpp" bodystart="76" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Gist_1_1NodeCursor_1a6ed0e3862054186bdb199491a17fe0df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::Gist::NodeCursor&lt; Node &gt;::mayMoveDownwards</definition>
        <argsstring>(void)</argsstring>
        <name>mayMoveDownwards</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test if cursor may move to the first child node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/gist/nodecursor.hh" line="79" column="1" bodyfile="/usr/include/gecode/gist/nodecursor.hpp" bodystart="93" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Gist_1_1NodeCursor_1add0fd81655e62118548be719e0869809" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Gist::NodeCursor&lt; Node &gt;::moveDownwards</definition>
        <argsstring>(void)</argsstring>
        <name>moveDownwards</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Move cursor to the first child node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/gist/nodecursor.hh" line="81" column="1" bodyfile="/usr/include/gecode/gist/nodecursor.hpp" bodystart="99" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Gist_1_1NodeCursor_1a6a5b08af9795b8eae2f27ac0bd2605d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::Gist::NodeCursor&lt; Node &gt;::mayMoveSidewards</definition>
        <argsstring>(void)</argsstring>
        <name>mayMoveSidewards</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test if cursor may move to the first sibling. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/gist/nodecursor.hh" line="83" column="1" bodyfile="/usr/include/gecode/gist/nodecursor.hpp" bodystart="106" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Gist_1_1NodeCursor_1aac74c6ac9b49167865ea1e76d0c235e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Gist::NodeCursor&lt; Node &gt;::moveSidewards</definition>
        <argsstring>(void)</argsstring>
        <name>moveSidewards</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Move cursor to the first sibling. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/gist/nodecursor.hh" line="85" column="1" bodyfile="/usr/include/gecode/gist/nodecursor.hpp" bodystart="113" bodyend="116"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classGecode_1_1Gist_1_1NodeCursor_1a6d3c0e231dd54a13dcb443c80e6fea70" prot="private" static="no" mutable="no">
        <type><ref refid="classGecode_1_1Gist_1_1Node" kindref="compound">Node</ref> *</type>
        <definition>Node* Gecode::Gist::NodeCursor&lt; Node &gt;::_startNode</definition>
        <argsstring></argsstring>
        <name>_startNode</name>
        <briefdescription>
<para>The node where the iteration starts. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/gist/nodecursor.hh" line="50" column="1" bodyfile="/usr/include/gecode/gist/nodecursor.hh" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Gist_1_1NodeCursor_1a695b801bc04d5ff80d003a12e4040189" prot="private" static="no" mutable="no">
        <type><ref refid="classGecode_1_1Gist_1_1Node" kindref="compound">Node</ref> *</type>
        <definition>Node* Gecode::Gist::NodeCursor&lt; Node &gt;::_node</definition>
        <argsstring></argsstring>
        <name>_node</name>
        <briefdescription>
<para>The current node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/gist/nodecursor.hh" line="52" column="1" bodyfile="/usr/include/gecode/gist/nodecursor.hh" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Gist_1_1NodeCursor_1affc3cfb7ab00e7ca8f71a3ab8f72ba39" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int Gecode::Gist::NodeCursor&lt; Node &gt;::_alternative</definition>
        <argsstring></argsstring>
        <name>_alternative</name>
        <briefdescription>
<para>The current alternative. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/gist/nodecursor.hh" line="54" column="1" bodyfile="/usr/include/gecode/gist/nodecursor.hh" bodystart="54" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classGecode_1_1Gist_1_1NodeCursor_1a327325bcfef32a267cea6d3ba1416b11" prot="protected" static="no" mutable="no">
        <type>const <ref refid="classGecode_1_1Gist_1_1NodeAllocatorBase" kindref="compound">Node::NodeAllocator</ref> &amp;</type>
        <definition>const Node::NodeAllocator&amp; Gecode::Gist::NodeCursor&lt; Node &gt;::na</definition>
        <argsstring></argsstring>
        <name>na</name>
        <briefdescription>
<para>The node allocator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/gist/nodecursor.hh" line="57" column="1" bodyfile="/usr/include/gecode/gist/nodecursor.hh" bodystart="57" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classGecode_1_1Gist_1_1NodeCursor_1ab8f69a5de0bb2e4ef7e1c02b82e6b31e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Gist::NodeCursor&lt; Node &gt;::node</definition>
        <argsstring>(Node *n)</argsstring>
        <name>node</name>
        <param>
          <type><ref refid="classGecode_1_1Gist_1_1Node" kindref="compound">Node</ref> *</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para><ref refid="namespaceGecode_1_1Set" kindref="compound">Set</ref> current node to <emphasis>n</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/gist/nodecursor.hh" line="59" column="1" bodyfile="/usr/include/gecode/gist/nodecursor.hpp" bodystart="66" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Gist_1_1NodeCursor_1aafd421a2dc921f0e2bed9671055abb34" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGecode_1_1Gist_1_1Node" kindref="compound">Node</ref> *</type>
        <definition>forceinline Node * Gecode::Gist::NodeCursor&lt; Node &gt;::startNode</definition>
        <argsstring>(void)</argsstring>
        <name>startNode</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return start node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/gist/nodecursor.hh" line="61" column="1" bodyfile="/usr/include/gecode/gist/nodecursor.hpp" bodystart="62" bodyend="62"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classGecode_1_1Gist_1_1NodeCursor_1a5f230c3e4a60f5f91bc2924dae05495d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Gist::NodeCursor&lt; Node &gt;::NodeCursor</definition>
        <argsstring>(Node *theNode, const typename Node::NodeAllocator &amp;na)</argsstring>
        <name>NodeCursor</name>
        <param>
          <type><ref refid="classGecode_1_1Gist_1_1Node" kindref="compound">Node</ref> *</type>
          <declname>theNode</declname>
        </param>
        <param>
          <type>const typename <ref refid="classGecode_1_1Gist_1_1NodeAllocatorBase" kindref="compound">Node::NodeAllocator</ref> &amp;</type>
          <declname>na</declname>
        </param>
        <briefdescription>
<para>Construct cursor, initially set to <emphasis>theNode</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/gist/nodecursor.hh" line="64" column="1" bodyfile="/usr/include/gecode/gist/nodecursor.hpp" bodystart="42" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Gist_1_1NodeCursor_1a79fb7b8bc5aa9c84c6735db1154112c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGecode_1_1Gist_1_1Node" kindref="compound">Node</ref> *</type>
        <definition>forceinline Node * Gecode::Gist::NodeCursor&lt; Node &gt;::node</definition>
        <argsstring>(void)</argsstring>
        <name>node</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return current node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/gist/nodecursor.hh" line="66" column="1" bodyfile="/usr/include/gecode/gist/nodecursor.hpp" bodystart="50" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Gist_1_1NodeCursor_1af0f52939ef370ba2a509dcc9e075c442" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>forceinline unsigned int Gecode::Gist::NodeCursor&lt; Node &gt;::alternative</definition>
        <argsstring>(void)</argsstring>
        <name>alternative</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return current alternative. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/gist/nodecursor.hh" line="68" column="1" bodyfile="/usr/include/gecode/gist/nodecursor.hpp" bodystart="54" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Gist_1_1NodeCursor_1ae30df12f03597c90da69f21f49914aa7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Gist::NodeCursor&lt; Node &gt;::alternative</definition>
        <argsstring>(unsigned int a)</argsstring>
        <name>alternative</name>
        <param>
          <type>unsigned int</type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para><ref refid="namespaceGecode_1_1Set" kindref="compound">Set</ref> current alternative. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/gist/nodecursor.hh" line="70" column="1" bodyfile="/usr/include/gecode/gist/nodecursor.hpp" bodystart="58" bodyend="58"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A cursor that can be run over a tree. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="4454">
        <label>Gecode::Gist::NodeAllocatorBase&lt; T &gt;</label>
        <link refid="classGecode_1_1Gist_1_1NodeAllocatorBase"/>
      </node>
      <node id="4453">
        <label>Gecode::Gist::NodeCursor&lt; Node &gt;</label>
        <link refid="classGecode_1_1Gist_1_1NodeCursor"/>
        <childnode refid="4454" relation="usage">
          <edgelabel>na</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/usr/include/gecode/gist/nodecursor.hh" line="47" column="1" bodyfile="/usr/include/gecode/gist/nodecursor.hh" bodystart="47" bodyend="87"/>
    <listofallmembers>
      <member refid="classGecode_1_1Gist_1_1NodeCursor_1affc3cfb7ab00e7ca8f71a3ab8f72ba39" prot="private" virt="non-virtual"><scope>Gecode::Gist::NodeCursor</scope><name>_alternative</name></member>
      <member refid="classGecode_1_1Gist_1_1NodeCursor_1a695b801bc04d5ff80d003a12e4040189" prot="private" virt="non-virtual"><scope>Gecode::Gist::NodeCursor</scope><name>_node</name></member>
      <member refid="classGecode_1_1Gist_1_1NodeCursor_1a6d3c0e231dd54a13dcb443c80e6fea70" prot="private" virt="non-virtual"><scope>Gecode::Gist::NodeCursor</scope><name>_startNode</name></member>
      <member refid="classGecode_1_1Gist_1_1NodeCursor_1af0f52939ef370ba2a509dcc9e075c442" prot="public" virt="non-virtual"><scope>Gecode::Gist::NodeCursor</scope><name>alternative</name></member>
      <member refid="classGecode_1_1Gist_1_1NodeCursor_1ae30df12f03597c90da69f21f49914aa7" prot="public" virt="non-virtual"><scope>Gecode::Gist::NodeCursor</scope><name>alternative</name></member>
      <member refid="classGecode_1_1Gist_1_1NodeCursor_1a6ed0e3862054186bdb199491a17fe0df" prot="public" virt="non-virtual"><scope>Gecode::Gist::NodeCursor</scope><name>mayMoveDownwards</name></member>
      <member refid="classGecode_1_1Gist_1_1NodeCursor_1a6a5b08af9795b8eae2f27ac0bd2605d1" prot="public" virt="non-virtual"><scope>Gecode::Gist::NodeCursor</scope><name>mayMoveSidewards</name></member>
      <member refid="classGecode_1_1Gist_1_1NodeCursor_1ac09a2c1a196d04d08271b77c0f53d60c" prot="public" virt="non-virtual"><scope>Gecode::Gist::NodeCursor</scope><name>mayMoveUpwards</name></member>
      <member refid="classGecode_1_1Gist_1_1NodeCursor_1add0fd81655e62118548be719e0869809" prot="public" virt="non-virtual"><scope>Gecode::Gist::NodeCursor</scope><name>moveDownwards</name></member>
      <member refid="classGecode_1_1Gist_1_1NodeCursor_1aac74c6ac9b49167865ea1e76d0c235e0" prot="public" virt="non-virtual"><scope>Gecode::Gist::NodeCursor</scope><name>moveSidewards</name></member>
      <member refid="classGecode_1_1Gist_1_1NodeCursor_1a51383e2a893a05d6260cf2bfc3850481" prot="public" virt="non-virtual"><scope>Gecode::Gist::NodeCursor</scope><name>moveUpwards</name></member>
      <member refid="classGecode_1_1Gist_1_1NodeCursor_1a327325bcfef32a267cea6d3ba1416b11" prot="protected" virt="non-virtual"><scope>Gecode::Gist::NodeCursor</scope><name>na</name></member>
      <member refid="classGecode_1_1Gist_1_1NodeCursor_1ab8f69a5de0bb2e4ef7e1c02b82e6b31e" prot="protected" virt="non-virtual"><scope>Gecode::Gist::NodeCursor</scope><name>node</name></member>
      <member refid="classGecode_1_1Gist_1_1NodeCursor_1a79fb7b8bc5aa9c84c6735db1154112c9" prot="public" virt="non-virtual"><scope>Gecode::Gist::NodeCursor</scope><name>node</name></member>
      <member refid="classGecode_1_1Gist_1_1NodeCursor_1a5f230c3e4a60f5f91bc2924dae05495d" prot="public" virt="non-virtual"><scope>Gecode::Gist::NodeCursor</scope><name>NodeCursor</name></member>
      <member refid="classGecode_1_1Gist_1_1NodeCursor_1aafd421a2dc921f0e2bed9671055abb34" prot="protected" virt="non-virtual"><scope>Gecode::Gist::NodeCursor</scope><name>startNode</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
