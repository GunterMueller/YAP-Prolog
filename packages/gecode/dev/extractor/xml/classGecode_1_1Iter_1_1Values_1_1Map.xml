<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classGecode_1_1Iter_1_1Values_1_1Map" kind="class" prot="public">
    <compoundname>Gecode::Iter::Values::Map</compoundname>
    <includes refid="values-map_8hpp" local="no">values-map.hpp</includes>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>I</declname>
        <defname>I</defname>
      </param>
      <param>
        <type>class</type>
        <declname>M</declname>
        <defname>M</defname>
      </param>
      <param>
        <type>bool</type>
        <declname>strict</declname>
        <defname>strict</defname>
        <defval>false</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Constructors and initialization</header>
      <memberdef kind="function" id="classGecode_1_1Iter_1_1Values_1_1Map_1aa7fcaabb3dea6de8dadd20f1b1350de9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Iter::Values::Map&lt; I, M, strict &gt;::Map</definition>
        <argsstring>(void)</argsstring>
        <name>Map</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/iter/values-map.hpp" line="59" column="1" bodyfile="/usr/include/gecode/iter/values-map.hpp" bodystart="88" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Iter_1_1Values_1_1Map_1af517b3c8f08aff74bf3c79432f766e6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Iter::Values::Map&lt; I, M, strict &gt;::Map</definition>
        <argsstring>(I &amp;i)</argsstring>
        <name>Map</name>
        <param>
          <type>I &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Initialize with values from <emphasis>i</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/iter/values-map.hpp" line="61" column="1" bodyfile="/usr/include/gecode/iter/values-map.hpp" bodystart="92" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Iter_1_1Values_1_1Map_1af8a55525416037e373558d4f40b17c6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Iter::Values::Map&lt; I, M, strict &gt;::Map</definition>
        <argsstring>(I &amp;i, const M &amp;m)</argsstring>
        <name>Map</name>
        <param>
          <type>I &amp;</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const M &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Initialize with values from <emphasis>i</emphasis> and map <emphasis>m</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/iter/values-map.hpp" line="63" column="1" bodyfile="/usr/include/gecode/iter/values-map.hpp" bodystart="96" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Iter_1_1Values_1_1Map_1a2dd99ed49e727aa6c56c790cc9366bf5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Iter::Values::Map&lt; I, M, strict &gt;::init</definition>
        <argsstring>(I &amp;i)</argsstring>
        <name>init</name>
        <param>
          <type>I &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Initialize with values from <emphasis>i</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/iter/values-map.hpp" line="65" column="1" bodyfile="/usr/include/gecode/iter/values-map.hpp" bodystart="100" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Iter_1_1Values_1_1Map_1a46763c0af33c7dcd5caf4b049b96c508" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Iter::Values::Map&lt; I, M, strict &gt;::init</definition>
        <argsstring>(I &amp;i, const M &amp;m)</argsstring>
        <name>init</name>
        <param>
          <type>I &amp;</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const M &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Initialize with values from <emphasis>i</emphasis> and map <emphasis>m</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/iter/values-map.hpp" line="67" column="1" bodyfile="/usr/include/gecode/iter/values-map.hpp" bodystart="106" bodyend="108"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Iteration control</header>
      <memberdef kind="function" id="classGecode_1_1Iter_1_1Values_1_1Map_1a939c6f418e2683c602f993eb792f79d3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::Iter::Values::Map&lt; I, M, strict &gt;::operator()</definition>
        <argsstring>(void) const </argsstring>
        <name>operator()</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test whether iterator is still at a value or done. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/iter/values-map.hpp" line="73" column="1" bodyfile="/usr/include/gecode/iter/values-map.hpp" bodystart="124" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Iter_1_1Values_1_1Map_1af050abfa9ceded749c4acf9f6b502934" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Iter::Values::Map&lt; I, M, strict &gt;::operator++</definition>
        <argsstring>(void)</argsstring>
        <name>operator++</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Move iterator to next value (if possible) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/iter/values-map.hpp" line="75" column="1" bodyfile="/usr/include/gecode/iter/values-map.hpp" bodystart="112" bodyend="121"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Value access</header>
      <memberdef kind="function" id="classGecode_1_1Iter_1_1Values_1_1Map_1afcef9c57ff44e71ee902751fc88652a8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Iter::Values::Map&lt; I, M, strict &gt;::val</definition>
        <argsstring>(void) const </argsstring>
        <name>val</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return current value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/iter/values-map.hpp" line="81" column="1" bodyfile="/usr/include/gecode/iter/values-map.hpp" bodystart="130" bodyend="132"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classGecode_1_1Iter_1_1Values_1_1Map_1ab3b3cdc5320e6ac0c5a78c14903ec8f4" prot="protected" static="no" mutable="no">
        <type>I</type>
        <definition>I Gecode::Iter::Values::Map&lt; I, M, strict &gt;::i</definition>
        <argsstring></argsstring>
        <name>i</name>
        <briefdescription>
<para>Input iterator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/iter/values-map.hpp" line="52" column="1" bodyfile="/usr/include/gecode/iter/values-map.hpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Iter_1_1Values_1_1Map_1a7e2a7b941888263c3623ba280bd884e7" prot="protected" static="no" mutable="no">
        <type>M</type>
        <definition>M Gecode::Iter::Values::Map&lt; I, M, strict &gt;::m</definition>
        <argsstring></argsstring>
        <name>m</name>
        <briefdescription>
<para>Mapping object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/iter/values-map.hpp" line="54" column="1" bodyfile="/usr/include/gecode/iter/values-map.hpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Value iterator for mapping values of a value iterator. </para>    </briefdescription>
    <detaileddescription>
<para>If <emphasis>strict</emphasis> is true, the values obtained by mapping must be strictly increasing (that is, no duplicates). </para>    </detaileddescription>
    <collaborationgraph>
      <node id="3758">
        <label>I</label>
      </node>
      <node id="3757">
        <label>Gecode::Iter::Values::Map&lt; I, M, strict &gt;</label>
        <link refid="classGecode_1_1Iter_1_1Values_1_1Map"/>
        <childnode refid="3758" relation="usage">
          <edgelabel>i</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/usr/include/gecode/iter/values-map.hpp" line="49" column="1" bodyfile="/usr/include/gecode/iter/values-map.hpp" bodystart="49" bodyend="83"/>
    <listofallmembers>
      <member refid="classGecode_1_1Iter_1_1Values_1_1Map_1ab3b3cdc5320e6ac0c5a78c14903ec8f4" prot="protected" virt="non-virtual"><scope>Gecode::Iter::Values::Map</scope><name>i</name></member>
      <member refid="classGecode_1_1Iter_1_1Values_1_1Map_1a2dd99ed49e727aa6c56c790cc9366bf5" prot="public" virt="non-virtual"><scope>Gecode::Iter::Values::Map</scope><name>init</name></member>
      <member refid="classGecode_1_1Iter_1_1Values_1_1Map_1a46763c0af33c7dcd5caf4b049b96c508" prot="public" virt="non-virtual"><scope>Gecode::Iter::Values::Map</scope><name>init</name></member>
      <member refid="classGecode_1_1Iter_1_1Values_1_1Map_1a7e2a7b941888263c3623ba280bd884e7" prot="protected" virt="non-virtual"><scope>Gecode::Iter::Values::Map</scope><name>m</name></member>
      <member refid="classGecode_1_1Iter_1_1Values_1_1Map_1aa7fcaabb3dea6de8dadd20f1b1350de9" prot="public" virt="non-virtual"><scope>Gecode::Iter::Values::Map</scope><name>Map</name></member>
      <member refid="classGecode_1_1Iter_1_1Values_1_1Map_1af517b3c8f08aff74bf3c79432f766e6c" prot="public" virt="non-virtual"><scope>Gecode::Iter::Values::Map</scope><name>Map</name></member>
      <member refid="classGecode_1_1Iter_1_1Values_1_1Map_1af8a55525416037e373558d4f40b17c6a" prot="public" virt="non-virtual"><scope>Gecode::Iter::Values::Map</scope><name>Map</name></member>
      <member refid="classGecode_1_1Iter_1_1Values_1_1Map_1a939c6f418e2683c602f993eb792f79d3" prot="public" virt="non-virtual"><scope>Gecode::Iter::Values::Map</scope><name>operator()</name></member>
      <member refid="classGecode_1_1Iter_1_1Values_1_1Map_1af050abfa9ceded749c4acf9f6b502934" prot="public" virt="non-virtual"><scope>Gecode::Iter::Values::Map</scope><name>operator++</name></member>
      <member refid="classGecode_1_1Iter_1_1Values_1_1Map_1afcef9c57ff44e71ee902751fc88652a8" prot="public" virt="non-virtual"><scope>Gecode::Iter::Values::Map</scope><name>val</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
