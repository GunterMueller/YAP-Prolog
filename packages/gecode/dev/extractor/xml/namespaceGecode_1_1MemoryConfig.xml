<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="namespaceGecode_1_1MemoryConfig" kind="namespace">
    <compoundname>Gecode::MemoryConfig</compoundname>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespaceGecode_1_1MemoryConfig_1a6197bdcb9998a0963a22ee66429b3043" prot="public" static="no" mutable="no">
        <type>const unsigned int</type>
        <definition>const unsigned int Gecode::MemoryConfig::n_hc_cache</definition>
        <argsstring></argsstring>
        <name>n_hc_cache</name>
        <initializer>= 4*4</initializer>
        <briefdescription>
<para>How many heap chunks should be cached at most. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/memory-config.hpp" line="51" column="1" bodyfile="/usr/include/gecode/kernel/memory-config.hpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceGecode_1_1MemoryConfig_1a5dae9298021e19ef97b80a69c64ec99d" prot="public" static="no" mutable="no">
        <type>const size_t</type>
        <definition>const size_t Gecode::MemoryConfig::hcsz_min</definition>
        <argsstring></argsstring>
        <name>hcsz_min</name>
        <initializer>=  1024</initializer>
        <briefdescription>
<para>Minimal size of a heap chunk requested from the OS. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/memory-config.hpp" line="56" column="1" bodyfile="/usr/include/gecode/kernel/memory-config.hpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceGecode_1_1MemoryConfig_1ae9e40041187c444b99eae610984ec3b8" prot="public" static="no" mutable="no">
        <type>const size_t</type>
        <definition>const size_t Gecode::MemoryConfig::hcsz_max</definition>
        <argsstring></argsstring>
        <name>hcsz_max</name>
        <initializer>= 32 * 1024</initializer>
        <briefdescription>
<para>Maximal size of a heap chunk requested from the OS. </para>        </briefdescription>
        <detaileddescription>
<para>Maximal is not strictly true, if a contiguous memory chunk is requested that exceeds <emphasis>hcsz_max</emphasis>, a chunk will be allocated that fits that request. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/memory-config.hpp" line="64" column="1" bodyfile="/usr/include/gecode/kernel/memory-config.hpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceGecode_1_1MemoryConfig_1a27e8d0ecc7917728463768c39a6296f8" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int Gecode::MemoryConfig::hcsz_inc_ratio</definition>
        <argsstring></argsstring>
        <name>hcsz_inc_ratio</name>
        <initializer>= 8</initializer>
        <briefdescription>
<para>Increment ratio for chunk size. </para>        </briefdescription>
        <detaileddescription>
<para>If a space has requested <emphasis>hcsz_inc_ratio</emphasis> chunks of heap memory, the chunk size is doubled. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/memory-config.hpp" line="71" column="1" bodyfile="/usr/include/gecode/kernel/memory-config.hpp" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceGecode_1_1MemoryConfig_1adffc8bb00df3d4fd50d10e5acdf8fa7e" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int Gecode::MemoryConfig::hcsz_dec_ratio</definition>
        <argsstring></argsstring>
        <name>hcsz_dec_ratio</name>
        <initializer>= 8</initializer>
        <briefdescription>
<para>Decrement ratio for chunk size. </para>        </briefdescription>
        <detaileddescription>
<para>When a space is cloned, the new clone normally inherits the current chunk size from the original space. However, if the original space has requested less than <emphasis>hcsz_dec_ratio</emphasis> heap chunks of the current chunk size, the current chunk size for the clone is halfed. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/memory-config.hpp" line="81" column="1" bodyfile="/usr/include/gecode/kernel/memory-config.hpp" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceGecode_1_1MemoryConfig_1a4a91bf0b2f1340ec06745a48cc0209b6" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int Gecode::MemoryConfig::fl_unit_size</definition>
        <argsstring></argsstring>
        <name>fl_unit_size</name>
        <initializer>= ((sizeof(void*) == 4) ? 2 : 3)</initializer>
        <briefdescription>
<para>Unit size for free lists. </para>        </briefdescription>
        <detaileddescription>
<para>The unit size (given as binary logarithm) defines how big a unit of memory for free lists is. Also, it defines the alignment. Sizes of free list objects must be multiples of the unit size.</para><para>Currently, for 32 bit machines, the unit size is 4 bytes. For 64 bit machines, it is 8 bytes. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/memory-config.hpp" line="94" column="1" bodyfile="/usr/include/gecode/kernel/memory-config.hpp" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceGecode_1_1MemoryConfig_1a763748025cb1a1571450f7a14bf69cb0" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int Gecode::MemoryConfig::fl_size_min</definition>
        <argsstring></argsstring>
        <name>fl_size_min</name>
        <initializer>= ((sizeof(void*) == 4) ? 2 : 2)</initializer>
        <briefdescription>
<para>Minimal size for free list element. </para>        </briefdescription>
        <detaileddescription>
<para>The minimal size is given in the number of free list units.</para><para>Currently, for 32 bit machines, the minimal size is 8 bytes. For 64 bit machines, it is 16 bytes. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/memory-config.hpp" line="103" column="1" bodyfile="/usr/include/gecode/kernel/memory-config.hpp" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceGecode_1_1MemoryConfig_1af8923742d5d86bfd2398832b69dcca67" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int Gecode::MemoryConfig::fl_size_max</definition>
        <argsstring></argsstring>
        <name>fl_size_max</name>
        <initializer>= ((sizeof(void*) == 4) ? 3 : 3)</initializer>
        <briefdescription>
<para>Maximal size for free list element. </para>        </briefdescription>
        <detaileddescription>
<para>The maximal size is given in the number of free list units.</para><para>Currently, for 32 bit machines, the maximal size is 12 bytes. For 64 bit machines, it is 24 bytes. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/memory-config.hpp" line="112" column="1" bodyfile="/usr/include/gecode/kernel/memory-config.hpp" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceGecode_1_1MemoryConfig_1a7fee173ee69d3658d9901d96b3616d7f" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int Gecode::MemoryConfig::fl_refill</definition>
        <argsstring></argsstring>
        <name>fl_refill</name>
        <initializer>= 8</initializer>
        <briefdescription>
<para>Number of free lists elements to allocate. </para>        </briefdescription>
        <detaileddescription>
<para>When a request for a free list element can not be fulfilled, as the free list is empty and there is also no reusable memory available, allocate <emphasis>fl_refill</emphasis> free list elements. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/memory-config.hpp" line="120" column="1" bodyfile="/usr/include/gecode/kernel/memory-config.hpp" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceGecode_1_1MemoryConfig_1a89bd47101715e526687377775614dd75" prot="public" static="no" mutable="no">
        <type>const size_t</type>
        <definition>const size_t Gecode::MemoryConfig::region_area_size</definition>
        <argsstring></argsstring>
        <name>region_area_size</name>
        <initializer>= 32 * 1024</initializer>
        <briefdescription>
<para>Size of region area. </para>        </briefdescription>
        <detaileddescription>
<para>The region area can be used in a stack fashion through access from a space. If the a request exceeds the current free space, memory will be allocated from the heap. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/memory-config.hpp" line="138" column="1" bodyfile="/usr/include/gecode/kernel/memory-config.hpp" bodystart="138" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceGecode_1_1MemoryConfig_1aab8b52cc0eecf1db607779ea9d7d69ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::MemoryConfig::align</definition>
        <argsstring>(size_t &amp;s)</argsstring>
        <name>align</name>
        <param>
          <type>size_t &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Align size <emphasis>s</emphasis> to the required alignment. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/memory-config.hpp" line="141" column="1" bodyfile="/usr/include/gecode/kernel/memory-config.hpp" bodystart="148" bodyend="152"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Parameters defining memory management policy for spaces. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/usr/include/gecode/kernel/memory-config.hpp" line="47" column="1"/>
  </compounddef>
</doxygen>
