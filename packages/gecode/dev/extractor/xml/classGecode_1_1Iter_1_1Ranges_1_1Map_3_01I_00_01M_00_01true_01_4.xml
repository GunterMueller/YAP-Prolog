<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classGecode_1_1Iter_1_1Ranges_1_1Map_3_01I_00_01M_00_01true_01_4" kind="class" prot="public">
    <compoundname>Gecode::Iter::Ranges::Map&lt; I, M, true &gt;</compoundname>
    <includes refid="ranges-map_8hpp" local="no">ranges-map.hpp</includes>
    <templateparamlist>
      <param>
        <type>class I</type>
      </param>
      <param>
        <type>class M</type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Constructors and initialization</header>
      <memberdef kind="function" id="classGecode_1_1Iter_1_1Ranges_1_1Map_3_01I_00_01M_00_01true_01_4_1a3f46b1ad6a56052d6102d836abfc99d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Iter::Ranges::Map&lt; I, M, true &gt;::Map</definition>
        <argsstring>(void)</argsstring>
        <name>Map</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/iter/ranges-map.hpp" line="128" column="1" bodyfile="/usr/include/gecode/iter/ranges-map.hpp" bodystart="210" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Iter_1_1Ranges_1_1Map_3_01I_00_01M_00_01true_01_4_1a8f5580b37e0fa398efa923fbc929ea23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Iter::Ranges::Map&lt; I, M, true &gt;::Map</definition>
        <argsstring>(I &amp;i)</argsstring>
        <name>Map</name>
        <param>
          <type>I &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Initialize with ranges from <emphasis>i</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/iter/ranges-map.hpp" line="130" column="1" bodyfile="/usr/include/gecode/iter/ranges-map.hpp" bodystart="225" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Iter_1_1Ranges_1_1Map_3_01I_00_01M_00_01true_01_4_1a3fbbe6d3bb05b885e25ad57c32891ef0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Iter::Ranges::Map&lt; I, M, true &gt;::Map</definition>
        <argsstring>(I &amp;i, const M &amp;m)</argsstring>
        <name>Map</name>
        <param>
          <type>I &amp;</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const M &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Initialize with ranges from <emphasis>i</emphasis> and map <emphasis>m</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/iter/ranges-map.hpp" line="132" column="1" bodyfile="/usr/include/gecode/iter/ranges-map.hpp" bodystart="228" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Iter_1_1Ranges_1_1Map_3_01I_00_01M_00_01true_01_4_1a435b4b0c775e061d8c04aea7de3a9f37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Iter::Ranges::Map&lt; I, M, true &gt;::init</definition>
        <argsstring>(I &amp;i)</argsstring>
        <name>init</name>
        <param>
          <type>I &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Initialize with ranges from <emphasis>i</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/iter/ranges-map.hpp" line="134" column="1" bodyfile="/usr/include/gecode/iter/ranges-map.hpp" bodystart="214" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Iter_1_1Ranges_1_1Map_3_01I_00_01M_00_01true_01_4_1a40fc33f40438a9f5a2aad405d1cb620e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Iter::Ranges::Map&lt; I, M, true &gt;::init</definition>
        <argsstring>(I &amp;i, const M &amp;m)</argsstring>
        <name>init</name>
        <param>
          <type>I &amp;</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const M &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Initialize with ranges from <emphasis>i</emphasis> and map <emphasis>m</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/iter/ranges-map.hpp" line="136" column="1" bodyfile="/usr/include/gecode/iter/ranges-map.hpp" bodystart="219" bodyend="221"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Iteration control</header>
      <memberdef kind="function" id="classGecode_1_1Iter_1_1Ranges_1_1Map_3_01I_00_01M_00_01true_01_4_1a7f663c15b0953fb862d1052ce115918b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::Iter::Ranges::Map&lt; I, M, true &gt;::operator()</definition>
        <argsstring>(void) const </argsstring>
        <name>operator()</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test whether iterator is still at a range or done. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/iter/ranges-map.hpp" line="142" column="1" bodyfile="/usr/include/gecode/iter/ranges-map.hpp" bodystart="232" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Iter_1_1Ranges_1_1Map_3_01I_00_01M_00_01true_01_4_1a80f603897352216bd30e4be50fa7de8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Iter::Ranges::Map&lt; I, M, true &gt;::operator++</definition>
        <argsstring>(void)</argsstring>
        <name>operator++</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Move iterator to next range (if possible) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/iter/ranges-map.hpp" line="144" column="1" bodyfile="/usr/include/gecode/iter/ranges-map.hpp" bodystart="237" bodyend="239"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Range access</header>
      <memberdef kind="function" id="classGecode_1_1Iter_1_1Ranges_1_1Map_3_01I_00_01M_00_01true_01_4_1a2c1e5435906f53144981c6f1cfd960ce" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Iter::Ranges::Map&lt; I, M, true &gt;::min</definition>
        <argsstring>(void) const </argsstring>
        <name>min</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return smallest value of range. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/iter/ranges-map.hpp" line="150" column="1" bodyfile="/usr/include/gecode/iter/ranges-map.hpp" bodystart="243" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Iter_1_1Ranges_1_1Map_3_01I_00_01M_00_01true_01_4_1a49de5f311a78b6f907ad2ee09676ee43" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Iter::Ranges::Map&lt; I, M, true &gt;::max</definition>
        <argsstring>(void) const </argsstring>
        <name>max</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return largest value of range. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/iter/ranges-map.hpp" line="152" column="1" bodyfile="/usr/include/gecode/iter/ranges-map.hpp" bodystart="248" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Iter_1_1Ranges_1_1Map_3_01I_00_01M_00_01true_01_4_1aa11b39d2f53cf9da0b78cd1704e512f6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>forceinline unsigned int Gecode::Iter::Ranges::Map&lt; I, M, true &gt;::width</definition>
        <argsstring>(void) const </argsstring>
        <name>width</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return width of range (distance between minimum and maximum) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/iter/ranges-map.hpp" line="154" column="1" bodyfile="/usr/include/gecode/iter/ranges-map.hpp" bodystart="253" bodyend="255"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classGecode_1_1Iter_1_1Ranges_1_1Map_3_01I_00_01M_00_01true_01_4_1a8f1cd9079254ff770ec0de6b6cb1689e" prot="protected" static="no" mutable="no">
        <type>I</type>
        <definition>I Gecode::Iter::Ranges::Map&lt; I, M, true &gt;::i</definition>
        <argsstring></argsstring>
        <name>i</name>
        <briefdescription>
<para>Input range iterator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/iter/ranges-map.hpp" line="121" column="1" bodyfile="/usr/include/gecode/iter/ranges-map.hpp" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Iter_1_1Ranges_1_1Map_3_01I_00_01M_00_01true_01_4_1af3e2e42c9b14ef881cd09a5ebae0f48b" prot="protected" static="no" mutable="no">
        <type>M</type>
        <definition>M Gecode::Iter::Ranges::Map&lt; I, M, true &gt;::m</definition>
        <argsstring></argsstring>
        <name>m</name>
        <briefdescription>
<para><ref refid="classGecode_1_1Iter_1_1Ranges_1_1Map" kindref="compound">Map</ref> object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/iter/ranges-map.hpp" line="123" column="1" bodyfile="/usr/include/gecode/iter/ranges-map.hpp" bodystart="123" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Specialized mapping of ranges for strict maps. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="3766">
        <label>I</label>
      </node>
      <node id="3765">
        <label>Gecode::Iter::Ranges::Map&lt; I, M, true &gt;</label>
        <link refid="classGecode_1_1Iter_1_1Ranges_1_1Map_3_01I_00_01M_00_01true_01_4"/>
        <childnode refid="3766" relation="usage">
          <edgelabel>i</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/usr/include/gecode/iter/ranges-map.hpp" line="118" column="1" bodyfile="/usr/include/gecode/iter/ranges-map.hpp" bodystart="118" bodyend="156"/>
    <listofallmembers>
      <member refid="classGecode_1_1Iter_1_1Ranges_1_1Map_3_01I_00_01M_00_01true_01_4_1a8f1cd9079254ff770ec0de6b6cb1689e" prot="protected" virt="non-virtual"><scope>Gecode::Iter::Ranges::Map&lt; I, M, true &gt;</scope><name>i</name></member>
      <member refid="classGecode_1_1Iter_1_1Ranges_1_1Map_3_01I_00_01M_00_01true_01_4_1a435b4b0c775e061d8c04aea7de3a9f37" prot="public" virt="non-virtual"><scope>Gecode::Iter::Ranges::Map&lt; I, M, true &gt;</scope><name>init</name></member>
      <member refid="classGecode_1_1Iter_1_1Ranges_1_1Map_3_01I_00_01M_00_01true_01_4_1a40fc33f40438a9f5a2aad405d1cb620e" prot="public" virt="non-virtual"><scope>Gecode::Iter::Ranges::Map&lt; I, M, true &gt;</scope><name>init</name></member>
      <member refid="classGecode_1_1Iter_1_1Ranges_1_1Map_3_01I_00_01M_00_01true_01_4_1af3e2e42c9b14ef881cd09a5ebae0f48b" prot="protected" virt="non-virtual"><scope>Gecode::Iter::Ranges::Map&lt; I, M, true &gt;</scope><name>m</name></member>
      <member refid="classGecode_1_1Iter_1_1Ranges_1_1Map_3_01I_00_01M_00_01true_01_4_1a3f46b1ad6a56052d6102d836abfc99d3" prot="public" virt="non-virtual"><scope>Gecode::Iter::Ranges::Map&lt; I, M, true &gt;</scope><name>Map</name></member>
      <member refid="classGecode_1_1Iter_1_1Ranges_1_1Map_3_01I_00_01M_00_01true_01_4_1a8f5580b37e0fa398efa923fbc929ea23" prot="public" virt="non-virtual"><scope>Gecode::Iter::Ranges::Map&lt; I, M, true &gt;</scope><name>Map</name></member>
      <member refid="classGecode_1_1Iter_1_1Ranges_1_1Map_3_01I_00_01M_00_01true_01_4_1a3fbbe6d3bb05b885e25ad57c32891ef0" prot="public" virt="non-virtual"><scope>Gecode::Iter::Ranges::Map&lt; I, M, true &gt;</scope><name>Map</name></member>
      <member refid="classGecode_1_1Iter_1_1Ranges_1_1Map_3_01I_00_01M_00_01true_01_4_1a49de5f311a78b6f907ad2ee09676ee43" prot="public" virt="non-virtual"><scope>Gecode::Iter::Ranges::Map&lt; I, M, true &gt;</scope><name>max</name></member>
      <member refid="classGecode_1_1Iter_1_1Ranges_1_1Map_3_01I_00_01M_00_01true_01_4_1a2c1e5435906f53144981c6f1cfd960ce" prot="public" virt="non-virtual"><scope>Gecode::Iter::Ranges::Map&lt; I, M, true &gt;</scope><name>min</name></member>
      <member refid="classGecode_1_1Iter_1_1Ranges_1_1Map_3_01I_00_01M_00_01true_01_4_1a7f663c15b0953fb862d1052ce115918b" prot="public" virt="non-virtual"><scope>Gecode::Iter::Ranges::Map&lt; I, M, true &gt;</scope><name>operator()</name></member>
      <member refid="classGecode_1_1Iter_1_1Ranges_1_1Map_3_01I_00_01M_00_01true_01_4_1a80f603897352216bd30e4be50fa7de8e" prot="public" virt="non-virtual"><scope>Gecode::Iter::Ranges::Map&lt; I, M, true &gt;</scope><name>operator++</name></member>
      <member refid="classGecode_1_1Iter_1_1Ranges_1_1Map_3_01I_00_01M_00_01true_01_4_1aa11b39d2f53cf9da0b78cd1704e512f6" prot="public" virt="non-virtual"><scope>Gecode::Iter::Ranges::Map&lt; I, M, true &gt;</scope><name>width</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
