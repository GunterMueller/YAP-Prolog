<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classGecode_1_1FloatVarArray" kind="class" prot="public">
    <compoundname>Gecode::FloatVarArray</compoundname>
    <basecompoundref refid="classGecode_1_1VarArray" prot="public" virt="non-virtual">Gecode::VarArray&lt; FloatVar &gt;</basecompoundref>
    <includes refid="float_8hh" local="no">float.hh</includes>
      <sectiondef kind="user-defined">
      <header>Creation and initialization</header>
      <memberdef kind="function" id="classGecode_1_1FloatVarArray_1a41b4639f6106d3f042671d7c58b05d3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::FloatVarArray::FloatVarArray</definition>
        <argsstring>(void)</argsstring>
        <name>FloatVarArray</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Default constructor (array of size 0) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/float.hh" line="1021" column="1" bodyfile="/usr/include/gecode/float/array.hpp" bodystart="83" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1FloatVarArray_1a64b7464c3f5c2ab1ad1a76bcdaac876b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::FloatVarArray::FloatVarArray</definition>
        <argsstring>(Space &amp;home, int n)</argsstring>
        <name>FloatVarArray</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Allocate array for <emphasis>n</emphasis> float variables (variables are uninitialized) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/float.hh" line="1023" column="1" bodyfile="/usr/include/gecode/float/array.hpp" bodystart="86" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1FloatVarArray_1a8e526a091e807ef0054c4c186eec830a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::FloatVarArray::FloatVarArray</definition>
        <argsstring>(const FloatVarArray &amp;a)</argsstring>
        <name>FloatVarArray</name>
        <param>
          <type>const <ref refid="classGecode_1_1FloatVarArray" kindref="compound">FloatVarArray</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>Initialize from float variable array <emphasis>a</emphasis> (share elements) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/float.hh" line="1025" column="1" bodyfile="/usr/include/gecode/float/array.hpp" bodystart="90" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1FloatVarArray_1a47b8939b0d6e1d9e2a2c85fda77b2eae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::FloatVarArray::FloatVarArray</definition>
        <argsstring>(Space &amp;home, const FloatVarArgs &amp;a)</argsstring>
        <name>FloatVarArray</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1FloatVarArgs" kindref="compound">FloatVarArgs</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>Initialize from float variable argument array <emphasis>a</emphasis> (copy elements) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/float.hh" line="1027" column="1" bodyfile="/usr/include/gecode/float/array.hpp" bodystart="94" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1FloatVarArray_1a2995ab241f2964b733a1480af42cae9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GECODE_FLOAT_EXPORT</type>
        <definition>GECODE_FLOAT_EXPORT Gecode::FloatVarArray::FloatVarArray</definition>
        <argsstring>(Space &amp;home, int n, FloatNum min, FloatNum max)</argsstring>
        <name>FloatVarArray</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="namespaceGecode_1a89c8c05302dd9f5ca9b53d0c0d82cf45" kindref="member">FloatNum</ref></type>
          <declname>min</declname>
        </param>
        <param>
          <type><ref refid="namespaceGecode_1a89c8c05302dd9f5ca9b53d0c0d82cf45" kindref="member">FloatNum</ref></type>
          <declname>max</declname>
        </param>
        <briefdescription>
<para>Initialize array with <emphasis>n</emphasis> new variables. </para>        </briefdescription>
        <detaileddescription>
<para>The variables are created with a domain ranging from <emphasis>min</emphasis> to <emphasis>max</emphasis>. The following execptions might be thrown:<itemizedlist>
<listitem><para>If <emphasis>min</emphasis> is greater than <emphasis>max</emphasis>, an exception of type <ref refid="classGecode_1_1Float_1_1VariableEmptyDomain" kindref="compound">Gecode::Float::VariableEmptyDomain</ref> is thrown.</para></listitem><listitem><para>If <emphasis>min</emphasis> or <emphasis>max</emphasis> exceed the limits for floats as defined in <ref refid="namespaceGecode_1_1Float_1_1Limits" kindref="compound">Gecode::Float::Limits</ref>, an exception of type <ref refid="classGecode_1_1Float_1_1OutOfLimits" kindref="compound">Gecode::Float::OutOfLimits</ref> is thrown. </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/float.hh" line="1040" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="namespaceGecode_1_1Float" kindref="compound">Float</ref> variable array. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2427">
        <label>Gecode::FloatVarArray</label>
        <link refid="classGecode_1_1FloatVarArray"/>
        <childnode refid="2428" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2428">
        <label>Gecode::VarArray&lt; FloatVar &gt;</label>
        <link refid="classGecode_1_1VarArray"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2432">
        <label>Gecode::VarImpVar&lt; Float::FloatVarImp &gt;</label>
        <link refid="classGecode_1_1VarImpVar"/>
        <childnode refid="2433" relation="public-inheritance">
        </childnode>
        <childnode refid="2434" relation="usage">
          <edgelabel>x</edgelabel>
        </childnode>
      </node>
      <node id="2433">
        <label>Gecode::Var</label>
        <link refid="classGecode_1_1Var"/>
      </node>
      <node id="2429">
        <label>Gecode::FloatVarArray</label>
        <link refid="classGecode_1_1FloatVarArray"/>
        <childnode refid="2430" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2434">
        <label>Gecode::Float::FloatVarImp</label>
        <link refid="classGecode_1_1Float_1_1FloatVarImp"/>
        <childnode refid="2435" relation="public-inheritance">
        </childnode>
        <childnode refid="2436" relation="usage">
          <edgelabel>dom</edgelabel>
        </childnode>
      </node>
      <node id="2436">
        <label>Gecode::FloatVal</label>
        <link refid="classGecode_1_1FloatVal"/>
        <childnode refid="2437" relation="usage">
          <edgelabel>x</edgelabel>
        </childnode>
      </node>
      <node id="2430">
        <label>Gecode::VarArray&lt; FloatVar &gt;</label>
        <link refid="classGecode_1_1VarArray"/>
        <childnode refid="2431" relation="usage">
          <edgelabel>x</edgelabel>
        </childnode>
      </node>
      <node id="2431">
        <label>Gecode::FloatVar</label>
        <link refid="classGecode_1_1FloatVar"/>
        <childnode refid="2432" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2435">
        <label>FloatVarImpBase</label>
      </node>
      <node id="2437">
        <label>boost::numeric::interval&lt; FloatNum, boost::numeric::interval_lib::policies&lt; R, P &gt; &gt;</label>
        <link refid="classboost_1_1numeric_1_1interval"/>
      </node>
    </collaborationgraph>
    <location file="/usr/include/gecode/float.hh" line="1016" column="1" bodyfile="/usr/include/gecode/float.hh" bodystart="1016" bodyend="1042"/>
    <listofallmembers>
      <member refid="classGecode_1_1VarArray_1a42953c34d3d78772f3edbd55c5ce2768" prot="public" virt="non-virtual"><scope>Gecode::FloatVarArray</scope><name>assigned</name></member>
      <member refid="classGecode_1_1VarArray_1aa09c7045277614841a821b7e0636d44a" prot="public" virt="non-virtual"><scope>Gecode::FloatVarArray</scope><name>begin</name></member>
      <member refid="classGecode_1_1VarArray_1ad585be789f428414d4de84fdb4b2a1aa" prot="public" virt="non-virtual"><scope>Gecode::FloatVarArray</scope><name>begin</name></member>
      <member refid="classGecode_1_1VarArray_1a94809a3d551846433b0a85fd40db512e" prot="public" virt="non-virtual"><scope>Gecode::FloatVarArray</scope><name>const_iterator</name></member>
      <member refid="classGecode_1_1VarArray_1ae4bfae3bf7f27951b53706a34627b539" prot="public" virt="non-virtual"><scope>Gecode::FloatVarArray</scope><name>const_pointer</name></member>
      <member refid="classGecode_1_1VarArray_1a36e7c81b7bcd3fb1b28c780caa17641d" prot="public" virt="non-virtual"><scope>Gecode::FloatVarArray</scope><name>const_reference</name></member>
      <member refid="classGecode_1_1VarArray_1aa3596ebfe2a624dabab6972da579c1cb" prot="public" virt="non-virtual"><scope>Gecode::FloatVarArray</scope><name>const_reverse_iterator</name></member>
      <member refid="classGecode_1_1VarArray_1aa09a0d52ddd5a427e328f76b017a0e04" prot="public" virt="non-virtual"><scope>Gecode::FloatVarArray</scope><name>end</name></member>
      <member refid="classGecode_1_1VarArray_1a197f67babbe8d7670fba55809a416cf0" prot="public" virt="non-virtual"><scope>Gecode::FloatVarArray</scope><name>end</name></member>
      <member refid="classGecode_1_1FloatVarArray_1a41b4639f6106d3f042671d7c58b05d3f" prot="public" virt="non-virtual"><scope>Gecode::FloatVarArray</scope><name>FloatVarArray</name></member>
      <member refid="classGecode_1_1FloatVarArray_1a64b7464c3f5c2ab1ad1a76bcdaac876b" prot="public" virt="non-virtual"><scope>Gecode::FloatVarArray</scope><name>FloatVarArray</name></member>
      <member refid="classGecode_1_1FloatVarArray_1a8e526a091e807ef0054c4c186eec830a" prot="public" virt="non-virtual"><scope>Gecode::FloatVarArray</scope><name>FloatVarArray</name></member>
      <member refid="classGecode_1_1FloatVarArray_1a47b8939b0d6e1d9e2a2c85fda77b2eae" prot="public" virt="non-virtual"><scope>Gecode::FloatVarArray</scope><name>FloatVarArray</name></member>
      <member refid="classGecode_1_1FloatVarArray_1a2995ab241f2964b733a1480af42cae9b" prot="public" virt="non-virtual"><scope>Gecode::FloatVarArray</scope><name>FloatVarArray</name></member>
      <member refid="classGecode_1_1VarArray_1af066a140fe9aba9e239b5aa3699df4e0" prot="public" virt="non-virtual"><scope>Gecode::FloatVarArray</scope><name>iterator</name></member>
      <member refid="classGecode_1_1VarArray_1a67b64ccd287d53389a25ee43ad164ab6" prot="protected" virt="non-virtual"><scope>Gecode::FloatVarArray</scope><name>n</name></member>
      <member refid="classGecode_1_1VarArray_1a4fed680f83a05790658a9b3a660c4c08" prot="public" virt="non-virtual"><scope>Gecode::FloatVarArray</scope><name>operator=</name></member>
      <member refid="classGecode_1_1VarArray_1ace08813160ef06e0f1bbb3c30c200da0" prot="public" virt="non-virtual"><scope>Gecode::FloatVarArray</scope><name>operator[]</name></member>
      <member refid="classGecode_1_1VarArray_1af593147a24272627350513e305d79779" prot="public" virt="non-virtual"><scope>Gecode::FloatVarArray</scope><name>operator[]</name></member>
      <member refid="classGecode_1_1VarArray_1a9a4e54d0650597e70375809c82f7dc62" prot="public" virt="non-virtual"><scope>Gecode::FloatVarArray</scope><name>pointer</name></member>
      <member refid="classGecode_1_1VarArray_1a6d94b11b3936df0b3548d4f9fd7cb318" prot="public" virt="non-virtual"><scope>Gecode::FloatVarArray</scope><name>rbegin</name></member>
      <member refid="classGecode_1_1VarArray_1aa7c774d800efd0869edc7bfb5bdb530e" prot="public" virt="non-virtual"><scope>Gecode::FloatVarArray</scope><name>rbegin</name></member>
      <member refid="classGecode_1_1VarArray_1aa2b3ffc5da170d3af5973627f9040c62" prot="public" virt="non-virtual"><scope>Gecode::FloatVarArray</scope><name>reference</name></member>
      <member refid="classGecode_1_1VarArray_1a82d02915d20fad0b56a3aee26ca96b56" prot="public" virt="non-virtual"><scope>Gecode::FloatVarArray</scope><name>rend</name></member>
      <member refid="classGecode_1_1VarArray_1a3d3e08149aae2f0428034fa0c40c4ff3" prot="public" virt="non-virtual"><scope>Gecode::FloatVarArray</scope><name>rend</name></member>
      <member refid="classGecode_1_1VarArray_1a6e0db2dc6d3d548f5569720373ab030a" prot="public" virt="non-virtual"><scope>Gecode::FloatVarArray</scope><name>reverse_iterator</name></member>
      <member refid="classGecode_1_1VarArray_1a3cf80c58c32609c61de4c90605413fd2" prot="public" virt="non-virtual"><scope>Gecode::FloatVarArray</scope><name>size</name></member>
      <member refid="classGecode_1_1VarArray_1a53b8648af92da9632e399e290e4c0d62" prot="public" virt="non-virtual"><scope>Gecode::FloatVarArray</scope><name>slice</name></member>
      <member refid="classGecode_1_1VarArray_1a807b3f987de58b67791872d6ec1e54a5" prot="public" virt="non-virtual"><scope>Gecode::FloatVarArray</scope><name>update</name></member>
      <member refid="classGecode_1_1VarArray_1a832c744123e7d9fc0d1d0ce0cf3e4efb" prot="public" virt="non-virtual"><scope>Gecode::FloatVarArray</scope><name>value_type</name></member>
      <member refid="classGecode_1_1VarArray_1a241ce7da828c64cab3b6b01c674a338a" prot="public" virt="non-virtual"><scope>Gecode::FloatVarArray</scope><name>VarArray</name></member>
      <member refid="classGecode_1_1VarArray_1ae32fbf0910e040ca3e3375eac765596f" prot="public" virt="non-virtual"><scope>Gecode::FloatVarArray</scope><name>VarArray</name></member>
      <member refid="classGecode_1_1VarArray_1ab62e77e0e2e2ea0e961cbb0b23fdff84" prot="public" virt="non-virtual"><scope>Gecode::FloatVarArray</scope><name>VarArray</name></member>
      <member refid="classGecode_1_1VarArray_1ae969175e5545323fc99de65912a9a73b" prot="public" virt="non-virtual"><scope>Gecode::FloatVarArray</scope><name>VarArray</name></member>
      <member refid="classGecode_1_1VarArray_1ace04bdff621aba6ef39a063786092dfd" prot="protected" virt="non-virtual"><scope>Gecode::FloatVarArray</scope><name>x</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
