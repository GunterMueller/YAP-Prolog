<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classGecode_1_1SharedMemory" kind="class" prot="public">
    <compoundname>Gecode::SharedMemory</compoundname>
    <includes refid="memory-manager_8hpp" local="no">memory-manager.hpp</includes>
      <sectiondef kind="user-defined">
      <header>Region management</header>
      <memberdef kind="function" id="classGecode_1_1SharedMemory_1a94e8c4b667a32d564a1cbd03c70d0b4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::SharedMemory::region_alloc</definition>
        <argsstring>(size_t s, void *&amp;p)</argsstring>
        <name>region_alloc</name>
        <param>
          <type>size_t</type>
          <declname>s</declname>
        </param>
        <param>
          <type>void *&amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Return memory chunk if available. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/memory-manager.hpp" line="95" column="1" bodyfile="/usr/include/gecode/kernel/memory-manager.hpp" bodystart="243" bodyend="250"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Heap management</header>
      <memberdef kind="function" id="classGecode_1_1SharedMemory_1a57e8a7bc08edd68bf65121198923e05d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGecode_1_1HeapChunk" kindref="compound">HeapChunk</ref> *</type>
        <definition>forceinline HeapChunk * Gecode::SharedMemory::heap_alloc</definition>
        <argsstring>(size_t s, size_t l)</argsstring>
        <name>heap_alloc</name>
        <param>
          <type>size_t</type>
          <declname>s</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>l</declname>
        </param>
        <briefdescription>
<para>Return heap chunk, preferable of size <emphasis>s</emphasis>, but at least of size <emphasis>l</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/memory-manager.hpp" line="100" column="1" bodyfile="/usr/include/gecode/kernel/memory-manager.hpp" bodystart="252" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1SharedMemory_1a96e3e75ba77c0701bb4e01c25a90d9b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::SharedMemory::heap_free</definition>
        <argsstring>(HeapChunk *hc)</argsstring>
        <name>heap_free</name>
        <param>
          <type><ref refid="classGecode_1_1HeapChunk" kindref="compound">HeapChunk</ref> *</type>
          <declname>hc</declname>
        </param>
        <briefdescription>
<para>Free heap chunk (or cache for later) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/memory-manager.hpp" line="102" column="1" bodyfile="/usr/include/gecode/kernel/memory-manager.hpp" bodystart="272" bodyend="279"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classGecode_1_1SharedMemory_1aae6f9325706131f3b6fb8accb1508d76" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Region</definition>
        <argsstring></argsstring>
        <name>Region</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/memory-manager.hpp" line="67" column="1" bodyfile="/usr/include/gecode/kernel/memory-manager.hpp" bodystart="67" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classGecode_1_1SharedMemory_1ac4ebc5012c42d4ad3491f223a3fce6f6" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int Gecode::SharedMemory::use_cnt</definition>
        <argsstring></argsstring>
        <name>use_cnt</name>
        <briefdescription>
<para>How many spaces use this shared memory object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/memory-manager.hpp" line="70" column="1" bodyfile="/usr/include/gecode/kernel/memory-manager.hpp" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1SharedMemory_1a906cd46b1288d200f020c807fc95c313" prot="private" static="no" mutable="no">
        <type>struct Gecode::SharedMemory::@8</type>
        <definition>struct Gecode::SharedMemory::@8  Gecode::SharedMemory::region</definition>
        <argsstring></argsstring>
        <name>region</name>
        <briefdescription>
<para>The components for the shared region area. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/memory-manager.hpp" line="77" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1SharedMemory_1aaa9c5c51a6cb8ca18e37993f641f102c" prot="private" static="no" mutable="no">
        <type>struct Gecode::SharedMemory::@9</type>
        <definition>struct Gecode::SharedMemory::@9  Gecode::SharedMemory::heap</definition>
        <argsstring></argsstring>
        <name>heap</name>
        <briefdescription>
<para>The components for shared heap memory. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/memory-manager.hpp" line="84" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classGecode_1_1SharedMemory_1a6551b4dd90451b74c6319c459db71238" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t Gecode::SharedMemory::free</definition>
        <argsstring></argsstring>
        <name>free</name>
        <briefdescription>
<para>Amount of free memory. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/memory-manager.hpp" line="74" column="1" bodyfile="/usr/include/gecode/kernel/memory-manager.hpp" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1SharedMemory_1a523297fe2e21f8837f9a3c3252f9d003" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double Gecode::SharedMemory::area[MemoryConfig::region_area_size/sizeof(double)]</definition>
        <argsstring>[MemoryConfig::region_area_size/sizeof(double)]</argsstring>
        <name>area</name>
        <briefdescription>
<para>The actual memory area (allocated from top to bottom) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/memory-manager.hpp" line="76" column="1" bodyfile="/usr/include/gecode/kernel/memory-manager.hpp" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1SharedMemory_1a35997fe995dc7aa3594484cfb93355e9" prot="public" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int Gecode::SharedMemory::n_hc</definition>
        <argsstring></argsstring>
        <name>n_hc</name>
        <briefdescription>
<para>How many heap chunks are available for caching. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/memory-manager.hpp" line="81" column="1" bodyfile="/usr/include/gecode/kernel/memory-manager.hpp" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1SharedMemory_1a8617f4154f59e54fead8c9e26f902f58" prot="public" static="no" mutable="no">
        <type><ref refid="classGecode_1_1HeapChunk" kindref="compound">HeapChunk</ref> *</type>
        <definition>HeapChunk* Gecode::SharedMemory::hc</definition>
        <argsstring></argsstring>
        <name>hc</name>
        <briefdescription>
<para>A list of cached heap chunks. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/memory-manager.hpp" line="83" column="1" bodyfile="/usr/include/gecode/kernel/memory-manager.hpp" bodystart="83" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classGecode_1_1SharedMemory_1ae2aaed3d0893ec71fd3fdea467819feb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::SharedMemory::SharedMemory</definition>
        <argsstring>(void)</argsstring>
        <name>SharedMemory</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/memory-manager.hpp" line="87" column="1" bodyfile="/usr/include/gecode/kernel/memory-manager.hpp" bodystart="210" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1SharedMemory_1ac1e2d558febc8fd16b470d4d87a64062" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::SharedMemory::flush</definition>
        <argsstring>(void)</argsstring>
        <name>flush</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Flush all cached memory. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/memory-manager.hpp" line="89" column="1" bodyfile="/usr/include/gecode/kernel/memory-manager.hpp" bodystart="217" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1SharedMemory_1a98383de3a10250133cfaa61d4d1fec95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::SharedMemory::~SharedMemory</definition>
        <argsstring>(void)</argsstring>
        <name>~SharedMemory</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Destructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/memory-manager.hpp" line="91" column="1" bodyfile="/usr/include/gecode/kernel/memory-manager.hpp" bodystart="226" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1SharedMemory_1a8a17ddcb3f9e18063a7f0ca44551b1da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGecode_1_1SharedMemory" kindref="compound">SharedMemory</ref> *</type>
        <definition>forceinline SharedMemory * Gecode::SharedMemory::copy</definition>
        <argsstring>(bool share)</argsstring>
        <name>copy</name>
        <param>
          <type>bool</type>
          <declname>share</declname>
        </param>
        <briefdescription>
<para>Return copy during cloning. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/memory-manager.hpp" line="105" column="1" bodyfile="/usr/include/gecode/kernel/memory-manager.hpp" bodystart="230" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1SharedMemory_1aac161ecaf13439e8b7270c8d7cabefcc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::SharedMemory::release</definition>
        <argsstring>(void)</argsstring>
        <name>release</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Release by one space. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/memory-manager.hpp" line="107" column="1" bodyfile="/usr/include/gecode/kernel/memory-manager.hpp" bodystart="239" bodyend="241"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classGecode_1_1SharedMemory_1ab813586821968dae5a0f4ff429effcbd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>forceinline void * Gecode::SharedMemory::operator new</definition>
        <argsstring>(size_t s)</argsstring>
        <name>operator new</name>
        <param>
          <type>size_t</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Allocate memory from heap. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/memory-manager.hpp" line="109" column="1" bodyfile="/usr/include/gecode/kernel/memory-manager.hpp" bodystart="202" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1SharedMemory_1a25730c7472d38a9c58535b9cab576b7c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::SharedMemory::operator delete</definition>
        <argsstring>(void *p)</argsstring>
        <name>operator delete</name>
        <param>
          <type>void *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Free memory allocated from heap. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/memory-manager.hpp" line="111" column="1" bodyfile="/usr/include/gecode/kernel/memory-manager.hpp" bodystart="206" bodyend="208"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Shared object for several memory areas. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="6487">
        <label>Gecode::SharedMemory</label>
        <link refid="classGecode_1_1SharedMemory"/>
        <childnode refid="6488" relation="usage">
          <edgelabel>hc</edgelabel>
        </childnode>
      </node>
      <node id="6489">
        <label>Gecode::MemoryChunk</label>
        <link refid="classGecode_1_1MemoryChunk"/>
        <childnode refid="6489" relation="usage">
          <edgelabel>next</edgelabel>
        </childnode>
      </node>
      <node id="6488">
        <label>Gecode::HeapChunk</label>
        <link refid="classGecode_1_1HeapChunk"/>
        <childnode refid="6489" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/usr/include/gecode/kernel/memory-manager.hpp" line="66" column="1" bodyfile="/usr/include/gecode/kernel/memory-manager.hpp" bodystart="66" bodyend="112"/>
    <listofallmembers>
      <member refid="classGecode_1_1SharedMemory_1a523297fe2e21f8837f9a3c3252f9d003" prot="public" virt="non-virtual"><scope>Gecode::SharedMemory</scope><name>area</name></member>
      <member refid="classGecode_1_1SharedMemory_1a8a17ddcb3f9e18063a7f0ca44551b1da" prot="public" virt="non-virtual"><scope>Gecode::SharedMemory</scope><name>copy</name></member>
      <member refid="classGecode_1_1SharedMemory_1ac1e2d558febc8fd16b470d4d87a64062" prot="public" virt="non-virtual"><scope>Gecode::SharedMemory</scope><name>flush</name></member>
      <member refid="classGecode_1_1SharedMemory_1a6551b4dd90451b74c6319c459db71238" prot="public" virt="non-virtual"><scope>Gecode::SharedMemory</scope><name>free</name></member>
      <member refid="classGecode_1_1SharedMemory_1a8617f4154f59e54fead8c9e26f902f58" prot="public" virt="non-virtual"><scope>Gecode::SharedMemory</scope><name>hc</name></member>
      <member refid="classGecode_1_1SharedMemory_1aaa9c5c51a6cb8ca18e37993f641f102c" prot="private" virt="non-virtual"><scope>Gecode::SharedMemory</scope><name>heap</name></member>
      <member refid="classGecode_1_1SharedMemory_1a57e8a7bc08edd68bf65121198923e05d" prot="public" virt="non-virtual"><scope>Gecode::SharedMemory</scope><name>heap_alloc</name></member>
      <member refid="classGecode_1_1SharedMemory_1a96e3e75ba77c0701bb4e01c25a90d9b8" prot="public" virt="non-virtual"><scope>Gecode::SharedMemory</scope><name>heap_free</name></member>
      <member refid="classGecode_1_1SharedMemory_1a35997fe995dc7aa3594484cfb93355e9" prot="public" virt="non-virtual"><scope>Gecode::SharedMemory</scope><name>n_hc</name></member>
      <member refid="classGecode_1_1SharedMemory_1a25730c7472d38a9c58535b9cab576b7c" prot="public" virt="non-virtual"><scope>Gecode::SharedMemory</scope><name>operator delete</name></member>
      <member refid="classGecode_1_1SharedMemory_1ab813586821968dae5a0f4ff429effcbd" prot="public" virt="non-virtual"><scope>Gecode::SharedMemory</scope><name>operator new</name></member>
      <member refid="classGecode_1_1SharedMemory_1a906cd46b1288d200f020c807fc95c313" prot="private" virt="non-virtual"><scope>Gecode::SharedMemory</scope><name>region</name></member>
      <member refid="classGecode_1_1SharedMemory_1aae6f9325706131f3b6fb8accb1508d76" prot="private" virt="non-virtual"><scope>Gecode::SharedMemory</scope><name>Region</name></member>
      <member refid="classGecode_1_1SharedMemory_1a94e8c4b667a32d564a1cbd03c70d0b4e" prot="public" virt="non-virtual"><scope>Gecode::SharedMemory</scope><name>region_alloc</name></member>
      <member refid="classGecode_1_1SharedMemory_1aac161ecaf13439e8b7270c8d7cabefcc" prot="public" virt="non-virtual"><scope>Gecode::SharedMemory</scope><name>release</name></member>
      <member refid="classGecode_1_1SharedMemory_1ae2aaed3d0893ec71fd3fdea467819feb" prot="public" virt="non-virtual"><scope>Gecode::SharedMemory</scope><name>SharedMemory</name></member>
      <member refid="classGecode_1_1SharedMemory_1ac4ebc5012c42d4ad3491f223a3fce6f6" prot="private" virt="non-virtual"><scope>Gecode::SharedMemory</scope><name>use_cnt</name></member>
      <member refid="classGecode_1_1SharedMemory_1a98383de3a10250133cfaa61d4d1fec95" prot="public" virt="non-virtual"><scope>Gecode::SharedMemory</scope><name>~SharedMemory</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
