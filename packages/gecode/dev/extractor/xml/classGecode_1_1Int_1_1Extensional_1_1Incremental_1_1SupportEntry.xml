<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classGecode_1_1Int_1_1Extensional_1_1Incremental_1_1SupportEntry" kind="class" prot="protected">
    <compoundname>Gecode::Int::Extensional::Incremental::SupportEntry</compoundname>
    <basecompoundref refid="classGecode_1_1FreeList" prot="public" virt="non-virtual">Gecode::FreeList</basecompoundref>
    <includes refid="extensional_8hh" local="no">extensional.hh</includes>
      <sectiondef kind="user-defined">
      <header>Linkage access</header>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Extensional_1_1Incremental_1_1SupportEntry_1a97edd1652922d9c9849383135c08af49" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGecode_1_1Int_1_1Extensional_1_1Incremental_1_1SupportEntry" kindref="compound">SupportEntry</ref> *</type>
        <definition>forceinline Incremental&lt; View &gt;::SupportEntry * Gecode::Int::Extensional::Incremental&lt; View &gt;::SupportEntry::next</definition>
        <argsstring>(void) const </argsstring>
        <name>next</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return next support entry. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/extensional.hh" line="361" column="1" bodyfile="/usr/include/gecode/int/extensional/incremental.hpp" bodystart="86" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Extensional_1_1Incremental_1_1SupportEntry_1ae7b142587e98b3e70d78843c5552506e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGecode_1_1Int_1_1Extensional_1_1Incremental_1_1SupportEntry" kindref="compound">SupportEntry</ref> **</type>
        <definition>forceinline Incremental&lt; View &gt;::SupportEntry ** Gecode::Int::Extensional::Incremental&lt; View &gt;::SupportEntry::nextRef</definition>
        <argsstring>(void)</argsstring>
        <name>nextRef</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return reference to field for next support entry. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/extensional.hh" line="363" column="1" bodyfile="/usr/include/gecode/int/extensional/incremental.hpp" bodystart="92" bodyend="94"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Constructors</header>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Extensional_1_1Incremental_1_1SupportEntry_1a61d435e41a70750c1e6f1a878a5407f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Gecode::Int::Extensional::Incremental&lt; View &gt;::SupportEntry::SupportEntry</definition>
        <argsstring>(Tuple t)</argsstring>
        <name>SupportEntry</name>
        <param>
          <type>Tuple</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Initialize with Tuple <emphasis>t</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/extensional.hh" line="369" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Extensional_1_1Incremental_1_1SupportEntry_1a3fe311757667b928f594a80143839c5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Gecode::Int::Extensional::Incremental&lt; View &gt;::SupportEntry::SupportEntry</definition>
        <argsstring>(Tuple t, SupportEntry *n)</argsstring>
        <name>SupportEntry</name>
        <param>
          <type>Tuple</type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1Extensional_1_1Incremental_1_1SupportEntry" kindref="compound">SupportEntry</ref> *</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Initialize with Tuple <emphasis>t</emphasis> and next entry <emphasis>n</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/extensional.hh" line="371" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Memory management</header>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Extensional_1_1Incremental_1_1SupportEntry_1a614a8ffbc75fc5783b54d1ef8876672c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gecode::Int::Extensional::Incremental&lt; View &gt;::SupportEntry::dispose</definition>
        <argsstring>(Space &amp;home, SupportEntry *l)</argsstring>
        <name>dispose</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1Extensional_1_1Incremental_1_1SupportEntry" kindref="compound">SupportEntry</ref> *</type>
          <declname>l</declname>
        </param>
        <briefdescription>
<para>Free memory for all elements between this and <emphasis>l</emphasis> (inclusive) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/extensional.hh" line="377" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Extensional_1_1Incremental_1_1SupportEntry_1a824e1349c534b0f6dbd582c7146a2afa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gecode::Int::Extensional::Incremental&lt; View &gt;::SupportEntry::dispose</definition>
        <argsstring>(Space &amp;home)</argsstring>
        <name>dispose</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <briefdescription>
<para>Free memory for this element. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/extensional.hh" line="379" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Extensional_1_1Incremental_1_1SupportEntry_1a952aa8289a13e56de0411f2853ec60e9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>forceinline void * Gecode::Int::Extensional::Incremental&lt; View &gt;::SupportEntry::operator new</definition>
        <argsstring>(size_t s, Space &amp;home)</argsstring>
        <name>operator new</name>
        <param>
          <type>size_t</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <briefdescription>
<para>Allocate memory from space. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/extensional.hh" line="382" column="1" bodyfile="/usr/include/gecode/int/extensional/incremental.hpp" bodystart="108" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Extensional_1_1Incremental_1_1SupportEntry_1a39471280dc1b95149167ea764fdd3ae2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Gecode::Int::Extensional::Incremental&lt; View &gt;::SupportEntry::operator delete</definition>
        <argsstring>(void *p)</argsstring>
        <name>operator delete</name>
        <param>
          <type>void *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>No-op (for exceptions) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/extensional.hh" line="384" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Extensional_1_1Incremental_1_1SupportEntry_1a87f3539b6f7b54ef468aede33b348766" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Gecode::Int::Extensional::Incremental&lt; View &gt;::SupportEntry::operator delete</definition>
        <argsstring>(void *p, Space &amp;home)</argsstring>
        <name>operator delete</name>
        <param>
          <type>void *</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <briefdescription>
<para>No-op (use dispose instead) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/extensional.hh" line="386" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classGecode_1_1Int_1_1Extensional_1_1Incremental_1_1SupportEntry_1afc8830df77b335f99584b18df906b239" prot="public" static="no" mutable="no">
        <type>Tuple</type>
        <definition>Tuple Gecode::Int::Extensional::Incremental&lt; View &gt;::SupportEntry::t</definition>
        <argsstring></argsstring>
        <name>t</name>
        <briefdescription>
<para>Supporting Tuple. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/extensional.hh" line="356" column="1" bodyfile="/usr/include/gecode/int/extensional.hh" bodystart="356" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Entry for storing support. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="6820">
        <label>Gecode::Int::Extensional::Incremental&lt; View &gt;::SupportEntry</label>
        <link refid="classGecode_1_1Int_1_1Extensional_1_1Incremental_1_1SupportEntry"/>
        <childnode refid="6821" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6821">
        <label>Gecode::FreeList</label>
        <link refid="classGecode_1_1FreeList"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6822">
        <label>Gecode::Int::Extensional::Incremental&lt; View &gt;::SupportEntry</label>
        <link refid="classGecode_1_1Int_1_1Extensional_1_1Incremental_1_1SupportEntry"/>
        <childnode refid="6823" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6823">
        <label>Gecode::FreeList</label>
        <link refid="classGecode_1_1FreeList"/>
        <childnode refid="6823" relation="usage">
          <edgelabel>_next</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/usr/include/gecode/int/extensional.hh" line="353" column="1" bodyfile="/usr/include/gecode/int/extensional.hh" bodystart="353" bodyend="388"/>
    <listofallmembers>
      <member refid="classGecode_1_1FreeList_1af9f8e4304c3b32d60120be64f51a6140" prot="protected" virt="non-virtual"><scope>Gecode::Int::Extensional::Incremental::SupportEntry</scope><name>_next</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1Incremental_1_1SupportEntry_1a614a8ffbc75fc5783b54d1ef8876672c" prot="public" virt="non-virtual"><scope>Gecode::Int::Extensional::Incremental::SupportEntry</scope><name>dispose</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1Incremental_1_1SupportEntry_1a824e1349c534b0f6dbd582c7146a2afa" prot="public" virt="non-virtual"><scope>Gecode::Int::Extensional::Incremental::SupportEntry</scope><name>dispose</name></member>
      <member refid="classGecode_1_1FreeList_1af1afc36981b813bf6aa84b9520692a23" prot="public" virt="non-virtual"><scope>Gecode::Int::Extensional::Incremental::SupportEntry</scope><name>FreeList</name></member>
      <member refid="classGecode_1_1FreeList_1a46875b41d67aa1429d1e16be296a496e" prot="public" virt="non-virtual"><scope>Gecode::Int::Extensional::Incremental::SupportEntry</scope><name>FreeList</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1Incremental_1_1SupportEntry_1a97edd1652922d9c9849383135c08af49" prot="public" virt="non-virtual"><scope>Gecode::Int::Extensional::Incremental::SupportEntry</scope><name>next</name></member>
      <member refid="classGecode_1_1FreeList_1a6bcae4b5f7a4e613622abc7b5387a23f" prot="public" virt="non-virtual" ambiguityscope="Gecode::FreeList::"><scope>Gecode::Int::Extensional::Incremental::SupportEntry</scope><name>next</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1Incremental_1_1SupportEntry_1ae7b142587e98b3e70d78843c5552506e" prot="public" virt="non-virtual"><scope>Gecode::Int::Extensional::Incremental::SupportEntry</scope><name>nextRef</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1Incremental_1_1SupportEntry_1a39471280dc1b95149167ea764fdd3ae2" prot="public" virt="non-virtual"><scope>Gecode::Int::Extensional::Incremental::SupportEntry</scope><name>operator delete</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1Incremental_1_1SupportEntry_1a87f3539b6f7b54ef468aede33b348766" prot="public" virt="non-virtual"><scope>Gecode::Int::Extensional::Incremental::SupportEntry</scope><name>operator delete</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1Incremental_1_1SupportEntry_1a952aa8289a13e56de0411f2853ec60e9" prot="public" virt="non-virtual"><scope>Gecode::Int::Extensional::Incremental::SupportEntry</scope><name>operator new</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1Incremental_1_1SupportEntry_1a61d435e41a70750c1e6f1a878a5407f6" prot="public" virt="non-virtual"><scope>Gecode::Int::Extensional::Incremental::SupportEntry</scope><name>SupportEntry</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1Incremental_1_1SupportEntry_1a3fe311757667b928f594a80143839c5f" prot="public" virt="non-virtual"><scope>Gecode::Int::Extensional::Incremental::SupportEntry</scope><name>SupportEntry</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1Incremental_1_1SupportEntry_1afc8830df77b335f99584b18df906b239" prot="public" virt="non-virtual"><scope>Gecode::Int::Extensional::Incremental::SupportEntry</scope><name>t</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
