<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classGecode_1_1Int_1_1Arithmetic_1_1AbsBnd" kind="class" prot="public">
    <compoundname>Gecode::Int::Arithmetic::AbsBnd</compoundname>
    <basecompoundref refid="classGecode_1_1BinaryPropagator" prot="public" virt="non-virtual">Gecode::BinaryPropagator&lt; View, PC_INT_BND &gt;</basecompoundref>
    <includes refid="int_2arithmetic_8hh" local="no">arithmetic.hh</includes>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>View</declname>
        <defname>View</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classGecode_1_1Int_1_1Arithmetic_1_1AbsBnd_1a48c85159d441b9a774259c732328f832" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Int::Arithmetic::AbsBnd&lt; View &gt;::AbsBnd</definition>
        <argsstring>(Space &amp;home, bool share, AbsBnd &amp;p)</argsstring>
        <name>AbsBnd</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>share</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1Arithmetic_1_1AbsBnd" kindref="compound">AbsBnd</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Constructor for cloning <emphasis>p</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/arithmetic.hh" line="68" column="1" bodyfile="/usr/include/gecode/int/arithmetic/abs.hpp" bodystart="111" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Arithmetic_1_1AbsBnd_1a838d46f2641d5c38f555658c7c15b3d3" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Int::Arithmetic::AbsBnd&lt; View &gt;::AbsBnd</definition>
        <argsstring>(Home home, View x0, View x1)</argsstring>
        <name>AbsBnd</name>
        <param>
          <type><ref refid="classGecode_1_1Home" kindref="compound">Home</ref></type>
          <declname>home</declname>
        </param>
        <param>
          <type>View</type>
          <declname>x0</declname>
        </param>
        <param>
          <type>View</type>
          <declname>x1</declname>
        </param>
        <briefdescription>
<para>Constructor for posting. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/arithmetic.hh" line="70" column="1" bodyfile="/usr/include/gecode/int/arithmetic/abs.hpp" bodystart="84" bodyend="85"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classGecode_1_1Int_1_1Arithmetic_1_1AbsBnd_1a05013d0f4fbc47b5faeca5d35ef67cbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classGecode_1_1Actor" kindref="compound">Actor</ref> *</type>
        <definition>Actor * Gecode::Int::Arithmetic::AbsBnd&lt; View &gt;::copy</definition>
        <argsstring>(Space &amp;home, bool share)</argsstring>
        <name>copy</name>
        <reimplements refid="classGecode_1_1Actor_1a67b240e2810720846c3632c94cc9c99d">copy</reimplements>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>share</declname>
        </param>
        <briefdescription>
<para>Copy propagator during cloning. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/arithmetic.hh" line="74" column="1" bodyfile="/usr/include/gecode/int/arithmetic/abs.hpp" bodystart="116" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Arithmetic_1_1AbsBnd_1a1caec5b71d635cc760eb68697ac436fc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classGecode_1_1PropCost" kindref="compound">PropCost</ref></type>
        <definition>PropCost Gecode::Int::Arithmetic::AbsBnd&lt; View &gt;::cost</definition>
        <argsstring>(const Space &amp;home, const ModEventDelta &amp;med) const </argsstring>
        <name>cost</name>
        <reimplements refid="classGecode_1_1BinaryPropagator_1ad1d5389daa9fd7e4cfa70a15e37bad1d">cost</reimplements>
        <param>
          <type>const <ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceGecode_1a129e41c1d037528010d7b6706495a560" kindref="member">ModEventDelta</ref> &amp;</type>
          <declname>med</declname>
        </param>
        <briefdescription>
<para>Cost function. </para>        </briefdescription>
        <detaileddescription>
<para>If a view has been assigned, the cost is low unary. Otherwise it is low binary. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/arithmetic.hh" line="81" column="1" bodyfile="/usr/include/gecode/int/arithmetic/abs.hpp" bodystart="122" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Arithmetic_1_1AbsBnd_1af197877ecf0f47ac70d52a8268c6dd32" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>ExecStatus Gecode::Int::Arithmetic::AbsBnd&lt; View &gt;::propagate</definition>
        <argsstring>(Space &amp;home, const ModEventDelta &amp;med)</argsstring>
        <name>propagate</name>
        <reimplements refid="classGecode_1_1Propagator_1ad2dc98c1345222892592339948c6cde1">propagate</reimplements>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceGecode_1a129e41c1d037528010d7b6706495a560" kindref="member">ModEventDelta</ref> &amp;</type>
          <declname>med</declname>
        </param>
        <briefdescription>
<para>Perform propagation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/arithmetic.hh" line="83" column="1" bodyfile="/usr/include/gecode/int/arithmetic/abs.hpp" bodystart="131" bodyend="133"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classGecode_1_1Int_1_1Arithmetic_1_1AbsBnd_1a82758977af58426c5930f1334873ba99" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>ExecStatus Gecode::Int::Arithmetic::AbsBnd&lt; View &gt;::post</definition>
        <argsstring>(Home home, View x0, View x1)</argsstring>
        <name>post</name>
        <param>
          <type><ref refid="classGecode_1_1Home" kindref="compound">Home</ref></type>
          <declname>home</declname>
        </param>
        <param>
          <type>View</type>
          <declname>x0</declname>
        </param>
        <param>
          <type>View</type>
          <declname>x1</declname>
        </param>
        <briefdescription>
<para>Post bounds consistent propagator <formula id="75">$ |x_0|=x_1$</formula>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/arithmetic.hh" line="85" column="1" bodyfile="/usr/include/gecode/int/arithmetic/abs.hpp" bodystart="89" bodyend="107"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Bounds consistent absolute value propagator. </para>    </briefdescription>
    <detaileddescription>
<para>Requires<programlisting><codeline><highlight class="preprocessor">#include<sp/>&lt;gecode/int/arithmetic.hh&gt;</highlight><highlight class="normal"><sp/></highlight></codeline>
</programlisting> </para>    </detaileddescription>
    <inheritancegraph>
      <node id="29">
        <label>Gecode::Int::Arithmetic::AbsBnd&lt; View &gt;</label>
        <link refid="classGecode_1_1Int_1_1Arithmetic_1_1AbsBnd"/>
        <childnode refid="30" relation="public-inheritance">
        </childnode>
      </node>
      <node id="30">
        <label>Gecode::BinaryPropagator&lt; View, PC_INT_BND &gt;</label>
        <link refid="classGecode_1_1BinaryPropagator"/>
        <childnode refid="31" relation="public-inheritance">
        </childnode>
      </node>
      <node id="31">
        <label>Gecode::Propagator</label>
        <link refid="classGecode_1_1Propagator"/>
        <childnode refid="32" relation="public-inheritance">
        </childnode>
      </node>
      <node id="32">
        <label>Gecode::Actor</label>
        <link refid="classGecode_1_1Actor"/>
        <childnode refid="33" relation="private-inheritance">
        </childnode>
      </node>
      <node id="33">
        <label>Gecode::ActorLink</label>
        <link refid="classGecode_1_1ActorLink"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="34">
        <label>Gecode::Int::Arithmetic::AbsBnd&lt; View &gt;</label>
        <link refid="classGecode_1_1Int_1_1Arithmetic_1_1AbsBnd"/>
        <childnode refid="35" relation="public-inheritance">
        </childnode>
      </node>
      <node id="35">
        <label>Gecode::BinaryPropagator&lt; View, PC_INT_BND &gt;</label>
        <link refid="classGecode_1_1BinaryPropagator"/>
        <childnode refid="36" relation="public-inheritance">
        </childnode>
        <childnode refid="39" relation="usage">
          <edgelabel>x0</edgelabel>
          <edgelabel>x1</edgelabel>
        </childnode>
      </node>
      <node id="39">
        <label>View</label>
      </node>
      <node id="36">
        <label>Gecode::Propagator</label>
        <link refid="classGecode_1_1Propagator"/>
        <childnode refid="37" relation="public-inheritance">
        </childnode>
        <childnode refid="38" relation="usage">
          <edgelabel>advisors</edgelabel>
        </childnode>
      </node>
      <node id="37">
        <label>Gecode::Actor</label>
        <link refid="classGecode_1_1Actor"/>
        <childnode refid="38" relation="private-inheritance">
        </childnode>
      </node>
      <node id="38">
        <label>Gecode::ActorLink</label>
        <link refid="classGecode_1_1ActorLink"/>
      </node>
    </collaborationgraph>
    <location file="/usr/include/gecode/int/arithmetic.hh" line="62" column="1" bodyfile="/usr/include/gecode/int/arithmetic.hh" bodystart="62" bodyend="86"/>
    <listofallmembers>
      <member refid="classGecode_1_1Int_1_1Arithmetic_1_1AbsBnd_1a48c85159d441b9a774259c732328f832" prot="protected" virt="non-virtual"><scope>Gecode::Int::Arithmetic::AbsBnd</scope><name>AbsBnd</name></member>
      <member refid="classGecode_1_1Int_1_1Arithmetic_1_1AbsBnd_1a838d46f2641d5c38f555658c7c15b3d3" prot="protected" virt="non-virtual"><scope>Gecode::Int::Arithmetic::AbsBnd</scope><name>AbsBnd</name></member>
      <member refid="classGecode_1_1Propagator_1a55629f061a0fd8ecb2a4c41aa1568e28" prot="public" virt="virtual"><scope>Gecode::Int::Arithmetic::AbsBnd</scope><name>advise</name></member>
      <member refid="classGecode_1_1Propagator_1afee33d8aed2bc9debee126f17b5015cf" prot="public" virt="non-virtual"><scope>Gecode::Int::Arithmetic::AbsBnd</scope><name>advisors</name></member>
      <member refid="classGecode_1_1Propagator_1a593de773d2204f47ea365a99df2f75d0" prot="public" virt="non-virtual"><scope>Gecode::Int::Arithmetic::AbsBnd</scope><name>afc</name></member>
      <member refid="classGecode_1_1BinaryPropagator_1a352dd6847573a1e6d380632b5375a32b" prot="protected" virt="non-virtual"><scope>Gecode::Int::Arithmetic::AbsBnd</scope><name>BinaryPropagator</name></member>
      <member refid="classGecode_1_1BinaryPropagator_1a9779a1abaecbcbdbc5b020818b2ddd5b" prot="protected" virt="non-virtual"><scope>Gecode::Int::Arithmetic::AbsBnd</scope><name>BinaryPropagator</name></member>
      <member refid="classGecode_1_1BinaryPropagator_1aac3a4c9b130503ba07cb197bdb3d3c0f" prot="protected" virt="non-virtual"><scope>Gecode::Int::Arithmetic::AbsBnd</scope><name>BinaryPropagator</name></member>
      <member refid="classGecode_1_1ActorLink_1a8427f41a27a72b52ceb52d0fdad21063" prot="public" virt="non-virtual" ambiguityscope="Gecode::ActorLink::"><scope>Gecode::Int::Arithmetic::AbsBnd</scope><name>cast</name></member>
      <member refid="classGecode_1_1ActorLink_1a464526456db41981f82a1193a8b4e569" prot="public" virt="non-virtual" ambiguityscope="Gecode::ActorLink::"><scope>Gecode::Int::Arithmetic::AbsBnd</scope><name>cast</name></member>
      <member refid="classGecode_1_1Int_1_1Arithmetic_1_1AbsBnd_1a05013d0f4fbc47b5faeca5d35ef67cbc" prot="public" virt="virtual"><scope>Gecode::Int::Arithmetic::AbsBnd</scope><name>copy</name></member>
      <member refid="classGecode_1_1Int_1_1Arithmetic_1_1AbsBnd_1a1caec5b71d635cc760eb68697ac436fc" prot="public" virt="virtual"><scope>Gecode::Int::Arithmetic::AbsBnd</scope><name>cost</name></member>
      <member refid="classGecode_1_1BinaryPropagator_1a30b5466d8a2da45e2505fb4eacdca22e" prot="public" virt="virtual"><scope>Gecode::Int::Arithmetic::AbsBnd</scope><name>dispose</name></member>
      <member refid="classGecode_1_1Propagator_1a3b286c7aec9843b60a531b495015b5f7" prot="protected" virt="non-virtual"><scope>Gecode::Int::Arithmetic::AbsBnd</scope><name>fwd</name></member>
      <member refid="classGecode_1_1Propagator_1ae9dfa55e47e4ff8e0c8e4c2a6efdbfc0" prot="public" virt="non-virtual"><scope>Gecode::Int::Arithmetic::AbsBnd</scope><name>med</name></member>
      <member refid="classGecode_1_1Propagator_1a4905db55af49af8f38558bdbcf5fd4a2" prot="public" virt="non-virtual"><scope>Gecode::Int::Arithmetic::AbsBnd</scope><name>modeventdelta</name></member>
      <member refid="classGecode_1_1Actor_1a388f671145dcf906f81d22bde2dc0f3d" prot="public" virt="non-virtual"><scope>Gecode::Int::Arithmetic::AbsBnd</scope><name>operator delete</name></member>
      <member refid="classGecode_1_1Actor_1ac28b9601b530076a1bda75834487f898" prot="public" virt="non-virtual"><scope>Gecode::Int::Arithmetic::AbsBnd</scope><name>operator new</name></member>
      <member refid="classGecode_1_1Int_1_1Arithmetic_1_1AbsBnd_1a82758977af58426c5930f1334873ba99" prot="public" virt="non-virtual"><scope>Gecode::Int::Arithmetic::AbsBnd</scope><name>post</name></member>
      <member refid="classGecode_1_1Int_1_1Arithmetic_1_1AbsBnd_1af197877ecf0f47ac70d52a8268c6dd32" prot="public" virt="virtual"><scope>Gecode::Int::Arithmetic::AbsBnd</scope><name>propagate</name></member>
      <member refid="classGecode_1_1Propagator_1a891f3e84cde2e8e60f8ad9340ad74b05" prot="protected" virt="non-virtual"><scope>Gecode::Int::Arithmetic::AbsBnd</scope><name>Propagator</name></member>
      <member refid="classGecode_1_1Propagator_1afeaeed8dae67de4313858bd82fdae5d0" prot="protected" virt="non-virtual"><scope>Gecode::Int::Arithmetic::AbsBnd</scope><name>Propagator</name></member>
      <member refid="classGecode_1_1Propagator_1a1781b5b0df38c39dddca4b44c3a00530" prot="public" virt="non-virtual"><scope>Gecode::Int::Arithmetic::AbsBnd</scope><name>size</name></member>
      <member refid="classGecode_1_1BinaryPropagator_1a0af8caa4d81a2f01e4be6576bb51a2f7" prot="protected" virt="non-virtual"><scope>Gecode::Int::Arithmetic::AbsBnd</scope><name>x0</name></member>
      <member refid="classGecode_1_1BinaryPropagator_1ab890f8d037d5627e0a4951af6209d94d" prot="protected" virt="non-virtual"><scope>Gecode::Int::Arithmetic::AbsBnd</scope><name>x1</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
