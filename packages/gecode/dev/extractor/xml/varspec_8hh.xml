<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="varspec_8hh" kind="file">
    <compoundname>varspec.hh</compoundname>
    <includes refid="option_8hh" local="no">gecode/flatzinc/option.hh</includes>
    <includes refid="ast_8hh" local="no">gecode/flatzinc/ast.hh</includes>
    <includes local="no">vector</includes>
    <includes local="no">iostream</includes>
    <includedby refid="parser_8hh" local="no">/usr/include/gecode/flatzinc/parser.hh</includedby>
    <includedby refid="flatzinc_8hh" local="no">/usr/include/gecode/flatzinc.hh</includedby>
    <incdepgraph>
      <node id="833">
        <label>gecode/flatzinc/option.hh</label>
        <link refid="option_8hh_source"/>
      </node>
      <node id="836">
        <label>string</label>
      </node>
      <node id="832">
        <label>/usr/include/gecode/flatzinc/varspec.hh</label>
        <link refid="varspec.hh"/>
        <childnode refid="833" relation="include">
        </childnode>
        <childnode refid="834" relation="include">
        </childnode>
        <childnode refid="835" relation="include">
        </childnode>
        <childnode refid="837" relation="include">
        </childnode>
      </node>
      <node id="835">
        <label>vector</label>
      </node>
      <node id="834">
        <label>gecode/flatzinc/ast.hh</label>
        <link refid="ast_8hh_source"/>
        <childnode refid="835" relation="include">
        </childnode>
        <childnode refid="836" relation="include">
        </childnode>
        <childnode refid="837" relation="include">
        </childnode>
        <childnode refid="838" relation="include">
        </childnode>
      </node>
      <node id="838">
        <label>cstdlib</label>
      </node>
      <node id="837">
        <label>iostream</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="841">
        <label>/usr/include/gecode/flatzinc.hh</label>
        <link refid="flatzinc_8hh_source"/>
        <childnode refid="840" relation="include">
        </childnode>
        <childnode refid="842" relation="include">
        </childnode>
      </node>
      <node id="840">
        <label>/usr/include/gecode/flatzinc/parser.hh</label>
        <link refid="parser_8hh_source"/>
      </node>
      <node id="839">
        <label>/usr/include/gecode/flatzinc/varspec.hh</label>
        <link refid="varspec.hh"/>
        <childnode refid="840" relation="include">
        </childnode>
        <childnode refid="841" relation="include">
        </childnode>
      </node>
      <node id="842">
        <label>/usr/include/gecode/flatzinc/registry.hh</label>
        <link refid="registry_8hh_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classGecode_1_1FlatZinc_1_1Alias" prot="public">Gecode::FlatZinc::Alias</innerclass>
    <innerclass refid="classGecode_1_1FlatZinc_1_1VarSpec" prot="public">Gecode::FlatZinc::VarSpec</innerclass>
    <innerclass refid="classGecode_1_1FlatZinc_1_1IntVarSpec" prot="public">Gecode::FlatZinc::IntVarSpec</innerclass>
    <innerclass refid="classGecode_1_1FlatZinc_1_1BoolVarSpec" prot="public">Gecode::FlatZinc::BoolVarSpec</innerclass>
    <innerclass refid="classGecode_1_1FlatZinc_1_1FloatVarSpec" prot="public">Gecode::FlatZinc::FloatVarSpec</innerclass>
    <innerclass refid="classGecode_1_1FlatZinc_1_1SetVarSpec" prot="public">Gecode::FlatZinc::SetVarSpec</innerclass>
    <innernamespace refid="namespaceGecode">Gecode</innernamespace>
    <innernamespace refid="namespaceGecode_1_1FlatZinc">Gecode::FlatZinc</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>mode:<sp/>C++;<sp/>c-basic-offset:<sp/>2;<sp/>indent-tabs-mode:<sp/>nil<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/><sp/>Main<sp/>authors:</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Guido<sp/>Tack<sp/>&lt;tack@gecode.org&gt;</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>Copyright:</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Guido<sp/>Tack,<sp/>2007</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/>Last<sp/>modified:</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>$Date:<sp/>2012-03-30<sp/>05:58:02<sp/>+0200<sp/>(Fri,<sp/>30<sp/>Mar<sp/>2012)<sp/>$<sp/>by<sp/>$Author:<sp/>tack<sp/>$</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>$Revision:<sp/>12665<sp/>$</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>Gecode,<sp/>the<sp/>generic<sp/>constraint</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/>development<sp/>environment:</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.gecode.org</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/><sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/><sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/><sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/><sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/><sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/><sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/><sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/><sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/><sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/><sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__GECODE_FLATZINC_VARSPEC__HH__</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>__GECODE_FLATZINC_VARSPEC__HH__</highlight></codeline>
<codeline lineno="40"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gecode/flatzinc/option.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gecode/flatzinc/ast.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Gecode<sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">FlatZinc<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="classGecode_1_1FlatZinc_1_1Alias" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classGecode_1_1FlatZinc_1_1Alias" kindref="compound">Alias</ref><sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1FlatZinc_1_1Alias" kindref="compound">Alias</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v0)<sp/>:<sp/>v(v0)<sp/>{}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="classGecode_1_1FlatZinc_1_1VarSpec" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classGecode_1_1FlatZinc_1_1VarSpec" kindref="compound">VarSpec</ref><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="59" refid="classGecode_1_1FlatZinc_1_1VarSpec_1a28229c4ca2cdf400f81f4e49c63af607" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1FlatZinc_1_1VarSpec_1a28229c4ca2cdf400f81f4e49c63af607" kindref="member">~VarSpec</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{}</highlight></codeline>
<codeline lineno="61" refid="classGecode_1_1FlatZinc_1_1VarSpec_1a4d9deb927e8c604c0d0ddb0da5ee0db3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1FlatZinc_1_1VarSpec_1a4d9deb927e8c604c0d0ddb0da5ee0db3" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="63" refid="classGecode_1_1FlatZinc_1_1VarSpec_1acf4f3b0c9d7c4f2a3f089f2fbb354112" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1FlatZinc_1_1VarSpec_1acf4f3b0c9d7c4f2a3f089f2fbb354112" kindref="member">alias</ref>;</highlight></codeline>
<codeline lineno="65" refid="classGecode_1_1FlatZinc_1_1VarSpec_1acbeb5a15972d1707910e2c3316642029" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1FlatZinc_1_1VarSpec_1acbeb5a15972d1707910e2c3316642029" kindref="member">assigned</ref>;</highlight></codeline>
<codeline lineno="67" refid="classGecode_1_1FlatZinc_1_1VarSpec_1ac2229cdd9a41f29c3fcf76de275b5f85" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1FlatZinc_1_1VarSpec_1ac2229cdd9a41f29c3fcf76de275b5f85" kindref="member">introduced</ref>;</highlight></codeline>
<codeline lineno="69" refid="classGecode_1_1FlatZinc_1_1VarSpec_1ad666a4691c87ab52b9d13f9c1cfa93fb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1FlatZinc_1_1VarSpec_1ad666a4691c87ab52b9d13f9c1cfa93fb" kindref="member">funcDep</ref>;</highlight></codeline>
<codeline lineno="71" refid="classGecode_1_1FlatZinc_1_1VarSpec_1a25d6c7ac35178a0e8c7ea6a43bba8336" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1FlatZinc_1_1VarSpec_1a25d6c7ac35178a0e8c7ea6a43bba8336" kindref="member">VarSpec</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>introduced0,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>funcDep0)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classGecode_1_1FlatZinc_1_1VarSpec_1ac2229cdd9a41f29c3fcf76de275b5f85" kindref="member">introduced</ref>(introduced0),<sp/><ref refid="classGecode_1_1FlatZinc_1_1VarSpec_1ad666a4691c87ab52b9d13f9c1cfa93fb" kindref="member">funcDep</ref>(funcDep0)<sp/>{}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="classGecode_1_1FlatZinc_1_1IntVarSpec" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classGecode_1_1FlatZinc_1_1IntVarSpec" kindref="compound">IntVarSpec</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1FlatZinc_1_1VarSpec" kindref="compound">VarSpec</ref><sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structGecode_1_1FlatZinc_1_1Option" kindref="compound">Option&lt;AST::SetLit* &gt;</ref><sp/>domain;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1FlatZinc_1_1IntVarSpec" kindref="compound">IntVarSpec</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structGecode_1_1FlatZinc_1_1Option" kindref="compound">Option&lt;AST::SetLit* &gt;</ref>&amp;<sp/>d,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1FlatZinc_1_1VarSpec_1ac2229cdd9a41f29c3fcf76de275b5f85" kindref="member">introduced</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1FlatZinc_1_1VarSpec_1ad666a4691c87ab52b9d13f9c1cfa93fb" kindref="member">funcDep</ref>)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classGecode_1_1FlatZinc_1_1VarSpec_1a25d6c7ac35178a0e8c7ea6a43bba8336" kindref="member">VarSpec</ref>(introduced,funcDep)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1FlatZinc_1_1VarSpec_1acf4f3b0c9d7c4f2a3f089f2fbb354112" kindref="member">alias</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1FlatZinc_1_1VarSpec_1acbeb5a15972d1707910e2c3316642029" kindref="member">assigned</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>domain<sp/>=<sp/>d;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1FlatZinc_1_1IntVarSpec" kindref="compound">IntVarSpec</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i0,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>introduced,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>funcDep)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classGecode_1_1FlatZinc_1_1VarSpec_1a25d6c7ac35178a0e8c7ea6a43bba8336" kindref="member">VarSpec</ref>(introduced,funcDep)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1FlatZinc_1_1VarSpec_1acf4f3b0c9d7c4f2a3f089f2fbb354112" kindref="member">alias</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><ref refid="classGecode_1_1FlatZinc_1_1VarSpec_1acbeb5a15972d1707910e2c3316642029" kindref="member">assigned</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><ref refid="classGecode_1_1FlatZinc_1_1VarSpec_1a4d9deb927e8c604c0d0ddb0da5ee0db3" kindref="member">i</ref><sp/>=<sp/>i0;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1FlatZinc_1_1IntVarSpec" kindref="compound">IntVarSpec</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1FlatZinc_1_1Alias" kindref="compound">Alias</ref>&amp;<sp/>eq,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>introduced,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>funcDep)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classGecode_1_1FlatZinc_1_1VarSpec_1a25d6c7ac35178a0e8c7ea6a43bba8336" kindref="member">VarSpec</ref>(introduced,funcDep)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1FlatZinc_1_1VarSpec_1acf4f3b0c9d7c4f2a3f089f2fbb354112" kindref="member">alias</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><ref refid="classGecode_1_1FlatZinc_1_1VarSpec_1a4d9deb927e8c604c0d0ddb0da5ee0db3" kindref="member">i</ref><sp/>=<sp/>eq.v;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>~<ref refid="classGecode_1_1FlatZinc_1_1IntVarSpec" kindref="compound">IntVarSpec</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classGecode_1_1FlatZinc_1_1VarSpec_1acf4f3b0c9d7c4f2a3f089f2fbb354112" kindref="member">alias</ref><sp/>&amp;&amp;<sp/>!<ref refid="classGecode_1_1FlatZinc_1_1VarSpec_1acbeb5a15972d1707910e2c3316642029" kindref="member">assigned</ref><sp/>&amp;&amp;<sp/>domain())</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>domain.some();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="classGecode_1_1FlatZinc_1_1BoolVarSpec" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classGecode_1_1FlatZinc_1_1BoolVarSpec" kindref="compound">BoolVarSpec</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1FlatZinc_1_1VarSpec" kindref="compound">VarSpec</ref><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structGecode_1_1FlatZinc_1_1Option" kindref="compound">Option&lt;AST::SetLit* &gt;</ref><sp/>domain;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1FlatZinc_1_1BoolVarSpec" kindref="compound">BoolVarSpec</ref>(<ref refid="structGecode_1_1FlatZinc_1_1Option" kindref="compound">Option&lt;AST::SetLit* &gt;</ref>&amp;<sp/>d,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1FlatZinc_1_1VarSpec_1ac2229cdd9a41f29c3fcf76de275b5f85" kindref="member">introduced</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1FlatZinc_1_1VarSpec_1ad666a4691c87ab52b9d13f9c1cfa93fb" kindref="member">funcDep</ref>)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classGecode_1_1FlatZinc_1_1VarSpec_1a25d6c7ac35178a0e8c7ea6a43bba8336" kindref="member">VarSpec</ref>(introduced,funcDep)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1FlatZinc_1_1VarSpec_1acf4f3b0c9d7c4f2a3f089f2fbb354112" kindref="member">alias</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><ref refid="classGecode_1_1FlatZinc_1_1VarSpec_1acbeb5a15972d1707910e2c3316642029" kindref="member">assigned</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>domain<sp/>=<sp/>d;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1FlatZinc_1_1BoolVarSpec" kindref="compound">BoolVarSpec</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>b,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>introduced,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>funcDep)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classGecode_1_1FlatZinc_1_1VarSpec_1a25d6c7ac35178a0e8c7ea6a43bba8336" kindref="member">VarSpec</ref>(introduced,funcDep)<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1FlatZinc_1_1VarSpec_1acf4f3b0c9d7c4f2a3f089f2fbb354112" kindref="member">alias</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><ref refid="classGecode_1_1FlatZinc_1_1VarSpec_1acbeb5a15972d1707910e2c3316642029" kindref="member">assigned</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><ref refid="classGecode_1_1FlatZinc_1_1VarSpec_1a4d9deb927e8c604c0d0ddb0da5ee0db3" kindref="member">i</ref><sp/>=<sp/>b;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1FlatZinc_1_1BoolVarSpec" kindref="compound">BoolVarSpec</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1FlatZinc_1_1Alias" kindref="compound">Alias</ref>&amp;<sp/>eq,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>introduced,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>funcDep)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classGecode_1_1FlatZinc_1_1VarSpec_1a25d6c7ac35178a0e8c7ea6a43bba8336" kindref="member">VarSpec</ref>(introduced,funcDep)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1FlatZinc_1_1VarSpec_1acf4f3b0c9d7c4f2a3f089f2fbb354112" kindref="member">alias</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><ref refid="classGecode_1_1FlatZinc_1_1VarSpec_1a4d9deb927e8c604c0d0ddb0da5ee0db3" kindref="member">i</ref><sp/>=<sp/>eq.v;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>~<ref refid="classGecode_1_1FlatZinc_1_1BoolVarSpec" kindref="compound">BoolVarSpec</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classGecode_1_1FlatZinc_1_1VarSpec_1acf4f3b0c9d7c4f2a3f089f2fbb354112" kindref="member">alias</ref><sp/>&amp;&amp;<sp/>!<ref refid="classGecode_1_1FlatZinc_1_1VarSpec_1acbeb5a15972d1707910e2c3316642029" kindref="member">assigned</ref><sp/>&amp;&amp;<sp/>domain())</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>domain.some();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="classGecode_1_1FlatZinc_1_1FloatVarSpec" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classGecode_1_1FlatZinc_1_1FloatVarSpec" kindref="compound">FloatVarSpec</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1FlatZinc_1_1VarSpec" kindref="compound">VarSpec</ref><sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structGecode_1_1FlatZinc_1_1Option" kindref="compound">Option&lt;std::pair&lt;double,double&gt;</ref><sp/>&gt;<sp/>domain;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1FlatZinc_1_1FloatVarSpec" kindref="compound">FloatVarSpec</ref>(<ref refid="structGecode_1_1FlatZinc_1_1Option" kindref="compound">Option</ref>&lt;std::pair&lt;double,double&gt;<sp/>&gt;&amp;<sp/>d,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1FlatZinc_1_1VarSpec_1ac2229cdd9a41f29c3fcf76de275b5f85" kindref="member">introduced</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1FlatZinc_1_1VarSpec_1ad666a4691c87ab52b9d13f9c1cfa93fb" kindref="member">funcDep</ref>)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classGecode_1_1FlatZinc_1_1VarSpec_1a25d6c7ac35178a0e8c7ea6a43bba8336" kindref="member">VarSpec</ref>(introduced,funcDep),<sp/>domain(d)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1FlatZinc_1_1VarSpec_1acf4f3b0c9d7c4f2a3f089f2fbb354112" kindref="member">alias</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><ref refid="classGecode_1_1FlatZinc_1_1VarSpec_1acbeb5a15972d1707910e2c3316642029" kindref="member">assigned</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1FlatZinc_1_1FloatVarSpec" kindref="compound">FloatVarSpec</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>introduced,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>funcDep)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classGecode_1_1FlatZinc_1_1VarSpec_1a25d6c7ac35178a0e8c7ea6a43bba8336" kindref="member">VarSpec</ref>(introduced,funcDep)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1FlatZinc_1_1VarSpec_1acf4f3b0c9d7c4f2a3f089f2fbb354112" kindref="member">alias</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><ref refid="classGecode_1_1FlatZinc_1_1VarSpec_1acbeb5a15972d1707910e2c3316642029" kindref="member">assigned</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>domain<sp/>=<sp/><ref refid="structGecode_1_1FlatZinc_1_1Option" kindref="compound">Option&lt;std::pair&lt;double,double&gt;</ref><sp/>&gt;::some(std::pair&lt;double,double&gt;(d,d));</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1FlatZinc_1_1FloatVarSpec" kindref="compound">FloatVarSpec</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1FlatZinc_1_1Alias" kindref="compound">Alias</ref>&amp;<sp/>eq,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>introduced,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>funcDep)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classGecode_1_1FlatZinc_1_1VarSpec_1a25d6c7ac35178a0e8c7ea6a43bba8336" kindref="member">VarSpec</ref>(introduced,funcDep)<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1FlatZinc_1_1VarSpec_1acf4f3b0c9d7c4f2a3f089f2fbb354112" kindref="member">alias</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><ref refid="classGecode_1_1FlatZinc_1_1VarSpec_1a4d9deb927e8c604c0d0ddb0da5ee0db3" kindref="member">i</ref><sp/>=<sp/>eq.v;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="classGecode_1_1FlatZinc_1_1SetVarSpec" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classGecode_1_1FlatZinc_1_1SetVarSpec" kindref="compound">SetVarSpec</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1FlatZinc_1_1VarSpec" kindref="compound">VarSpec</ref><sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structGecode_1_1FlatZinc_1_1Option" kindref="compound">Option&lt;AST::SetLit*&gt;</ref><sp/>upperBound;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1FlatZinc_1_1SetVarSpec" kindref="compound">SetVarSpec</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1FlatZinc_1_1VarSpec_1ac2229cdd9a41f29c3fcf76de275b5f85" kindref="member">introduced</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1FlatZinc_1_1VarSpec_1ad666a4691c87ab52b9d13f9c1cfa93fb" kindref="member">funcDep</ref>)<sp/>:<sp/><ref refid="classGecode_1_1FlatZinc_1_1VarSpec_1a25d6c7ac35178a0e8c7ea6a43bba8336" kindref="member">VarSpec</ref>(introduced,funcDep)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1FlatZinc_1_1VarSpec_1acf4f3b0c9d7c4f2a3f089f2fbb354112" kindref="member">alias</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><ref refid="classGecode_1_1FlatZinc_1_1VarSpec_1acbeb5a15972d1707910e2c3316642029" kindref="member">assigned</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>upperBound<sp/>=<sp/><ref refid="structGecode_1_1FlatZinc_1_1Option" kindref="compound">Option&lt;AST::SetLit* &gt;::none</ref>();</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1FlatZinc_1_1SetVarSpec" kindref="compound">SetVarSpec</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structGecode_1_1FlatZinc_1_1Option" kindref="compound">Option&lt;AST::SetLit* &gt;</ref>&amp;<sp/>v,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>introduced,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>funcDep)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classGecode_1_1FlatZinc_1_1VarSpec_1a25d6c7ac35178a0e8c7ea6a43bba8336" kindref="member">VarSpec</ref>(introduced,funcDep)<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1FlatZinc_1_1VarSpec_1acf4f3b0c9d7c4f2a3f089f2fbb354112" kindref="member">alias</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><ref refid="classGecode_1_1FlatZinc_1_1VarSpec_1acbeb5a15972d1707910e2c3316642029" kindref="member">assigned</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>upperBound<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1FlatZinc_1_1SetVarSpec" kindref="compound">SetVarSpec</ref>(<ref refid="classGecode_1_1FlatZinc_1_1AST_1_1SetLit" kindref="compound">AST::SetLit</ref>*<sp/>v,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>introduced,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>funcDep)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classGecode_1_1FlatZinc_1_1VarSpec_1a25d6c7ac35178a0e8c7ea6a43bba8336" kindref="member">VarSpec</ref>(introduced,funcDep)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1FlatZinc_1_1VarSpec_1acf4f3b0c9d7c4f2a3f089f2fbb354112" kindref="member">alias</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><ref refid="classGecode_1_1FlatZinc_1_1VarSpec_1acbeb5a15972d1707910e2c3316642029" kindref="member">assigned</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>upperBound<sp/>=<sp/><ref refid="structGecode_1_1FlatZinc_1_1Option" kindref="compound">Option&lt;AST::SetLit*&gt;::some</ref>(v);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1FlatZinc_1_1SetVarSpec" kindref="compound">SetVarSpec</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1FlatZinc_1_1Alias" kindref="compound">Alias</ref>&amp;<sp/>eq,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>introduced,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>funcDep)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classGecode_1_1FlatZinc_1_1VarSpec_1a25d6c7ac35178a0e8c7ea6a43bba8336" kindref="member">VarSpec</ref>(introduced,funcDep)<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1FlatZinc_1_1VarSpec_1acf4f3b0c9d7c4f2a3f089f2fbb354112" kindref="member">alias</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><ref refid="classGecode_1_1FlatZinc_1_1VarSpec_1a4d9deb927e8c604c0d0ddb0da5ee0db3" kindref="member">i</ref><sp/>=<sp/>eq.v;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>~<ref refid="classGecode_1_1FlatZinc_1_1SetVarSpec" kindref="compound">SetVarSpec</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classGecode_1_1FlatZinc_1_1VarSpec_1acf4f3b0c9d7c4f2a3f089f2fbb354112" kindref="member">alias</ref><sp/>&amp;&amp;<sp/>upperBound())</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>upperBound.some();</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal">}}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="172"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="comment">//<sp/>STATISTICS:<sp/>flatzinc-any</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/usr/include/gecode/flatzinc/varspec.hh"/>
  </compounddef>
</doxygen>
