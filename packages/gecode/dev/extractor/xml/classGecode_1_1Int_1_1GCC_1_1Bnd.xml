<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classGecode_1_1Int_1_1GCC_1_1Bnd" kind="class" prot="public">
    <compoundname>Gecode::Int::GCC::Bnd</compoundname>
    <basecompoundref refid="classGecode_1_1Propagator" prot="public" virt="non-virtual">Gecode::Propagator</basecompoundref>
    <includes refid="gcc_8hh" local="no">gcc.hh</includes>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>Card</declname>
        <defname>Card</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classGecode_1_1Int_1_1GCC_1_1Bnd_1aaf4cd021be4713507906e4aa4260dac3" prot="protected" static="no" mutable="no">
        <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; <ref refid="classGecode_1_1Int_1_1IntView" kindref="compound">IntView</ref> &gt;</type>
        <definition>ViewArray&lt;IntView&gt; Gecode::Int::GCC::Bnd&lt; Card &gt;::x</definition>
        <argsstring></argsstring>
        <name>x</name>
        <briefdescription>
<para>Views on which to perform bounds-propagation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/gcc.hh" line="118" column="1" bodyfile="/usr/include/gecode/int/gcc.hh" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Int_1_1GCC_1_1Bnd_1a91118d84a69ef5271265c4d2b56e4652" prot="protected" static="no" mutable="no">
        <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; <ref refid="classGecode_1_1Int_1_1IntView" kindref="compound">IntView</ref> &gt;</type>
        <definition>ViewArray&lt;IntView&gt; Gecode::Int::GCC::Bnd&lt; Card &gt;::y</definition>
        <argsstring></argsstring>
        <name>y</name>
        <briefdescription>
<para>Views on which to perform value-propagation (subset of <computeroutput>x</computeroutput>) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/gcc.hh" line="120" column="1" bodyfile="/usr/include/gecode/int/gcc.hh" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Int_1_1GCC_1_1Bnd_1a5f30d61c4a4e318f0564442bf1422297" prot="protected" static="no" mutable="no">
        <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; Card &gt;</type>
        <definition>ViewArray&lt;Card&gt; Gecode::Int::GCC::Bnd&lt; Card &gt;::k</definition>
        <argsstring></argsstring>
        <name>k</name>
        <briefdescription>
<para>Array containing either fixed cardinalities or CardViews. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/gcc.hh" line="122" column="1" bodyfile="/usr/include/gecode/int/gcc.hh" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Int_1_1GCC_1_1Bnd_1add98e2913704da28bcf72690e62589c1" prot="protected" static="no" mutable="no">
        <type><ref refid="classGecode_1_1Int_1_1GCC_1_1PartialSum" kindref="compound">PartialSum</ref>&lt; Card &gt;</type>
        <definition>PartialSum&lt;Card&gt; Gecode::Int::GCC::Bnd&lt; Card &gt;::lps</definition>
        <argsstring></argsstring>
        <name>lps</name>
        <briefdescription>
<para>Data structure storing the sum of the views lower bounds Necessary for reasoning about the interval capacities in the propagation algorithm. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/gcc.hh" line="128" column="1" bodyfile="/usr/include/gecode/int/gcc.hh" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Int_1_1GCC_1_1Bnd_1a0183aa054c05da44592113fcc3ea05c6" prot="protected" static="no" mutable="no">
        <type><ref refid="classGecode_1_1Int_1_1GCC_1_1PartialSum" kindref="compound">PartialSum</ref>&lt; Card &gt;</type>
        <definition>PartialSum&lt;Card&gt; Gecode::Int::GCC::Bnd&lt; Card &gt;::ups</definition>
        <argsstring></argsstring>
        <name>ups</name>
        <briefdescription>
<para>Data structure storing the sum of the views upper bounds. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/gcc.hh" line="130" column="1" bodyfile="/usr/include/gecode/int/gcc.hh" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Int_1_1GCC_1_1Bnd_1a7c68e813cd2a996ddd23c9d9d40cfdf2" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Gecode::Int::GCC::Bnd&lt; Card &gt;::card_fixed</definition>
        <argsstring></argsstring>
        <name>card_fixed</name>
        <briefdescription>
<para>Stores whether cardinalities are all assigned. </para>        </briefdescription>
        <detaileddescription>
<para>If all cardinalities are assigned the propagation algorithm only has to perform propagation for the upper bounds. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/gcc.hh" line="137" column="1" bodyfile="/usr/include/gecode/int/gcc.hh" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Int_1_1GCC_1_1Bnd_1a4fabbdb3b5d8018e20cdc85b67c15af3" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Gecode::Int::GCC::Bnd&lt; Card &gt;::skip_lbc</definition>
        <argsstring></argsstring>
        <name>skip_lbc</name>
        <briefdescription>
<para>Stores whether the minium required occurences of the cardinalities are all zero. If so, we do not need to perform lower bounds propagation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/gcc.hh" line="143" column="1" bodyfile="/usr/include/gecode/int/gcc.hh" bodystart="143" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classGecode_1_1Int_1_1GCC_1_1Bnd_1a6024398f86d20a2f893dd22d1656b5ec" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Int::GCC::Bnd&lt; Card &gt;::Bnd</definition>
        <argsstring>(Space &amp;home, bool share, Bnd&lt; Card &gt; &amp;p)</argsstring>
        <name>Bnd</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>share</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1GCC_1_1Bnd" kindref="compound">Bnd</ref>&lt; Card &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Constructor for cloning <emphasis>p</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/gcc.hh" line="145" column="1" bodyfile="/usr/include/gecode/int/gcc/bnd.hpp" bodystart="60" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1GCC_1_1Bnd_1a6c0260840b03a2160327e48801b6f4b0" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>ExecStatus Gecode::Int::GCC::Bnd&lt; Card &gt;::pruneCards</definition>
        <argsstring>(Space &amp;home)</argsstring>
        <name>pruneCards</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <briefdescription>
<para>Prune cardinality variables with 0 maximum occurrence. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/gcc.hh" line="148" column="1" bodyfile="/usr/include/gecode/int/gcc/bnd.hpp" bodystart="559" bodyend="589"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1GCC_1_1Bnd_1ac2487266ab16fb7424b2712a1071f2f6" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>forceinline ExecStatus Gecode::Int::GCC::Bnd&lt; Card &gt;::lbc</definition>
        <argsstring>(Space &amp;home, int &amp;nb, HallInfo hall[], Rank rank[], int mu[], int nu[])</argsstring>
        <name>lbc</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>nb</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1GCC_1_1HallInfo" kindref="compound">HallInfo</ref></type>
          <declname>hall</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1GCC_1_1Rank" kindref="compound">Rank</ref></type>
          <declname>rank</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>mu</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>nu</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>Lower Bounds constraint (LBC) stating <formula id="138">$ \forall j \in \{0, \dots, |k|-1\}: \#\{i\in\{0, \dots, |x| - 1\} | x_i = card(k_j)\} \geq min(k_j)$</formula> Hence the lbc constraints the variables such that every value occurs at least as often as specified by its lower cardinality bound. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>home</parametername>
</parameternamelist>
<parameterdescription>
<para>current space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nb</parametername>
</parameternamelist>
<parameterdescription>
<para>denotes number of unique bounds </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hall</parametername>
</parameternamelist>
<parameterdescription>
<para>contains information about the hall structure of the problem (cf. <ref refid="classGecode_1_1Int_1_1GCC_1_1HallInfo" kindref="compound">HallInfo</ref>) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rank</parametername>
</parameternamelist>
<parameterdescription>
<para>ranking information about the variable bounds (cf. <ref refid="classGecode_1_1Int_1_1GCC_1_1Rank" kindref="compound">Rank</ref>) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mu</parametername>
</parameternamelist>
<parameterdescription>
<para>permutation <formula id="139">$ \mu $</formula> such that <formula id="140">$ \forall i\in \{0, \dots, |x|-2\}: max(x_{\mu(i)}) \leq max(x_{\mu(i+1)})$</formula> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nu</parametername>
</parameternamelist>
<parameterdescription>
<para>permutation <formula id="141">$ \nu $</formula> such that <formula id="142">$ \forall i\in \{0, \dots, |x|-2\}: min(x_{\mu(i)}) \leq min(x_{\mu(i+1)})$</formula> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/gcc.hh" line="168" column="1" bodyfile="/usr/include/gecode/int/gcc/bnd.hpp" bodystart="97" bodyend="396"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1GCC_1_1Bnd_1a6dee04590fdea4b03784bc8787018d46" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>forceinline ExecStatus Gecode::Int::GCC::Bnd&lt; Card &gt;::ubc</definition>
        <argsstring>(Space &amp;home, int &amp;nb, HallInfo hall[], Rank rank[], int mu[], int nu[])</argsstring>
        <name>ubc</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>nb</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1GCC_1_1HallInfo" kindref="compound">HallInfo</ref></type>
          <declname>hall</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1GCC_1_1Rank" kindref="compound">Rank</ref></type>
          <declname>rank</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>mu</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>nu</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>Upper Bounds constraint (UBC) stating <formula id="143">$ \forall j \in \{0, \dots, |k|-1\}: \#\{i\in\{0, \dots, |x| - 1\} | x_i = card(k_j)\} \leq max(k_j)$</formula> Hence the ubc constraints the variables such that no value occurs more often than specified by its upper cardinality bound. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>home</parametername>
</parameternamelist>
<parameterdescription>
<para>current space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nb</parametername>
</parameternamelist>
<parameterdescription>
<para>denotes number of unique bounds </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hall</parametername>
</parameternamelist>
<parameterdescription>
<para>contains information about the hall structure of the problem (cf. <ref refid="classGecode_1_1Int_1_1GCC_1_1HallInfo" kindref="compound">HallInfo</ref>) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rank</parametername>
</parameternamelist>
<parameterdescription>
<para>ranking information about the variable bounds (cf. <ref refid="classGecode_1_1Int_1_1GCC_1_1Rank" kindref="compound">Rank</ref>) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mu</parametername>
</parameternamelist>
<parameterdescription>
<para>permutation <formula id="139">$ \mu $</formula> such that <formula id="140">$ \forall i\in \{0, \dots, |x|-2\}: max(x_{\mu(i)}) \leq max(x_{\mu(i+1)})$</formula> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nu</parametername>
</parameternamelist>
<parameterdescription>
<para>permutation <formula id="141">$ \nu $</formula> such that <formula id="142">$ \forall i\in \{0, \dots, |x|-2\}: min(x_{\mu(i)}) \leq min(x_{\mu(i+1)})$</formula> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/gcc.hh" line="189" column="1" bodyfile="/usr/include/gecode/int/gcc/bnd.hpp" bodystart="401" bodyend="555"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1GCC_1_1Bnd_1ab37d21eca1f614f18dc10490a2e3e216" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Int::GCC::Bnd&lt; Card &gt;::Bnd</definition>
        <argsstring>(Home home, ViewArray&lt; IntView &gt; &amp;, ViewArray&lt; Card &gt; &amp;, bool, bool)</argsstring>
        <name>Bnd</name>
        <param>
          <type><ref refid="classGecode_1_1Home" kindref="compound">Home</ref></type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; <ref refid="classGecode_1_1Int_1_1IntView" kindref="compound">IntView</ref> &gt; &amp;</type>
          <defname>x0</defname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; Card &gt; &amp;</type>
          <defname>k0</defname>
        </param>
        <param>
          <type>bool</type>
          <defname>cf</defname>
        </param>
        <param>
          <type>bool</type>
          <defname>nolbc</defname>
        </param>
        <briefdescription>
<para>Constructor for posting. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/gcc.hh" line="192" column="1" bodyfile="/usr/include/gecode/int/gcc/bnd.hpp" bodystart="49" bodyend="55"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classGecode_1_1Int_1_1GCC_1_1Bnd_1a855f5beb8def94aa8802260b9c302657" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classGecode_1_1Actor" kindref="compound">Actor</ref> *</type>
        <definition>Actor * Gecode::Int::GCC::Bnd&lt; Card &gt;::copy</definition>
        <argsstring>(Space &amp;home, bool share)</argsstring>
        <name>copy</name>
        <reimplements refid="classGecode_1_1Actor_1a67b240e2810720846c3632c94cc9c99d">copy</reimplements>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>share</declname>
        </param>
        <briefdescription>
<para>Copy propagator during cloning. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/gcc.hh" line="195" column="1" bodyfile="/usr/include/gecode/int/gcc/bnd.hpp" bodystart="79" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1GCC_1_1Bnd_1a59afa8b134de3349b185a72b5ecf4f7d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classGecode_1_1PropCost" kindref="compound">PropCost</ref></type>
        <definition>PropCost Gecode::Int::GCC::Bnd&lt; Card &gt;::cost</definition>
        <argsstring>(const Space &amp;home, const ModEventDelta &amp;med) const </argsstring>
        <name>cost</name>
        <reimplements refid="classGecode_1_1Propagator_1a3de049f07a191fb956c9dbd4153efe75">cost</reimplements>
        <param>
          <type>const <ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceGecode_1a129e41c1d037528010d7b6706495a560" kindref="member">ModEventDelta</ref> &amp;</type>
          <declname>med</declname>
        </param>
        <briefdescription>
<para>Cost funtion. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/gcc.hh" line="197" column="1" bodyfile="/usr/include/gecode/int/gcc/bnd.hpp" bodystart="85" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1GCC_1_1Bnd_1a9a10f3515caa4cce2b1318a752989061" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>ExecStatus Gecode::Int::GCC::Bnd&lt; Card &gt;::propagate</definition>
        <argsstring>(Space &amp;home, const ModEventDelta &amp;med)</argsstring>
        <name>propagate</name>
        <reimplements refid="classGecode_1_1Propagator_1ad2dc98c1345222892592339948c6cde1">propagate</reimplements>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceGecode_1a129e41c1d037528010d7b6706495a560" kindref="member">ModEventDelta</ref> &amp;</type>
          <declname>med</declname>
        </param>
        <briefdescription>
<para>Perform propagation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/gcc.hh" line="199" column="1" bodyfile="/usr/include/gecode/int/gcc/bnd.hpp" bodystart="593" bodyend="800"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1GCC_1_1Bnd_1ab6ce4ec66051c1287ad7b02c2be42f80" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>size_t</type>
        <definition>forceinline size_t Gecode::Int::GCC::Bnd&lt; Card &gt;::dispose</definition>
        <argsstring>(Space &amp;home)</argsstring>
        <name>dispose</name>
        <reimplements refid="classGecode_1_1Actor_1a143253b3eceda40f36834e38c8ac05d9">dispose</reimplements>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <briefdescription>
<para>Destructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/gcc.hh" line="201" column="1" bodyfile="/usr/include/gecode/int/gcc/bnd.hpp" bodystart="70" bodyend="75"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classGecode_1_1Int_1_1GCC_1_1Bnd_1a55e1635c46b7dcd9a65a3ccbdeaecaee" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>ExecStatus Gecode::Int::GCC::Bnd&lt; Card &gt;::post</definition>
        <argsstring>(Home home, ViewArray&lt; IntView &gt; &amp;x, ViewArray&lt; Card &gt; &amp;k)</argsstring>
        <name>post</name>
        <param>
          <type><ref refid="classGecode_1_1Home" kindref="compound">Home</ref></type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; <ref refid="classGecode_1_1Int_1_1IntView" kindref="compound">IntView</ref> &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; Card &gt; &amp;</type>
          <declname>k</declname>
        </param>
        <briefdescription>
<para>Post propagator for views <emphasis>x</emphasis> and cardinalities <emphasis>k</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/gcc.hh" line="203" column="1" bodyfile="/usr/include/gecode/int/gcc/bnd.hpp" bodystart="805" bodyend="825"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Bounds consistent global cardinality propagator. </para>    </briefdescription>
    <detaileddescription>
<para>The algorithm is taken from: Claude-Guy Quimper, Peter van Beek, Alejandro López-Ortiz, Alexander Golynski, and Sayyed Bashir Sadjad. An Efficient Bounds Consistency Algorithm for the Global Cardinality Constraint, CP 2003, pages 600-614.</para><para>This implementation uses the code that is provided by Peter Van Beek: <ulink url="http://ai.uwaterloo.ca/~vanbeek/software/software.html">http://ai.uwaterloo.ca/~vanbeek/software/software.html</ulink> The code here has only been slightly modified to fit <ref refid="namespaceGecode" kindref="compound">Gecode</ref> (taking idempotent/non-idempotent propagation into account) and uses a more efficient layout of datastructures (keeping the number of different arrays small).</para><para>The <ref refid="classGecode_1_1Int_1_1GCC_1_1Bnd" kindref="compound">Bnd</ref> class is used to post the propagator and BndImp is the actual implementation taking shared variables into account.</para><para>Requires<programlisting><codeline><highlight class="preprocessor">#include<sp/>&lt;gecode/int/gcc.hh&gt;</highlight><highlight class="normal"><sp/></highlight></codeline>
</programlisting> </para>    </detaileddescription>
    <inheritancegraph>
      <node id="1151">
        <label>Gecode::Int::GCC::Bnd&lt; Card &gt;</label>
        <link refid="classGecode_1_1Int_1_1GCC_1_1Bnd"/>
        <childnode refid="1152" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1152">
        <label>Gecode::Propagator</label>
        <link refid="classGecode_1_1Propagator"/>
        <childnode refid="1153" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1153">
        <label>Gecode::Actor</label>
        <link refid="classGecode_1_1Actor"/>
        <childnode refid="1154" relation="private-inheritance">
        </childnode>
      </node>
      <node id="1154">
        <label>Gecode::ActorLink</label>
        <link refid="classGecode_1_1ActorLink"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1160">
        <label>Gecode::ViewArray&lt; Gecode::Int::IntView &gt;</label>
        <link refid="classGecode_1_1ViewArray"/>
      </node>
      <node id="1155">
        <label>Gecode::Int::GCC::Bnd&lt; Card &gt;</label>
        <link refid="classGecode_1_1Int_1_1GCC_1_1Bnd"/>
        <childnode refid="1156" relation="public-inheritance">
        </childnode>
        <childnode refid="1159" relation="usage">
          <edgelabel>k</edgelabel>
        </childnode>
        <childnode refid="1160" relation="usage">
          <edgelabel>x</edgelabel>
          <edgelabel>y</edgelabel>
        </childnode>
      </node>
      <node id="1159">
        <label>Gecode::ViewArray&lt; Card &gt;</label>
        <link refid="classGecode_1_1ViewArray"/>
      </node>
      <node id="1156">
        <label>Gecode::Propagator</label>
        <link refid="classGecode_1_1Propagator"/>
        <childnode refid="1157" relation="public-inheritance">
        </childnode>
        <childnode refid="1158" relation="usage">
          <edgelabel>advisors</edgelabel>
        </childnode>
      </node>
      <node id="1157">
        <label>Gecode::Actor</label>
        <link refid="classGecode_1_1Actor"/>
        <childnode refid="1158" relation="private-inheritance">
        </childnode>
      </node>
      <node id="1158">
        <label>Gecode::ActorLink</label>
        <link refid="classGecode_1_1ActorLink"/>
      </node>
    </collaborationgraph>
    <location file="/usr/include/gecode/int/gcc.hh" line="115" column="1" bodyfile="/usr/include/gecode/int/gcc.hh" bodystart="115" bodyend="205"/>
    <listofallmembers>
      <member refid="classGecode_1_1Propagator_1a55629f061a0fd8ecb2a4c41aa1568e28" prot="public" virt="virtual"><scope>Gecode::Int::GCC::Bnd</scope><name>advise</name></member>
      <member refid="classGecode_1_1Propagator_1afee33d8aed2bc9debee126f17b5015cf" prot="public" virt="non-virtual"><scope>Gecode::Int::GCC::Bnd</scope><name>advisors</name></member>
      <member refid="classGecode_1_1Propagator_1a593de773d2204f47ea365a99df2f75d0" prot="public" virt="non-virtual"><scope>Gecode::Int::GCC::Bnd</scope><name>afc</name></member>
      <member refid="classGecode_1_1Int_1_1GCC_1_1Bnd_1a6024398f86d20a2f893dd22d1656b5ec" prot="protected" virt="non-virtual"><scope>Gecode::Int::GCC::Bnd</scope><name>Bnd</name></member>
      <member refid="classGecode_1_1Int_1_1GCC_1_1Bnd_1ab37d21eca1f614f18dc10490a2e3e216" prot="protected" virt="non-virtual"><scope>Gecode::Int::GCC::Bnd</scope><name>Bnd</name></member>
      <member refid="classGecode_1_1Int_1_1GCC_1_1Bnd_1a7c68e813cd2a996ddd23c9d9d40cfdf2" prot="protected" virt="non-virtual"><scope>Gecode::Int::GCC::Bnd</scope><name>card_fixed</name></member>
      <member refid="classGecode_1_1ActorLink_1a8427f41a27a72b52ceb52d0fdad21063" prot="public" virt="non-virtual" ambiguityscope="Gecode::ActorLink::"><scope>Gecode::Int::GCC::Bnd</scope><name>cast</name></member>
      <member refid="classGecode_1_1ActorLink_1a464526456db41981f82a1193a8b4e569" prot="public" virt="non-virtual" ambiguityscope="Gecode::ActorLink::"><scope>Gecode::Int::GCC::Bnd</scope><name>cast</name></member>
      <member refid="classGecode_1_1Int_1_1GCC_1_1Bnd_1a855f5beb8def94aa8802260b9c302657" prot="public" virt="virtual"><scope>Gecode::Int::GCC::Bnd</scope><name>copy</name></member>
      <member refid="classGecode_1_1Int_1_1GCC_1_1Bnd_1a59afa8b134de3349b185a72b5ecf4f7d" prot="public" virt="virtual"><scope>Gecode::Int::GCC::Bnd</scope><name>cost</name></member>
      <member refid="classGecode_1_1Int_1_1GCC_1_1Bnd_1ab6ce4ec66051c1287ad7b02c2be42f80" prot="public" virt="virtual"><scope>Gecode::Int::GCC::Bnd</scope><name>dispose</name></member>
      <member refid="classGecode_1_1Propagator_1a3b286c7aec9843b60a531b495015b5f7" prot="protected" virt="non-virtual"><scope>Gecode::Int::GCC::Bnd</scope><name>fwd</name></member>
      <member refid="classGecode_1_1Int_1_1GCC_1_1Bnd_1a5f30d61c4a4e318f0564442bf1422297" prot="protected" virt="non-virtual"><scope>Gecode::Int::GCC::Bnd</scope><name>k</name></member>
      <member refid="classGecode_1_1Int_1_1GCC_1_1Bnd_1ac2487266ab16fb7424b2712a1071f2f6" prot="protected" virt="non-virtual"><scope>Gecode::Int::GCC::Bnd</scope><name>lbc</name></member>
      <member refid="classGecode_1_1Int_1_1GCC_1_1Bnd_1add98e2913704da28bcf72690e62589c1" prot="protected" virt="non-virtual"><scope>Gecode::Int::GCC::Bnd</scope><name>lps</name></member>
      <member refid="classGecode_1_1Propagator_1ae9dfa55e47e4ff8e0c8e4c2a6efdbfc0" prot="public" virt="non-virtual"><scope>Gecode::Int::GCC::Bnd</scope><name>med</name></member>
      <member refid="classGecode_1_1Propagator_1a4905db55af49af8f38558bdbcf5fd4a2" prot="public" virt="non-virtual"><scope>Gecode::Int::GCC::Bnd</scope><name>modeventdelta</name></member>
      <member refid="classGecode_1_1Actor_1a388f671145dcf906f81d22bde2dc0f3d" prot="public" virt="non-virtual"><scope>Gecode::Int::GCC::Bnd</scope><name>operator delete</name></member>
      <member refid="classGecode_1_1Actor_1ac28b9601b530076a1bda75834487f898" prot="public" virt="non-virtual"><scope>Gecode::Int::GCC::Bnd</scope><name>operator new</name></member>
      <member refid="classGecode_1_1Int_1_1GCC_1_1Bnd_1a55e1635c46b7dcd9a65a3ccbdeaecaee" prot="public" virt="non-virtual"><scope>Gecode::Int::GCC::Bnd</scope><name>post</name></member>
      <member refid="classGecode_1_1Int_1_1GCC_1_1Bnd_1a9a10f3515caa4cce2b1318a752989061" prot="public" virt="virtual"><scope>Gecode::Int::GCC::Bnd</scope><name>propagate</name></member>
      <member refid="classGecode_1_1Propagator_1a891f3e84cde2e8e60f8ad9340ad74b05" prot="protected" virt="non-virtual"><scope>Gecode::Int::GCC::Bnd</scope><name>Propagator</name></member>
      <member refid="classGecode_1_1Propagator_1afeaeed8dae67de4313858bd82fdae5d0" prot="protected" virt="non-virtual"><scope>Gecode::Int::GCC::Bnd</scope><name>Propagator</name></member>
      <member refid="classGecode_1_1Int_1_1GCC_1_1Bnd_1a6c0260840b03a2160327e48801b6f4b0" prot="protected" virt="non-virtual"><scope>Gecode::Int::GCC::Bnd</scope><name>pruneCards</name></member>
      <member refid="classGecode_1_1Propagator_1a1781b5b0df38c39dddca4b44c3a00530" prot="public" virt="non-virtual"><scope>Gecode::Int::GCC::Bnd</scope><name>size</name></member>
      <member refid="classGecode_1_1Int_1_1GCC_1_1Bnd_1a4fabbdb3b5d8018e20cdc85b67c15af3" prot="protected" virt="non-virtual"><scope>Gecode::Int::GCC::Bnd</scope><name>skip_lbc</name></member>
      <member refid="classGecode_1_1Int_1_1GCC_1_1Bnd_1a6dee04590fdea4b03784bc8787018d46" prot="protected" virt="non-virtual"><scope>Gecode::Int::GCC::Bnd</scope><name>ubc</name></member>
      <member refid="classGecode_1_1Int_1_1GCC_1_1Bnd_1a0183aa054c05da44592113fcc3ea05c6" prot="protected" virt="non-virtual"><scope>Gecode::Int::GCC::Bnd</scope><name>ups</name></member>
      <member refid="classGecode_1_1Int_1_1GCC_1_1Bnd_1aaf4cd021be4713507906e4aa4260dac3" prot="protected" virt="non-virtual"><scope>Gecode::Int::GCC::Bnd</scope><name>x</name></member>
      <member refid="classGecode_1_1Int_1_1GCC_1_1Bnd_1a91118d84a69ef5271265c4d2b56e4652" prot="protected" virt="non-virtual"><scope>Gecode::Int::GCC::Bnd</scope><name>y</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
