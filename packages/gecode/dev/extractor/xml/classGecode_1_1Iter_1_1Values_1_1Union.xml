<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classGecode_1_1Iter_1_1Values_1_1Union" kind="class" prot="public">
    <compoundname>Gecode::Iter::Values::Union</compoundname>
    <includes refid="values-union_8hpp" local="no">values-union.hpp</includes>
    <templateparamlist>
      <param>
        <type>class I</type>
      </param>
      <param>
        <type>class J</type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Constructors and initialization</header>
      <memberdef kind="function" id="classGecode_1_1Iter_1_1Values_1_1Union_1a05139e2ef9a6953799ca9102c1fe659b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Iter::Values::Union&lt; I, J &gt;::Union</definition>
        <argsstring>(void)</argsstring>
        <name>Union</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/iter/values-union.hpp" line="61" column="1" bodyfile="/usr/include/gecode/iter/values-union.hpp" bodystart="86" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Iter_1_1Values_1_1Union_1ad18c2c2b03167b1146af48abae4327ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Iter::Values::Union&lt; I, J &gt;::Union</definition>
        <argsstring>(I &amp;i, J &amp;j)</argsstring>
        <name>Union</name>
        <param>
          <type>I &amp;</type>
          <declname>i</declname>
        </param>
        <param>
          <type>J &amp;</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>Initialize with values from <emphasis>i</emphasis> and <emphasis>j</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/iter/values-union.hpp" line="63" column="1" bodyfile="/usr/include/gecode/iter/values-union.hpp" bodystart="119" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Iter_1_1Values_1_1Union_1aabba96db76cda0fb6cf18d10c464d901" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Gecode::Iter::Values::Union&lt; I, J &gt;::init</definition>
        <argsstring>(I &amp;i, J &amp;j)</argsstring>
        <name>init</name>
        <param>
          <type>I &amp;</type>
          <declname>i</declname>
        </param>
        <param>
          <type>J &amp;</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>Initialize with values from <emphasis>i</emphasis> and <emphasis>j</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/iter/values-union.hpp" line="65" column="1" bodyfile="/usr/include/gecode/iter/values-union.hpp" bodystart="112" bodyend="115"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Iteration control</header>
      <memberdef kind="function" id="classGecode_1_1Iter_1_1Values_1_1Union_1ae6efd4ebc45d600996a9b7faba5913e8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::Iter::Values::Union&lt; I, J &gt;::operator()</definition>
        <argsstring>(void) const </argsstring>
        <name>operator()</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test whether iterator is still at a value or done. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/iter/values-union.hpp" line="71" column="1" bodyfile="/usr/include/gecode/iter/values-union.hpp" bodystart="125" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Iter_1_1Values_1_1Union_1a0545ae544fb1bd15da1d83d29d484a5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Iter::Values::Union&lt; I, J &gt;::operator++</definition>
        <argsstring>(void)</argsstring>
        <name>operator++</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Move iterator to next value (if possible) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/iter/values-union.hpp" line="73" column="1" bodyfile="/usr/include/gecode/iter/values-union.hpp" bodystart="90" bodyend="108"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Value access</header>
      <memberdef kind="function" id="classGecode_1_1Iter_1_1Values_1_1Union_1a1a2109c6e4250acabc2b7b2c72b9a4fe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Iter::Values::Union&lt; I, J &gt;::val</definition>
        <argsstring>(void) const </argsstring>
        <name>val</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return current value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/iter/values-union.hpp" line="79" column="1" bodyfile="/usr/include/gecode/iter/values-union.hpp" bodystart="131" bodyend="133"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classGecode_1_1Iter_1_1Values_1_1Union_1af71bf0c1d4d67e4148ae30d845b7fca0" prot="protected" static="no" mutable="no">
        <type>I</type>
        <definition>I Gecode::Iter::Values::Union&lt; I, J &gt;::i</definition>
        <argsstring></argsstring>
        <name>i</name>
        <briefdescription>
<para>First iterator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/iter/values-union.hpp" line="50" column="1" bodyfile="/usr/include/gecode/iter/values-union.hpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Iter_1_1Values_1_1Union_1a73f7ade41113f7be3d3f595b3321bfe0" prot="protected" static="no" mutable="no">
        <type>J</type>
        <definition>J Gecode::Iter::Values::Union&lt; I, J &gt;::j</definition>
        <argsstring></argsstring>
        <name>j</name>
        <briefdescription>
<para>Second iterator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/iter/values-union.hpp" line="52" column="1" bodyfile="/usr/include/gecode/iter/values-union.hpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Iter_1_1Values_1_1Union_1adf284f7ee42fba2d829172afcb1e0201" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int Gecode::Iter::Values::Union&lt; I, J &gt;::v</definition>
        <argsstring></argsstring>
        <name>v</name>
        <briefdescription>
<para>Current value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/iter/values-union.hpp" line="54" column="1" bodyfile="/usr/include/gecode/iter/values-union.hpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Iter_1_1Values_1_1Union_1a77b73c94008d5227218176605df8d6c5" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Gecode::Iter::Values::Union&lt; I, J &gt;::done</definition>
        <argsstring></argsstring>
        <name>done</name>
        <briefdescription>
<para>Whether iterator is done. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/iter/values-union.hpp" line="56" column="1" bodyfile="/usr/include/gecode/iter/values-union.hpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Value iterator for the union of two value iterators. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="7195">
        <label>I</label>
      </node>
      <node id="7196">
        <label>J</label>
      </node>
      <node id="7194">
        <label>Gecode::Iter::Values::Union&lt; I, J &gt;</label>
        <link refid="classGecode_1_1Iter_1_1Values_1_1Union"/>
        <childnode refid="7195" relation="usage">
          <edgelabel>i</edgelabel>
        </childnode>
        <childnode refid="7196" relation="usage">
          <edgelabel>j</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/usr/include/gecode/iter/values-union.hpp" line="47" column="1" bodyfile="/usr/include/gecode/iter/values-union.hpp" bodystart="47" bodyend="81"/>
    <listofallmembers>
      <member refid="classGecode_1_1Iter_1_1Values_1_1Union_1a77b73c94008d5227218176605df8d6c5" prot="protected" virt="non-virtual"><scope>Gecode::Iter::Values::Union</scope><name>done</name></member>
      <member refid="classGecode_1_1Iter_1_1Values_1_1Union_1af71bf0c1d4d67e4148ae30d845b7fca0" prot="protected" virt="non-virtual"><scope>Gecode::Iter::Values::Union</scope><name>i</name></member>
      <member refid="classGecode_1_1Iter_1_1Values_1_1Union_1aabba96db76cda0fb6cf18d10c464d901" prot="public" virt="non-virtual"><scope>Gecode::Iter::Values::Union</scope><name>init</name></member>
      <member refid="classGecode_1_1Iter_1_1Values_1_1Union_1a73f7ade41113f7be3d3f595b3321bfe0" prot="protected" virt="non-virtual"><scope>Gecode::Iter::Values::Union</scope><name>j</name></member>
      <member refid="classGecode_1_1Iter_1_1Values_1_1Union_1ae6efd4ebc45d600996a9b7faba5913e8" prot="public" virt="non-virtual"><scope>Gecode::Iter::Values::Union</scope><name>operator()</name></member>
      <member refid="classGecode_1_1Iter_1_1Values_1_1Union_1a0545ae544fb1bd15da1d83d29d484a5a" prot="public" virt="non-virtual"><scope>Gecode::Iter::Values::Union</scope><name>operator++</name></member>
      <member refid="classGecode_1_1Iter_1_1Values_1_1Union_1a05139e2ef9a6953799ca9102c1fe659b" prot="public" virt="non-virtual"><scope>Gecode::Iter::Values::Union</scope><name>Union</name></member>
      <member refid="classGecode_1_1Iter_1_1Values_1_1Union_1ad18c2c2b03167b1146af48abae4327ce" prot="public" virt="non-virtual"><scope>Gecode::Iter::Values::Union</scope><name>Union</name></member>
      <member refid="classGecode_1_1Iter_1_1Values_1_1Union_1adf284f7ee42fba2d829172afcb1e0201" prot="protected" virt="non-virtual"><scope>Gecode::Iter::Values::Union</scope><name>v</name></member>
      <member refid="classGecode_1_1Iter_1_1Values_1_1Union_1a1a2109c6e4250acabc2b7b2c72b9a4fe" prot="public" virt="non-virtual"><scope>Gecode::Iter::Values::Union</scope><name>val</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
