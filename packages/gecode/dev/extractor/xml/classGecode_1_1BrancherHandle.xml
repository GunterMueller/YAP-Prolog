<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classGecode_1_1BrancherHandle" kind="class" prot="public">
    <compoundname>Gecode::BrancherHandle</compoundname>
    <includes refid="core_8hpp" local="no">core.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classGecode_1_1BrancherHandle_1a57736ad3cb19ede458243d177c635709" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int Gecode::BrancherHandle::_id</definition>
        <argsstring></argsstring>
        <name>_id</name>
        <briefdescription>
<para>Id of the brancher. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/core.hpp" line="1160" column="1" bodyfile="/usr/include/gecode/kernel/core.hpp" bodystart="1160" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classGecode_1_1BrancherHandle_1a2d7786004c9f47c3618e9a9052a98e55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::BrancherHandle::BrancherHandle</definition>
        <argsstring>(void)</argsstring>
        <name>BrancherHandle</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Create handle as unitialized. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/core.hpp" line="1163" column="1" bodyfile="/usr/include/gecode/kernel/core.hpp" bodystart="3003" bodyend="3004"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1BrancherHandle_1ae997b060dc39126306bd9fa72e982548" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::BrancherHandle::BrancherHandle</definition>
        <argsstring>(const Brancher &amp;b)</argsstring>
        <name>BrancherHandle</name>
        <param>
          <type>const <ref refid="classGecode_1_1Brancher" kindref="compound">Brancher</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Create handle for brancher <emphasis>b</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/core.hpp" line="1165" column="1" bodyfile="/usr/include/gecode/kernel/core.hpp" bodystart="3006" bodyend="3007"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1BrancherHandle_1ac0d274435ebc859326746c6152d1861e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::BrancherHandle::update</definition>
        <argsstring>(Space &amp;home, bool share, BrancherHandle &amp;bh)</argsstring>
        <name>update</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>share</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1BrancherHandle" kindref="compound">BrancherHandle</ref> &amp;</type>
          <declname>bh</declname>
        </param>
        <briefdescription>
<para>Update during cloning. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/core.hpp" line="1167" column="1" bodyfile="/usr/include/gecode/kernel/core.hpp" bodystart="3009" bodyend="3011"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1BrancherHandle_1ad09e9f930f3de06a4f6bee28fa90583b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>forceinline unsigned int Gecode::BrancherHandle::id</definition>
        <argsstring>(void) const </argsstring>
        <name>id</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return brancher id. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/core.hpp" line="1169" column="1" bodyfile="/usr/include/gecode/kernel/core.hpp" bodystart="3013" bodyend="3015"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1BrancherHandle_1ae7306e38737c5c65083153c536980e90" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::BrancherHandle::operator()</definition>
        <argsstring>(const Space &amp;home) const </argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <briefdescription>
<para>Check whether brancher is still active. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/core.hpp" line="1171" column="1" bodyfile="/usr/include/gecode/kernel/core.hpp" bodystart="3017" bodyend="3019"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1BrancherHandle_1aa47df19cebc06dee9be3d71fcbeb59a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::BrancherHandle::kill</definition>
        <argsstring>(Space &amp;home)</argsstring>
        <name>kill</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <briefdescription>
<para>Kill the brancher. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/core.hpp" line="1173" column="1" bodyfile="/usr/include/gecode/kernel/core.hpp" bodystart="3021" bodyend="3023"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Handle for brancher. </para>    </briefdescription>
    <detaileddescription>
<para>Supports few operations on a brancher, in particular to kill a brancher. </para>    </detaileddescription>
    <location file="/usr/include/gecode/kernel/core.hpp" line="1157" column="1" bodyfile="/usr/include/gecode/kernel/core.hpp" bodystart="1157" bodyend="1174"/>
    <listofallmembers>
      <member refid="classGecode_1_1BrancherHandle_1a57736ad3cb19ede458243d177c635709" prot="private" virt="non-virtual"><scope>Gecode::BrancherHandle</scope><name>_id</name></member>
      <member refid="classGecode_1_1BrancherHandle_1a2d7786004c9f47c3618e9a9052a98e55" prot="public" virt="non-virtual"><scope>Gecode::BrancherHandle</scope><name>BrancherHandle</name></member>
      <member refid="classGecode_1_1BrancherHandle_1ae997b060dc39126306bd9fa72e982548" prot="public" virt="non-virtual"><scope>Gecode::BrancherHandle</scope><name>BrancherHandle</name></member>
      <member refid="classGecode_1_1BrancherHandle_1ad09e9f930f3de06a4f6bee28fa90583b" prot="public" virt="non-virtual"><scope>Gecode::BrancherHandle</scope><name>id</name></member>
      <member refid="classGecode_1_1BrancherHandle_1aa47df19cebc06dee9be3d71fcbeb59a1" prot="public" virt="non-virtual"><scope>Gecode::BrancherHandle</scope><name>kill</name></member>
      <member refid="classGecode_1_1BrancherHandle_1ae7306e38737c5c65083153c536980e90" prot="public" virt="non-virtual"><scope>Gecode::BrancherHandle</scope><name>operator()</name></member>
      <member refid="classGecode_1_1BrancherHandle_1ac0d274435ebc859326746c6152d1861e" prot="public" virt="non-virtual"><scope>Gecode::BrancherHandle</scope><name>update</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
