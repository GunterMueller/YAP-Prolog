<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="bugs_8hpp" kind="file">
    <compoundname>bugs.hpp</compoundname>
    <includes refid="third-party_2boost_2config_8hpp" local="no">gecode/third-party/boost/config.hpp</includes>
    <includedby refid="arith_8hpp" local="no">/usr/include/gecode/third-party/boost/numeric/interval/arith.hpp</includedby>
    <includedby refid="arith2_8hpp" local="no">/usr/include/gecode/third-party/boost/numeric/interval/arith2.hpp</includedby>
    <includedby refid="division_8hpp" local="no">/usr/include/gecode/third-party/boost/numeric/interval/detail/division.hpp</includedby>
    <includedby refid="rounded__arith_8hpp" local="no">/usr/include/gecode/third-party/boost/numeric/interval/rounded_arith.hpp</includedby>
    <includedby refid="rounded__transc_8hpp" local="no">/usr/include/gecode/third-party/boost/numeric/interval/rounded_transc.hpp</includedby>
    <includedby refid="transc_8hpp" local="no">/usr/include/gecode/third-party/boost/numeric/interval/transc.hpp</includedby>
    <includedby refid="numeric_2interval_2utility_8hpp" local="no">/usr/include/gecode/third-party/boost/numeric/interval/utility.hpp</includedby>
    <incdepgraph>
      <node id="34563">
        <label>gecode/third-party/boost/config/suffix.hpp</label>
        <link refid="suffix_8hpp_source"/>
        <childnode refid="34564" relation="include">
        </childnode>
      </node>
      <node id="34559">
        <label>/usr/include/gecode/third-party/boost/numeric/interval/detail/bugs.hpp</label>
        <link refid="bugs.hpp"/>
        <childnode refid="34560" relation="include">
        </childnode>
      </node>
      <node id="34564">
        <label>limits.h</label>
      </node>
      <node id="34562">
        <label>gecode/third-party/boost/config/select_platform_config.hpp</label>
        <link refid="select__platform__config_8hpp_source"/>
      </node>
      <node id="34561">
        <label>gecode/third-party/boost/config/select_compiler_config.hpp</label>
        <link refid="select__compiler__config_8hpp_source"/>
      </node>
      <node id="34560">
        <label>gecode/third-party/boost/config.hpp</label>
        <link refid="third-party_2boost_2config_8hpp_source"/>
        <childnode refid="34561" relation="include">
        </childnode>
        <childnode refid="34562" relation="include">
        </childnode>
        <childnode refid="34563" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="34578">
        <label>/usr/include/gecode/third-party/boost/numeric/interval/rounded_transc.hpp</label>
        <link refid="rounded__transc_8hpp_source"/>
        <childnode refid="34569" relation="include">
        </childnode>
      </node>
      <node id="34570">
        <label>/usr/include/gecode/float.hh</label>
        <link refid="float_8hh_source"/>
        <childnode refid="34571" relation="include">
        </childnode>
        <childnode refid="34572" relation="include">
        </childnode>
        <childnode refid="34573" relation="include">
        </childnode>
        <childnode refid="34574" relation="include">
        </childnode>
      </node>
      <node id="34565">
        <label>/usr/include/gecode/third-party/boost/numeric/interval/detail/bugs.hpp</label>
        <link refid="bugs.hpp"/>
        <childnode refid="34566" relation="include">
        </childnode>
        <childnode refid="34567" relation="include">
        </childnode>
        <childnode refid="34575" relation="include">
        </childnode>
        <childnode refid="34576" relation="include">
        </childnode>
        <childnode refid="34578" relation="include">
        </childnode>
        <childnode refid="34568" relation="include">
        </childnode>
        <childnode refid="34579" relation="include">
        </childnode>
      </node>
      <node id="34567">
        <label>/usr/include/gecode/third-party/boost/numeric/interval/arith2.hpp</label>
        <link refid="arith2_8hpp_source"/>
        <childnode refid="34568" relation="include">
        </childnode>
        <childnode refid="34569" relation="include">
        </childnode>
      </node>
      <node id="34580">
        <label>/usr/include/gecode/third-party/boost/numeric/interval/compare/set.hpp</label>
        <link refid="third-party_2boost_2numeric_2interval_2compare_2set_8hpp_source"/>
        <childnode refid="34581" relation="include">
        </childnode>
      </node>
      <node id="34569">
        <label>/usr/include/gecode/third-party/boost/numeric/interval.hpp</label>
        <link refid="interval_8hpp_source"/>
        <childnode refid="34570" relation="include">
        </childnode>
      </node>
      <node id="34574">
        <label>/usr/include/gecode/float/rel.hh</label>
        <link refid="float_2rel_8hh_source"/>
        <childnode refid="34571" relation="include">
        </childnode>
      </node>
      <node id="34571">
        <label>/usr/include/gecode/float/arithmetic.hh</label>
        <link refid="float_2arithmetic_8hh_source"/>
      </node>
      <node id="34566">
        <label>/usr/include/gecode/third-party/boost/numeric/interval/arith.hpp</label>
        <link refid="arith_8hpp_source"/>
        <childnode refid="34567" relation="include">
        </childnode>
        <childnode refid="34568" relation="include">
        </childnode>
        <childnode refid="34569" relation="include">
        </childnode>
      </node>
      <node id="34577">
        <label>/usr/include/gecode/third-party/boost/numeric/interval/hw_rounding.hpp</label>
        <link refid="hw__rounding_8hpp_source"/>
        <childnode refid="34569" relation="include">
        </childnode>
      </node>
      <node id="34573">
        <label>/usr/include/gecode/float/linear.hh</label>
        <link refid="float_2linear_8hh_source"/>
      </node>
      <node id="34579">
        <label>/usr/include/gecode/third-party/boost/numeric/interval/utility.hpp</label>
        <link refid="numeric_2interval_2utility_8hpp_source"/>
        <childnode refid="34580" relation="include">
        </childnode>
        <childnode refid="34569" relation="include">
        </childnode>
      </node>
      <node id="34572">
        <label>/usr/include/gecode/float/branch.hh</label>
        <link refid="float_2branch_8hh_source"/>
      </node>
      <node id="34568">
        <label>/usr/include/gecode/third-party/boost/numeric/interval/transc.hpp</label>
        <link refid="transc_8hpp_source"/>
        <childnode refid="34569" relation="include">
        </childnode>
      </node>
      <node id="34575">
        <label>/usr/include/gecode/third-party/boost/numeric/interval/detail/division.hpp</label>
        <link refid="division_8hpp_source"/>
        <childnode refid="34566" relation="include">
        </childnode>
        <childnode refid="34567" relation="include">
        </childnode>
      </node>
      <node id="34576">
        <label>/usr/include/gecode/third-party/boost/numeric/interval/rounded_arith.hpp</label>
        <link refid="rounded__arith_8hpp_source"/>
        <childnode refid="34575" relation="include">
        </childnode>
        <childnode refid="34577" relation="include">
        </childnode>
        <childnode refid="34569" relation="include">
        </childnode>
      </node>
      <node id="34581">
        <label>/usr/include/gecode/third-party/boost/numeric/interval/compare.hpp</label>
        <link refid="compare_8hpp_source"/>
        <childnode refid="34569" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="bugs_8hpp_1aef5847b14c6e6a61c53b66ab85a36758" prot="public" static="no">
        <name>BOOST_NUMERIC_INTERVAL_using_math</name>
        <param><defname>a</defname></param>
        <initializer>using std::a</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/numeric/interval/detail/bugs.hpp" line="26" column="12" bodyfile="/usr/include/gecode/third-party/boost/numeric/interval/detail/bugs.hpp" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bugs_8hpp_1ade8f6e49c7b7b9d27bddfa26951780ae" prot="public" static="no">
        <name>BOOST_NUMERIC_INTERVAL_using_max</name>
        <param><defname>a</defname></param>
        <initializer>using std::a</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/numeric/interval/detail/bugs.hpp" line="41" column="12" bodyfile="/usr/include/gecode/third-party/boost/numeric/interval/detail/bugs.hpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bugs_8hpp_1a2c27b744fb38404ef1837c3c3dad5249" prot="public" static="no">
        <name>BOOST_NUMERIC_INTERVAL_using_ahyp</name>
        <param><defname>a</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/numeric/interval/detail/bugs.hpp" line="45" column="11" bodyfile="/usr/include/gecode/third-party/boost/numeric/interval/detail/bugs.hpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>Boost<sp/>interval/detail/bugs.hpp<sp/>file</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2000<sp/>Jens<sp/>Maurer</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2002<sp/>Hervé<sp/>Brönnimann,<sp/>Guillaume<sp/>Melquiond,<sp/>Sylvain<sp/>Pion</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Distributed<sp/>under<sp/>the<sp/>Boost<sp/>Software<sp/>License,<sp/>Version<sp/>1.0.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>(See<sp/>accompanying<sp/>file<sp/>LICENSE_1_0.txt<sp/>or</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>copy<sp/>at<sp/>http://www.boost.org/LICENSE_1_0.txt)</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>BOOST_NUMERIC_INTERVAL_DETAIL_BUGS</highlight></codeline>
<codeline lineno="12"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>BOOST_NUMERIC_INTERVAL_DETAIL_BUGS</highlight></codeline>
<codeline lineno="13"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gecode/third-party/boost/config.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__GLIBC__)<sp/>&amp;&amp;<sp/>(defined(__USE_MISC)<sp/>||<sp/>defined(__USE_XOPEN_EXTENDED)<sp/>||<sp/>defined(__USE_ISOC99))<sp/>&amp;&amp;<sp/>!defined(__ICC)</highlight></codeline>
<codeline lineno="17"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>BOOST_HAS_INV_HYPERBOLIC</highlight></codeline>
<codeline lineno="18"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="19"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BOOST_NO_STDC_NAMESPACE</highlight></codeline>
<codeline lineno="21"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>BOOST_NUMERIC_INTERVAL_using_math(a)<sp/>using<sp/>::a</highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>ifdef<sp/>BOOST_HAS_INV_HYPERBOLIC</highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>BOOST_NUMERIC_INTERVAL_using_ahyp(a)<sp/>using<sp/>::a</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight></codeline>
<codeline lineno="25"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="26"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>BOOST_NUMERIC_INTERVAL_using_math(a)<sp/>using<sp/>std::a</highlight></codeline>
<codeline lineno="27"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>if<sp/>defined(BOOST_HAS_INV_HYPERBOLIC)</highlight></codeline>
<codeline lineno="28"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>if<sp/>defined(__GLIBCPP__)<sp/>||<sp/>defined(__GLIBCXX__)</highlight></codeline>
<codeline lineno="29"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>BOOST_NUMERIC_INTERVAL_using_ahyp(a)<sp/>using<sp/>::a</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>else</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>BOOST_NUMERIC_INTERVAL_using_ahyp(a)<sp/>using<sp/>std::a</highlight></codeline>
<codeline lineno="32"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight></codeline>
<codeline lineno="34"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__COMO__)<sp/>||<sp/>defined(BOOST_INTEL)</highlight></codeline>
<codeline lineno="37"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>BOOST_NUMERIC_INTERVAL_using_max(a)<sp/>using<sp/>std::a</highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#elif<sp/>defined(BOOST_NO_STDC_NAMESPACE)</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>BOOST_NUMERIC_INTERVAL_using_max(a)<sp/>using<sp/>::a</highlight></codeline>
<codeline lineno="40"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="41"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>BOOST_NUMERIC_INTERVAL_using_max(a)<sp/>using<sp/>std::a</highlight></codeline>
<codeline lineno="42"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="43"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>BOOST_NUMERIC_INTERVAL_using_ahyp</highlight></codeline>
<codeline lineno="45"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>BOOST_NUMERIC_INTERVAL_using_ahyp(a)</highlight></codeline>
<codeline lineno="46"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="47"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__GNUC__)<sp/>&amp;&amp;<sp/>(__GNUC__<sp/>&lt;=<sp/>2)</highlight></codeline>
<codeline lineno="49"><highlight class="preprocessor"></highlight><highlight class="comment">//<sp/>cf<sp/>PR<sp/>c++/1981<sp/>for<sp/>a<sp/>description<sp/>of<sp/>the<sp/>bug</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gecode/third-party/boost/config/no_tr1/cmath.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">boost<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">numeric<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="group__TaskModelFloatArith_1ga121700708772a60191be6256c3c0d151" kindref="member">std::min</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="group__TaskModelFloatArith_1ga958cb25ae9754d6cc35c7c6e34ebc1e3" kindref="member">std::max</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="group__TaskModelFloatArith_1ga64708360c9e893d05c85e2b646c917df" kindref="member">std::sqrt</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::exp;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::log;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::cos;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::tan;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::asin;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::acos;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::atan;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::ceil;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::floor;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::sinh;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::cosh;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::tanh;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>undef<sp/>BOOST_NUMERIC_INTERVAL_using_max</highlight></codeline>
<codeline lineno="70"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>undef<sp/>BOOST_NUMERIC_INTERVAL_using_math</highlight></codeline>
<codeline lineno="71"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>define<sp/>BOOST_NUMERIC_INTERVAL_using_max(a)</highlight></codeline>
<codeline lineno="72"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>define<sp/>BOOST_NUMERIC_INTERVAL_using_math(a)</highlight></codeline>
<codeline lineno="73"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>undef<sp/>BOOST_NUMERIC_INTERVAL_using_ahyp</highlight></codeline>
<codeline lineno="74"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>define<sp/>BOOST_NUMERIC_INTERVAL_using_ahyp(a)</highlight></codeline>
<codeline lineno="75"><highlight class="preprocessor"></highlight><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>numeric</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>boost</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="78"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>BOOST_NUMERIC_INTERVAL_DETAIL_BUGS</highlight></codeline>
    </programlisting>
    <location file="/usr/include/gecode/third-party/boost/numeric/interval/detail/bugs.hpp"/>
  </compounddef>
</doxygen>
