<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classGecode_1_1ArgArrayBase" kind="class" prot="public">
    <compoundname>Gecode::ArgArrayBase</compoundname>
    <derivedcompoundref refid="classGecode_1_1ArgArray" prot="public" virt="non-virtual">Gecode::ArgArray&lt; SymmetryHandle &gt;</derivedcompoundref>
    <derivedcompoundref refid="classGecode_1_1ArgArray" prot="public" virt="non-virtual">Gecode::ArgArray&lt; class &gt;</derivedcompoundref>
    <derivedcompoundref refid="classGecode_1_1PrimArgArray" prot="public" virt="non-virtual">Gecode::PrimArgArray&lt; class &gt;</derivedcompoundref>
    <derivedcompoundref refid="classGecode_1_1PrimArgArray" prot="public" virt="non-virtual">Gecode::PrimArgArray&lt; FloatVal &gt;</derivedcompoundref>
    <derivedcompoundref refid="classGecode_1_1PrimArgArray" prot="public" virt="non-virtual">Gecode::PrimArgArray&lt; int &gt;</derivedcompoundref>
    <includes refid="kernel_2array_8hpp" local="no">array.hpp</includes>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Associated types</header>
      <memberdef kind="typedef" id="classGecode_1_1ArgArrayBase_1a56a36e2a609ea57109c79d43890d62ef" prot="public" static="no">
        <type>T</type>
        <definition>typedef T Gecode::ArgArrayBase&lt; T &gt;::value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
<para>Type of the view stored in this array. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/array.hpp" line="560" column="1" bodyfile="/usr/include/gecode/kernel/array.hpp" bodystart="560" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classGecode_1_1ArgArrayBase_1ad0298b4768b0e53ce8ef13f80789ac18" prot="public" static="no">
        <type>T &amp;</type>
        <definition>typedef T&amp; Gecode::ArgArrayBase&lt; T &gt;::reference</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
<para>Type of a reference to the value type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/array.hpp" line="562" column="1" bodyfile="/usr/include/gecode/kernel/array.hpp" bodystart="562" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classGecode_1_1ArgArrayBase_1a097be827923b3a47bacd8918ec73ca6b" prot="public" static="no">
        <type>const T &amp;</type>
        <definition>typedef const T&amp; Gecode::ArgArrayBase&lt; T &gt;::const_reference</definition>
        <argsstring></argsstring>
        <name>const_reference</name>
        <briefdescription>
<para>Type of a constant reference to the value type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/array.hpp" line="564" column="1" bodyfile="/usr/include/gecode/kernel/array.hpp" bodystart="564" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classGecode_1_1ArgArrayBase_1ab3bc773d03a61dd0c04283e749ec0ed2" prot="public" static="no">
        <type>T *</type>
        <definition>typedef T* Gecode::ArgArrayBase&lt; T &gt;::pointer</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <briefdescription>
<para>Type of a pointer to the value type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/array.hpp" line="566" column="1" bodyfile="/usr/include/gecode/kernel/array.hpp" bodystart="566" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classGecode_1_1ArgArrayBase_1a4c85c82056ab8fbf2772417329d3e802" prot="public" static="no">
        <type>const T *</type>
        <definition>typedef const T* Gecode::ArgArrayBase&lt; T &gt;::const_pointer</definition>
        <argsstring></argsstring>
        <name>const_pointer</name>
        <briefdescription>
<para>Type of a read-only pointer to the value type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/array.hpp" line="568" column="1" bodyfile="/usr/include/gecode/kernel/array.hpp" bodystart="568" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classGecode_1_1ArgArrayBase_1aa687fceda8a4ae2a64fb5a7bb649a5a7" prot="public" static="no">
        <type>T *</type>
        <definition>typedef T* Gecode::ArgArrayBase&lt; T &gt;::iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
<para>Type of the iterator used to iterate through this array&apos;s elements. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/array.hpp" line="570" column="1" bodyfile="/usr/include/gecode/kernel/array.hpp" bodystart="570" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classGecode_1_1ArgArrayBase_1ad83ae4a7fc5863035e6fe5795b843768" prot="public" static="no">
        <type>const T *</type>
        <definition>typedef const T* Gecode::ArgArrayBase&lt; T &gt;::const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
<para>Type of the iterator used to iterate read-only through this array&apos;s elements. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/array.hpp" line="572" column="1" bodyfile="/usr/include/gecode/kernel/array.hpp" bodystart="572" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classGecode_1_1ArgArrayBase_1a77d09762f3b2d7c017a1c66530c30ba5" prot="public" static="no">
        <type>std::reverse_iterator&lt; T * &gt;</type>
        <definition>typedef std::reverse_iterator&lt;T*&gt; Gecode::ArgArrayBase&lt; T &gt;::reverse_iterator</definition>
        <argsstring></argsstring>
        <name>reverse_iterator</name>
        <briefdescription>
<para>Type of the iterator used to iterate backwards through this array&apos;s elements. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/array.hpp" line="574" column="1" bodyfile="/usr/include/gecode/kernel/array.hpp" bodystart="574" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classGecode_1_1ArgArrayBase_1af2029facbd7b8dcfef6573d43444cde2" prot="public" static="no">
        <type>std::reverse_iterator&lt; const T * &gt;</type>
        <definition>typedef std::reverse_iterator&lt;const T*&gt; Gecode::ArgArrayBase&lt; T &gt;::const_reverse_iterator</definition>
        <argsstring></argsstring>
        <name>const_reverse_iterator</name>
        <briefdescription>
<para>Type of the iterator used to iterate backwards and read-only through this array&apos;s elements. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/array.hpp" line="576" column="1" bodyfile="/usr/include/gecode/kernel/array.hpp" bodystart="576" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Constructors and initialization</header>
      <memberdef kind="function" id="classGecode_1_1ArgArrayBase_1aaf88593537f41f862b91120c4c6ee104" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::ArgArrayBase&lt; T &gt;::ArgArrayBase</definition>
        <argsstring>(void)</argsstring>
        <name>ArgArrayBase</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Allocate empty array. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/array.hpp" line="582" column="1" bodyfile="/usr/include/gecode/kernel/array.hpp" bodystart="1616" bodyend="1617"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1ArgArrayBase_1add5bd614e97033a43636821aeab64ce2" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::ArgArrayBase&lt; T &gt;::ArgArrayBase</definition>
        <argsstring>(int n)</argsstring>
        <name>ArgArrayBase</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Allocate array with <emphasis>n</emphasis> elements. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/array.hpp" line="584" column="1" bodyfile="/usr/include/gecode/kernel/array.hpp" bodystart="1621" bodyend="1622"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1ArgArrayBase_1ae30a8e33f63548bf1e8f52bc772686db" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Gecode::ArgArrayBase&lt; T &gt;::ArgArrayBase</definition>
        <argsstring>(const ArgArrayBase&lt; T &gt; &amp;a)</argsstring>
        <name>ArgArrayBase</name>
        <param>
          <type>const <ref refid="classGecode_1_1ArgArrayBase" kindref="compound">ArgArrayBase</ref>&lt; T &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>Initialize from argument array <emphasis>a</emphasis> (copy elements) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/array.hpp" line="586" column="1" bodyfile="/usr/include/gecode/kernel/array.hpp" bodystart="1626" bodyend="1629"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1ArgArrayBase_1a7a164914ff7e98d30c7682772c28c755" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classGecode_1_1ArgArrayBase" kindref="compound">ArgArrayBase</ref>&lt; T &gt; &amp;</type>
        <definition>forceinline const ArgArrayBase&lt; T &gt; &amp; Gecode::ArgArrayBase&lt; T &gt;::operator=</definition>
        <argsstring>(const ArgArrayBase&lt; T &gt; &amp;a)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classGecode_1_1ArgArrayBase" kindref="compound">ArgArrayBase</ref>&lt; T &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>Initialize from view array <emphasis>a</emphasis> (copy elements) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/array.hpp" line="588" column="1" bodyfile="/usr/include/gecode/kernel/array.hpp" bodystart="1648" bodyend="1658"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1ArgArrayBase_1ab0a3399a6a484dc36cd3d306a2b8e199" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Gecode::ArgArrayBase&lt; T &gt;::ArgArrayBase</definition>
        <argsstring>(const std::vector&lt; T &gt; &amp;a)</argsstring>
        <name>ArgArrayBase</name>
        <param>
          <type>const std::vector&lt; T &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>Initialize from vector <emphasis>a</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/array.hpp" line="590" column="1" bodyfile="/usr/include/gecode/kernel/array.hpp" bodystart="1633" bodyend="1637"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1ArgArrayBase_1a9e7b606b9971b3344e692a60ac13b223" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class InputIterator</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>Gecode::ArgArrayBase&lt; T &gt;::ArgArrayBase</definition>
        <argsstring>(InputIterator first, InputIterator last)</argsstring>
        <name>ArgArrayBase</name>
        <param>
          <type>InputIterator</type>
          <declname>first</declname>
        </param>
        <param>
          <type>InputIterator</type>
          <declname>last</declname>
        </param>
        <briefdescription>
<para>Initialize from InputIterator <emphasis>begin</emphasis> and <emphasis>end</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/array.hpp" line="593" column="1" bodyfile="/usr/include/gecode/kernel/array.hpp" bodystart="1758" bodyend="1764"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Array size</header>
      <memberdef kind="function" id="classGecode_1_1ArgArrayBase_1a5cd6f91808d5560f28f05b75be65ab1d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::ArgArrayBase&lt; T &gt;::size</definition>
        <argsstring>(void) const </argsstring>
        <name>size</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return size of array (number of elements) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/array.hpp" line="599" column="1" bodyfile="/usr/include/gecode/kernel/array.hpp" bodystart="1662" bodyend="1664"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Array elements</header>
      <memberdef kind="function" id="classGecode_1_1ArgArrayBase_1a3374c5468b4a8d6fc80c1b7059b62b1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T &amp;</type>
        <definition>forceinline T &amp; Gecode::ArgArrayBase&lt; T &gt;::operator[]</definition>
        <argsstring>(int i)</argsstring>
        <name>operator[]</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Return element at position <emphasis>i</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/array.hpp" line="605" column="1" bodyfile="/usr/include/gecode/kernel/array.hpp" bodystart="1668" bodyend="1671"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1ArgArrayBase_1a7d93ce4e7a605a9a450326683831d54a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const T &amp;</type>
        <definition>forceinline const T &amp; Gecode::ArgArrayBase&lt; T &gt;::operator[]</definition>
        <argsstring>(int i) const </argsstring>
        <name>operator[]</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Return element at position <emphasis>i</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/array.hpp" line="607" column="1" bodyfile="/usr/include/gecode/kernel/array.hpp" bodystart="1675" bodyend="1678"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Array iteration</header>
      <memberdef kind="function" id="classGecode_1_1ArgArrayBase_1aa113576241a65d86140bc3419d96b02c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGecode_1_1ArgArrayBase_1aa687fceda8a4ae2a64fb5a7bb649a5a7" kindref="member">iterator</ref></type>
        <definition>forceinline ArgArrayBase&lt; T &gt;::iterator Gecode::ArgArrayBase&lt; T &gt;::begin</definition>
        <argsstring>(void)</argsstring>
        <name>begin</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return an iterator at the beginning of the array. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/array.hpp" line="613" column="1" bodyfile="/usr/include/gecode/kernel/array.hpp" bodystart="1682" bodyend="1684"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1ArgArrayBase_1aa56cc30444aa0a1e206475eb2201a281" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGecode_1_1ArgArrayBase_1ad83ae4a7fc5863035e6fe5795b843768" kindref="member">const_iterator</ref></type>
        <definition>forceinline ArgArrayBase&lt; T &gt;::const_iterator Gecode::ArgArrayBase&lt; T &gt;::begin</definition>
        <argsstring>(void) const </argsstring>
        <name>begin</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return a read-only iterator at the beginning of the array. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/array.hpp" line="615" column="1" bodyfile="/usr/include/gecode/kernel/array.hpp" bodystart="1688" bodyend="1690"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1ArgArrayBase_1ad90ff8a9bd79af6acfdb72646c52a780" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGecode_1_1ArgArrayBase_1aa687fceda8a4ae2a64fb5a7bb649a5a7" kindref="member">iterator</ref></type>
        <definition>forceinline ArgArrayBase&lt; T &gt;::iterator Gecode::ArgArrayBase&lt; T &gt;::end</definition>
        <argsstring>(void)</argsstring>
        <name>end</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return an iterator past the end of the array. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/array.hpp" line="617" column="1" bodyfile="/usr/include/gecode/kernel/array.hpp" bodystart="1694" bodyend="1696"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1ArgArrayBase_1a62a0f08722a2eaddd4d9b3bd7d3a216c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGecode_1_1ArgArrayBase_1ad83ae4a7fc5863035e6fe5795b843768" kindref="member">const_iterator</ref></type>
        <definition>forceinline ArgArrayBase&lt; T &gt;::const_iterator Gecode::ArgArrayBase&lt; T &gt;::end</definition>
        <argsstring>(void) const </argsstring>
        <name>end</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return a read-only iterator past the end of the array. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/array.hpp" line="619" column="1" bodyfile="/usr/include/gecode/kernel/array.hpp" bodystart="1700" bodyend="1702"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1ArgArrayBase_1aaf6d78bac5609f86601dfb22131bc866" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGecode_1_1ArgArrayBase_1a77d09762f3b2d7c017a1c66530c30ba5" kindref="member">reverse_iterator</ref></type>
        <definition>forceinline ArgArrayBase&lt; T &gt;::reverse_iterator Gecode::ArgArrayBase&lt; T &gt;::rbegin</definition>
        <argsstring>(void)</argsstring>
        <name>rbegin</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return a reverse iterator at the end of the array. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/array.hpp" line="621" column="1" bodyfile="/usr/include/gecode/kernel/array.hpp" bodystart="1706" bodyend="1708"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1ArgArrayBase_1a71af78d1d4adeb593e14add9fbc2135a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGecode_1_1ArgArrayBase_1af2029facbd7b8dcfef6573d43444cde2" kindref="member">const_reverse_iterator</ref></type>
        <definition>forceinline ArgArrayBase&lt; T &gt;::const_reverse_iterator Gecode::ArgArrayBase&lt; T &gt;::rbegin</definition>
        <argsstring>(void) const </argsstring>
        <name>rbegin</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return a reverse and read-only iterator at the end of the array. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/array.hpp" line="623" column="1" bodyfile="/usr/include/gecode/kernel/array.hpp" bodystart="1712" bodyend="1714"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1ArgArrayBase_1aa6fcebbdd86271d362383f71a3fdbd26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGecode_1_1ArgArrayBase_1a77d09762f3b2d7c017a1c66530c30ba5" kindref="member">reverse_iterator</ref></type>
        <definition>forceinline ArgArrayBase&lt; T &gt;::reverse_iterator Gecode::ArgArrayBase&lt; T &gt;::rend</definition>
        <argsstring>(void)</argsstring>
        <name>rend</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return a reverse iterator past the beginning of the array. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/array.hpp" line="625" column="1" bodyfile="/usr/include/gecode/kernel/array.hpp" bodystart="1718" bodyend="1720"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1ArgArrayBase_1a8c876fa6c631f6d9685ee44194628f6c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGecode_1_1ArgArrayBase_1af2029facbd7b8dcfef6573d43444cde2" kindref="member">const_reverse_iterator</ref></type>
        <definition>forceinline ArgArrayBase&lt; T &gt;::const_reverse_iterator Gecode::ArgArrayBase&lt; T &gt;::rend</definition>
        <argsstring>(void) const </argsstring>
        <name>rend</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return a reverse and read-only iterator past the beginning of the array. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/array.hpp" line="627" column="1" bodyfile="/usr/include/gecode/kernel/array.hpp" bodystart="1724" bodyend="1726"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Destructor</header>
      <memberdef kind="function" id="classGecode_1_1ArgArrayBase_1ab397c8c20972f2bc8d3b53e46145cb24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::ArgArrayBase&lt; T &gt;::~ArgArrayBase</definition>
        <argsstring>(void)</argsstring>
        <name>~ArgArrayBase</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Destructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/array.hpp" line="633" column="1" bodyfile="/usr/include/gecode/kernel/array.hpp" bodystart="1641" bodyend="1644"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classGecode_1_1ArgArrayBase_1ac8bab055302616752818fe5df090a1b9" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int Gecode::ArgArrayBase&lt; T &gt;::n</definition>
        <argsstring></argsstring>
        <name>n</name>
        <briefdescription>
<para>Number of elements. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/array.hpp" line="524" column="1" bodyfile="/usr/include/gecode/kernel/array.hpp" bodystart="524" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1ArgArrayBase_1aba50e7707c86b17f0d4b805939305227" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int Gecode::ArgArrayBase&lt; T &gt;::capacity</definition>
        <argsstring></argsstring>
        <name>capacity</name>
        <briefdescription>
<para>Allocated size of the array. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/array.hpp" line="526" column="1" bodyfile="/usr/include/gecode/kernel/array.hpp" bodystart="526" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1ArgArrayBase_1a6ac424d552057a5730b67d9b15b9977c" prot="protected" static="no" mutable="no">
        <type>T *</type>
        <definition>T* Gecode::ArgArrayBase&lt; T &gt;::a</definition>
        <argsstring></argsstring>
        <name>a</name>
        <briefdescription>
<para>Element array. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/array.hpp" line="528" column="1" bodyfile="/usr/include/gecode/kernel/array.hpp" bodystart="528" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1ArgArrayBase_1a4c191ff64ad1876b584048422f9ff29e" prot="protected" static="no" mutable="no">
        <type>T</type>
        <definition>T Gecode::ArgArrayBase&lt; T &gt;::onstack[onstack_size]</definition>
        <argsstring>[onstack_size]</argsstring>
        <name>onstack</name>
        <briefdescription>
<para>In-array storage for elements. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/array.hpp" line="532" column="1" bodyfile="/usr/include/gecode/kernel/array.hpp" bodystart="532" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-attrib">
      <memberdef kind="variable" id="classGecode_1_1ArgArrayBase_1a2a7e9c76d67fae7aae4f20109eb38317" prot="protected" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int Gecode::ArgArrayBase&lt; T &gt;::onstack_size</definition>
        <argsstring></argsstring>
        <name>onstack_size</name>
        <initializer>= 16</initializer>
        <briefdescription>
<para>How many elements are possible inside array. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/array.hpp" line="530" column="1" bodyfile="/usr/include/gecode/kernel/array.hpp" bodystart="530" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classGecode_1_1ArgArrayBase_1aa3a75d22c4da142c5f7129561f980399" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T *</type>
        <definition>forceinline T * Gecode::ArgArrayBase&lt; T &gt;::allocate</definition>
        <argsstring>(int n)</argsstring>
        <name>allocate</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Allocate memory for <emphasis>n</emphasis> elements. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/array.hpp" line="534" column="1" bodyfile="/usr/include/gecode/kernel/array.hpp" bodystart="1592" bodyend="1595"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1ArgArrayBase_1a8ed2c153f6a9481eac03f81fc1eb6b14" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::ArgArrayBase&lt; T &gt;::resize</definition>
        <argsstring>(int i)</argsstring>
        <name>resize</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Resize to hold at least <emphasis>i</emphasis> additional elements. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/array.hpp" line="536" column="1" bodyfile="/usr/include/gecode/kernel/array.hpp" bodystart="1599" bodyend="1612"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1ArgArrayBase_1a8dfd1207b4479935fb88e517b21bf49f" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class A</type>
          </param>
        </templateparamlist>
        <type>A</type>
        <definition>A Gecode::ArgArrayBase&lt; T &gt;::concat</definition>
        <argsstring>(const ArgArrayBase&lt; T &gt; &amp;x) const </argsstring>
        <name>concat</name>
        <param>
          <type>const <ref refid="classGecode_1_1ArgArrayBase" kindref="compound">ArgArrayBase</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Return this array concatenated with <emphasis>x</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/array.hpp" line="539" column="1" bodyfile="/usr/include/gecode/kernel/array.hpp" bodystart="1778" bodyend="1785"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1ArgArrayBase_1ab3e5176857b4d13451f9022f6a72b192" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class A</type>
          </param>
        </templateparamlist>
        <type>A</type>
        <definition>A Gecode::ArgArrayBase&lt; T &gt;::concat</definition>
        <argsstring>(const T &amp;x) const </argsstring>
        <name>concat</name>
        <param>
          <type>const T &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Return this array concatenated with <emphasis>x</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/array.hpp" line="542" column="1" bodyfile="/usr/include/gecode/kernel/array.hpp" bodystart="1789" bodyend="1795"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1ArgArrayBase_1acf7efe7096de3d763d6a894306e56adc" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class A</type>
          </param>
        </templateparamlist>
        <type>A &amp;</type>
        <definition>A &amp; Gecode::ArgArrayBase&lt; T &gt;::append</definition>
        <argsstring>(const T &amp;x)</argsstring>
        <name>append</name>
        <param>
          <type>const T &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Insert a new element <emphasis>x</emphasis> at the end of the array (increase size by 1) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/array.hpp" line="545" column="1" bodyfile="/usr/include/gecode/kernel/array.hpp" bodystart="1749" bodyend="1753"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1ArgArrayBase_1a91d22d529d75c419aa3bd6c93849cb4a" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class A</type>
          </param>
        </templateparamlist>
        <type>A &amp;</type>
        <definition>A &amp; Gecode::ArgArrayBase&lt; T &gt;::append</definition>
        <argsstring>(const ArgArrayBase&lt; T &gt; &amp;x)</argsstring>
        <name>append</name>
        <param>
          <type>const <ref refid="classGecode_1_1ArgArrayBase" kindref="compound">ArgArrayBase</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Append <emphasis>x</emphasis> to the end of the array. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/array.hpp" line="548" column="1" bodyfile="/usr/include/gecode/kernel/array.hpp" bodystart="1769" bodyend="1774"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1ArgArrayBase_1ab1cfddbeaac6b704ad50abff7b9635a6" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class A</type>
          </param>
        </templateparamlist>
        <type>A</type>
        <definition>A Gecode::ArgArrayBase&lt; T &gt;::slice</definition>
        <argsstring>(int start, int inc=1, int n=-1)</argsstring>
        <name>slice</name>
        <param>
          <type>int</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>inc</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return slice <formula id="312">$y$</formula> of length at most <emphasis>n</emphasis> such that forall <formula id="313">$0\leq i&lt;n$</formula>, <formula id="314">$y_i=x_{\text{start}+i\cdot\text{inc}}$</formula></para><para>If <emphasis>n</emphasis> is -1, then all possible elements starting from <emphasis>start</emphasis> with increment <emphasis>inc</emphasis> are returned. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/array.hpp" line="555" column="1" bodyfile="/usr/include/gecode/kernel/array.hpp" bodystart="1730" bodyend="1745"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classGecode_1_1ArgArrayBase_1a1a68cfb7f0dcdee1dd52fc38dbddace4" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>forceinline void * Gecode::ArgArrayBase&lt; T &gt;::operator new</definition>
        <argsstring>(size_t)</argsstring>
        <name>operator new</name>
        <param>
          <type>size_t</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/array.hpp" line="636" column="1" bodyfile="/usr/include/gecode/kernel/array.hpp" bodystart="1799" bodyend="1801"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1ArgArrayBase_1a4130eca7b3a8a700bc7ff7515ced5626" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::ArgArrayBase&lt; T &gt;::operator delete</definition>
        <argsstring>(void *, size_t)</argsstring>
        <name>operator delete</name>
        <param>
          <type>void *</type>
        </param>
        <param>
          <type>size_t</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/array.hpp" line="637" column="1" bodyfile="/usr/include/gecode/kernel/array.hpp" bodystart="1805" bodyend="1806"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="related">
      <memberdef kind="function" id="classGecode_1_1ArgArrayBase_1a434ab9157f5572d9ebd9f16c741d4bec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Char</type>
          </param>
          <param>
            <type>class Traits</type>
          </param>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>std::basic_ostream&lt; Char, Traits &gt; &amp;</type>
        <definition>std::basic_ostream&lt; Char, Traits &gt; &amp; operator&lt;&lt;</definition>
        <argsstring>(std::basic_ostream&lt; Char, Traits &gt; &amp;os, const ArgArrayBase&lt; T &gt; &amp;x)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::basic_ostream&lt; Char, Traits &gt; &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1ArgArrayBase" kindref="compound">ArgArrayBase</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Print array elements enclosed in curly brackets. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/array.hpp" line="829" column="1" bodyfile="/usr/include/gecode/kernel/array.hpp" bodystart="2199" bodyend="2211"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Base-class for argument arrays. </para>    </briefdescription>
    <detaileddescription>
<para>Argument arrays are used as convenient mechanism of passing arguments when calling functions as they combine both the size and the elements of an array. For a small number of elements, memory is allocated by creating an argument array object. Otherwise the memory is allocated from the heap.</para><para>This base-class is not to be used directly, use <ref refid="classGecode_1_1PrimArgArray" kindref="compound">PrimArgArray</ref> for argument arrays of primitive types, <ref refid="classGecode_1_1VarArgArray" kindref="compound">VarArgArray</ref> for argument arrays storing variables, and <ref refid="classGecode_1_1ArgArray" kindref="compound">ArgArray</ref> for any other type. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="818">
        <label>Gecode::PrimArgArray&lt; T &gt;</label>
        <link refid="classGecode_1_1PrimArgArray"/>
        <childnode refid="814" relation="public-inheritance">
        </childnode>
      </node>
      <node id="815">
        <label>ArgArray&lt; SymmetryHandle &gt;</label>
        <link refid="classGecode_1_1ArgArray"/>
        <childnode refid="814" relation="public-inheritance">
        </childnode>
      </node>
      <node id="816">
        <label>Gecode::Symmetries</label>
        <link refid="classGecode_1_1Symmetries"/>
        <childnode refid="815" relation="public-inheritance">
        </childnode>
      </node>
      <node id="817">
        <label>Gecode::ArgArray&lt; T &gt;</label>
        <link refid="classGecode_1_1ArgArray"/>
        <childnode refid="814" relation="public-inheritance">
        </childnode>
      </node>
      <node id="814">
        <label>Gecode::ArgArrayBase&lt; T &gt;</label>
        <link refid="classGecode_1_1ArgArrayBase"/>
      </node>
      <node id="820">
        <label>Gecode::FloatValArgs</label>
        <link refid="classGecode_1_1FloatValArgs"/>
        <childnode refid="819" relation="public-inheritance">
        </childnode>
      </node>
      <node id="821">
        <label>PrimArgArray&lt; int &gt;</label>
        <link refid="classGecode_1_1PrimArgArray"/>
        <childnode refid="814" relation="public-inheritance">
        </childnode>
      </node>
      <node id="822">
        <label>Gecode::IntArgs</label>
        <link refid="classGecode_1_1IntArgs"/>
        <childnode refid="821" relation="public-inheritance">
        </childnode>
      </node>
      <node id="819">
        <label>PrimArgArray&lt; FloatVal &gt;</label>
        <link refid="classGecode_1_1PrimArgArray"/>
        <childnode refid="814" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="824">
        <label>T</label>
      </node>
      <node id="823">
        <label>Gecode::ArgArrayBase&lt; T &gt;</label>
        <link refid="classGecode_1_1ArgArrayBase"/>
        <childnode refid="824" relation="usage">
          <edgelabel>onstack</edgelabel>
          <edgelabel>a</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/usr/include/gecode/kernel/array.hpp" line="521" column="1" bodyfile="/usr/include/gecode/kernel/array.hpp" bodystart="521" bodyend="638"/>
    <listofallmembers>
      <member refid="classGecode_1_1ArgArrayBase_1a6ac424d552057a5730b67d9b15b9977c" prot="protected" virt="non-virtual"><scope>Gecode::ArgArrayBase</scope><name>a</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1aa3a75d22c4da142c5f7129561f980399" prot="protected" virt="non-virtual"><scope>Gecode::ArgArrayBase</scope><name>allocate</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1acf7efe7096de3d763d6a894306e56adc" prot="protected" virt="non-virtual"><scope>Gecode::ArgArrayBase</scope><name>append</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1a91d22d529d75c419aa3bd6c93849cb4a" prot="protected" virt="non-virtual"><scope>Gecode::ArgArrayBase</scope><name>append</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1aaf88593537f41f862b91120c4c6ee104" prot="public" virt="non-virtual"><scope>Gecode::ArgArrayBase</scope><name>ArgArrayBase</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1add5bd614e97033a43636821aeab64ce2" prot="public" virt="non-virtual"><scope>Gecode::ArgArrayBase</scope><name>ArgArrayBase</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1ae30a8e33f63548bf1e8f52bc772686db" prot="public" virt="non-virtual"><scope>Gecode::ArgArrayBase</scope><name>ArgArrayBase</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1ab0a3399a6a484dc36cd3d306a2b8e199" prot="public" virt="non-virtual"><scope>Gecode::ArgArrayBase</scope><name>ArgArrayBase</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1a9e7b606b9971b3344e692a60ac13b223" prot="public" virt="non-virtual"><scope>Gecode::ArgArrayBase</scope><name>ArgArrayBase</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1aa113576241a65d86140bc3419d96b02c" prot="public" virt="non-virtual"><scope>Gecode::ArgArrayBase</scope><name>begin</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1aa56cc30444aa0a1e206475eb2201a281" prot="public" virt="non-virtual"><scope>Gecode::ArgArrayBase</scope><name>begin</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1aba50e7707c86b17f0d4b805939305227" prot="protected" virt="non-virtual"><scope>Gecode::ArgArrayBase</scope><name>capacity</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1a8dfd1207b4479935fb88e517b21bf49f" prot="protected" virt="non-virtual"><scope>Gecode::ArgArrayBase</scope><name>concat</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1ab3e5176857b4d13451f9022f6a72b192" prot="protected" virt="non-virtual"><scope>Gecode::ArgArrayBase</scope><name>concat</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1ad83ae4a7fc5863035e6fe5795b843768" prot="public" virt="non-virtual"><scope>Gecode::ArgArrayBase</scope><name>const_iterator</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1a4c85c82056ab8fbf2772417329d3e802" prot="public" virt="non-virtual"><scope>Gecode::ArgArrayBase</scope><name>const_pointer</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1a097be827923b3a47bacd8918ec73ca6b" prot="public" virt="non-virtual"><scope>Gecode::ArgArrayBase</scope><name>const_reference</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1af2029facbd7b8dcfef6573d43444cde2" prot="public" virt="non-virtual"><scope>Gecode::ArgArrayBase</scope><name>const_reverse_iterator</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1ad90ff8a9bd79af6acfdb72646c52a780" prot="public" virt="non-virtual"><scope>Gecode::ArgArrayBase</scope><name>end</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1a62a0f08722a2eaddd4d9b3bd7d3a216c" prot="public" virt="non-virtual"><scope>Gecode::ArgArrayBase</scope><name>end</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1aa687fceda8a4ae2a64fb5a7bb649a5a7" prot="public" virt="non-virtual"><scope>Gecode::ArgArrayBase</scope><name>iterator</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1ac8bab055302616752818fe5df090a1b9" prot="protected" virt="non-virtual"><scope>Gecode::ArgArrayBase</scope><name>n</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1a4c191ff64ad1876b584048422f9ff29e" prot="protected" virt="non-virtual"><scope>Gecode::ArgArrayBase</scope><name>onstack</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1a2a7e9c76d67fae7aae4f20109eb38317" prot="protected" virt="non-virtual"><scope>Gecode::ArgArrayBase</scope><name>onstack_size</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1a4130eca7b3a8a700bc7ff7515ced5626" prot="private" virt="non-virtual"><scope>Gecode::ArgArrayBase</scope><name>operator delete</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1a1a68cfb7f0dcdee1dd52fc38dbddace4" prot="private" virt="non-virtual"><scope>Gecode::ArgArrayBase</scope><name>operator new</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1a434ab9157f5572d9ebd9f16c741d4bec" prot="public" virt="non-virtual"><scope>Gecode::ArgArrayBase</scope><name>operator&lt;&lt;</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1a7a164914ff7e98d30c7682772c28c755" prot="public" virt="non-virtual"><scope>Gecode::ArgArrayBase</scope><name>operator=</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1a3374c5468b4a8d6fc80c1b7059b62b1a" prot="public" virt="non-virtual"><scope>Gecode::ArgArrayBase</scope><name>operator[]</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1a7d93ce4e7a605a9a450326683831d54a" prot="public" virt="non-virtual"><scope>Gecode::ArgArrayBase</scope><name>operator[]</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1ab3bc773d03a61dd0c04283e749ec0ed2" prot="public" virt="non-virtual"><scope>Gecode::ArgArrayBase</scope><name>pointer</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1aaf6d78bac5609f86601dfb22131bc866" prot="public" virt="non-virtual"><scope>Gecode::ArgArrayBase</scope><name>rbegin</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1a71af78d1d4adeb593e14add9fbc2135a" prot="public" virt="non-virtual"><scope>Gecode::ArgArrayBase</scope><name>rbegin</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1ad0298b4768b0e53ce8ef13f80789ac18" prot="public" virt="non-virtual"><scope>Gecode::ArgArrayBase</scope><name>reference</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1aa6fcebbdd86271d362383f71a3fdbd26" prot="public" virt="non-virtual"><scope>Gecode::ArgArrayBase</scope><name>rend</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1a8c876fa6c631f6d9685ee44194628f6c" prot="public" virt="non-virtual"><scope>Gecode::ArgArrayBase</scope><name>rend</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1a8ed2c153f6a9481eac03f81fc1eb6b14" prot="protected" virt="non-virtual"><scope>Gecode::ArgArrayBase</scope><name>resize</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1a77d09762f3b2d7c017a1c66530c30ba5" prot="public" virt="non-virtual"><scope>Gecode::ArgArrayBase</scope><name>reverse_iterator</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1a5cd6f91808d5560f28f05b75be65ab1d" prot="public" virt="non-virtual"><scope>Gecode::ArgArrayBase</scope><name>size</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1ab1cfddbeaac6b704ad50abff7b9635a6" prot="protected" virt="non-virtual"><scope>Gecode::ArgArrayBase</scope><name>slice</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1a56a36e2a609ea57109c79d43890d62ef" prot="public" virt="non-virtual"><scope>Gecode::ArgArrayBase</scope><name>value_type</name></member>
      <member refid="classGecode_1_1ArgArrayBase_1ab397c8c20972f2bc8d3b53e46145cb24" prot="public" virt="non-virtual"><scope>Gecode::ArgArrayBase</scope><name>~ArgArrayBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
