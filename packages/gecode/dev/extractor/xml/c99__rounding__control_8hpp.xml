<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="c99__rounding__control_8hpp" kind="file">
    <compoundname>c99_rounding_control.hpp</compoundname>
    <includes refid="c99sub__rounding__control_8hpp" local="no">gecode/third-party/boost/numeric/interval/detail/c99sub_rounding_control.hpp</includes>
    <incdepgraph>
      <node id="34584">
        <label>fenv.h</label>
      </node>
      <node id="34582">
        <label>/usr/include/gecode/third-party/boost/numeric/interval/detail/c99_rounding_control.hpp</label>
        <link refid="c99_rounding_control.hpp"/>
        <childnode refid="34583" relation="include">
        </childnode>
      </node>
      <node id="34583">
        <label>gecode/third-party/boost/numeric/interval/detail/c99sub_rounding_control.hpp</label>
        <link refid="c99sub__rounding__control_8hpp_source"/>
        <childnode refid="34584" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="structboost_1_1numeric_1_1interval__lib_1_1rounding__control_3_01float_01_4" prot="public">boost::numeric::interval_lib::rounding_control&lt; float &gt;</innerclass>
    <innerclass refid="structboost_1_1numeric_1_1interval__lib_1_1rounding__control_3_01double_01_4" prot="public">boost::numeric::interval_lib::rounding_control&lt; double &gt;</innerclass>
    <innerclass refid="structboost_1_1numeric_1_1interval__lib_1_1rounding__control_3_01long_01double_01_4" prot="public">boost::numeric::interval_lib::rounding_control&lt; long double &gt;</innerclass>
    <innernamespace refid="namespaceboost">boost</innernamespace>
    <innernamespace refid="namespaceboost_1_1numeric">boost::numeric</innernamespace>
    <innernamespace refid="namespaceboost_1_1numeric_1_1interval__lib">boost::numeric::interval_lib</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>Boost<sp/>interval/detail/c99_rounding_control.hpp<sp/>file</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2000<sp/>Jens<sp/>Maurer</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2002<sp/>Hervé<sp/>Brönnimann,<sp/>Guillaume<sp/>Melquiond,<sp/>Sylvain<sp/>Pion</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Distributed<sp/>under<sp/>the<sp/>Boost<sp/>Software<sp/>License,<sp/>Version<sp/>1.0.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>(See<sp/>accompanying<sp/>file<sp/>LICENSE_1_0.txt<sp/>or</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>copy<sp/>at<sp/>http://www.boost.org/LICENSE_1_0.txt)</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>BOOST_NUMERIC_INTERVAL_DETAIL_C99_ROUNDING_CONTROL_HPP</highlight></codeline>
<codeline lineno="12"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>BOOST_NUMERIC_INTERVAL_DETAIL_C99_ROUNDING_CONTROL_HPP</highlight></codeline>
<codeline lineno="13"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gecode/third-party/boost/numeric/interval/detail/c99sub_rounding_control.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">boost<sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">numeric<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">interval_lib<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="21" refid="structboost_1_1numeric_1_1interval__lib_1_1rounding__control_3_01float_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structboost_1_1numeric_1_1interval__lib_1_1rounding__control" kindref="compound">rounding_control</ref>&lt;float&gt;:</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><ref refid="structboost_1_1numeric_1_1interval__lib_1_1detail_1_1c99__rounding__control" kindref="compound">detail::c99_rounding_control</ref></highlight></codeline>
<codeline lineno="23"><highlight class="normal">{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>force_rounding(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;r)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>{<sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>r_<sp/>=<sp/>r;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r_;<sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal">};</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="29" refid="structboost_1_1numeric_1_1interval__lib_1_1rounding__control_3_01double_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structboost_1_1numeric_1_1interval__lib_1_1rounding__control" kindref="compound">rounding_control</ref>&lt;double&gt;:</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><ref refid="structboost_1_1numeric_1_1interval__lib_1_1detail_1_1c99__rounding__control" kindref="compound">detail::c99_rounding_control</ref></highlight></codeline>
<codeline lineno="31"><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>force_rounding(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;r)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>{<sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>r_<sp/>=<sp/>r;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r_;<sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal">};</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="37" refid="structboost_1_1numeric_1_1interval__lib_1_1rounding__control_3_01long_01double_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structboost_1_1numeric_1_1interval__lib_1_1rounding__control" kindref="compound">rounding_control</ref>&lt;long<sp/>double&gt;:</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><ref refid="structboost_1_1numeric_1_1interval__lib_1_1detail_1_1c99__rounding__control" kindref="compound">detail::c99_rounding_control</ref></highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>force_rounding(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;r)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>{<sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>r_<sp/>=<sp/>r;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r_;<sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal">};</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>interval_lib</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>numeric</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>boost</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>BOOST_NUMERIC_INTERVAL_NO_HARDWARE</highlight></codeline>
<codeline lineno="49"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>BOOST_NUMERIC_INTERVAL_DETAIL_C99_ROUNDING_CONTROL_HPP</highlight></codeline>
    </programlisting>
    <location file="/usr/include/gecode/third-party/boost/numeric/interval/detail/c99_rounding_control.hpp"/>
  </compounddef>
</doxygen>
