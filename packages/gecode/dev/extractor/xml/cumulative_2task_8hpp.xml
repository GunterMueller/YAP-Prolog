<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="cumulative_2task_8hpp" kind="file">
    <compoundname>task.hpp</compoundname>
    <includedby refid="cumulative_8hh" local="no">/usr/include/gecode/int/cumulative.hh</includedby>
    <invincdepgraph>
      <node id="12761">
        <label>/usr/include/gecode/int/cumulative.hh</label>
        <link refid="cumulative_8hh_source"/>
      </node>
      <node id="12760">
        <label>/usr/include/gecode/int/cumulative/task.hpp</label>
        <link refid="cumulative/task.hpp"/>
        <childnode refid="12761" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespaceGecode">Gecode</innernamespace>
    <innernamespace refid="namespaceGecode_1_1Int">Gecode::Int</innernamespace>
    <innernamespace refid="namespaceGecode_1_1Int_1_1Cumulative">Gecode::Int::Cumulative</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>mode:<sp/>C++;<sp/>c-basic-offset:<sp/>2;<sp/>indent-tabs-mode:<sp/>nil<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/><sp/>Main<sp/>authors:</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Christian<sp/>Schulte<sp/>&lt;schulte@gecode.org&gt;</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Guido<sp/>Tack<sp/>&lt;tack@gecode.org&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/>Copyright:</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Christian<sp/>Schulte,<sp/>2009</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Guido<sp/>Tack,<sp/>2010</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/>Last<sp/>modified:</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>$Date:<sp/>2013-03-11<sp/>06:26:07<sp/>+0100<sp/>(Mon,<sp/>11<sp/>Mar<sp/>2013)<sp/>$<sp/>by<sp/>$Author:<sp/>tack<sp/>$</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>$Revision:<sp/>13487<sp/>$</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>Gecode,<sp/>the<sp/>generic<sp/>constraint</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/>development<sp/>environment:</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.gecode.org</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/><sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/><sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/><sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/><sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/><sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/><sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/><sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/><sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/><sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/><sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/><sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/><sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Gecode<sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Int<sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Cumulative<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Mandatory<sp/>fixed<sp/>task</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>forceinline</highlight></codeline>
<codeline lineno="47" refid="classGecode_1_1Int_1_1Cumulative_1_1ManFixPTask_1a57dc0b173eecb294460aa39235736610" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1Cumulative_1_1ManFixPTask_1a57dc0b173eecb294460aa39235736610" kindref="member">ManFixPTask::ManFixPTask</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>forceinline</highlight></codeline>
<codeline lineno="49" refid="classGecode_1_1Int_1_1Cumulative_1_1ManFixPTask_1a04603b8093a35654be65dd608f1f0156" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1Cumulative_1_1ManFixPTask_1a57dc0b173eecb294460aa39235736610" kindref="member">ManFixPTask::ManFixPTask</ref>(<ref refid="classGecode_1_1IntVar" kindref="compound">IntVar</ref><sp/>s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c)<sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>Unary::<ref refid="classGecode_1_1Int_1_1Cumulative_1_1ManFixPTask" kindref="compound">ManFixPTask</ref>(s,p),<sp/>_c(c)<sp/>{}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="classGecode_1_1Int_1_1Cumulative_1_1ManFixPTask_1a917057cd0fe6074e037d11fa6ab67073" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1Cumulative_1_1ManFixPTask_1a917057cd0fe6074e037d11fa6ab67073" kindref="member">ManFixPTask::init</ref>(<ref refid="classGecode_1_1IntVar" kindref="compound">IntVar</ref><sp/>s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Int_1_1Unary_1_1ManFixPTask_1a5af4e1381ec95cfe571bb457fdb2b59d" kindref="member">Unary::ManFixPTask::init</ref>(s,p);<sp/><ref refid="classGecode_1_1Int_1_1Cumulative_1_1ManFixPTask_1ae96fa64bd8f1b0d42b9a2f4c2fd8043b" kindref="member">_c</ref>=<ref refid="classGecode_1_1Int_1_1Cumulative_1_1ManFixPTask_1a3784df2c979e697fa91d94b8e59ef827" kindref="member">c</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="classGecode_1_1Int_1_1Cumulative_1_1ManFixPTask_1add96656950b2715801e35d74b660dbad" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1Cumulative_1_1ManFixPTask_1a917057cd0fe6074e037d11fa6ab67073" kindref="member">ManFixPTask::init</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Int_1_1Cumulative_1_1ManFixPTask" kindref="compound">ManFixPTask</ref>&amp;<sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Int_1_1Unary_1_1ManFixPTask_1a5af4e1381ec95cfe571bb457fdb2b59d" kindref="member">Unary::ManFixPTask::init</ref>(t);<sp/><ref refid="classGecode_1_1Int_1_1Cumulative_1_1ManFixPTask_1ae96fa64bd8f1b0d42b9a2f4c2fd8043b" kindref="member">_c</ref>=t.<ref refid="classGecode_1_1Int_1_1Cumulative_1_1ManFixPTask_1ae96fa64bd8f1b0d42b9a2f4c2fd8043b" kindref="member">_c</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="classGecode_1_1Int_1_1Cumulative_1_1ManFixPTask_1a3784df2c979e697fa91d94b8e59ef827" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1Cumulative_1_1ManFixPTask_1a3784df2c979e697fa91d94b8e59ef827" kindref="member">ManFixPTask::c</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Int_1_1Cumulative_1_1ManFixPTask_1ae96fa64bd8f1b0d42b9a2f4c2fd8043b" kindref="member">_c</ref>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="classGecode_1_1Int_1_1Cumulative_1_1ManFixPTask_1a982d5a4b48b369261fb39fbeedf768bc" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1Cumulative_1_1ManFixPTask_1a982d5a4b48b369261fb39fbeedf768bc" kindref="member">ManFixPTask::e</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classGecode_1_1Int_1_1Unary_1_1ManFixPTask_1ad06583b8f832a976eb1d67fb6963702d" kindref="member">pmin</ref>())*<ref refid="classGecode_1_1Int_1_1Cumulative_1_1ManFixPTask_1a3784df2c979e697fa91d94b8e59ef827" kindref="member">c</ref>();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="classGecode_1_1Int_1_1Cumulative_1_1ManFixPTask_1a13a07481f0690fbccea73760fa22cd6e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1Cumulative_1_1ManFixPTask_1a13a07481f0690fbccea73760fa22cd6e" kindref="member">ManFixPTask::update</ref>(<ref refid="classGecode_1_1Space" kindref="compound">Space</ref>&amp;<sp/>home,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>share,<sp/><ref refid="classGecode_1_1Int_1_1Cumulative_1_1ManFixPTask" kindref="compound">ManFixPTask</ref>&amp;<sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Int_1_1Unary_1_1ManFixPTask_1a13a07481f0690fbccea73760fa22cd6e" kindref="member">Unary::ManFixPTask::update</ref>(home,share,t);<sp/><ref refid="classGecode_1_1Int_1_1Cumulative_1_1ManFixPTask_1ae96fa64bd8f1b0d42b9a2f4c2fd8043b" kindref="member">_c</ref>=t.<ref refid="classGecode_1_1Int_1_1Cumulative_1_1ManFixPTask_1ae96fa64bd8f1b0d42b9a2f4c2fd8043b" kindref="member">_c</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Char,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Traits&gt;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>std::basic_ostream&lt;Char,Traits&gt;&amp;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>operator<sp/>&lt;&lt;(std::basic_ostream&lt;Char,Traits&gt;&amp;<sp/>os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Int_1_1Cumulative_1_1ManFixPTask" kindref="compound">ManFixPTask</ref>&amp;<sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>std::basic_ostringstream&lt;Char,Traits&gt;<sp/>s;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>s.copyfmt(os);<sp/>s.width(0);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>&lt;&lt;<sp/>t.<ref refid="classGecode_1_1Int_1_1Unary_1_1ManFixPTask_1a787d918d67c9b434fd429cfc0c0bddeb" kindref="member">est</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>t.pmin()<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>t.c()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>t.lct();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os<sp/>&lt;&lt;<sp/>s.str();</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Mandatory<sp/>fixed<sp/>task<sp/>with<sp/>fixed<sp/>processing,<sp/>start<sp/>or<sp/>end<sp/>time</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>forceinline</highlight></codeline>
<codeline lineno="88" refid="classGecode_1_1Int_1_1Cumulative_1_1ManFixPSETask_1ad98d5c2f7b0be90f35003a6de3be69c9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1Cumulative_1_1ManFixPSETask_1ad98d5c2f7b0be90f35003a6de3be69c9" kindref="member">ManFixPSETask::ManFixPSETask</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>forceinline</highlight></codeline>
<codeline lineno="90" refid="classGecode_1_1Int_1_1Cumulative_1_1ManFixPSETask_1a9ea264948d44f3415ae65dbd038f844d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1Cumulative_1_1ManFixPSETask_1ad98d5c2f7b0be90f35003a6de3be69c9" kindref="member">ManFixPSETask::ManFixPSETask</ref>(<ref refid="namespaceGecode_1a72036d0d1ce62f603451ef48e93c3433" kindref="member">TaskType</ref><sp/>t,<sp/><ref refid="classGecode_1_1IntVar" kindref="compound">IntVar</ref><sp/>s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c)<sp/></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>Unary::<ref refid="classGecode_1_1Int_1_1Cumulative_1_1ManFixPSETask" kindref="compound">ManFixPSETask</ref>(t,s,p),<sp/>_c(c)<sp/>{}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="classGecode_1_1Int_1_1Cumulative_1_1ManFixPSETask_1a3f35e0f31a83014bbc93f96a5d63500f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1Cumulative_1_1ManFixPSETask_1a3f35e0f31a83014bbc93f96a5d63500f" kindref="member">ManFixPSETask::init</ref>(<ref refid="namespaceGecode_1a72036d0d1ce62f603451ef48e93c3433" kindref="member">TaskType</ref><sp/>t,<sp/><ref refid="classGecode_1_1IntVar" kindref="compound">IntVar</ref><sp/>s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Int_1_1Unary_1_1ManFixPSETask_1a435ab8592b57def45dc1826419addd1a" kindref="member">Unary::ManFixPSETask::init</ref>(t,s,p);<sp/><ref refid="classGecode_1_1Int_1_1Cumulative_1_1ManFixPSETask_1afddcd72f1d9f0b634d289875a127319e" kindref="member">_c</ref>=<ref refid="classGecode_1_1Int_1_1Cumulative_1_1ManFixPSETask_1a9681884adeafdc73b8e19dba57e34e3e" kindref="member">c</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="classGecode_1_1Int_1_1Cumulative_1_1ManFixPSETask_1a74c1a5e239736c9516122e7928942df0" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1Cumulative_1_1ManFixPSETask_1a3f35e0f31a83014bbc93f96a5d63500f" kindref="member">ManFixPSETask::init</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Int_1_1Cumulative_1_1ManFixPSETask" kindref="compound">ManFixPSETask</ref>&amp;<sp/>t0)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Int_1_1Unary_1_1ManFixPSETask_1a435ab8592b57def45dc1826419addd1a" kindref="member">Unary::ManFixPSETask::init</ref>(t0);<sp/><ref refid="classGecode_1_1Int_1_1Cumulative_1_1ManFixPSETask_1afddcd72f1d9f0b634d289875a127319e" kindref="member">_c</ref>=t0.<ref refid="classGecode_1_1Int_1_1Cumulative_1_1ManFixPSETask_1afddcd72f1d9f0b634d289875a127319e" kindref="member">_c</ref>;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="classGecode_1_1Int_1_1Cumulative_1_1ManFixPSETask_1a9681884adeafdc73b8e19dba57e34e3e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1Cumulative_1_1ManFixPSETask_1a9681884adeafdc73b8e19dba57e34e3e" kindref="member">ManFixPSETask::c</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Int_1_1Cumulative_1_1ManFixPSETask_1afddcd72f1d9f0b634d289875a127319e" kindref="member">_c</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="classGecode_1_1Int_1_1Cumulative_1_1ManFixPSETask_1a04e7feb59e512dd37dc96bdc9e47f058" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1Cumulative_1_1ManFixPSETask_1a04e7feb59e512dd37dc96bdc9e47f058" kindref="member">ManFixPSETask::e</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classGecode_1_1Int_1_1Unary_1_1ManFixPSETask_1acbc4d2996c8c5ca73c431c57bf1f9a6b" kindref="member">pmin</ref>())*<ref refid="classGecode_1_1Int_1_1Cumulative_1_1ManFixPSETask_1a9681884adeafdc73b8e19dba57e34e3e" kindref="member">c</ref>();</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="classGecode_1_1Int_1_1Cumulative_1_1ManFixPSETask_1a7909dbb33b40dad8a6ddced9e486b2b5" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1Cumulative_1_1ManFixPSETask_1a7909dbb33b40dad8a6ddced9e486b2b5" kindref="member">ManFixPSETask::update</ref>(<ref refid="classGecode_1_1Space" kindref="compound">Space</ref>&amp;<sp/>home,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>share,<sp/><ref refid="classGecode_1_1Int_1_1Cumulative_1_1ManFixPSETask" kindref="compound">ManFixPSETask</ref>&amp;<sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Int_1_1Unary_1_1ManFixPSETask_1a7909dbb33b40dad8a6ddced9e486b2b5" kindref="member">Unary::ManFixPSETask::update</ref>(home,share,t);<sp/><ref refid="classGecode_1_1Int_1_1Cumulative_1_1ManFixPSETask_1afddcd72f1d9f0b634d289875a127319e" kindref="member">_c</ref>=t.<ref refid="classGecode_1_1Int_1_1Cumulative_1_1ManFixPSETask_1afddcd72f1d9f0b634d289875a127319e" kindref="member">_c</ref>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Char,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Traits&gt;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>std::basic_ostream&lt;Char,Traits&gt;&amp;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>operator<sp/>&lt;&lt;(std::basic_ostream&lt;Char,Traits&gt;&amp;<sp/>os,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Int_1_1Cumulative_1_1ManFixPSETask" kindref="compound">ManFixPSETask</ref>&amp;<sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>std::basic_ostringstream&lt;Char,Traits&gt;<sp/>s;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>s.copyfmt(os);<sp/>s.width(0);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>&lt;&lt;<sp/>t.<ref refid="classGecode_1_1Int_1_1Unary_1_1ManFixPSETask_1a657ffdfe8d118fcef2d7d2f5f01ae845" kindref="member">est</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>t.pmin()<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>t.c()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>t.lct();</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os<sp/>&lt;&lt;<sp/>s.str();</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Mandatory<sp/>flexible<sp/>task</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>forceinline</highlight></codeline>
<codeline lineno="129" refid="classGecode_1_1Int_1_1Cumulative_1_1ManFlexTask_1afd76e1b64eb66ae9be745b928305105c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1Cumulative_1_1ManFlexTask_1afd76e1b64eb66ae9be745b928305105c" kindref="member">ManFlexTask::ManFlexTask</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>forceinline</highlight></codeline>
<codeline lineno="131" refid="classGecode_1_1Int_1_1Cumulative_1_1ManFlexTask_1a651b22245756d7e15f798a33d08a0764" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1Cumulative_1_1ManFlexTask_1afd76e1b64eb66ae9be745b928305105c" kindref="member">ManFlexTask::ManFlexTask</ref>(<ref refid="classGecode_1_1IntVar" kindref="compound">IntVar</ref><sp/>s,<sp/><ref refid="classGecode_1_1IntVar" kindref="compound">IntVar</ref><sp/>p,<sp/><ref refid="classGecode_1_1IntVar" kindref="compound">IntVar</ref><sp/>e,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>Unary::<ref refid="classGecode_1_1Int_1_1Cumulative_1_1ManFlexTask" kindref="compound">ManFlexTask</ref>(s,p,e),<sp/>_c(c)<sp/>{}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="classGecode_1_1Int_1_1Cumulative_1_1ManFlexTask_1a7c4a548646bf957ed37ee28e21b00082" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1Cumulative_1_1ManFlexTask_1a7c4a548646bf957ed37ee28e21b00082" kindref="member">ManFlexTask::init</ref>(<ref refid="classGecode_1_1IntVar" kindref="compound">IntVar</ref><sp/>s,<sp/><ref refid="classGecode_1_1IntVar" kindref="compound">IntVar</ref><sp/>p,<sp/><ref refid="classGecode_1_1IntVar" kindref="compound">IntVar</ref><sp/>e,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Int_1_1Unary_1_1ManFlexTask_1af7eab5f30256b1adb51c64776d1fb249" kindref="member">Unary::ManFlexTask::init</ref>(s,p,e);<sp/><ref refid="classGecode_1_1Int_1_1Cumulative_1_1ManFlexTask_1a88650c6291a603208a8cd30a09c70761" kindref="member">_c</ref>=<ref refid="classGecode_1_1Int_1_1Cumulative_1_1ManFlexTask_1a8bcc646b132b6b68f781d006d85c0ab7" kindref="member">c</ref>;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="classGecode_1_1Int_1_1Cumulative_1_1ManFlexTask_1afd8ccb377c0546cacae5a69722a285aa" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1Cumulative_1_1ManFlexTask_1a7c4a548646bf957ed37ee28e21b00082" kindref="member">ManFlexTask::init</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Int_1_1Cumulative_1_1ManFlexTask" kindref="compound">ManFlexTask</ref>&amp;<sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Int_1_1Unary_1_1ManFlexTask_1af7eab5f30256b1adb51c64776d1fb249" kindref="member">Unary::ManFlexTask::init</ref>(t);<sp/><ref refid="classGecode_1_1Int_1_1Cumulative_1_1ManFlexTask_1a88650c6291a603208a8cd30a09c70761" kindref="member">_c</ref>=t.<ref refid="classGecode_1_1Int_1_1Cumulative_1_1ManFlexTask_1a88650c6291a603208a8cd30a09c70761" kindref="member">_c</ref>;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="classGecode_1_1Int_1_1Cumulative_1_1ManFlexTask_1a8bcc646b132b6b68f781d006d85c0ab7" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1Cumulative_1_1ManFlexTask_1a8bcc646b132b6b68f781d006d85c0ab7" kindref="member">ManFlexTask::c</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Int_1_1Cumulative_1_1ManFlexTask_1a88650c6291a603208a8cd30a09c70761" kindref="member">_c</ref>;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147" refid="classGecode_1_1Int_1_1Cumulative_1_1ManFlexTask_1a2396285e3b030cf55bb388288decf63f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1Cumulative_1_1ManFlexTask_1a2396285e3b030cf55bb388288decf63f" kindref="member">ManFlexTask::e</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classGecode_1_1Int_1_1Unary_1_1ManFlexTask_1ae01885e0494df31d6ed9cfb402dd9b6b" kindref="member">pmin</ref>())*<ref refid="classGecode_1_1Int_1_1Cumulative_1_1ManFlexTask_1a8bcc646b132b6b68f781d006d85c0ab7" kindref="member">c</ref>();</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="classGecode_1_1Int_1_1Cumulative_1_1ManFlexTask_1a7a9657af8282c3aa544ca61f28f6f089" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1Cumulative_1_1ManFlexTask_1a7a9657af8282c3aa544ca61f28f6f089" kindref="member">ManFlexTask::update</ref>(<ref refid="classGecode_1_1Space" kindref="compound">Space</ref>&amp;<sp/>home,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>share,<sp/><ref refid="classGecode_1_1Int_1_1Cumulative_1_1ManFlexTask" kindref="compound">ManFlexTask</ref>&amp;<sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Int_1_1Unary_1_1ManFlexTask_1a7a9657af8282c3aa544ca61f28f6f089" kindref="member">Unary::ManFlexTask::update</ref>(home,share,t);<sp/><ref refid="classGecode_1_1Int_1_1Cumulative_1_1ManFlexTask_1a88650c6291a603208a8cd30a09c70761" kindref="member">_c</ref>=t.<ref refid="classGecode_1_1Int_1_1Cumulative_1_1ManFlexTask_1a88650c6291a603208a8cd30a09c70761" kindref="member">_c</ref>;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Char,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Traits&gt;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>std::basic_ostream&lt;Char,Traits&gt;&amp;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>operator<sp/>&lt;&lt;(std::basic_ostream&lt;Char,Traits&gt;&amp;<sp/>os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Int_1_1Cumulative_1_1ManFlexTask" kindref="compound">ManFlexTask</ref>&amp;<sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>std::basic_ostringstream&lt;Char,Traits&gt;<sp/>s;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>s.copyfmt(os);<sp/>s.width(0);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>&lt;&lt;<sp/>t.<ref refid="classGecode_1_1Int_1_1Unary_1_1ManFlexTask_1ab76eb18c2d45a9ce90b72e54f0155358" kindref="member">est</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>t.lst()<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>t.pmin()<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>t.pmax()<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>t.c()<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>t.ect()<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>t.lct();</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os<sp/>&lt;&lt;<sp/>s.str();</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Optional<sp/>fixed<sp/>task</highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>forceinline</highlight></codeline>
<codeline lineno="171" refid="classGecode_1_1Int_1_1Cumulative_1_1OptFixPTask_1a9714da12149813d1783f7e04738f5be2" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1Cumulative_1_1OptFixPTask_1a9714da12149813d1783f7e04738f5be2" kindref="member">OptFixPTask::OptFixPTask</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>forceinline</highlight></codeline>
<codeline lineno="173" refid="classGecode_1_1Int_1_1Cumulative_1_1OptFixPTask_1a1cfdccf8116ffa93e7824b72915c3cc0" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1Cumulative_1_1OptFixPTask_1a9714da12149813d1783f7e04738f5be2" kindref="member">OptFixPTask::OptFixPTask</ref>(<ref refid="classGecode_1_1IntVar" kindref="compound">IntVar</ref><sp/>s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c,<sp/><ref refid="classGecode_1_1BoolVar" kindref="compound">BoolVar</ref><sp/>m)<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Int_1_1Cumulative_1_1ManFixPTask_1a917057cd0fe6074e037d11fa6ab67073" kindref="member">ManFixPTask::init</ref>(s,p,c);<sp/><ref refid="classGecode_1_1Int_1_1ManToOptTask_1a0ea4b8f9b86b8f01ba3e302e5691a348" kindref="member">_m</ref>=m;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177" refid="classGecode_1_1Int_1_1Cumulative_1_1OptFixPTask_1a2a2923e7ffa35a04282bd43fb11afbe6" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1Cumulative_1_1OptFixPTask_1a2a2923e7ffa35a04282bd43fb11afbe6" kindref="member">OptFixPTask::init</ref>(<ref refid="classGecode_1_1IntVar" kindref="compound">IntVar</ref><sp/>s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c,<sp/><ref refid="classGecode_1_1BoolVar" kindref="compound">BoolVar</ref><sp/>m)<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Int_1_1Cumulative_1_1ManFixPTask_1a917057cd0fe6074e037d11fa6ab67073" kindref="member">ManFixPTask::init</ref>(s,p,c);<sp/><ref refid="classGecode_1_1Int_1_1ManToOptTask_1a0ea4b8f9b86b8f01ba3e302e5691a348" kindref="member">_m</ref>=m;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>forceinline</highlight></codeline>
<codeline lineno="181" refid="classGecode_1_1Int_1_1Cumulative_1_1OptFixPTask_1a8dc9b1d67683a408c479856a9d0c7df6" refkind="member"><highlight class="normal"><sp/><sp/>OptFixPTask::operator<sp/><ref refid="classGecode_1_1Int_1_1Unary_1_1OptFixPTask" kindref="compound">Unary::OptFixPTask</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Int_1_1Unary_1_1OptFixPTask" kindref="compound">Unary::OptFixPTask</ref>(_s,_p,_m);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Char,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Traits&gt;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>std::basic_ostream&lt;Char,Traits&gt;&amp;</highlight></codeline>
<codeline lineno="187" refid="classGecode_1_1Int_1_1Cumulative_1_1OptFixPTask_1a50cf34a570a3e70eec51465c91b3decc" refkind="member"><highlight class="normal"><sp/><sp/>operator<sp/>&lt;&lt;(std::basic_ostream&lt;Char,Traits&gt;&amp;<sp/>os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Int_1_1Cumulative_1_1OptFixPTask" kindref="compound">OptFixPTask</ref>&amp;<sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>std::basic_ostringstream&lt;Char,Traits&gt;<sp/>s;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>s.copyfmt(os);<sp/>s.width(0);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>&lt;&lt;<sp/>t.est()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>t.pmin()<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>t.c()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>t.lct()<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>(t.mandatory()<sp/>?<sp/></highlight><highlight class="charliteral">&apos;1&apos;</highlight><highlight class="normal"><sp/>:<sp/>(t.optional()<sp/>?<sp/></highlight><highlight class="charliteral">&apos;?&apos;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os<sp/>&lt;&lt;<sp/>s.str();</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="196"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Optional<sp/>fixed<sp/>task</highlight></codeline>
<codeline lineno="197"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>forceinline</highlight></codeline>
<codeline lineno="200" refid="classGecode_1_1Int_1_1Cumulative_1_1OptFixPSETask_1ac9b916153f917da130a158d3fa9a00be" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1Cumulative_1_1OptFixPSETask_1ac9b916153f917da130a158d3fa9a00be" kindref="member">OptFixPSETask::OptFixPSETask</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>forceinline</highlight></codeline>
<codeline lineno="202" refid="classGecode_1_1Int_1_1Cumulative_1_1OptFixPSETask_1a1159576181729b3fc3bb9000b511dc68" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1Cumulative_1_1OptFixPSETask_1ac9b916153f917da130a158d3fa9a00be" kindref="member">OptFixPSETask::OptFixPSETask</ref>(<ref refid="namespaceGecode_1a72036d0d1ce62f603451ef48e93c3433" kindref="member">TaskType</ref><sp/>t,<ref refid="classGecode_1_1IntVar" kindref="compound">IntVar</ref><sp/>s,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c,<ref refid="classGecode_1_1BoolVar" kindref="compound">BoolVar</ref><sp/>m)<sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Int_1_1Cumulative_1_1ManFixPSETask_1a3f35e0f31a83014bbc93f96a5d63500f" kindref="member">ManFixPSETask::init</ref>(t,s,p,c);<sp/><ref refid="classGecode_1_1Int_1_1ManToOptTask_1a0ea4b8f9b86b8f01ba3e302e5691a348" kindref="member">_m</ref>=m;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206" refid="classGecode_1_1Int_1_1Cumulative_1_1OptFixPSETask_1aa90358d1b86ea8bfe12ad45aa86514a0" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1Cumulative_1_1OptFixPSETask_1aa90358d1b86ea8bfe12ad45aa86514a0" kindref="member">OptFixPSETask::init</ref>(<ref refid="namespaceGecode_1a72036d0d1ce62f603451ef48e93c3433" kindref="member">TaskType</ref><sp/>t,<sp/><ref refid="classGecode_1_1IntVar" kindref="compound">IntVar</ref><sp/>s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c,<sp/><ref refid="classGecode_1_1BoolVar" kindref="compound">BoolVar</ref><sp/>m)<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Int_1_1Cumulative_1_1ManFixPSETask_1a3f35e0f31a83014bbc93f96a5d63500f" kindref="member">ManFixPSETask::init</ref>(t,s,p,c);<sp/><ref refid="classGecode_1_1Int_1_1ManToOptTask_1a0ea4b8f9b86b8f01ba3e302e5691a348" kindref="member">_m</ref>=m;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>forceinline</highlight></codeline>
<codeline lineno="210" refid="classGecode_1_1Int_1_1Cumulative_1_1OptFixPSETask_1a5d1d49d7ae651cf83b97321fcdc643a3" refkind="member"><highlight class="normal"><sp/><sp/>OptFixPSETask::operator<sp/><ref refid="classGecode_1_1Int_1_1Unary_1_1OptFixPSETask" kindref="compound">Unary::OptFixPSETask</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Int_1_1Unary_1_1OptFixPSETask" kindref="compound">Unary::OptFixPSETask</ref>(_t,_s,_p,_m);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Char,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Traits&gt;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>std::basic_ostream&lt;Char,Traits&gt;&amp;</highlight></codeline>
<codeline lineno="216" refid="classGecode_1_1Int_1_1Cumulative_1_1OptFixPSETask_1a8383fbd11a14bead02befa484b7339c6" refkind="member"><highlight class="normal"><sp/><sp/>operator<sp/>&lt;&lt;(std::basic_ostream&lt;Char,Traits&gt;&amp;<sp/>os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Int_1_1Cumulative_1_1OptFixPSETask" kindref="compound">OptFixPSETask</ref>&amp;<sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>std::basic_ostringstream&lt;Char,Traits&gt;<sp/>s;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>s.copyfmt(os);<sp/>s.width(0);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>&lt;&lt;<sp/>t.est()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>t.pmin()<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>t.c()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>t.lct()<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>(t.mandatory()<sp/>?<sp/></highlight><highlight class="charliteral">&apos;1&apos;</highlight><highlight class="normal"><sp/>:<sp/>(t.optional()<sp/>?<sp/></highlight><highlight class="charliteral">&apos;?&apos;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os<sp/>&lt;&lt;<sp/>s.str();</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="225"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Optional<sp/>flexible<sp/>task</highlight></codeline>
<codeline lineno="226"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>forceinline</highlight></codeline>
<codeline lineno="229" refid="classGecode_1_1Int_1_1Cumulative_1_1OptFlexTask_1a3ec37a1c4125dce34740ca360324bf35" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1Cumulative_1_1OptFlexTask_1a3ec37a1c4125dce34740ca360324bf35" kindref="member">OptFlexTask::OptFlexTask</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>forceinline</highlight></codeline>
<codeline lineno="231" refid="classGecode_1_1Int_1_1Cumulative_1_1OptFlexTask_1a0031c0585f635f153436c56fe1dbc21e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1Cumulative_1_1OptFlexTask_1a3ec37a1c4125dce34740ca360324bf35" kindref="member">OptFlexTask::OptFlexTask</ref>(<ref refid="classGecode_1_1IntVar" kindref="compound">IntVar</ref><sp/>s,<sp/><ref refid="classGecode_1_1IntVar" kindref="compound">IntVar</ref><sp/>p,<sp/><ref refid="classGecode_1_1IntVar" kindref="compound">IntVar</ref><sp/>e,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c,<sp/><ref refid="classGecode_1_1BoolVar" kindref="compound">BoolVar</ref><sp/>m)<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Int_1_1Cumulative_1_1ManFlexTask_1a7c4a548646bf957ed37ee28e21b00082" kindref="member">ManFlexTask::init</ref>(s,p,e,c);<sp/><ref refid="classGecode_1_1Int_1_1ManToOptTask_1a0ea4b8f9b86b8f01ba3e302e5691a348" kindref="member">_m</ref>=m;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235" refid="classGecode_1_1Int_1_1Cumulative_1_1OptFlexTask_1a301ada192d6a5ccc9b71434075167ba0" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1Cumulative_1_1OptFlexTask_1a301ada192d6a5ccc9b71434075167ba0" kindref="member">OptFlexTask::init</ref>(<ref refid="classGecode_1_1IntVar" kindref="compound">IntVar</ref><sp/>s,<sp/><ref refid="classGecode_1_1IntVar" kindref="compound">IntVar</ref><sp/>p,<sp/><ref refid="classGecode_1_1IntVar" kindref="compound">IntVar</ref><sp/>e,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c,<sp/><ref refid="classGecode_1_1BoolVar" kindref="compound">BoolVar</ref><sp/>m)<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Int_1_1Cumulative_1_1ManFlexTask_1a7c4a548646bf957ed37ee28e21b00082" kindref="member">ManFlexTask::init</ref>(s,p,e,c);<sp/><ref refid="classGecode_1_1Int_1_1ManToOptTask_1a0ea4b8f9b86b8f01ba3e302e5691a348" kindref="member">_m</ref>=m;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>forceinline</highlight></codeline>
<codeline lineno="239" refid="classGecode_1_1Int_1_1Cumulative_1_1OptFlexTask_1a95face8d75537097911d9292cf477693" refkind="member"><highlight class="normal"><sp/><sp/>OptFlexTask::operator<sp/><ref refid="classGecode_1_1Int_1_1Unary_1_1OptFlexTask" kindref="compound">Unary::OptFlexTask</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Int_1_1Unary_1_1OptFlexTask" kindref="compound">Unary::OptFlexTask</ref>(_s,_p,_e,_m);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Char,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Traits&gt;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>std::basic_ostream&lt;Char,Traits&gt;&amp;</highlight></codeline>
<codeline lineno="245" refid="classGecode_1_1Int_1_1Cumulative_1_1OptFlexTask_1aa0c7aa57d541eaa71bdc7164106c8e97" refkind="member"><highlight class="normal"><sp/><sp/>operator<sp/>&lt;&lt;(std::basic_ostream&lt;Char,Traits&gt;&amp;<sp/>os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Int_1_1Cumulative_1_1OptFlexTask" kindref="compound">OptFlexTask</ref>&amp;<sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>std::basic_ostringstream&lt;Char,Traits&gt;<sp/>s;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>s.copyfmt(os);<sp/>s.width(0);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>&lt;&lt;<sp/>t.est()<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>t.lst()<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>t.pmin()<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>t.pmax()<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>t.c()<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>t.ect()<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>t.lct()</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>(t.mandatory()<sp/>?<sp/></highlight><highlight class="charliteral">&apos;1&apos;</highlight><highlight class="normal"><sp/>:<sp/>(t.optional()<sp/>?<sp/></highlight><highlight class="charliteral">&apos;?&apos;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os<sp/>&lt;&lt;<sp/>s.str();</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="254"><highlight class="normal">}}}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="comment">//<sp/>STATISTICS:<sp/>int-var</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/usr/include/gecode/int/cumulative/task.hpp"/>
  </compounddef>
</doxygen>
