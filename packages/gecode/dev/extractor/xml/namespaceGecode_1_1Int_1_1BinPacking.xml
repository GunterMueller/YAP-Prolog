<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="namespaceGecode_1_1Int_1_1BinPacking" kind="namespace">
    <compoundname>Gecode::Int::BinPacking</compoundname>
    <innerclass refid="classGecode_1_1Int_1_1BinPacking_1_1Item" prot="public">Gecode::Int::BinPacking::Item</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1BinPacking_1_1SizeSet" prot="public">Gecode::Int::BinPacking::SizeSet</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1BinPacking_1_1SizeSetMinusOne" prot="public">Gecode::Int::BinPacking::SizeSetMinusOne</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1BinPacking_1_1Pack" prot="public">Gecode::Int::BinPacking::Pack</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1BinPacking_1ae23603340a1d27e314dc1dd5c01d9571" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>forceinline bool</type>
        <definition>bool Gecode::Int::BinPacking::same</definition>
        <argsstring>(const Item &amp;i, const Item &amp;j)</argsstring>
        <name>same</name>
        <param>
          <type>const <ref refid="classGecode_1_1Int_1_1BinPacking_1_1Item" kindref="compound">Item</ref> &amp;</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1Int_1_1BinPacking_1_1Item" kindref="compound">Item</ref> &amp;</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>Whether two items are the same. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/bin-packing/propagate.hpp" line="76" column="1" bodyfile="/usr/include/gecode/int/bin-packing/propagate.hpp" bodystart="76" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1BinPacking_1a9a3b38b14c2b03229f2e1d5aa687f674" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>forceinline bool</type>
        <definition>bool Gecode::Int::BinPacking::before</definition>
        <argsstring>(const Item &amp;i, const Item &amp;j)</argsstring>
        <name>before</name>
        <param>
          <type>const <ref refid="classGecode_1_1Int_1_1BinPacking_1_1Item" kindref="compound">Item</ref> &amp;</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1Int_1_1BinPacking_1_1Item" kindref="compound">Item</ref> &amp;</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>Test whether one item is before another. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/bin-packing/propagate.hpp" line="80" column="1" bodyfile="/usr/include/gecode/int/bin-packing/propagate.hpp" bodystart="80" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1BinPacking_1a5d00032cd22565f01d82f887caecda5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>forceinline bool</type>
        <definition>bool Gecode::Int::BinPacking::operator&lt;</definition>
        <argsstring>(const Item &amp;i, const Item &amp;j)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="classGecode_1_1Int_1_1BinPacking_1_1Item" kindref="compound">Item</ref> &amp;</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1Int_1_1BinPacking_1_1Item" kindref="compound">Item</ref> &amp;</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>For sorting according to size. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/bin-packing/propagate.hpp" line="86" column="1" bodyfile="/usr/include/gecode/int/bin-packing/propagate.hpp" bodystart="87" bodyend="89"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Bin-packing propagators </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/usr/include/gecode/int/bin-packing/propagate.hpp" line="38" column="1"/>
  </compounddef>
</doxygen>
