<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="group__TaskModelMiniModelIntAlias" kind="group">
    <compoundname>TaskModelMiniModelIntAlias</compoundname>
    <title>Aliases for integer constraints</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__TaskModelMiniModelIntAlias_1ga69f07c384f2b43fff58648bfb3522187" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Gecode::atmost</definition>
        <argsstring>(Home home, const IntVarArgs &amp;x, int n, int m, IntConLevel icl=ICL_DEF)</argsstring>
        <name>atmost</name>
        <param>
          <type>Home</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const IntVarArgs &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>int</type>
          <declname>m</declname>
        </param>
        <param>
          <type>IntConLevel</type>
          <declname>icl</declname>
          <defval>ICL_DEF</defval>
        </param>
        <briefdescription>
<para>Post constraint <formula id="329">$\#\{i\in\{0,\ldots,|x|-1\}\;|\;x_i=n\}\leq m$</formula>. </para>        </briefdescription>
        <detaileddescription>
<para>Supports domain consistent propagation only. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/minimodel.hh" line="1675" column="1" bodyfile="/usr/include/gecode/minimodel.hh" bodystart="1675" bodyend="1678"/>
      </memberdef>
      <memberdef kind="function" id="group__TaskModelMiniModelIntAlias_1ga46cdc3499e9b953cb6b3b6c28e89d97b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Gecode::atmost</definition>
        <argsstring>(Home home, const IntVarArgs &amp;x, IntVar y, int m, IntConLevel icl=ICL_DEF)</argsstring>
        <name>atmost</name>
        <param>
          <type>Home</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const IntVarArgs &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>IntVar</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>m</declname>
        </param>
        <param>
          <type>IntConLevel</type>
          <declname>icl</declname>
          <defval>ICL_DEF</defval>
        </param>
        <briefdescription>
<para>Post constraint <formula id="330">$\#\{i\in\{0,\ldots,|x|-1\}\;|\;x_i=y\}\leq m$</formula>. </para>        </briefdescription>
        <detaileddescription>
<para>Supports domain consistent propagation only. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/minimodel.hh" line="1684" column="1" bodyfile="/usr/include/gecode/minimodel.hh" bodystart="1684" bodyend="1687"/>
      </memberdef>
      <memberdef kind="function" id="group__TaskModelMiniModelIntAlias_1gad638750dbdcbbf40db4855c833886317" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Gecode::atmost</definition>
        <argsstring>(Home home, const IntVarArgs &amp;x, const IntArgs &amp;y, int m, IntConLevel icl=ICL_DEF)</argsstring>
        <name>atmost</name>
        <param>
          <type>Home</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const IntVarArgs &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const IntArgs &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>m</declname>
        </param>
        <param>
          <type>IntConLevel</type>
          <declname>icl</declname>
          <defval>ICL_DEF</defval>
        </param>
        <briefdescription>
<para>Post constraint <formula id="331">$\#\{i\in\{0,\ldots,|x|-1\}\;|\;x_i=y_i\}\leq m$</formula>. </para>        </briefdescription>
        <detaileddescription>
<para>Supports domain consistent propagation only.</para><para>Throws an exception of type <ref refid="classGecode_1_1Int_1_1ArgumentSizeMismatch" kindref="compound">Int::ArgumentSizeMismatch</ref>, if <emphasis>x</emphasis> and <emphasis>y</emphasis> are of different size. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/minimodel.hh" line="1696" column="1" bodyfile="/usr/include/gecode/minimodel.hh" bodystart="1696" bodyend="1699"/>
      </memberdef>
      <memberdef kind="function" id="group__TaskModelMiniModelIntAlias_1ga97ef0b5c7871c4cb7dcf5c5af5a48c96" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Gecode::atmost</definition>
        <argsstring>(Home home, const IntVarArgs &amp;x, int n, IntVar z, IntConLevel icl=ICL_DEF)</argsstring>
        <name>atmost</name>
        <param>
          <type>Home</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const IntVarArgs &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>IntVar</type>
          <declname>z</declname>
        </param>
        <param>
          <type>IntConLevel</type>
          <declname>icl</declname>
          <defval>ICL_DEF</defval>
        </param>
        <briefdescription>
<para>Post constraint <formula id="332">$\#\{i\in\{0,\ldots,|x|-1\}\;|\;x_i=n\}\leq z$</formula>. </para>        </briefdescription>
        <detaileddescription>
<para>Supports domain consistent propagation only. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/minimodel.hh" line="1705" column="1" bodyfile="/usr/include/gecode/minimodel.hh" bodystart="1705" bodyend="1708"/>
      </memberdef>
      <memberdef kind="function" id="group__TaskModelMiniModelIntAlias_1ga0e42328f0267b954e3ff9d811facb5d3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Gecode::atmost</definition>
        <argsstring>(Home home, const IntVarArgs &amp;x, IntVar y, IntVar z, IntConLevel icl=ICL_DEF)</argsstring>
        <name>atmost</name>
        <param>
          <type>Home</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const IntVarArgs &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>IntVar</type>
          <declname>y</declname>
        </param>
        <param>
          <type>IntVar</type>
          <declname>z</declname>
        </param>
        <param>
          <type>IntConLevel</type>
          <declname>icl</declname>
          <defval>ICL_DEF</defval>
        </param>
        <briefdescription>
<para>Post constraint <formula id="333">$\#\{i\in\{0,\ldots,|x|-1\}\;|\;x_i=y\}\leq z$</formula>. </para>        </briefdescription>
        <detaileddescription>
<para>Supports domain consistent propagation only. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/minimodel.hh" line="1714" column="1" bodyfile="/usr/include/gecode/minimodel.hh" bodystart="1714" bodyend="1717"/>
      </memberdef>
      <memberdef kind="function" id="group__TaskModelMiniModelIntAlias_1ga7ad1ef027383013731ecbef98ba119a5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Gecode::atmost</definition>
        <argsstring>(Home home, const IntVarArgs &amp;x, const IntArgs &amp;y, IntVar z, IntConLevel icl=ICL_DEF)</argsstring>
        <name>atmost</name>
        <param>
          <type>Home</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const IntVarArgs &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const IntArgs &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>IntVar</type>
          <declname>z</declname>
        </param>
        <param>
          <type>IntConLevel</type>
          <declname>icl</declname>
          <defval>ICL_DEF</defval>
        </param>
        <briefdescription>
<para>Post constraint <formula id="334">$\#\{i\in\{0,\ldots,|x|-1\}\;|\;x_i=y_i\}\leq z$</formula>. </para>        </briefdescription>
        <detaileddescription>
<para>Supports domain consistent propagation only.</para><para>Throws an exception of type <ref refid="classGecode_1_1Int_1_1ArgumentSizeMismatch" kindref="compound">Int::ArgumentSizeMismatch</ref>, if <emphasis>x</emphasis> and <emphasis>y</emphasis> are of different size. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/minimodel.hh" line="1726" column="1" bodyfile="/usr/include/gecode/minimodel.hh" bodystart="1726" bodyend="1729"/>
      </memberdef>
      <memberdef kind="function" id="group__TaskModelMiniModelIntAlias_1gab71034829f9008e332a406d7825a9ea3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Gecode::atleast</definition>
        <argsstring>(Home home, const IntVarArgs &amp;x, int n, int m, IntConLevel icl=ICL_DEF)</argsstring>
        <name>atleast</name>
        <param>
          <type>Home</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const IntVarArgs &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>int</type>
          <declname>m</declname>
        </param>
        <param>
          <type>IntConLevel</type>
          <declname>icl</declname>
          <defval>ICL_DEF</defval>
        </param>
        <briefdescription>
<para>Post constraint <formula id="335">$\#\{i\in\{0,\ldots,|x|-1\}\;|\;x_i=n\}\geq m$</formula>. </para>        </briefdescription>
        <detaileddescription>
<para>Supports domain consistent propagation only. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/minimodel.hh" line="1736" column="1" bodyfile="/usr/include/gecode/minimodel.hh" bodystart="1736" bodyend="1739"/>
      </memberdef>
      <memberdef kind="function" id="group__TaskModelMiniModelIntAlias_1ga0eb65a55ed75c57a95af9ceb4f5b623b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Gecode::atleast</definition>
        <argsstring>(Home home, const IntVarArgs &amp;x, IntVar y, int m, IntConLevel icl=ICL_DEF)</argsstring>
        <name>atleast</name>
        <param>
          <type>Home</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const IntVarArgs &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>IntVar</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>m</declname>
        </param>
        <param>
          <type>IntConLevel</type>
          <declname>icl</declname>
          <defval>ICL_DEF</defval>
        </param>
        <briefdescription>
<para>Post constraint <formula id="336">$\#\{i\in\{0,\ldots,|x|-1\}\;|\;x_i=y\}\geq m$</formula>. </para>        </briefdescription>
        <detaileddescription>
<para>Supports domain consistent propagation only. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/minimodel.hh" line="1745" column="1" bodyfile="/usr/include/gecode/minimodel.hh" bodystart="1745" bodyend="1748"/>
      </memberdef>
      <memberdef kind="function" id="group__TaskModelMiniModelIntAlias_1gac3966869f841811cf64efbc44cd2e0a7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Gecode::atleast</definition>
        <argsstring>(Home home, const IntVarArgs &amp;x, const IntArgs &amp;y, int m, IntConLevel icl=ICL_DEF)</argsstring>
        <name>atleast</name>
        <param>
          <type>Home</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const IntVarArgs &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const IntArgs &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>m</declname>
        </param>
        <param>
          <type>IntConLevel</type>
          <declname>icl</declname>
          <defval>ICL_DEF</defval>
        </param>
        <briefdescription>
<para>Post constraint <formula id="337">$\#\{i\in\{0,\ldots,|x|-1\}\;|\;x_i=y_i\}\geq m$</formula>. </para>        </briefdescription>
        <detaileddescription>
<para>Supports domain consistent propagation only.</para><para>Throws an exception of type <ref refid="classGecode_1_1Int_1_1ArgumentSizeMismatch" kindref="compound">Int::ArgumentSizeMismatch</ref>, if <emphasis>x</emphasis> and <emphasis>y</emphasis> are of different size. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/minimodel.hh" line="1757" column="1" bodyfile="/usr/include/gecode/minimodel.hh" bodystart="1757" bodyend="1760"/>
      </memberdef>
      <memberdef kind="function" id="group__TaskModelMiniModelIntAlias_1gac373f14f2fd84a50dc30feaa4962fcb1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Gecode::atleast</definition>
        <argsstring>(Home home, const IntVarArgs &amp;x, int n, IntVar z, IntConLevel icl=ICL_DEF)</argsstring>
        <name>atleast</name>
        <param>
          <type>Home</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const IntVarArgs &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>IntVar</type>
          <declname>z</declname>
        </param>
        <param>
          <type>IntConLevel</type>
          <declname>icl</declname>
          <defval>ICL_DEF</defval>
        </param>
        <briefdescription>
<para>Post constraint <formula id="338">$\#\{i\in\{0,\ldots,|x|-1\}\;|\;x_i=n\}\geq z$</formula>. </para>        </briefdescription>
        <detaileddescription>
<para>Supports domain consistent propagation only. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/minimodel.hh" line="1766" column="1" bodyfile="/usr/include/gecode/minimodel.hh" bodystart="1766" bodyend="1769"/>
      </memberdef>
      <memberdef kind="function" id="group__TaskModelMiniModelIntAlias_1ga8edd04a94fc63ce2ab838ca2b7eee075" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Gecode::atleast</definition>
        <argsstring>(Home home, const IntVarArgs &amp;x, IntVar y, IntVar z, IntConLevel icl=ICL_DEF)</argsstring>
        <name>atleast</name>
        <param>
          <type>Home</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const IntVarArgs &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>IntVar</type>
          <declname>y</declname>
        </param>
        <param>
          <type>IntVar</type>
          <declname>z</declname>
        </param>
        <param>
          <type>IntConLevel</type>
          <declname>icl</declname>
          <defval>ICL_DEF</defval>
        </param>
        <briefdescription>
<para>Post constraint <formula id="339">$\#\{i\in\{0,\ldots,|x|-1\}\;|\;x_i=y\}\geq z$</formula>. </para>        </briefdescription>
        <detaileddescription>
<para>Supports domain consistent propagation only. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/minimodel.hh" line="1775" column="1" bodyfile="/usr/include/gecode/minimodel.hh" bodystart="1775" bodyend="1778"/>
      </memberdef>
      <memberdef kind="function" id="group__TaskModelMiniModelIntAlias_1ga599e8330374a5ea9740b76e639470639" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Gecode::atleast</definition>
        <argsstring>(Home home, const IntVarArgs &amp;x, const IntArgs &amp;y, IntVar z, IntConLevel icl=ICL_DEF)</argsstring>
        <name>atleast</name>
        <param>
          <type>Home</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const IntVarArgs &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const IntArgs &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>IntVar</type>
          <declname>z</declname>
        </param>
        <param>
          <type>IntConLevel</type>
          <declname>icl</declname>
          <defval>ICL_DEF</defval>
        </param>
        <briefdescription>
<para>Post constraint <formula id="340">$\#\{i\in\{0,\ldots,|x|-1\}\;|\;x_i=y_i\}\geq z$</formula>. </para>        </briefdescription>
        <detaileddescription>
<para>Supports domain consistent propagation only.</para><para>Throws an exception of type <ref refid="classGecode_1_1Int_1_1ArgumentSizeMismatch" kindref="compound">Int::ArgumentSizeMismatch</ref>, if <emphasis>x</emphasis> and <emphasis>y</emphasis> are of different size. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/minimodel.hh" line="1787" column="1" bodyfile="/usr/include/gecode/minimodel.hh" bodystart="1787" bodyend="1790"/>
      </memberdef>
      <memberdef kind="function" id="group__TaskModelMiniModelIntAlias_1gadc52f4ca87e85283ec3a2a392500b347" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Gecode::exactly</definition>
        <argsstring>(Home home, const IntVarArgs &amp;x, int n, int m, IntConLevel icl=ICL_DEF)</argsstring>
        <name>exactly</name>
        <param>
          <type>Home</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const IntVarArgs &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>int</type>
          <declname>m</declname>
        </param>
        <param>
          <type>IntConLevel</type>
          <declname>icl</declname>
          <defval>ICL_DEF</defval>
        </param>
        <briefdescription>
<para>Post constraint <formula id="341">$\#\{i\in\{0,\ldots,|x|-1\}\;|\;x_i=n\}=m$</formula>. </para>        </briefdescription>
        <detaileddescription>
<para>Supports domain consistent propagation only. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/minimodel.hh" line="1797" column="1" bodyfile="/usr/include/gecode/minimodel.hh" bodystart="1797" bodyend="1800"/>
      </memberdef>
      <memberdef kind="function" id="group__TaskModelMiniModelIntAlias_1gae6b8cde090f8cdd0c3c572ead51620e2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Gecode::exactly</definition>
        <argsstring>(Home home, const IntVarArgs &amp;x, IntVar y, int m, IntConLevel icl=ICL_DEF)</argsstring>
        <name>exactly</name>
        <param>
          <type>Home</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const IntVarArgs &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>IntVar</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>m</declname>
        </param>
        <param>
          <type>IntConLevel</type>
          <declname>icl</declname>
          <defval>ICL_DEF</defval>
        </param>
        <briefdescription>
<para>Post constraint <formula id="342">$\#\{i\in\{0,\ldots,|x|-1\}\;|\;x_i=y\}=m$</formula>. </para>        </briefdescription>
        <detaileddescription>
<para>Supports domain consistent propagation only. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/minimodel.hh" line="1806" column="1" bodyfile="/usr/include/gecode/minimodel.hh" bodystart="1806" bodyend="1809"/>
      </memberdef>
      <memberdef kind="function" id="group__TaskModelMiniModelIntAlias_1ga180da2f81c64a4aeb2e382f2498e820f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Gecode::exactly</definition>
        <argsstring>(Home home, const IntVarArgs &amp;x, const IntArgs &amp;y, int m, IntConLevel icl=ICL_DEF)</argsstring>
        <name>exactly</name>
        <param>
          <type>Home</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const IntVarArgs &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const IntArgs &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>m</declname>
        </param>
        <param>
          <type>IntConLevel</type>
          <declname>icl</declname>
          <defval>ICL_DEF</defval>
        </param>
        <briefdescription>
<para>Post constraint <formula id="343">$\#\{i\in\{0,\ldots,|x|-1\}\;|\;x_i=y_i\}=m$</formula>. </para>        </briefdescription>
        <detaileddescription>
<para>Supports domain consistent propagation only.</para><para>Throws an exception of type <ref refid="classGecode_1_1Int_1_1ArgumentSizeMismatch" kindref="compound">Int::ArgumentSizeMismatch</ref>, if <emphasis>x</emphasis> and <emphasis>y</emphasis> are of different size. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/minimodel.hh" line="1818" column="1" bodyfile="/usr/include/gecode/minimodel.hh" bodystart="1818" bodyend="1821"/>
      </memberdef>
      <memberdef kind="function" id="group__TaskModelMiniModelIntAlias_1gaad3bce5a90b320be7c017ba1af14de80" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Gecode::exactly</definition>
        <argsstring>(Home home, const IntVarArgs &amp;x, int n, IntVar z, IntConLevel icl=ICL_DEF)</argsstring>
        <name>exactly</name>
        <param>
          <type>Home</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const IntVarArgs &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>IntVar</type>
          <declname>z</declname>
        </param>
        <param>
          <type>IntConLevel</type>
          <declname>icl</declname>
          <defval>ICL_DEF</defval>
        </param>
        <briefdescription>
<para>Post constraint <formula id="344">$\#\{i\in\{0,\ldots,|x|-1\}\;|\;x_i=n\}=z$</formula>. </para>        </briefdescription>
        <detaileddescription>
<para>Supports domain consistent propagation only. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/minimodel.hh" line="1827" column="1" bodyfile="/usr/include/gecode/minimodel.hh" bodystart="1827" bodyend="1830"/>
      </memberdef>
      <memberdef kind="function" id="group__TaskModelMiniModelIntAlias_1gaa0f1309cc735623ab06a05e0522b47db" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Gecode::exactly</definition>
        <argsstring>(Home home, const IntVarArgs &amp;x, IntVar y, IntVar z, IntConLevel icl=ICL_DEF)</argsstring>
        <name>exactly</name>
        <param>
          <type>Home</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const IntVarArgs &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>IntVar</type>
          <declname>y</declname>
        </param>
        <param>
          <type>IntVar</type>
          <declname>z</declname>
        </param>
        <param>
          <type>IntConLevel</type>
          <declname>icl</declname>
          <defval>ICL_DEF</defval>
        </param>
        <briefdescription>
<para>Post constraint <formula id="345">$\#\{i\in\{0,\ldots,|x|-1\}\;|\;x_i=y\}=z$</formula>. </para>        </briefdescription>
        <detaileddescription>
<para>Supports domain consistent propagation only. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/minimodel.hh" line="1836" column="1" bodyfile="/usr/include/gecode/minimodel.hh" bodystart="1836" bodyend="1839"/>
      </memberdef>
      <memberdef kind="function" id="group__TaskModelMiniModelIntAlias_1ga8c75768e09a1449dea4755955b4caa00" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Gecode::exactly</definition>
        <argsstring>(Home home, const IntVarArgs &amp;x, const IntArgs &amp;y, IntVar z, IntConLevel icl=ICL_DEF)</argsstring>
        <name>exactly</name>
        <param>
          <type>Home</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const IntVarArgs &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const IntArgs &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>IntVar</type>
          <declname>z</declname>
        </param>
        <param>
          <type>IntConLevel</type>
          <declname>icl</declname>
          <defval>ICL_DEF</defval>
        </param>
        <briefdescription>
<para>Post constraint <formula id="346">$\#\{i\in\{0,\ldots,|x|-1\}\;|\;x_i=y_i\}=z$</formula>. </para>        </briefdescription>
        <detaileddescription>
<para>Supports domain consistent propagation only.</para><para>Throws an exception of type <ref refid="classGecode_1_1Int_1_1ArgumentSizeMismatch" kindref="compound">Int::ArgumentSizeMismatch</ref>, if <emphasis>x</emphasis> and <emphasis>y</emphasis> are of different size. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/minimodel.hh" line="1848" column="1" bodyfile="/usr/include/gecode/minimodel.hh" bodystart="1848" bodyend="1851"/>
      </memberdef>
      <memberdef kind="function" id="group__TaskModelMiniModelIntAlias_1ga70b332a6bb1c6fa6f1cbec83c74f4d81" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Gecode::lex</definition>
        <argsstring>(Home home, const IntVarArgs &amp;x, IntRelType r, const IntVarArgs &amp;y, IntConLevel icl=ICL_DEF)</argsstring>
        <name>lex</name>
        <param>
          <type>Home</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const IntVarArgs &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>IntRelType</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const IntVarArgs &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>IntConLevel</type>
          <declname>icl</declname>
          <defval>ICL_DEF</defval>
        </param>
        <briefdescription>
<para>Post lexical order between <emphasis>x</emphasis> and <emphasis>y</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/minimodel.hh" line="1855" column="1" bodyfile="/usr/include/gecode/minimodel.hh" bodystart="1855" bodyend="1858"/>
      </memberdef>
      <memberdef kind="function" id="group__TaskModelMiniModelIntAlias_1ga43a2c5fac05c3023718a73fad03bc6f8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Gecode::lex</definition>
        <argsstring>(Home home, const BoolVarArgs &amp;x, IntRelType r, const BoolVarArgs &amp;y, IntConLevel icl=ICL_DEF)</argsstring>
        <name>lex</name>
        <param>
          <type>Home</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const BoolVarArgs &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>IntRelType</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const BoolVarArgs &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>IntConLevel</type>
          <declname>icl</declname>
          <defval>ICL_DEF</defval>
        </param>
        <briefdescription>
<para>Post lexical order between <emphasis>x</emphasis> and <emphasis>y</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/minimodel.hh" line="1862" column="1" bodyfile="/usr/include/gecode/minimodel.hh" bodystart="1862" bodyend="1865"/>
      </memberdef>
      <memberdef kind="function" id="group__TaskModelMiniModelIntAlias_1ga3132bb6ef494147e4400eb0e163425b0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Gecode::values</definition>
        <argsstring>(Home home, const IntVarArgs &amp;x, IntSet y, IntConLevel icl=ICL_DEF)</argsstring>
        <name>values</name>
        <param>
          <type>Home</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const IntVarArgs &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>IntSet</type>
          <declname>y</declname>
        </param>
        <param>
          <type>IntConLevel</type>
          <declname>icl</declname>
          <defval>ICL_DEF</defval>
        </param>
        <briefdescription>
<para>Post constraint <formula id="347">$\{x_0,\dots,x_{n-1}\}=y$</formula>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/minimodel.hh" line="1869" column="1" bodyfile="/usr/include/gecode/minimodel.hh" bodystart="1869" bodyend="1873"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Contains definitions of common constraints which have different names in <ref refid="namespaceGecode" kindref="compound">Gecode</ref>. </para>    </detaileddescription>
  </compounddef>
</doxygen>
