<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classGecode_1_1Int_1_1Element_1_1Int_1_1IterVal" kind="class" prot="protected">
    <compoundname>Gecode::Int::Element::Int::IterVal</compoundname>
    <includes refid="int_2element_8hh" local="no">element.hh</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classGecode_1_1Int_1_1Element_1_1Int_1_1IterVal_1a95290a2a8d7bdcb31c3cba816491848a" prot="private" static="no" mutable="no">
        <type><ref refid="classGecode_1_1Int_1_1Element_1_1Int_1_1IdxVal" kindref="compound">IdxVal</ref> *</type>
        <definition>IdxVal* Gecode::Int::Element::Int&lt; V0, V1, Idx, Val &gt;::IterVal::iv</definition>
        <argsstring></argsstring>
        <name>iv</name>
        <briefdescription>
<para>The index value data structure. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/element.hh" line="109" column="1" bodyfile="/usr/include/gecode/int/element.hh" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Int_1_1Element_1_1Int_1_1IterVal_1a526a5880a7d326b99a77e28e9ad1d36a" prot="private" static="no" mutable="no">
        <type>Idx</type>
        <definition>Idx Gecode::Int::Element::Int&lt; V0, V1, Idx, Val &gt;::IterVal::i</definition>
        <argsstring></argsstring>
        <name>i</name>
        <briefdescription>
<para>Current index value pair. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/element.hh" line="110" column="1" bodyfile="/usr/include/gecode/int/element.hh" bodystart="110" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classGecode_1_1Int_1_1Element_1_1Int_1_1IterVal_1a70a1e4f1de37826c04c7359b2b171d6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Int::Element::Int&lt; V0, V1, Idx, Val &gt;::IterVal::IterVal</definition>
        <argsstring>(IdxVal *iv)</argsstring>
        <name>IterVal</name>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1Element_1_1Int_1_1IdxVal" kindref="compound">IdxVal</ref> *</type>
          <declname>iv</declname>
        </param>
        <briefdescription>
<para>Initialize with start. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/element.hh" line="113" column="1" bodyfile="/usr/include/gecode/int/element/int.hpp" bodystart="90" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Element_1_1Int_1_1IterVal_1a4a189cf266845890093e043d24ea46e6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::Int::Element::Int&lt; V0, V1, Idx, Val &gt;::IterVal::operator()</definition>
        <argsstring>(void) const </argsstring>
        <name>operator()</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test whether more pairs to be iterated. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/element.hh" line="115" column="1" bodyfile="/usr/include/gecode/int/element/int.hpp" bodystart="94" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Element_1_1Int_1_1IterVal_1a4e5c38628ff48ee7fab5941a99204ef0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Int::Element::Int&lt; V0, V1, Idx, Val &gt;::IterVal::operator++</definition>
        <argsstring>(void)</argsstring>
        <name>operator++</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Move to next index value pair (next value) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/element.hh" line="117" column="1" bodyfile="/usr/include/gecode/int/element/int.hpp" bodystart="99" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Element_1_1Int_1_1IterVal_1a871293a7f9d7d26344adf34f8a6bfa72" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Val</type>
        <definition>forceinline Val Gecode::Int::Element::Int&lt; V0, V1, Idx, Val &gt;::IterVal::val</definition>
        <argsstring>(void) const </argsstring>
        <name>val</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return value of current index value pair. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/element.hh" line="119" column="1" bodyfile="/usr/include/gecode/int/element/int.hpp" bodystart="104" bodyend="107"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Value iterator for values in index-value map. </para>    </briefdescription>
    <detaileddescription>
<para>Note that the iterated value sequence is not strictly increasing (might contain duplicates). </para>    </detaileddescription>
    <location file="/usr/include/gecode/int/element.hh" line="107" column="1" bodyfile="/usr/include/gecode/int/element.hh" bodystart="107" bodyend="120"/>
    <listofallmembers>
      <member refid="classGecode_1_1Int_1_1Element_1_1Int_1_1IterVal_1a526a5880a7d326b99a77e28e9ad1d36a" prot="private" virt="non-virtual"><scope>Gecode::Int::Element::Int::IterVal</scope><name>i</name></member>
      <member refid="classGecode_1_1Int_1_1Element_1_1Int_1_1IterVal_1a70a1e4f1de37826c04c7359b2b171d6f" prot="public" virt="non-virtual"><scope>Gecode::Int::Element::Int::IterVal</scope><name>IterVal</name></member>
      <member refid="classGecode_1_1Int_1_1Element_1_1Int_1_1IterVal_1a95290a2a8d7bdcb31c3cba816491848a" prot="private" virt="non-virtual"><scope>Gecode::Int::Element::Int::IterVal</scope><name>iv</name></member>
      <member refid="classGecode_1_1Int_1_1Element_1_1Int_1_1IterVal_1a4a189cf266845890093e043d24ea46e6" prot="public" virt="non-virtual"><scope>Gecode::Int::Element::Int::IterVal</scope><name>operator()</name></member>
      <member refid="classGecode_1_1Int_1_1Element_1_1Int_1_1IterVal_1a4e5c38628ff48ee7fab5941a99204ef0" prot="public" virt="non-virtual"><scope>Gecode::Int::Element::Int::IterVal</scope><name>operator++</name></member>
      <member refid="classGecode_1_1Int_1_1Element_1_1Int_1_1IterVal_1a871293a7f9d7d26344adf34f8a6bfa72" prot="public" virt="non-virtual"><scope>Gecode::Int::Element::Int::IterVal</scope><name>val</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
