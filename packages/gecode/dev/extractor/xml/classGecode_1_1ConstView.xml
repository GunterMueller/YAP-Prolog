<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classGecode_1_1ConstView" kind="class" prot="public">
    <compoundname>Gecode::ConstView</compoundname>
    <includes refid="kernel_2view_8hpp" local="no">view.hpp</includes>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>View</declname>
        <defname>View</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Generic view information</header>
      <memberdef kind="function" id="classGecode_1_1ConstView_1add4ca8530b19051f6bb64f38b0a943c0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>forceinline unsigned int Gecode::ConstView&lt; View &gt;::degree</definition>
        <argsstring>(void) const </argsstring>
        <name>degree</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return degree (number of subscribed propagators and advisors) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/view.hpp" line="54" column="1" bodyfile="/usr/include/gecode/kernel/view.hpp" bodystart="346" bodyend="348"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1ConstView_1a4081cb5a97e8391b235dc11ff3c90ad9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>forceinline double Gecode::ConstView&lt; View &gt;::afc</definition>
        <argsstring>(const Space &amp;home) const </argsstring>
        <name>afc</name>
        <param>
          <type>const <ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <briefdescription>
<para>Return accumulated failure count. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/view.hpp" line="56" column="1" bodyfile="/usr/include/gecode/kernel/view.hpp" bodystart="351" bodyend="353"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1ConstView_1aa39169631d6411a2c21e7b9785e7427d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGecode_1_1ConstView_1ab14fccf8cab1048f2c7bf4e30d89a338" kindref="member">VarImpType</ref> *</type>
        <definition>forceinline View::VarImpType * Gecode::ConstView&lt; View &gt;::varimp</definition>
        <argsstring>(void) const </argsstring>
        <name>varimp</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return dummy variable implementation of view. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/view.hpp" line="60" column="1" bodyfile="/usr/include/gecode/kernel/view.hpp" bodystart="361" bodyend="363"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1ConstView_1aee74dc7502b456703a1f44a8c34736c5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::ConstView&lt; View &gt;::varderived</definition>
        <argsstring>(void)</argsstring>
        <name>varderived</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return whether this view is derived from a <ref refid="classGecode_1_1VarImpView" kindref="compound">VarImpView</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/view.hpp" line="58" column="1" bodyfile="/usr/include/gecode/kernel/view.hpp" bodystart="356" bodyend="358"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Domain tests</header>
      <memberdef kind="function" id="classGecode_1_1ConstView_1a1e7c7e5b36175dd5a06382781f84df24" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::ConstView&lt; View &gt;::assigned</definition>
        <argsstring>(void) const </argsstring>
        <name>assigned</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test whether view is assigned. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/view.hpp" line="66" column="1" bodyfile="/usr/include/gecode/kernel/view.hpp" bodystart="366" bodyend="368"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>View-dependent propagator support</header>
      <memberdef kind="function" id="classGecode_1_1ConstView_1a88bd3f6f1de1748f08d6f386bd661c12" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::ConstView&lt; View &gt;::schedule</definition>
        <argsstring>(Space &amp;home, Propagator &amp;p, ModEvent me)</argsstring>
        <name>schedule</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Propagator" kindref="compound">Propagator</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
          <declname>me</declname>
        </param>
        <briefdescription>
<para>Schedule propagator <emphasis>p</emphasis> with modification event <emphasis>me</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/view.hpp" line="72" column="1" bodyfile="/usr/include/gecode/kernel/view.hpp" bodystart="390" bodyend="392"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1ConstView_1aac6f95f0c055e27122643a9b1abd56f7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::ConstView&lt; View &gt;::me</definition>
        <argsstring>(const ModEventDelta &amp;med)</argsstring>
        <name>me</name>
        <param>
          <type>const <ref refid="namespaceGecode_1a129e41c1d037528010d7b6706495a560" kindref="member">ModEventDelta</ref> &amp;</type>
          <declname>med</declname>
        </param>
        <briefdescription>
<para>Return modification event for view type in <emphasis>med</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/view.hpp" line="74" column="1" bodyfile="/usr/include/gecode/kernel/view.hpp" bodystart="395" bodyend="397"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1ConstView_1a7a73566c33cdb56acedb6a44dd919a8a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceGecode_1a129e41c1d037528010d7b6706495a560" kindref="member">ModEventDelta</ref></type>
        <definition>forceinline ModEventDelta Gecode::ConstView&lt; View &gt;::med</definition>
        <argsstring>(ModEvent me)</argsstring>
        <name>med</name>
        <param>
          <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
          <declname>me</declname>
        </param>
        <briefdescription>
<para>Translate modification event <emphasis>me</emphasis> to modification event delta for view. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/view.hpp" line="76" column="1" bodyfile="/usr/include/gecode/kernel/view.hpp" bodystart="400" bodyend="402"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Dependencies</header>
      <memberdef kind="function" id="classGecode_1_1ConstView_1a2501b26a166e241f1fe0a3fb1f574682" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::ConstView&lt; View &gt;::subscribe</definition>
        <argsstring>(Space &amp;home, Propagator &amp;p, PropCond pc, bool schedule=true)</argsstring>
        <name>subscribe</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Propagator" kindref="compound">Propagator</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="group__TaskVarMEPC_1gad24536e327a507a903179b6a5efd2e3d" kindref="member">PropCond</ref></type>
          <declname>pc</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>schedule</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Subscribe propagator <emphasis>p</emphasis> with propagation condition <emphasis>pc</emphasis> to view. </para>        </briefdescription>
        <detaileddescription>
<para>In case <emphasis>schedule</emphasis> is false, the propagator is just subscribed but not scheduled for execution (this must be used when creating subscriptions during propagation). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/view.hpp" line="88" column="1" bodyfile="/usr/include/gecode/kernel/view.hpp" bodystart="371" bodyend="375"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1ConstView_1a0cc7502ec1d81feab4035e7e78233186" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::ConstView&lt; View &gt;::cancel</definition>
        <argsstring>(Space &amp;home, Propagator &amp;p, PropCond pc)</argsstring>
        <name>cancel</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Propagator" kindref="compound">Propagator</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="group__TaskVarMEPC_1gad24536e327a507a903179b6a5efd2e3d" kindref="member">PropCond</ref></type>
          <declname>pc</declname>
        </param>
        <briefdescription>
<para>Cancel subscription of propagator <emphasis>p</emphasis> with propagation condition <emphasis>pc</emphasis> to view. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/view.hpp" line="90" column="1" bodyfile="/usr/include/gecode/kernel/view.hpp" bodystart="378" bodyend="379"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1ConstView_1a7661595fd39f25b91d0b8a55e9645c12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::ConstView&lt; View &gt;::subscribe</definition>
        <argsstring>(Space &amp;home, Advisor &amp;a)</argsstring>
        <name>subscribe</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Advisor" kindref="compound">Advisor</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>Subscribe advisor <emphasis>a</emphasis> to view. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/view.hpp" line="92" column="1" bodyfile="/usr/include/gecode/kernel/view.hpp" bodystart="382" bodyend="383"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1ConstView_1a892e95a4cef1530ac569f4b1fdd5ff4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::ConstView&lt; View &gt;::cancel</definition>
        <argsstring>(Space &amp;home, Advisor &amp;a)</argsstring>
        <name>cancel</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Advisor" kindref="compound">Advisor</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>Cancel subscription of advisor <emphasis>a</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/view.hpp" line="94" column="1" bodyfile="/usr/include/gecode/kernel/view.hpp" bodystart="386" bodyend="387"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Delta information for advisors</header>
      <memberdef kind="function" id="classGecode_1_1ConstView_1a4cd961b1afc7330ca276cf905840182a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::ConstView&lt; View &gt;::modevent</definition>
        <argsstring>(const Delta &amp;d)</argsstring>
        <name>modevent</name>
        <param>
          <type>const <ref refid="classGecode_1_1Delta" kindref="compound">Delta</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Return modification event. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/view.hpp" line="100" column="1" bodyfile="/usr/include/gecode/kernel/view.hpp" bodystart="405" bodyend="408"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Cloning</header>
      <memberdef kind="function" id="classGecode_1_1ConstView_1aa707302c7d06b42165f614cff5dc6fc0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::ConstView&lt; View &gt;::update</definition>
        <argsstring>(Space &amp;home, bool share, ConstView &amp;y)</argsstring>
        <name>update</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>share</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ConstView" kindref="compound">ConstView</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Update this view to be a clone of view <emphasis>y</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/view.hpp" line="106" column="1" bodyfile="/usr/include/gecode/kernel/view.hpp" bodystart="411" bodyend="412"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classGecode_1_1ConstView_1ab14fccf8cab1048f2c7bf4e30d89a338" prot="public" static="no">
        <type>View::VarImpType</type>
        <definition>typedef View::VarImpType Gecode::ConstView&lt; View &gt;::VarImpType</definition>
        <argsstring></argsstring>
        <name>VarImpType</name>
        <briefdescription>
<para>The variable implementation type corresponding to the constant view. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/view.hpp" line="48" column="1" bodyfile="/usr/include/gecode/kernel/view.hpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classGecode_1_1ConstView_1af241f74e7ca3d2a53b8d962a3fd36bcd" prot="public" static="no">
        <type>View::VarType</type>
        <definition>typedef View::VarType Gecode::ConstView&lt; View &gt;::VarType</definition>
        <argsstring></argsstring>
        <name>VarType</name>
        <briefdescription>
<para>The variable type corresponding to the constant view. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/view.hpp" line="50" column="1" bodyfile="/usr/include/gecode/kernel/view.hpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Base-class for constant views. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/usr/include/gecode/kernel/view.hpp" line="45" column="1" bodyfile="/usr/include/gecode/kernel/view.hpp" bodystart="45" bodyend="108"/>
    <listofallmembers>
      <member refid="classGecode_1_1ConstView_1a4081cb5a97e8391b235dc11ff3c90ad9" prot="public" virt="non-virtual"><scope>Gecode::ConstView</scope><name>afc</name></member>
      <member refid="classGecode_1_1ConstView_1a1e7c7e5b36175dd5a06382781f84df24" prot="public" virt="non-virtual"><scope>Gecode::ConstView</scope><name>assigned</name></member>
      <member refid="classGecode_1_1ConstView_1a0cc7502ec1d81feab4035e7e78233186" prot="public" virt="non-virtual"><scope>Gecode::ConstView</scope><name>cancel</name></member>
      <member refid="classGecode_1_1ConstView_1a892e95a4cef1530ac569f4b1fdd5ff4f" prot="public" virt="non-virtual"><scope>Gecode::ConstView</scope><name>cancel</name></member>
      <member refid="classGecode_1_1ConstView_1add4ca8530b19051f6bb64f38b0a943c0" prot="public" virt="non-virtual"><scope>Gecode::ConstView</scope><name>degree</name></member>
      <member refid="classGecode_1_1ConstView_1aac6f95f0c055e27122643a9b1abd56f7" prot="public" virt="non-virtual"><scope>Gecode::ConstView</scope><name>me</name></member>
      <member refid="classGecode_1_1ConstView_1a7a73566c33cdb56acedb6a44dd919a8a" prot="public" virt="non-virtual"><scope>Gecode::ConstView</scope><name>med</name></member>
      <member refid="classGecode_1_1ConstView_1a4cd961b1afc7330ca276cf905840182a" prot="public" virt="non-virtual"><scope>Gecode::ConstView</scope><name>modevent</name></member>
      <member refid="classGecode_1_1ConstView_1a88bd3f6f1de1748f08d6f386bd661c12" prot="public" virt="non-virtual"><scope>Gecode::ConstView</scope><name>schedule</name></member>
      <member refid="classGecode_1_1ConstView_1a2501b26a166e241f1fe0a3fb1f574682" prot="public" virt="non-virtual"><scope>Gecode::ConstView</scope><name>subscribe</name></member>
      <member refid="classGecode_1_1ConstView_1a7661595fd39f25b91d0b8a55e9645c12" prot="public" virt="non-virtual"><scope>Gecode::ConstView</scope><name>subscribe</name></member>
      <member refid="classGecode_1_1ConstView_1aa707302c7d06b42165f614cff5dc6fc0" prot="public" virt="non-virtual"><scope>Gecode::ConstView</scope><name>update</name></member>
      <member refid="classGecode_1_1ConstView_1aee74dc7502b456703a1f44a8c34736c5" prot="public" virt="non-virtual"><scope>Gecode::ConstView</scope><name>varderived</name></member>
      <member refid="classGecode_1_1ConstView_1aa39169631d6411a2c21e7b9785e7427d" prot="public" virt="non-virtual"><scope>Gecode::ConstView</scope><name>varimp</name></member>
      <member refid="classGecode_1_1ConstView_1ab14fccf8cab1048f2c7bf4e30d89a338" prot="public" virt="non-virtual"><scope>Gecode::ConstView</scope><name>VarImpType</name></member>
      <member refid="classGecode_1_1ConstView_1af241f74e7ca3d2a53b8d962a3fd36bcd" prot="public" virt="non-virtual"><scope>Gecode::ConstView</scope><name>VarType</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
