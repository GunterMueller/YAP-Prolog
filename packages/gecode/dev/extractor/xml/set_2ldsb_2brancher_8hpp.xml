<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="set_2ldsb_2brancher_8hpp" kind="file">
    <compoundname>brancher.hpp</compoundname>
    <includedby refid="set_2ldsb_8hh" local="no">/usr/include/gecode/set/ldsb.hh</includedby>
    <invincdepgraph>
      <node id="16656">
        <label>/usr/include/gecode/set/ldsb.hh</label>
        <link refid="set_2ldsb_8hh_source"/>
      </node>
      <node id="16655">
        <label>/usr/include/gecode/set/ldsb/brancher.hpp</label>
        <link refid="set/ldsb/brancher.hpp"/>
        <childnode refid="16656" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespaceGecode">Gecode</innernamespace>
    <innernamespace refid="namespaceGecode_1_1Set">Gecode::Set</innernamespace>
    <innernamespace refid="namespaceGecode_1_1Set_1_1LDSB">Gecode::Set::LDSB</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>mode:<sp/>C++;<sp/>c-basic-offset:<sp/>2;<sp/>indent-tabs-mode:<sp/>nil<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/><sp/>Main<sp/>authors:</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Christopher<sp/>Mears<sp/>&lt;chris.mears@monash.edu&gt;</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>Copyright:</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Christopher<sp/>Mears,<sp/>2012</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/>Last<sp/>modified:</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>$Date:<sp/>2013-05-02<sp/>17:10:16<sp/>+0200<sp/>(Thu,<sp/>02<sp/>May<sp/>2013)<sp/>$<sp/>by<sp/>$Author:<sp/>schulte<sp/>$</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>$Revision:<sp/>13603<sp/>$</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>Gecode,<sp/>the<sp/>generic<sp/>constraint</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/>development<sp/>environment:</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.gecode.org</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/><sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/><sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/><sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/><sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/><sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/><sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/><sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/><sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/><sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/><sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="namespaceGecode_1_1Set_1_1LDSB" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Gecode<sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Set<sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">LDSB<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>View,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Val,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a&gt;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Set_1_1LDSB_1_1LDSBSetBrancher_1ab61278d9a2dc2695d776e66ba472eb9b" kindref="member">LDSBSetBrancher&lt;View,n,Val,a&gt;</ref></highlight></codeline>
<codeline lineno="42" refid="classGecode_1_1Set_1_1LDSB_1_1LDSBSetBrancher_1a6ebaec02a20dd1e89725b4c3aedb0abb" refkind="member"><highlight class="normal"><ref refid="classGecode_1_1Set_1_1LDSB_1_1LDSBSetBrancher_1ab61278d9a2dc2695d776e66ba472eb9b" kindref="member">  ::LDSBSetBrancher</ref>(<ref refid="classGecode_1_1Home" kindref="compound">Home</ref><sp/>home,<sp/><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray&lt;View&gt;</ref>&amp;<sp/>x,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1ViewSel" kindref="compound">ViewSel&lt;View&gt;</ref>*<sp/>vs[n],</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1ValSelCommitBase" kindref="compound">ValSelCommitBase&lt;View,Val&gt;</ref>*<sp/>vsc,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Int_1_1LDSB_1_1SymmetryImp" kindref="compound">SymmetryImp&lt;View&gt;</ref>**<sp/>syms,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nsyms,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__TaskModelSetBranch_1gadd48606a449c14addbecf150180e38dd" kindref="member">SetBranchFilter</ref><sp/>bf,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VarValPrint<sp/>vvp)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classGecode_1_1Int_1_1LDSB_1_1LDSBBrancher" kindref="compound">LDSBBrancher</ref>&lt;View,n,Val,a&gt;(home,<sp/>x,<sp/>vs,<sp/>vsc,<sp/>syms,<sp/>nsyms,<sp/>bf,<sp/>vvp),</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_prevPos(-1),</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_copiedSyms(NULL),</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_nCopiedSyms(0),</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_stable(false)<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Put<sp/>all<sp/>the<sp/>value<sp/>symmetries<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seen<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dest<sp/>=<sp/>this-&gt;_nsyms<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>this-&gt;_nsyms<sp/>-<sp/>seen<sp/>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="classGecode_1_1Int_1_1LDSB_1_1ValueSymmetryImp" kindref="compound">ValueSymmetryImp&lt;View&gt;</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(this-&gt;_syms[i]))<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Int_1_1LDSB_1_1SymmetryImp" kindref="compound">SymmetryImp&lt;View&gt;</ref>*<sp/>t<sp/>=<sp/>this-&gt;_syms[i];</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;_syms[i]<sp/>=<sp/>this-&gt;_syms[dest];</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;_syms[dest]<sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest--;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seen++;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>_nValueSymmetries<sp/>=<sp/>seen;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>_nNonValueSymmetries<sp/>=<sp/>this-&gt;_nsyms<sp/>-<sp/>seen;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>View,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Val,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a&gt;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Set_1_1LDSB_1_1LDSBSetBrancher_1ab61278d9a2dc2695d776e66ba472eb9b" kindref="member">LDSBSetBrancher&lt;View,n,Val,a&gt;::</ref></highlight></codeline>
<codeline lineno="71" refid="classGecode_1_1Set_1_1LDSB_1_1LDSBSetBrancher_1ab61278d9a2dc2695d776e66ba472eb9b" refkind="member"><highlight class="normal"><ref refid="classGecode_1_1Set_1_1LDSB_1_1LDSBSetBrancher_1ab61278d9a2dc2695d776e66ba472eb9b" kindref="member">  LDSBSetBrancher</ref>(<ref refid="classGecode_1_1Space" kindref="compound">Space</ref>&amp;<sp/>home,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceGecode_1a5430dfdb1866d9506626cb0e838f0e66" kindref="member">shared</ref>,<sp/><ref refid="classGecode_1_1Set_1_1LDSB_1_1LDSBSetBrancher" kindref="compound">LDSBSetBrancher&lt;View,n,Val,a&gt;</ref>&amp;<sp/>b)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classGecode_1_1Int_1_1LDSB_1_1LDSBBrancher" kindref="compound">LDSBBrancher</ref>&lt;View,n,Val,a&gt;(home,shared,b),</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_prevPos(b._prevPos),</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_nNonValueSymmetries(b._nNonValueSymmetries),</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_nValueSymmetries(b._nValueSymmetries),</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_nCopiedSyms(b._nCopiedSyms),</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_leftBranchValues(b._leftBranchValues),</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_stable(b._stable)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classGecode_1_1Set_1_1LDSB_1_1LDSBSetBrancher_1ada5175dd998e73509568b45deb0b111a" kindref="member">_nCopiedSyms</ref><sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Set_1_1LDSB_1_1LDSBSetBrancher_1ad5c2cd0f01c1d2b6fbe8e5878fa879b8" kindref="member">_copiedSyms</ref><sp/>=<sp/>home.<ref refid="group__FuncMemSpace_1gacf6b71739fd13f46d8d27052d714265e" kindref="member">alloc</ref>&lt;<ref refid="classGecode_1_1Int_1_1LDSB_1_1ValueSymmetryImp" kindref="compound">ValueSymmetryImp&lt;View&gt;</ref>*&gt;(<ref refid="classGecode_1_1Set_1_1LDSB_1_1LDSBSetBrancher_1ada5175dd998e73509568b45deb0b111a" kindref="member">_nCopiedSyms</ref>);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/><ref refid="classGecode_1_1Set_1_1LDSB_1_1LDSBSetBrancher_1ada5175dd998e73509568b45deb0b111a" kindref="member">_nCopiedSyms</ref><sp/>;<sp/>i++)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Set_1_1LDSB_1_1LDSBSetBrancher_1ad5c2cd0f01c1d2b6fbe8e5878fa879b8" kindref="member">_copiedSyms</ref>[i]<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="classGecode_1_1Int_1_1LDSB_1_1ValueSymmetryImp" kindref="compound">ValueSymmetryImp&lt;View&gt;</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b.<ref refid="classGecode_1_1Set_1_1LDSB_1_1LDSBSetBrancher_1ad5c2cd0f01c1d2b6fbe8e5878fa879b8" kindref="member">_copiedSyms</ref>[i]-&gt;copy(home,<sp/>shared));</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Set_1_1LDSB_1_1LDSBSetBrancher_1ad5c2cd0f01c1d2b6fbe8e5878fa879b8" kindref="member">_copiedSyms</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>View&gt;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1LDSB_1_1ValueSymmetryImp" kindref="compound">ValueSymmetryImp&lt;View&gt;</ref>*</highlight></codeline>
<codeline lineno="100" refid="namespaceGecode_1_1Set_1_1LDSB_1a01fbdbe6483d327cab00addc8751b572" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespaceGecode_1_1Set_1_1LDSB_1a01fbdbe6483d327cab00addc8751b572" kindref="member">specialUpdate</ref>(<ref refid="classGecode_1_1Space" kindref="compound">Space</ref>&amp;<sp/>home,<sp/><ref refid="classGecode_1_1Int_1_1LDSB_1_1ValueSymmetryImp" kindref="compound">ValueSymmetryImp&lt;View&gt;</ref>*<sp/>s,<sp/><ref refid="classGecode_1_1IntSet" kindref="compound">IntSet</ref><sp/>usedValues)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>intersection<sp/>and<sp/>difference.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1IntArgs" kindref="compound">IntArgs</ref><sp/>intersection;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1IntArgs" kindref="compound">IntArgs</ref><sp/>difference;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>s-&gt;<ref refid="classGecode_1_1Int_1_1LDSB_1_1ValueSymmetryImp_1addd5086f4546b55c3248b8dbc7f1a80b" kindref="member">values</ref>.next(s-&gt;<ref refid="classGecode_1_1Int_1_1LDSB_1_1ValueSymmetryImp_1addd5086f4546b55c3248b8dbc7f1a80b" kindref="member">values</ref>.offset())<sp/>;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>&lt;=<sp/>s-&gt;<ref refid="classGecode_1_1Int_1_1LDSB_1_1ValueSymmetryImp_1addd5086f4546b55c3248b8dbc7f1a80b" kindref="member">values</ref>.max_bit()<sp/>;<sp/>i<sp/>=<sp/>s-&gt;<ref refid="classGecode_1_1Int_1_1LDSB_1_1ValueSymmetryImp_1addd5086f4546b55c3248b8dbc7f1a80b" kindref="member">values</ref>.next(i+1))<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n++;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(usedValues.<ref refid="classGecode_1_1IntSet_1af472994be622a2ee63887023d3d49a3a" kindref="member">in</ref>(i))</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intersection<sp/>&lt;&lt;<sp/>i;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>difference<sp/>&lt;&lt;<sp/>i;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classGecode_1_1IntSetValues" kindref="compound">IntSetValues</ref><sp/>v(usedValues)<sp/>;<sp/>v()<sp/>;<sp/>++v)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="classGecode_1_1Int_1_1LDSB_1_1ValueSymmetryImp_1af54db26edb6626da517c09807416be54" kindref="member">update</ref>(<ref refid="classGecode_1_1Int_1_1LDSB_1_1Literal" kindref="compound">Literal</ref>(0,<sp/>v.val()));</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(intersection.<ref refid="classGecode_1_1ArgArrayBase_1a5cd6f91808d5560f28f05b75be65ab1d" kindref="member">size</ref>()<sp/>&lt;<sp/>2)</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*a<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[intersection.<ref refid="classGecode_1_1ArgArrayBase_1a5cd6f91808d5560f28f05b75be65ab1d" kindref="member">size</ref>()];</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>intersection.<ref refid="classGecode_1_1ArgArrayBase_1a5cd6f91808d5560f28f05b75be65ab1d" kindref="member">size</ref>()<sp/>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>a[i]<sp/>=<sp/>intersection[i];</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Int_1_1LDSB_1_1ValueSymmetryImp" kindref="compound">ValueSymmetryImp&lt;View&gt;</ref>*<sp/>ns<sp/>=</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(home)<sp/><ref refid="classGecode_1_1Int_1_1LDSB_1_1ValueSymmetryImp" kindref="compound">ValueSymmetryImp&lt;View&gt;</ref>(home,<sp/>a,<sp/>intersection.<ref refid="classGecode_1_1ArgArrayBase_1a5cd6f91808d5560f28f05b75be65ab1d" kindref="member">size</ref>());</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>a;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ns;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>View,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Val,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a&gt;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Set_1_1LDSB_1_1LDSBSetBrancher_1a0b18d04606a66a6524b619b7a62897bf" kindref="member">LDSBSetBrancher&lt;View,n,Val,a&gt;::</ref></highlight></codeline>
<codeline lineno="133" refid="classGecode_1_1Set_1_1LDSB_1_1LDSBSetBrancher_1a0b18d04606a66a6524b619b7a62897bf" refkind="member"><highlight class="normal"><ref refid="classGecode_1_1Set_1_1LDSB_1_1LDSBSetBrancher_1a0b18d04606a66a6524b619b7a62897bf" kindref="member">  updatePart1</ref>(<ref refid="classGecode_1_1Space" kindref="compound">Space</ref>&amp;<sp/>home,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>choicePos)<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_nValueSymmetries<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>this<sp/>is<sp/>a<sp/>different<sp/>variable<sp/>from<sp/>the<sp/>last<sp/>commit,<sp/>restore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>old<sp/>value<sp/>symmetries<sp/>and<sp/>update<sp/>the<sp/>copy.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(choicePos<sp/>!=<sp/>_prevPos)<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_prevPos<sp/>!=<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>_nNonValueSymmetries<sp/>;<sp/>j<sp/>&lt;<sp/>this-&gt;_nsyms<sp/>;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;_syms[j]<sp/>=<sp/>_copiedSyms[i];</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>_nCopiedSyms<sp/>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Int_1_1LDSB_1_1ValueSymmetryImp" kindref="compound">ValueSymmetryImp&lt;View&gt;</ref>*<sp/>ns<sp/>=</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGecode_1_1Set_1_1LDSB_1a01fbdbe6483d327cab00addc8751b572" kindref="member">specialUpdate</ref>(home,<sp/>_copiedSyms[i],<sp/>_leftBranchValues);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ns)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;_syms<sp/>=<sp/>home.<ref refid="group__FuncMemSpace_1ga07afdd06b5ba2683ba6e13b70bd859fe" kindref="member">realloc</ref>&lt;<ref refid="classGecode_1_1Int_1_1LDSB_1_1SymmetryImp" kindref="compound">SymmetryImp&lt;View&gt;</ref>*&gt;(this-&gt;_syms,<sp/></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;_nsyms,<sp/></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;_nsyms+1);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;_syms[this-&gt;_nsyms]<sp/>=<sp/>ns;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;_nsyms++;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;_nValueSymmetries++;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>for<sp/>current<sp/>variable,<sp/>make<sp/>copy<sp/>of<sp/>value<sp/>symmetries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_leftBranchValues<sp/>=<sp/><ref refid="classGecode_1_1IntSet_1af6247876f310d0209b9b7f951cae9b99" kindref="member">IntSet::empty</ref>;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_prevPos<sp/>=<sp/>choicePos;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_nCopiedSyms<sp/>&gt;<sp/>0)<sp/>home.<ref refid="group__FuncMemSpace_1gada420b751340125380dc4fcde66e6d99" kindref="member">free</ref>(_copiedSyms,<sp/>_nCopiedSyms);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_nCopiedSyms<sp/>=<sp/>_nValueSymmetries;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_copiedSyms<sp/>=<sp/>home.<ref refid="group__FuncMemSpace_1gacf6b71739fd13f46d8d27052d714265e" kindref="member">alloc</ref>&lt;<ref refid="classGecode_1_1Int_1_1LDSB_1_1ValueSymmetryImp" kindref="compound">ValueSymmetryImp&lt;View&gt;</ref>*&gt;(_nCopiedSyms);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>_nNonValueSymmetries<sp/>;<sp/>j<sp/>&lt;<sp/>this-&gt;_nsyms<sp/>;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Int_1_1LDSB_1_1ValueSymmetryImp" kindref="compound">ValueSymmetryImp&lt;View&gt;</ref>*<sp/>vsi<sp/>=<sp/></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="classGecode_1_1Int_1_1LDSB_1_1ValueSymmetryImp" kindref="compound">ValueSymmetryImp&lt;View&gt;</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(this-&gt;_syms[j]);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_copiedSyms[i]<sp/>=<sp/></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="classGecode_1_1Int_1_1LDSB_1_1ValueSymmetryImp" kindref="compound">ValueSymmetryImp&lt;View&gt;</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(vsi-&gt;<ref refid="classGecode_1_1Int_1_1LDSB_1_1ValueSymmetryImp_1a06cc69d8bd9e8966622cfb6a756f3a5b" kindref="member">copy</ref>(home,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>choice</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>View,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Val,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a&gt;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Choice" kindref="compound">Choice</ref>*</highlight></codeline>
<codeline lineno="180" refid="classGecode_1_1Set_1_1LDSB_1_1LDSBSetBrancher_1a66e128c5005ab10f536c4abe2f2c2772" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Set_1_1LDSB_1_1LDSBSetBrancher_1a66e128c5005ab10f536c4abe2f2c2772" kindref="member">LDSBSetBrancher&lt;View,n,Val,a&gt;::choice</ref>(<ref refid="classGecode_1_1Space" kindref="compound">Space</ref>&amp;<sp/>home)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Making<sp/>the<sp/>PVC<sp/>here<sp/>is<sp/>not<sp/>so<sp/>nice,<sp/>I<sp/>think.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Choice" kindref="compound">Choice</ref>*<sp/>c<sp/>=<sp/><ref refid="classGecode_1_1ViewValBrancher_1a71a35056046196cfbbfcf624c2209de9" kindref="member">ViewValBrancher&lt;View,n,Val,a&gt;::choice</ref>(home);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1PosValChoice" kindref="compound">PosValChoice&lt;Val&gt;</ref>*<sp/>pvc<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classGecode_1_1PosValChoice" kindref="compound">PosValChoice&lt;Val&gt;</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(c);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>symmetries.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>choicePos<sp/>=<sp/>pvc-&gt;<ref refid="classGecode_1_1PosChoice_1aaad18fb0fa0033031d43768213006f13" kindref="member">pos</ref>().pos;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(!_stable);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>updatePart1(home,<sp/>choicePos);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Int_1_1LDSB_1_1LDSBBrancher_1a95b8a227d5cadb7ae16d30dd9174ef64" kindref="member">LDSBBrancher&lt;View,n,Val,a&gt;::choice</ref>(home);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>View,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Val,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a&gt;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Set_1_1LDSB_1_1LDSBSetBrancher_1a2e7997c8381ffcac6713342f7e75f087" kindref="member">LDSBSetBrancher&lt;View,n,Val,a&gt;</ref></highlight></codeline>
<codeline lineno="199" refid="classGecode_1_1Set_1_1LDSB_1_1LDSBSetBrancher_1a2e7997c8381ffcac6713342f7e75f087" refkind="member"><highlight class="normal"><ref refid="classGecode_1_1Set_1_1LDSB_1_1LDSBSetBrancher_1a2e7997c8381ffcac6713342f7e75f087" kindref="member">  ::commit</ref>(<ref refid="classGecode_1_1Space" kindref="compound">Space</ref>&amp;<sp/>home,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Choice" kindref="compound">Choice</ref>&amp;<sp/>c,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Int_1_1LDSB_1_1LDSBChoice" kindref="compound">LDSBChoice&lt;Val&gt;</ref>&amp;<sp/>pvc</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classGecode_1_1Int_1_1LDSB_1_1LDSBChoice" kindref="compound">LDSBChoice&lt;Val&gt;</ref>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(c);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>choicePos<sp/>=<sp/>pvc.<ref refid="classGecode_1_1PosChoice_1aaad18fb0fa0033031d43768213006f13" kindref="member">pos</ref>().pos;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>choiceVal<sp/>=<sp/>pvc.<ref refid="classGecode_1_1PosValChoice_1aec40b076c46547454d266666c45aa84f" kindref="member">val</ref>();</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_stable)</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>updatePart1(home,<sp/>choicePos);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1IntArgs" kindref="compound">IntArgs</ref><sp/>ia;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classGecode_1_1IntSetValues" kindref="compound">IntSetValues</ref><sp/>v(_leftBranchValues)<sp/>;<sp/>v()<sp/>;<sp/>++v)<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ia<sp/>&lt;&lt;<sp/>v.val();</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ia<sp/>&lt;&lt;<sp/>choiceVal;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_leftBranchValues<sp/>=<sp/><ref refid="classGecode_1_1IntSet" kindref="compound">IntSet</ref>(ia);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Post<sp/>the<sp/>branching<sp/>constraint.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref><sp/>fromBase<sp/>=<sp/><ref refid="classGecode_1_1ViewValBrancher_1a1966df9fb7c73b77148d759ca53e4882" kindref="member">ViewValBrancher&lt;View,n,Val,a&gt;::commit</ref>(home,<sp/>c,<sp/>b);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GECODE_ES_CHECK(fromBase);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>this-&gt;_nsyms<sp/>;<sp/>i++)</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;_syms[i]-&gt;update(<ref refid="classGecode_1_1Int_1_1LDSB_1_1Literal" kindref="compound">Literal</ref>(choicePos,<sp/>choiceVal));</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Post<sp/>the<sp/>branching<sp/>constraint.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref><sp/>fromBase<sp/>=<sp/><ref refid="classGecode_1_1ViewValBrancher_1a1966df9fb7c73b77148d759ca53e4882" kindref="member">ViewValBrancher&lt;View,n,Val,a&gt;::commit</ref>(home,<sp/>c,<sp/>b);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GECODE_ES_CHECK(fromBase);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Post<sp/>prunings.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nliterals<sp/>=<sp/>pvc.<ref refid="classGecode_1_1Int_1_1LDSB_1_1LDSBChoice_1af24ea4b891ff125fff4079b48f40b5ed" kindref="member">nliterals</ref>();</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Int_1_1LDSB_1_1Literal" kindref="compound">Literal</ref>*<sp/>literals<sp/>=<sp/>pvc.<ref refid="classGecode_1_1Int_1_1LDSB_1_1LDSBChoice_1a3e3f8ce664780db5abaeab3f2994ee5c" kindref="member">literals</ref>();</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>nliterals<sp/>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Int_1_1LDSB_1_1Literal" kindref="compound">Literal</ref>&amp;<sp/>l<sp/>=<sp/>literals[i];</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref><sp/>me<sp/>=<sp/>prune&lt;View&gt;(home,<sp/>this-&gt;x[l.<ref refid="classGecode_1_1Int_1_1LDSB_1_1Literal_1ad42fafef399deeeb4a1cb44607dbc0b7" kindref="member">_variable</ref>],<sp/>l.<ref refid="classGecode_1_1Int_1_1LDSB_1_1Literal_1add49a0fe4c8c26d6041d53737ca25107" kindref="member">_value</ref>);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GECODE_ME_CHECK(me);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5a01d6fb1ec70479e8e413d5ecfd63e303" kindref="member">ES_OK</ref>;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>View,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Val,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a&gt;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Actor" kindref="compound">Actor</ref>*</highlight></codeline>
<codeline lineno="241" refid="classGecode_1_1Set_1_1LDSB_1_1LDSBSetBrancher_1ab04a379386740976682b0e5ace083721" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Set_1_1LDSB_1_1LDSBSetBrancher_1ab04a379386740976682b0e5ace083721" kindref="member">LDSBSetBrancher&lt;View,n,Val,a&gt;::copy</ref>(<ref refid="classGecode_1_1Space" kindref="compound">Space</ref>&amp;<sp/>home,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceGecode_1a5430dfdb1866d9506626cb0e838f0e66" kindref="member">shared</ref>)<sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(home)<sp/><ref refid="classGecode_1_1Set_1_1LDSB_1_1LDSBSetBrancher" kindref="compound">LDSBSetBrancher&lt;View,n,Val,a&gt;</ref>(home,shared,*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>View,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Val,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a&gt;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/>forceinline<sp/><ref refid="classGecode_1_1BrancherHandle" kindref="compound">BrancherHandle</ref></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Set_1_1LDSB_1_1LDSBSetBrancher_1a51ea4d09430f82ec4b358c7df1d05a71" kindref="member">LDSBSetBrancher&lt;View,n,Val,a&gt;::</ref></highlight></codeline>
<codeline lineno="248" refid="classGecode_1_1Set_1_1LDSB_1_1LDSBSetBrancher_1a51ea4d09430f82ec4b358c7df1d05a71" refkind="member"><highlight class="normal"><ref refid="classGecode_1_1Set_1_1LDSB_1_1LDSBSetBrancher_1a51ea4d09430f82ec4b358c7df1d05a71" kindref="member">  post</ref>(<ref refid="classGecode_1_1Home" kindref="compound">Home</ref><sp/>home,<sp/><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray&lt;View&gt;</ref>&amp;<sp/>x,</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1ViewSel" kindref="compound">ViewSel&lt;View&gt;</ref>*<sp/>vs[n],<sp/><ref refid="classGecode_1_1ValSelCommitBase" kindref="compound">ValSelCommitBase&lt;View,Val&gt;</ref>*<sp/>vsc,</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Int_1_1LDSB_1_1SymmetryImp" kindref="compound">SymmetryImp&lt;View&gt;</ref>**<sp/>syms,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nsyms,</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__TaskModelSetBranch_1gadd48606a449c14addbecf150180e38dd" kindref="member">SetBranchFilter</ref><sp/>bf,</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VarValPrint<sp/>vvp)<sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(home)<sp/><ref refid="classGecode_1_1Set_1_1LDSB_1_1LDSBSetBrancher" kindref="compound">LDSBSetBrancher&lt;View,n,Val,a&gt;</ref>(home,x,vs,vsc,syms,nsyms,bf,vvp);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal">}}}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="comment">//<sp/>STATISTICS:<sp/>set-branch</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/usr/include/gecode/set/ldsb/brancher.hpp"/>
  </compounddef>
</doxygen>
