<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classGecode_1_1Int_1_1Linear_1_1NoView" kind="class" prot="public">
    <compoundname>Gecode::Int::Linear::NoView</compoundname>
    <basecompoundref refid="classGecode_1_1ConstView" prot="public" virt="non-virtual">Gecode::ConstView&lt; IntView &gt;</basecompoundref>
    <includes refid="int-noview_8hpp" local="no">int-noview.hpp</includes>
      <sectiondef kind="user-defined">
      <header>Constructors and initialization</header>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Linear_1_1NoView_1a140cc355613156614ea8ef58683c3e8e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Gecode::Int::Linear::NoView::NoView</definition>
        <argsstring>(void)</argsstring>
        <name>NoView</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/linear/int-noview.hpp" line="51" column="1" bodyfile="/usr/include/gecode/int/linear/int-noview.hpp" bodystart="51" bodyend="51"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Value access</header>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Linear_1_1NoView_1ad03f542744feda4636ed0ffdc1de279b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Gecode::Int::Linear::NoView::min</definition>
        <argsstring>(void) const </argsstring>
        <name>min</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return minimum of domain. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/linear/int-noview.hpp" line="57" column="1" bodyfile="/usr/include/gecode/int/linear/int-noview.hpp" bodystart="57" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Linear_1_1NoView_1a36b3882ddb8949a58711e7f8604a77d1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Gecode::Int::Linear::NoView::max</definition>
        <argsstring>(void) const </argsstring>
        <name>max</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return maximum of domain. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/linear/int-noview.hpp" line="59" column="1" bodyfile="/usr/include/gecode/int/linear/int-noview.hpp" bodystart="59" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Linear_1_1NoView_1adcb13c39eacb0d7d9c560b49ec9a3c5c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Gecode::Int::Linear::NoView::med</definition>
        <argsstring>(void) const </argsstring>
        <name>med</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return median of domain (greatest element not greater than the median) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/linear/int-noview.hpp" line="61" column="1" bodyfile="/usr/include/gecode/int/linear/int-noview.hpp" bodystart="61" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Linear_1_1NoView_1a6b2563261e14828557f80c60f57403de" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Gecode::Int::Linear::NoView::val</definition>
        <argsstring>(void) const </argsstring>
        <name>val</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return assigned value (only if assigned) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/linear/int-noview.hpp" line="63" column="1" bodyfile="/usr/include/gecode/int/linear/int-noview.hpp" bodystart="63" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Linear_1_1NoView_1a308e7a1d715efd5a64857d73e5963acc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int Gecode::Int::Linear::NoView::size</definition>
        <argsstring>(void) const </argsstring>
        <name>size</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return size (cardinality) of domain. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/linear/int-noview.hpp" line="66" column="1" bodyfile="/usr/include/gecode/int/linear/int-noview.hpp" bodystart="66" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Linear_1_1NoView_1a14ca14a283475699cd34aa39a8fda3ce" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int Gecode::Int::Linear::NoView::width</definition>
        <argsstring>(void) const </argsstring>
        <name>width</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return width of domain (distance between maximum and minimum) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/linear/int-noview.hpp" line="68" column="1" bodyfile="/usr/include/gecode/int/linear/int-noview.hpp" bodystart="68" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Linear_1_1NoView_1a9b25c54640e8e6df56615a92b5f6bb89" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int Gecode::Int::Linear::NoView::regret_min</definition>
        <argsstring>(void) const </argsstring>
        <name>regret_min</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return regret of domain minimum (distance to next larger value) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/linear/int-noview.hpp" line="70" column="1" bodyfile="/usr/include/gecode/int/linear/int-noview.hpp" bodystart="70" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Linear_1_1NoView_1a925471ff0465267bc1d7273577ef637a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int Gecode::Int::Linear::NoView::regret_max</definition>
        <argsstring>(void) const </argsstring>
        <name>regret_max</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return regret of domain maximum (distance to next smaller value) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/linear/int-noview.hpp" line="72" column="1" bodyfile="/usr/include/gecode/int/linear/int-noview.hpp" bodystart="72" bodyend="72"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Domain tests</header>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Linear_1_1NoView_1aaad81ae2316444e33b7a98e106b6a19e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Gecode::Int::Linear::NoView::range</definition>
        <argsstring>(void) const </argsstring>
        <name>range</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test whether domain is a range. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/linear/int-noview.hpp" line="78" column="1" bodyfile="/usr/include/gecode/int/linear/int-noview.hpp" bodystart="78" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Linear_1_1NoView_1a0ee86bf558cb170088e0b0a686e13aa6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Gecode::Int::Linear::NoView::assigned</definition>
        <argsstring>(void) const </argsstring>
        <name>assigned</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test whether view is assigned. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/linear/int-noview.hpp" line="80" column="1" bodyfile="/usr/include/gecode/int/linear/int-noview.hpp" bodystart="80" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Linear_1_1NoView_1a0f5e07af35c35d409b882d3372e3b2dc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Gecode::Int::Linear::NoView::in</definition>
        <argsstring>(int n) const </argsstring>
        <name>in</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Test whether <emphasis>n</emphasis> is contained in domain. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/linear/int-noview.hpp" line="83" column="1" bodyfile="/usr/include/gecode/int/linear/int-noview.hpp" bodystart="83" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Linear_1_1NoView_1ac7c5b84aaf398b0f63b3083c59fa2986" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Gecode::Int::Linear::NoView::in</definition>
        <argsstring>(long long int n) const </argsstring>
        <name>in</name>
        <param>
          <type>long long int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Test whether <emphasis>n</emphasis> is contained in domain. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/linear/int-noview.hpp" line="85" column="1" bodyfile="/usr/include/gecode/int/linear/int-noview.hpp" bodystart="85" bodyend="85"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Domain update by value</header>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Linear_1_1NoView_1a12cc597e10bda629096c3520cf9f031d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>ModEvent Gecode::Int::Linear::NoView::lq</definition>
        <argsstring>(Space &amp;home, int n)</argsstring>
        <name>lq</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Restrict domain values to be less or equal than <emphasis>n</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/linear/int-noview.hpp" line="91" column="1" bodyfile="/usr/include/gecode/int/linear/int-noview.hpp" bodystart="91" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Linear_1_1NoView_1a0e62d90796f0e2584335a7eed81aa554" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>ModEvent Gecode::Int::Linear::NoView::lq</definition>
        <argsstring>(Space &amp;home, long long int n)</argsstring>
        <name>lq</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>long long int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Restrict domain values to be less or equal than <emphasis>n</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/linear/int-noview.hpp" line="96" column="1" bodyfile="/usr/include/gecode/int/linear/int-noview.hpp" bodystart="96" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Linear_1_1NoView_1ae4c024dfba753c88c92a9d8e61a51079" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>ModEvent Gecode::Int::Linear::NoView::le</definition>
        <argsstring>(Space &amp;home, int n)</argsstring>
        <name>le</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Restrict domain values to be less than <emphasis>n</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/linear/int-noview.hpp" line="101" column="1" bodyfile="/usr/include/gecode/int/linear/int-noview.hpp" bodystart="101" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Linear_1_1NoView_1a0cf69c36852465dd61b1bcedc7f3a26b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>ModEvent Gecode::Int::Linear::NoView::le</definition>
        <argsstring>(Space &amp;home, long long int n)</argsstring>
        <name>le</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>long long int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Restrict domain values to be less than <emphasis>n</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/linear/int-noview.hpp" line="106" column="1" bodyfile="/usr/include/gecode/int/linear/int-noview.hpp" bodystart="106" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Linear_1_1NoView_1a5594805527430820febdadc409870757" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>ModEvent Gecode::Int::Linear::NoView::gq</definition>
        <argsstring>(Space &amp;home, int n)</argsstring>
        <name>gq</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Restrict domain values to be greater or equal than <emphasis>n</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/linear/int-noview.hpp" line="111" column="1" bodyfile="/usr/include/gecode/int/linear/int-noview.hpp" bodystart="111" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Linear_1_1NoView_1a960735c285b15f4aee30d00b39a8767a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>ModEvent Gecode::Int::Linear::NoView::gq</definition>
        <argsstring>(Space &amp;home, long long int n)</argsstring>
        <name>gq</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>long long int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Restrict domain values to be greater or equal than <emphasis>n</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/linear/int-noview.hpp" line="116" column="1" bodyfile="/usr/include/gecode/int/linear/int-noview.hpp" bodystart="116" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Linear_1_1NoView_1a65a4a184be1de6cf5ded93b2e372b8a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>ModEvent Gecode::Int::Linear::NoView::gr</definition>
        <argsstring>(Space &amp;home, int n)</argsstring>
        <name>gr</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Restrict domain values to be greater than <emphasis>n</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/linear/int-noview.hpp" line="121" column="1" bodyfile="/usr/include/gecode/int/linear/int-noview.hpp" bodystart="121" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Linear_1_1NoView_1aaa4098cace2a89356124b99c939bc5ad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>ModEvent Gecode::Int::Linear::NoView::gr</definition>
        <argsstring>(Space &amp;home, long long int n)</argsstring>
        <name>gr</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>long long int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Restrict domain values to be greater than <emphasis>n</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/linear/int-noview.hpp" line="126" column="1" bodyfile="/usr/include/gecode/int/linear/int-noview.hpp" bodystart="126" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Linear_1_1NoView_1adbf356392c186e9225efba82fbee10ca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>ModEvent Gecode::Int::Linear::NoView::nq</definition>
        <argsstring>(Space &amp;home, int n)</argsstring>
        <name>nq</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Restrict domain values to be different from <emphasis>n</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/linear/int-noview.hpp" line="131" column="1" bodyfile="/usr/include/gecode/int/linear/int-noview.hpp" bodystart="131" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Linear_1_1NoView_1a9bd74672107fad2f6a5783dfba9e965d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>ModEvent Gecode::Int::Linear::NoView::nq</definition>
        <argsstring>(Space &amp;home, long long int n)</argsstring>
        <name>nq</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>long long int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Restrict domain values to be different from <emphasis>n</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/linear/int-noview.hpp" line="136" column="1" bodyfile="/usr/include/gecode/int/linear/int-noview.hpp" bodystart="136" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Linear_1_1NoView_1a553c6a2faa84702db29b1352137c6c93" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>ModEvent Gecode::Int::Linear::NoView::eq</definition>
        <argsstring>(Space &amp;home, int n)</argsstring>
        <name>eq</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Restrict domain values to be equal to <emphasis>n</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/linear/int-noview.hpp" line="141" column="1" bodyfile="/usr/include/gecode/int/linear/int-noview.hpp" bodystart="141" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Linear_1_1NoView_1a5660e938fb8c2113a6a717e23e487a6c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>ModEvent Gecode::Int::Linear::NoView::eq</definition>
        <argsstring>(Space &amp;home, long long int n)</argsstring>
        <name>eq</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>long long int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Restrict domain values to be equal to <emphasis>n</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/linear/int-noview.hpp" line="146" column="1" bodyfile="/usr/include/gecode/int/linear/int-noview.hpp" bodystart="146" bodyend="149"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="related">
      <memberdef kind="function" id="classGecode_1_1Int_1_1Linear_1_1NoView_1afc362b9f37b42ff0803e010ec7cc3bf3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Char</type>
          </param>
          <param>
            <type>class Traits</type>
          </param>
        </templateparamlist>
        <type>std::basic_ostream&lt; Char, Traits &gt; &amp;</type>
        <definition>std::basic_ostream&lt; Char, Traits &gt; &amp; operator&lt;&lt;</definition>
        <argsstring>(std::basic_ostream&lt; Char, Traits &gt; &amp;os, const NoView &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::basic_ostream&lt; Char, Traits &gt; &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1Int_1_1Linear_1_1NoView" kindref="compound">NoView</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Print integer variable view. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/linear/int-noview.hpp" line="845" column="1" bodyfile="/usr/include/gecode/int/linear/int-noview.hpp" bodystart="159" bodyend="159"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>No view serves as filler for empty view arrays. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4546">
        <label>Gecode::Int::Linear::NoView</label>
        <link refid="classGecode_1_1Int_1_1Linear_1_1NoView"/>
        <childnode refid="4547" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4547">
        <label>Gecode::ConstView&lt; IntView &gt;</label>
        <link refid="classGecode_1_1ConstView"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4548">
        <label>Gecode::Int::Linear::NoView</label>
        <link refid="classGecode_1_1Int_1_1Linear_1_1NoView"/>
        <childnode refid="4549" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4549">
        <label>Gecode::ConstView&lt; IntView &gt;</label>
        <link refid="classGecode_1_1ConstView"/>
      </node>
    </collaborationgraph>
    <location file="/usr/include/gecode/int/linear/int-noview.hpp" line="46" column="1" bodyfile="/usr/include/gecode/int/linear/int-noview.hpp" bodystart="46" bodyend="151"/>
    <listofallmembers>
      <member refid="classGecode_1_1ConstView_1a4081cb5a97e8391b235dc11ff3c90ad9" prot="public" virt="non-virtual"><scope>Gecode::Int::Linear::NoView</scope><name>afc</name></member>
      <member refid="classGecode_1_1Int_1_1Linear_1_1NoView_1a0ee86bf558cb170088e0b0a686e13aa6" prot="public" virt="non-virtual"><scope>Gecode::Int::Linear::NoView</scope><name>assigned</name></member>
      <member refid="classGecode_1_1ConstView_1a0cc7502ec1d81feab4035e7e78233186" prot="public" virt="non-virtual"><scope>Gecode::Int::Linear::NoView</scope><name>cancel</name></member>
      <member refid="classGecode_1_1ConstView_1a892e95a4cef1530ac569f4b1fdd5ff4f" prot="public" virt="non-virtual"><scope>Gecode::Int::Linear::NoView</scope><name>cancel</name></member>
      <member refid="classGecode_1_1ConstView_1add4ca8530b19051f6bb64f38b0a943c0" prot="public" virt="non-virtual"><scope>Gecode::Int::Linear::NoView</scope><name>degree</name></member>
      <member refid="classGecode_1_1Int_1_1Linear_1_1NoView_1a553c6a2faa84702db29b1352137c6c93" prot="public" virt="non-virtual"><scope>Gecode::Int::Linear::NoView</scope><name>eq</name></member>
      <member refid="classGecode_1_1Int_1_1Linear_1_1NoView_1a5660e938fb8c2113a6a717e23e487a6c" prot="public" virt="non-virtual"><scope>Gecode::Int::Linear::NoView</scope><name>eq</name></member>
      <member refid="classGecode_1_1Int_1_1Linear_1_1NoView_1a5594805527430820febdadc409870757" prot="public" virt="non-virtual"><scope>Gecode::Int::Linear::NoView</scope><name>gq</name></member>
      <member refid="classGecode_1_1Int_1_1Linear_1_1NoView_1a960735c285b15f4aee30d00b39a8767a" prot="public" virt="non-virtual"><scope>Gecode::Int::Linear::NoView</scope><name>gq</name></member>
      <member refid="classGecode_1_1Int_1_1Linear_1_1NoView_1a65a4a184be1de6cf5ded93b2e372b8a3" prot="public" virt="non-virtual"><scope>Gecode::Int::Linear::NoView</scope><name>gr</name></member>
      <member refid="classGecode_1_1Int_1_1Linear_1_1NoView_1aaa4098cace2a89356124b99c939bc5ad" prot="public" virt="non-virtual"><scope>Gecode::Int::Linear::NoView</scope><name>gr</name></member>
      <member refid="classGecode_1_1Int_1_1Linear_1_1NoView_1a0f5e07af35c35d409b882d3372e3b2dc" prot="public" virt="non-virtual"><scope>Gecode::Int::Linear::NoView</scope><name>in</name></member>
      <member refid="classGecode_1_1Int_1_1Linear_1_1NoView_1ac7c5b84aaf398b0f63b3083c59fa2986" prot="public" virt="non-virtual"><scope>Gecode::Int::Linear::NoView</scope><name>in</name></member>
      <member refid="classGecode_1_1Int_1_1Linear_1_1NoView_1ae4c024dfba753c88c92a9d8e61a51079" prot="public" virt="non-virtual"><scope>Gecode::Int::Linear::NoView</scope><name>le</name></member>
      <member refid="classGecode_1_1Int_1_1Linear_1_1NoView_1a0cf69c36852465dd61b1bcedc7f3a26b" prot="public" virt="non-virtual"><scope>Gecode::Int::Linear::NoView</scope><name>le</name></member>
      <member refid="classGecode_1_1Int_1_1Linear_1_1NoView_1a12cc597e10bda629096c3520cf9f031d" prot="public" virt="non-virtual"><scope>Gecode::Int::Linear::NoView</scope><name>lq</name></member>
      <member refid="classGecode_1_1Int_1_1Linear_1_1NoView_1a0e62d90796f0e2584335a7eed81aa554" prot="public" virt="non-virtual"><scope>Gecode::Int::Linear::NoView</scope><name>lq</name></member>
      <member refid="classGecode_1_1Int_1_1Linear_1_1NoView_1a36b3882ddb8949a58711e7f8604a77d1" prot="public" virt="non-virtual"><scope>Gecode::Int::Linear::NoView</scope><name>max</name></member>
      <member refid="classGecode_1_1ConstView_1aac6f95f0c055e27122643a9b1abd56f7" prot="public" virt="non-virtual"><scope>Gecode::Int::Linear::NoView</scope><name>me</name></member>
      <member refid="classGecode_1_1Int_1_1Linear_1_1NoView_1adcb13c39eacb0d7d9c560b49ec9a3c5c" prot="public" virt="non-virtual"><scope>Gecode::Int::Linear::NoView</scope><name>med</name></member>
      <member refid="classGecode_1_1ConstView_1a7a73566c33cdb56acedb6a44dd919a8a" prot="public" virt="non-virtual" ambiguityscope="ConstView&lt; IntView &gt;::"><scope>Gecode::Int::Linear::NoView</scope><name>med</name></member>
      <member refid="classGecode_1_1Int_1_1Linear_1_1NoView_1ad03f542744feda4636ed0ffdc1de279b" prot="public" virt="non-virtual"><scope>Gecode::Int::Linear::NoView</scope><name>min</name></member>
      <member refid="classGecode_1_1ConstView_1a4cd961b1afc7330ca276cf905840182a" prot="public" virt="non-virtual"><scope>Gecode::Int::Linear::NoView</scope><name>modevent</name></member>
      <member refid="classGecode_1_1Int_1_1Linear_1_1NoView_1a140cc355613156614ea8ef58683c3e8e" prot="public" virt="non-virtual"><scope>Gecode::Int::Linear::NoView</scope><name>NoView</name></member>
      <member refid="classGecode_1_1Int_1_1Linear_1_1NoView_1adbf356392c186e9225efba82fbee10ca" prot="public" virt="non-virtual"><scope>Gecode::Int::Linear::NoView</scope><name>nq</name></member>
      <member refid="classGecode_1_1Int_1_1Linear_1_1NoView_1a9bd74672107fad2f6a5783dfba9e965d" prot="public" virt="non-virtual"><scope>Gecode::Int::Linear::NoView</scope><name>nq</name></member>
      <member refid="classGecode_1_1Int_1_1Linear_1_1NoView_1afc362b9f37b42ff0803e010ec7cc3bf3" prot="public" virt="non-virtual"><scope>Gecode::Int::Linear::NoView</scope><name>operator&lt;&lt;</name></member>
      <member refid="classGecode_1_1Int_1_1Linear_1_1NoView_1aaad81ae2316444e33b7a98e106b6a19e" prot="public" virt="non-virtual"><scope>Gecode::Int::Linear::NoView</scope><name>range</name></member>
      <member refid="classGecode_1_1Int_1_1Linear_1_1NoView_1a925471ff0465267bc1d7273577ef637a" prot="public" virt="non-virtual"><scope>Gecode::Int::Linear::NoView</scope><name>regret_max</name></member>
      <member refid="classGecode_1_1Int_1_1Linear_1_1NoView_1a9b25c54640e8e6df56615a92b5f6bb89" prot="public" virt="non-virtual"><scope>Gecode::Int::Linear::NoView</scope><name>regret_min</name></member>
      <member refid="classGecode_1_1ConstView_1a88bd3f6f1de1748f08d6f386bd661c12" prot="public" virt="non-virtual"><scope>Gecode::Int::Linear::NoView</scope><name>schedule</name></member>
      <member refid="classGecode_1_1Int_1_1Linear_1_1NoView_1a308e7a1d715efd5a64857d73e5963acc" prot="public" virt="non-virtual"><scope>Gecode::Int::Linear::NoView</scope><name>size</name></member>
      <member refid="classGecode_1_1ConstView_1a2501b26a166e241f1fe0a3fb1f574682" prot="public" virt="non-virtual"><scope>Gecode::Int::Linear::NoView</scope><name>subscribe</name></member>
      <member refid="classGecode_1_1ConstView_1a7661595fd39f25b91d0b8a55e9645c12" prot="public" virt="non-virtual"><scope>Gecode::Int::Linear::NoView</scope><name>subscribe</name></member>
      <member refid="classGecode_1_1ConstView_1aa707302c7d06b42165f614cff5dc6fc0" prot="public" virt="non-virtual"><scope>Gecode::Int::Linear::NoView</scope><name>update</name></member>
      <member refid="classGecode_1_1Int_1_1Linear_1_1NoView_1a6b2563261e14828557f80c60f57403de" prot="public" virt="non-virtual"><scope>Gecode::Int::Linear::NoView</scope><name>val</name></member>
      <member refid="classGecode_1_1ConstView_1aee74dc7502b456703a1f44a8c34736c5" prot="public" virt="non-virtual"><scope>Gecode::Int::Linear::NoView</scope><name>varderived</name></member>
      <member refid="classGecode_1_1ConstView_1aa39169631d6411a2c21e7b9785e7427d" prot="public" virt="non-virtual"><scope>Gecode::Int::Linear::NoView</scope><name>varimp</name></member>
      <member refid="classGecode_1_1ConstView_1ab14fccf8cab1048f2c7bf4e30d89a338" prot="public" virt="non-virtual"><scope>Gecode::Int::Linear::NoView</scope><name>VarImpType</name></member>
      <member refid="classGecode_1_1ConstView_1af241f74e7ca3d2a53b8d962a3fd36bcd" prot="public" virt="non-virtual"><scope>Gecode::Int::Linear::NoView</scope><name>VarType</name></member>
      <member refid="classGecode_1_1Int_1_1Linear_1_1NoView_1a14ca14a283475699cd34aa39a8fda3ce" prot="public" virt="non-virtual"><scope>Gecode::Int::Linear::NoView</scope><name>width</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
