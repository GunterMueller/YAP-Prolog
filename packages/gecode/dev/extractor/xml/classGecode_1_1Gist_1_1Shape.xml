<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classGecode_1_1Gist_1_1Shape" kind="class" prot="public">
    <compoundname>Gecode::Gist::Shape</compoundname>
    <includes refid="visualnode_8hh" local="no">visualnode.hh</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classGecode_1_1Gist_1_1Shape_1a46d33908a09a8e01abdd8f39a84f1813" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Gecode::Gist::Shape::_depth</definition>
        <argsstring></argsstring>
        <name>_depth</name>
        <briefdescription>
<para>The depth of this shape. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/gist/visualnode.hh" line="90" column="1" bodyfile="/usr/include/gecode/gist/visualnode.hh" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Gist_1_1Shape_1a6808e1eb667b243b01b78afd50a53b9a" prot="private" static="no" mutable="no">
        <type><ref refid="classGecode_1_1Gist_1_1BoundingBox" kindref="compound">BoundingBox</ref></type>
        <definition>BoundingBox Gecode::Gist::Shape::bb</definition>
        <argsstring></argsstring>
        <name>bb</name>
        <briefdescription>
<para>The bounding box of this shape. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/gist/visualnode.hh" line="92" column="1" bodyfile="/usr/include/gecode/gist/visualnode.hh" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Gist_1_1Shape_1a27a44f181144227cc4af6fd88643f783" prot="private" static="no" mutable="no">
        <type><ref refid="classGecode_1_1Gist_1_1Extent" kindref="compound">Extent</ref></type>
        <definition>Extent Gecode::Gist::Shape::shape[1]</definition>
        <argsstring>[1]</argsstring>
        <name>shape</name>
        <briefdescription>
<para>The shape is an array of extents, one for each depth level. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/gist/visualnode.hh" line="94" column="1" bodyfile="/usr/include/gecode/gist/visualnode.hh" bodystart="94" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classGecode_1_1Gist_1_1Shape_1a47b68b7233f3c7233feedfaca6a563cf" prot="public" static="yes" mutable="no">
        <type><ref refid="classGecode_1_1Gist_1_1Shape" kindref="compound">Shape</ref> *</type>
        <definition>Shape* Gecode::Gist::Shape::leaf</definition>
        <argsstring></argsstring>
        <name>leaf</name>
        <briefdescription>
<para>Static shape for leaf nodes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/gist/visualnode.hh" line="108" column="1" bodyfile="/usr/include/gecode/gist/visualnode.hh" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Gist_1_1Shape_1a2fb3b4e7250a010127fe82d56721d74f" prot="public" static="yes" mutable="no">
        <type><ref refid="classGecode_1_1Gist_1_1Shape" kindref="compound">Shape</ref> *</type>
        <definition>Shape* Gecode::Gist::Shape::hidden</definition>
        <argsstring></argsstring>
        <name>hidden</name>
        <briefdescription>
<para>Static shape for hidden nodes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/gist/visualnode.hh" line="110" column="1" bodyfile="/usr/include/gecode/gist/visualnode.hh" bodystart="110" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classGecode_1_1Gist_1_1Shape_1a52f015b8bee3745b4ef51a7fa63880f0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Gecode::Gist::Shape::Shape</definition>
        <argsstring>(const Shape &amp;)</argsstring>
        <name>Shape</name>
        <param>
          <type>const <ref refid="classGecode_1_1Gist_1_1Shape" kindref="compound">Shape</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Copy construtor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/gist/visualnode.hh" line="96" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Gist_1_1Shape_1a978110216b6fdb13ca81ffa80121730b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGecode_1_1Gist_1_1Shape" kindref="compound">Shape</ref> &amp;</type>
        <definition>Shape&amp; Gecode::Gist::Shape::operator=</definition>
        <argsstring>(const Shape &amp;)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classGecode_1_1Gist_1_1Shape" kindref="compound">Shape</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Assignment operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/gist/visualnode.hh" line="98" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Gist_1_1Shape_1a9a72de851aacd7094ffce20b923911f6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Gecode::Gist::Shape::Shape</definition>
        <argsstring>(void)</argsstring>
        <name>Shape</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/gist/visualnode.hh" line="100" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classGecode_1_1Gist_1_1Shape_1a55206c22581eace18712d05652897777" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classGecode_1_1Gist_1_1Shape" kindref="compound">Shape</ref> *</type>
        <definition>Shape * Gecode::Gist::Shape::allocate</definition>
        <argsstring>(int d)</argsstring>
        <name>allocate</name>
        <param>
          <type>int</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Construct shape of depth <emphasis>d</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/gist/visualnode.hh" line="103" column="1" bodyfile="/usr/include/gecode/gist/visualnode.hpp" bodystart="85" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Gist_1_1Shape_1a43b6a2a72665f620b4906a223521f80b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Gist::Shape::deallocate</definition>
        <argsstring>(Shape *)</argsstring>
        <name>deallocate</name>
        <param>
          <type><ref refid="classGecode_1_1Gist_1_1Shape" kindref="compound">Shape</ref> *</type>
          <defname>shape</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/gist/visualnode.hh" line="105" column="1" bodyfile="/usr/include/gecode/gist/visualnode.hpp" bodystart="95" bodyend="98"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classGecode_1_1Gist_1_1Shape_1ae40d2e6fdd6c3f0ecca98af422c58d9b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Gist::Shape::depth</definition>
        <argsstring>(void) const </argsstring>
        <name>depth</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return depth of the shape. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/gist/visualnode.hh" line="113" column="1" bodyfile="/usr/include/gecode/gist/visualnode.hpp" bodystart="64" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Gist_1_1Shape_1a181ae197f974e83d06024d119c9c266a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Gist::Shape::setDepth</definition>
        <argsstring>(int d)</argsstring>
        <name>setDepth</name>
        <param>
          <type>int</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para><ref refid="namespaceGecode_1_1Set" kindref="compound">Set</ref> depth of the shape to <emphasis>d</emphasis> (must be smaller than original depth) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/gist/visualnode.hh" line="115" column="1" bodyfile="/usr/include/gecode/gist/visualnode.hpp" bodystart="67" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Gist_1_1Shape_1a39a5895e9ad83624b63acdfe23759d8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Gist::Shape::computeBoundingBox</definition>
        <argsstring>(void)</argsstring>
        <name>computeBoundingBox</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Compute bounding box. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/gist/visualnode.hh" line="117" column="1" bodyfile="/usr/include/gecode/gist/visualnode.hpp" bodystart="114" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Gist_1_1Shape_1a4172154f573d68b1e6c6dfb91197e380" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classGecode_1_1Gist_1_1Extent" kindref="compound">Extent</ref> &amp;</type>
        <definition>forceinline const Extent &amp; Gecode::Gist::Shape::operator[]</definition>
        <argsstring>(int i) const </argsstring>
        <name>operator[]</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Return extent at depth <emphasis>i</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/gist/visualnode.hh" line="119" column="1" bodyfile="/usr/include/gecode/gist/visualnode.hpp" bodystart="73" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Gist_1_1Shape_1add775993119cdef96233bcfa08e3cc8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGecode_1_1Gist_1_1Extent" kindref="compound">Extent</ref> &amp;</type>
        <definition>forceinline Extent &amp; Gecode::Gist::Shape::operator[]</definition>
        <argsstring>(int i)</argsstring>
        <name>operator[]</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Return extent at depth <emphasis>i</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/gist/visualnode.hh" line="121" column="1" bodyfile="/usr/include/gecode/gist/visualnode.hpp" bodystart="79" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Gist_1_1Shape_1ac58a516c87c05e626a4e7f5752f48502" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::Gist::Shape::getExtentAtDepth</definition>
        <argsstring>(int depth, Extent &amp;extent)</argsstring>
        <name>getExtentAtDepth</name>
        <param>
          <type>int</type>
          <declname>depth</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Gist_1_1Extent" kindref="compound">Extent</ref> &amp;</type>
          <declname>extent</declname>
        </param>
        <briefdescription>
<para>Return if extent exists at <emphasis>depth</emphasis>, if yes return it in <emphasis>extent</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/gist/visualnode.hh" line="123" column="1" bodyfile="/usr/include/gecode/gist/visualnode.hpp" bodystart="101" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Gist_1_1Shape_1afa6a497861bb064d72f595576d82f73e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classGecode_1_1Gist_1_1BoundingBox" kindref="compound">BoundingBox</ref> &amp;</type>
        <definition>forceinline const BoundingBox &amp; Gecode::Gist::Shape::getBoundingBox</definition>
        <argsstring>(void) const </argsstring>
        <name>getBoundingBox</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return bounding box. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/gist/visualnode.hh" line="125" column="1" bodyfile="/usr/include/gecode/gist/visualnode.hpp" bodystart="128" bodyend="130"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The shape of a subtree. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="6472">
        <label>Gecode::Gist::Shape</label>
        <link refid="classGecode_1_1Gist_1_1Shape"/>
        <childnode refid="6472" relation="usage">
          <edgelabel>hidden</edgelabel>
          <edgelabel>leaf</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/usr/include/gecode/gist/visualnode.hh" line="87" column="1" bodyfile="/usr/include/gecode/gist/visualnode.hh" bodystart="87" bodyend="126"/>
    <listofallmembers>
      <member refid="classGecode_1_1Gist_1_1Shape_1a46d33908a09a8e01abdd8f39a84f1813" prot="private" virt="non-virtual"><scope>Gecode::Gist::Shape</scope><name>_depth</name></member>
      <member refid="classGecode_1_1Gist_1_1Shape_1a55206c22581eace18712d05652897777" prot="public" virt="non-virtual"><scope>Gecode::Gist::Shape</scope><name>allocate</name></member>
      <member refid="classGecode_1_1Gist_1_1Shape_1a6808e1eb667b243b01b78afd50a53b9a" prot="private" virt="non-virtual"><scope>Gecode::Gist::Shape</scope><name>bb</name></member>
      <member refid="classGecode_1_1Gist_1_1Shape_1a39a5895e9ad83624b63acdfe23759d8b" prot="public" virt="non-virtual"><scope>Gecode::Gist::Shape</scope><name>computeBoundingBox</name></member>
      <member refid="classGecode_1_1Gist_1_1Shape_1a43b6a2a72665f620b4906a223521f80b" prot="public" virt="non-virtual"><scope>Gecode::Gist::Shape</scope><name>deallocate</name></member>
      <member refid="classGecode_1_1Gist_1_1Shape_1ae40d2e6fdd6c3f0ecca98af422c58d9b" prot="public" virt="non-virtual"><scope>Gecode::Gist::Shape</scope><name>depth</name></member>
      <member refid="classGecode_1_1Gist_1_1Shape_1afa6a497861bb064d72f595576d82f73e" prot="public" virt="non-virtual"><scope>Gecode::Gist::Shape</scope><name>getBoundingBox</name></member>
      <member refid="classGecode_1_1Gist_1_1Shape_1ac58a516c87c05e626a4e7f5752f48502" prot="public" virt="non-virtual"><scope>Gecode::Gist::Shape</scope><name>getExtentAtDepth</name></member>
      <member refid="classGecode_1_1Gist_1_1Shape_1a2fb3b4e7250a010127fe82d56721d74f" prot="public" virt="non-virtual"><scope>Gecode::Gist::Shape</scope><name>hidden</name></member>
      <member refid="classGecode_1_1Gist_1_1Shape_1a47b68b7233f3c7233feedfaca6a563cf" prot="public" virt="non-virtual"><scope>Gecode::Gist::Shape</scope><name>leaf</name></member>
      <member refid="classGecode_1_1Gist_1_1Shape_1a978110216b6fdb13ca81ffa80121730b" prot="private" virt="non-virtual"><scope>Gecode::Gist::Shape</scope><name>operator=</name></member>
      <member refid="classGecode_1_1Gist_1_1Shape_1a4172154f573d68b1e6c6dfb91197e380" prot="public" virt="non-virtual"><scope>Gecode::Gist::Shape</scope><name>operator[]</name></member>
      <member refid="classGecode_1_1Gist_1_1Shape_1add775993119cdef96233bcfa08e3cc8f" prot="public" virt="non-virtual"><scope>Gecode::Gist::Shape</scope><name>operator[]</name></member>
      <member refid="classGecode_1_1Gist_1_1Shape_1a181ae197f974e83d06024d119c9c266a" prot="public" virt="non-virtual"><scope>Gecode::Gist::Shape</scope><name>setDepth</name></member>
      <member refid="classGecode_1_1Gist_1_1Shape_1a52f015b8bee3745b4ef51a7fa63880f0" prot="private" virt="non-virtual"><scope>Gecode::Gist::Shape</scope><name>Shape</name></member>
      <member refid="classGecode_1_1Gist_1_1Shape_1a9a72de851aacd7094ffce20b923911f6" prot="private" virt="non-virtual"><scope>Gecode::Gist::Shape</scope><name>Shape</name></member>
      <member refid="classGecode_1_1Gist_1_1Shape_1a27a44f181144227cc4af6fd88643f783" prot="private" virt="non-virtual"><scope>Gecode::Gist::Shape</scope><name>shape</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
