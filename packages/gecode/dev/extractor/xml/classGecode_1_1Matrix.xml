<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classGecode_1_1Matrix" kind="class" prot="public">
    <compoundname>Gecode::Matrix</compoundname>
    <includes refid="minimodel_8hh" local="no">minimodel.hh</includes>
    <templateparamlist>
      <param>
        <type>class</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classGecode_1_1Matrix_1a5f94c2a7883b5b2f3a11592c8aff51eb" prot="public" static="no">
        <type><ref refid="classGecode_1_1ArrayTraits" kindref="compound">ArrayTraits</ref>&lt; A &gt;::<ref refid="classGecode_1_1Matrix_1a5f94c2a7883b5b2f3a11592c8aff51eb" kindref="member">ValueType</ref></type>
        <definition>typedef ArrayTraits&lt;A&gt;::ValueType Gecode::Matrix&lt; class &gt;::ValueType</definition>
        <argsstring></argsstring>
        <name>ValueType</name>
        <briefdescription>
<para>The type of elements of this array. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/minimodel.hh" line="2001" column="1" bodyfile="/usr/include/gecode/minimodel.hh" bodystart="2001" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classGecode_1_1Matrix_1a0966361678a7474d1c2058271b98f59d" prot="public" static="no">
        <type><ref refid="classGecode_1_1ArrayTraits" kindref="compound">ArrayTraits</ref>&lt; A &gt;::<ref refid="classGecode_1_1Matrix_1a0966361678a7474d1c2058271b98f59d" kindref="member">ArgsType</ref></type>
        <definition>typedef ArrayTraits&lt;A&gt;::ArgsType Gecode::Matrix&lt; class &gt;::ArgsType</definition>
        <argsstring></argsstring>
        <name>ArgsType</name>
        <briefdescription>
<para>The type of the Args-array type for ValueType values. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/minimodel.hh" line="2003" column="1" bodyfile="/usr/include/gecode/minimodel.hh" bodystart="2003" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classGecode_1_1Matrix_1ac989d3e93f2916f54e1695dcd55c71fb" prot="private" static="no">
        <type><ref refid="classGecode_1_1ArrayTraits" kindref="compound">ArrayTraits</ref>&lt; A &gt;::StorageType</type>
        <definition>typedef ArrayTraits&lt;A&gt;::StorageType Gecode::Matrix&lt; class &gt;::StorageType</definition>
        <argsstring></argsstring>
        <name>StorageType</name>
        <briefdescription>
<para>The type of storage for this array. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/minimodel.hh" line="2007" column="1" bodyfile="/usr/include/gecode/minimodel.hh" bodystart="2007" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classGecode_1_1Matrix_1a8b88ba2e22d05db84acb04e2b9ba2f2b" prot="private" static="no" mutable="no">
        <type>StorageType</type>
        <definition>StorageType Gecode::Matrix&lt; class &gt;::_a</definition>
        <argsstring></argsstring>
        <name>_a</name>
        <briefdescription>
<para>The array wrapped. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/minimodel.hh" line="2008" column="1" bodyfile="/usr/include/gecode/minimodel.hh" bodystart="2008" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Matrix_1afa595d9438098122445c9c95240fba3b" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Gecode::Matrix&lt; class &gt;::_w</definition>
        <argsstring></argsstring>
        <name>_w</name>
        <briefdescription>
<para>The width of the matrix. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/minimodel.hh" line="2009" column="1" bodyfile="/usr/include/gecode/minimodel.hh" bodystart="2009" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Matrix_1a45f79ccab624ad1fa805a5edb6c10b4e" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Gecode::Matrix&lt; class &gt;::_h</definition>
        <argsstring></argsstring>
        <name>_h</name>
        <briefdescription>
<para>The height of the matrix. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/minimodel.hh" line="2010" column="1" bodyfile="/usr/include/gecode/minimodel.hh" bodystart="2010" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classGecode_1_1Matrix_1adccf9c9c4ae2ba6ea1d1128e86be100e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Matrix&lt; A &gt;::Matrix</definition>
        <argsstring>(A a, int w, int h)</argsstring>
        <name>Matrix</name>
        <param>
          <type>A</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <briefdescription>
<para>Basic constructor. </para>        </briefdescription>
        <detaileddescription>
<para>Constructs a <ref refid="classGecode_1_1Matrix" kindref="compound">Matrix</ref> from the array <emphasis>a</emphasis>, using <emphasis>w</emphasis> and <emphasis>h</emphasis> as the width and height of the matrix.</para><para>The elements in the wrapped array <emphasis>a</emphasis> are accessed in row-major order.</para><para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classGecode_1_1MiniModel_1_1ArgumentSizeMismatch" kindref="compound">MiniModel::ArgumentSizeMismatch</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Raised if the parameters <emphasis>w</emphasis> and <emphasis>h</emphasis> doesn&apos;t match the size of the array <emphasis>a</emphasis>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/minimodel.hh" line="2025" column="1" bodyfile="/usr/include/gecode/minimodel/matrix.hpp" bodystart="131" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Matrix_1abb26dbb7a9da2bf6c2a6a48869813572" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Matrix&lt; A &gt;::Matrix</definition>
        <argsstring>(A a, int n)</argsstring>
        <name>Matrix</name>
        <param>
          <type>A</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Basic constructor. </para>        </briefdescription>
        <detaileddescription>
<para>Constructs a square <ref refid="classGecode_1_1Matrix" kindref="compound">Matrix</ref> from the array <emphasis>a</emphasis>, using <emphasis>n</emphasis> as the length of the sides.</para><para>The elements in the wrapped array <emphasis>a</emphasis> are accessed in row-major order.</para><para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classGecode_1_1MiniModel_1_1ArgumentSizeMismatch" kindref="compound">MiniModel::ArgumentSizeMismatch</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Raised if the parameter <emphasis>n</emphasis> doesn&apos;t match the size of the array <emphasis>a</emphasis>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/minimodel.hh" line="2039" column="1" bodyfile="/usr/include/gecode/minimodel/matrix.hpp" bodystart="139" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Matrix_1a742da0e317430fc93d95d4b68713ff5e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Matrix&lt; A &gt;::width</definition>
        <argsstring>(void) const </argsstring>
        <name>width</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return the width of the matrix. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/minimodel.hh" line="2042" column="1" bodyfile="/usr/include/gecode/minimodel/matrix.hpp" bodystart="147" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Matrix_1a9bc77760569857e12b961bbabbd9c1d2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Matrix&lt; A &gt;::height</definition>
        <argsstring>(void) const </argsstring>
        <name>height</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return the height of the matrix. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/minimodel.hh" line="2044" column="1" bodyfile="/usr/include/gecode/minimodel/matrix.hpp" bodystart="150" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Matrix_1a6c0677a79248b1f7338691deca4f3994" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classGecode_1_1Matrix_1a0966361678a7474d1c2058271b98f59d" kindref="member">ArgsType</ref> const</type>
        <definition>Matrix&lt; A &gt;::ArgsType const Gecode::Matrix&lt; A &gt;::get_array</definition>
        <argsstring>(void) const </argsstring>
        <name>get_array</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return an Args-array of the contents of the matrix. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/minimodel.hh" line="2046" column="1" bodyfile="/usr/include/gecode/minimodel/matrix.hpp" bodystart="153" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Matrix_1af41321dff730a55ffb7b42d79ec15805" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGecode_1_1Matrix_1a5f94c2a7883b5b2f3a11592c8aff51eb" kindref="member">ValueType</ref> &amp;</type>
        <definition>forceinline Matrix&lt; A &gt;::ValueType &amp; Gecode::Matrix&lt; A &gt;::operator()</definition>
        <argsstring>(int c, int r)</argsstring>
        <name>operator()</name>
        <param>
          <type>int</type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>Access element (<emphasis>c</emphasis>, <emphasis>r</emphasis>) of the matrix. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classGecode_1_1MiniModel_1_1ArgumentOutOfRange" kindref="compound">MiniModel::ArgumentOutOfRange</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Raised if <emphasis>c</emphasis> or <emphasis>r</emphasis> are out of range. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/minimodel.hh" line="2053" column="1" bodyfile="/usr/include/gecode/minimodel/matrix.hpp" bodystart="159" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Matrix_1af42a163046c76ca3ab8b88d080b442ad" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classGecode_1_1Matrix_1a5f94c2a7883b5b2f3a11592c8aff51eb" kindref="member">ValueType</ref> &amp;</type>
        <definition>forceinline const Matrix&lt; A &gt;::ValueType &amp; Gecode::Matrix&lt; A &gt;::operator()</definition>
        <argsstring>(int c, int r) const </argsstring>
        <name>operator()</name>
        <param>
          <type>int</type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>Access element (<emphasis>c</emphasis>, <emphasis>r</emphasis>) of the matrix. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classGecode_1_1MiniModel_1_1ArgumentOutOfRange" kindref="compound">MiniModel::ArgumentOutOfRange</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Raised if <emphasis>c</emphasis> or <emphasis>r</emphasis> are out of range. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/minimodel.hh" line="2060" column="1" bodyfile="/usr/include/gecode/minimodel/matrix.hpp" bodystart="167" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Matrix_1a1759af537ec360c3c4959e8952682aeb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGecode_1_1Slice" kindref="compound">Slice</ref>&lt; A &gt;</type>
        <definition>forceinline Slice&lt; A &gt; Gecode::Matrix&lt; A &gt;::slice</definition>
        <argsstring>(int fc, int tc, int fr, int tr) const </argsstring>
        <name>slice</name>
        <param>
          <type>int</type>
          <declname>fc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tr</declname>
        </param>
        <briefdescription>
<para>Access slice of the matrix. </para>        </briefdescription>
        <detaileddescription>
<para>This function allows accessing a slice of the matrix, located at columns <formula id="348">$[fc,tc)$</formula> and rows <formula id="349">$[fr,tr)$</formula>. The result of this function is an object that can be converted into either a Matrix&lt;ArgsType&gt; or into ArgsType.</para><para>For further information, see <ref refid="classGecode_1_1Slice" kindref="compound">Slice</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/minimodel.hh" line="2071" column="1" bodyfile="/usr/include/gecode/minimodel/matrix.hpp" bodystart="175" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Matrix_1a8ea675452963e06e4b1a4fc459b63078" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGecode_1_1Slice" kindref="compound">Slice</ref>&lt; A &gt;</type>
        <definition>forceinline Slice&lt; A &gt; Gecode::Matrix&lt; A &gt;::row</definition>
        <argsstring>(int r) const </argsstring>
        <name>row</name>
        <param>
          <type>int</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>Access row <emphasis>r</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/minimodel.hh" line="2074" column="1" bodyfile="/usr/include/gecode/minimodel/matrix.hpp" bodystart="181" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Matrix_1a1d105eb679bfd06d4821a60447dd0419" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGecode_1_1Slice" kindref="compound">Slice</ref>&lt; A &gt;</type>
        <definition>forceinline Slice&lt; A &gt; Gecode::Matrix&lt; A &gt;::col</definition>
        <argsstring>(int c) const </argsstring>
        <name>col</name>
        <param>
          <type>int</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Access column <emphasis>c</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/minimodel.hh" line="2077" column="1" bodyfile="/usr/include/gecode/minimodel/matrix.hpp" bodystart="187" bodyend="189"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="related">
      <memberdef kind="function" id="classGecode_1_1Matrix_1a5f402fa5a459583d01f91d88da2c7166" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Char</type>
          </param>
          <param>
            <type>class Traits</type>
          </param>
          <param>
            <type>class A</type>
          </param>
        </templateparamlist>
        <type>std::basic_ostream&lt; Char, Traits &gt; &amp;</type>
        <definition>std::basic_ostream&lt; Char, Traits &gt; &amp; operator&lt;&lt;</definition>
        <argsstring>(std::basic_ostream&lt; Char, Traits &gt; &amp;os, const Matrix&lt; A &gt; &amp;m)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::basic_ostream&lt; Char, Traits &gt; &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1Matrix" kindref="compound">Matrix</ref>&lt; A &gt; &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Print matrix <emphasis>m</emphasis> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/minimodel.hh" line="1985" column="1" bodyfile="/usr/include/gecode/minimodel/matrix.hpp" bodystart="193" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Matrix_1a55ebdb0672927c8644f8a32ab33f6fea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Char</type>
          </param>
          <param>
            <type>class Traits</type>
          </param>
          <param>
            <type>class A</type>
          </param>
        </templateparamlist>
        <type>std::basic_ostream&lt; Char, Traits &gt; &amp;</type>
        <definition>std::basic_ostream&lt; Char, Traits &gt; &amp; operator&lt;&lt;</definition>
        <argsstring>(std::basic_ostream&lt; Char, Traits &gt; &amp;os, const Slice&lt; A &gt; &amp;s)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::basic_ostream&lt; Char, Traits &gt; &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1Slice" kindref="compound">Slice</ref>&lt; A &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Print slice <emphasis>s</emphasis> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/minimodel.hh" line="1985" column="1" bodyfile="/usr/include/gecode/minimodel/matrix.hpp" bodystart="207" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Matrix_1ab34b0b47f1e8c3b7973e9fa162288308" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void element</definition>
        <argsstring>(Home home, const Matrix&lt; IntArgs &gt; &amp;m, IntVar x, IntVar y, IntVar z, IntConLevel icl=ICL_DEF)</argsstring>
        <name>element</name>
        <param>
          <type><ref refid="classGecode_1_1Home" kindref="compound">Home</ref></type>
          <declname>home</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1Matrix" kindref="compound">Matrix</ref>&lt; <ref refid="classGecode_1_1IntArgs" kindref="compound">IntArgs</ref> &gt; &amp;</type>
          <declname>m</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1IntVar" kindref="compound">IntVar</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1IntVar" kindref="compound">IntVar</ref></type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1IntVar" kindref="compound">IntVar</ref></type>
          <declname>z</declname>
        </param>
        <param>
          <type><ref refid="namespaceGecode_1a22c1363cbf5a7e6fa6c250ae813247ad" kindref="member">IntConLevel</ref></type>
          <declname>icl</declname>
          <defval><ref refid="namespaceGecode_1a22c1363cbf5a7e6fa6c250ae813247adace6cc5f677c3366b58e30b854c455472" kindref="member">ICL_DEF</ref></defval>
        </param>
        <briefdescription>
<para>Element constraint for matrix. </para>        </briefdescription>
        <detaileddescription>
<para>Here, <emphasis>x</emphasis> and <emphasis>y</emphasis> are the coordinates and <emphasis>z</emphasis> is the value at position <emphasis>m(x,y)</emphasis>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/minimodel.hh" line="2100" column="1" bodyfile="/usr/include/gecode/minimodel/matrix.hpp" bodystart="212" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Matrix_1a8621a4c44a8032245812f6a0409db046" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void element</definition>
        <argsstring>(Home home, const Matrix&lt; IntArgs &gt; &amp;m, IntVar x, IntVar y, BoolVar z, IntConLevel icl=ICL_DEF)</argsstring>
        <name>element</name>
        <param>
          <type><ref refid="classGecode_1_1Home" kindref="compound">Home</ref></type>
          <declname>home</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1Matrix" kindref="compound">Matrix</ref>&lt; <ref refid="classGecode_1_1IntArgs" kindref="compound">IntArgs</ref> &gt; &amp;</type>
          <declname>m</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1IntVar" kindref="compound">IntVar</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1IntVar" kindref="compound">IntVar</ref></type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1BoolVar" kindref="compound">BoolVar</ref></type>
          <declname>z</declname>
        </param>
        <param>
          <type><ref refid="namespaceGecode_1a22c1363cbf5a7e6fa6c250ae813247ad" kindref="member">IntConLevel</ref></type>
          <declname>icl</declname>
          <defval><ref refid="namespaceGecode_1a22c1363cbf5a7e6fa6c250ae813247adace6cc5f677c3366b58e30b854c455472" kindref="member">ICL_DEF</ref></defval>
        </param>
        <briefdescription>
<para>Element constraint for matrix. </para>        </briefdescription>
        <detaileddescription>
<para>Here, <emphasis>x</emphasis> and <emphasis>y</emphasis> are the coordinates and <emphasis>z</emphasis> is the value at position <emphasis>m(x,y)</emphasis>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/minimodel.hh" line="2108" column="1" bodyfile="/usr/include/gecode/minimodel/matrix.hpp" bodystart="217" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Matrix_1ae0fbc3096d1d266ce8a358e0b7609132" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void element</definition>
        <argsstring>(Home home, const Matrix&lt; IntVarArgs &gt; &amp;m, IntVar x, IntVar y, IntVar z, IntConLevel icl=ICL_DEF)</argsstring>
        <name>element</name>
        <param>
          <type><ref refid="classGecode_1_1Home" kindref="compound">Home</ref></type>
          <declname>home</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1Matrix" kindref="compound">Matrix</ref>&lt; <ref refid="classGecode_1_1IntVarArgs" kindref="compound">IntVarArgs</ref> &gt; &amp;</type>
          <declname>m</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1IntVar" kindref="compound">IntVar</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1IntVar" kindref="compound">IntVar</ref></type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1IntVar" kindref="compound">IntVar</ref></type>
          <declname>z</declname>
        </param>
        <param>
          <type><ref refid="namespaceGecode_1a22c1363cbf5a7e6fa6c250ae813247ad" kindref="member">IntConLevel</ref></type>
          <declname>icl</declname>
          <defval><ref refid="namespaceGecode_1a22c1363cbf5a7e6fa6c250ae813247adace6cc5f677c3366b58e30b854c455472" kindref="member">ICL_DEF</ref></defval>
        </param>
        <briefdescription>
<para>Element constraint for matrix. </para>        </briefdescription>
        <detaileddescription>
<para>Here, <emphasis>x</emphasis> and <emphasis>y</emphasis> are the coordinates and <emphasis>z</emphasis> is the value at position <emphasis>m(x,y)</emphasis>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/minimodel.hh" line="2116" column="1" bodyfile="/usr/include/gecode/minimodel/matrix.hpp" bodystart="222" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Matrix_1aa7be109ad6ad40e3e93d0360750aa985" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void element</definition>
        <argsstring>(Home home, const Matrix&lt; BoolVarArgs &gt; &amp;m, IntVar x, IntVar y, BoolVar z, IntConLevel icl=ICL_DEF)</argsstring>
        <name>element</name>
        <param>
          <type><ref refid="classGecode_1_1Home" kindref="compound">Home</ref></type>
          <declname>home</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1Matrix" kindref="compound">Matrix</ref>&lt; <ref refid="classGecode_1_1BoolVarArgs" kindref="compound">BoolVarArgs</ref> &gt; &amp;</type>
          <declname>m</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1IntVar" kindref="compound">IntVar</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1IntVar" kindref="compound">IntVar</ref></type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1BoolVar" kindref="compound">BoolVar</ref></type>
          <declname>z</declname>
        </param>
        <param>
          <type><ref refid="namespaceGecode_1a22c1363cbf5a7e6fa6c250ae813247ad" kindref="member">IntConLevel</ref></type>
          <declname>icl</declname>
          <defval><ref refid="namespaceGecode_1a22c1363cbf5a7e6fa6c250ae813247adace6cc5f677c3366b58e30b854c455472" kindref="member">ICL_DEF</ref></defval>
        </param>
        <briefdescription>
<para>Element constraint for matrix. </para>        </briefdescription>
        <detaileddescription>
<para>Here, <emphasis>x</emphasis> and <emphasis>y</emphasis> are the coordinates and <emphasis>z</emphasis> is the value at position <emphasis>m(x,y)</emphasis>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/minimodel.hh" line="2124" column="1" bodyfile="/usr/include/gecode/minimodel/matrix.hpp" bodystart="227" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Matrix_1a97fcdbbf22861781500b5220c0c77df3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class A</type>
          </param>
        </templateparamlist>
        <type><ref refid="classGecode_1_1SymmetryHandle" kindref="compound">SymmetryHandle</ref></type>
        <definition>SymmetryHandle rows_interchange</definition>
        <argsstring>(const Matrix&lt; A &gt; &amp;m)</argsstring>
        <name>rows_interchange</name>
        <param>
          <type>const <ref refid="classGecode_1_1Matrix" kindref="compound">Matrix</ref>&lt; A &gt; &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Interchangeable rows symmetry specification. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/minimodel.hh" line="2149" column="1" bodyfile="/usr/include/gecode/minimodel/ldsb.hpp" bodystart="44" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Matrix_1afe1d02dbd35a7d869940308ffd88bc15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class A</type>
          </param>
        </templateparamlist>
        <type><ref refid="classGecode_1_1SymmetryHandle" kindref="compound">SymmetryHandle</ref></type>
        <definition>SymmetryHandle columns_interchange</definition>
        <argsstring>(const Matrix&lt; A &gt; &amp;m)</argsstring>
        <name>columns_interchange</name>
        <param>
          <type>const <ref refid="classGecode_1_1Matrix" kindref="compound">Matrix</ref>&lt; A &gt; &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Interchangeable columns symmetry specification. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/minimodel.hh" line="2154" column="1" bodyfile="/usr/include/gecode/minimodel/ldsb.hpp" bodystart="55" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Matrix_1a996c45e59ba035b301ed9eb3ca239ad7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class A</type>
          </param>
        </templateparamlist>
        <type><ref refid="classGecode_1_1SymmetryHandle" kindref="compound">SymmetryHandle</ref></type>
        <definition>SymmetryHandle rows_reflect</definition>
        <argsstring>(const Matrix&lt; A &gt; &amp;m)</argsstring>
        <name>rows_reflect</name>
        <param>
          <type>const <ref refid="classGecode_1_1Matrix" kindref="compound">Matrix</ref>&lt; A &gt; &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Reflect rows symmetry specification. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/minimodel.hh" line="2159" column="1" bodyfile="/usr/include/gecode/minimodel/ldsb.hpp" bodystart="66" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Matrix_1aefd3becefee8d7437f2a8d3cec91bfe0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class A</type>
          </param>
        </templateparamlist>
        <type><ref refid="classGecode_1_1SymmetryHandle" kindref="compound">SymmetryHandle</ref></type>
        <definition>SymmetryHandle columns_reflect</definition>
        <argsstring>(const Matrix&lt; A &gt; &amp;m)</argsstring>
        <name>columns_reflect</name>
        <param>
          <type>const <ref refid="classGecode_1_1Matrix" kindref="compound">Matrix</ref>&lt; A &gt; &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Reflect columns symmetry specification. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/minimodel.hh" line="2164" column="1" bodyfile="/usr/include/gecode/minimodel/ldsb.hpp" bodystart="89" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Matrix_1af4479e344c0ff4d43c0994005e78f511" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class A</type>
          </param>
        </templateparamlist>
        <type><ref refid="classGecode_1_1SymmetryHandle" kindref="compound">SymmetryHandle</ref></type>
        <definition>SymmetryHandle diagonal_reflect</definition>
        <argsstring>(const Matrix&lt; A &gt; &amp;m)</argsstring>
        <name>diagonal_reflect</name>
        <param>
          <type>const <ref refid="classGecode_1_1Matrix" kindref="compound">Matrix</ref>&lt; A &gt; &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Reflect around main diagonal symmetry specification. </para>        </briefdescription>
        <detaileddescription>
<para>The matrix  must be square. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/minimodel.hh" line="2171" column="1" bodyfile="/usr/include/gecode/minimodel/ldsb.hpp" bodystart="112" bodyend="130"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Matrix-interface for arrays. </para>    </briefdescription>
    <detaileddescription>
<para>This class allows for wrapping some array and accessing it as a matrix.</para><para><simplesect kind="note"><para>This is a light-weight wrapper, and is not intended for storing variables directly instead of in an array. </para></simplesect>
</para>    </detaileddescription>
    <location file="/usr/include/gecode/minimodel.hh" line="1924" column="1" bodyfile="/usr/include/gecode/minimodel.hh" bodystart="1924" bodyend="-1"/>
    <listofallmembers>
      <member refid="classGecode_1_1Matrix_1a8b88ba2e22d05db84acb04e2b9ba2f2b" prot="private" virt="non-virtual"><scope>Gecode::Matrix</scope><name>_a</name></member>
      <member refid="classGecode_1_1Matrix_1a45f79ccab624ad1fa805a5edb6c10b4e" prot="private" virt="non-virtual"><scope>Gecode::Matrix</scope><name>_h</name></member>
      <member refid="classGecode_1_1Matrix_1afa595d9438098122445c9c95240fba3b" prot="private" virt="non-virtual"><scope>Gecode::Matrix</scope><name>_w</name></member>
      <member refid="classGecode_1_1Matrix_1a0966361678a7474d1c2058271b98f59d" prot="public" virt="non-virtual"><scope>Gecode::Matrix</scope><name>ArgsType</name></member>
      <member refid="classGecode_1_1Matrix_1a1d105eb679bfd06d4821a60447dd0419" prot="public" virt="non-virtual"><scope>Gecode::Matrix</scope><name>col</name></member>
      <member refid="classGecode_1_1Matrix_1afe1d02dbd35a7d869940308ffd88bc15" prot="public" virt="non-virtual"><scope>Gecode::Matrix</scope><name>columns_interchange</name></member>
      <member refid="classGecode_1_1Matrix_1aefd3becefee8d7437f2a8d3cec91bfe0" prot="public" virt="non-virtual"><scope>Gecode::Matrix</scope><name>columns_reflect</name></member>
      <member refid="classGecode_1_1Matrix_1af4479e344c0ff4d43c0994005e78f511" prot="public" virt="non-virtual"><scope>Gecode::Matrix</scope><name>diagonal_reflect</name></member>
      <member refid="classGecode_1_1Matrix_1ab34b0b47f1e8c3b7973e9fa162288308" prot="public" virt="non-virtual"><scope>Gecode::Matrix</scope><name>element</name></member>
      <member refid="classGecode_1_1Matrix_1a8621a4c44a8032245812f6a0409db046" prot="public" virt="non-virtual"><scope>Gecode::Matrix</scope><name>element</name></member>
      <member refid="classGecode_1_1Matrix_1ae0fbc3096d1d266ce8a358e0b7609132" prot="public" virt="non-virtual"><scope>Gecode::Matrix</scope><name>element</name></member>
      <member refid="classGecode_1_1Matrix_1aa7be109ad6ad40e3e93d0360750aa985" prot="public" virt="non-virtual"><scope>Gecode::Matrix</scope><name>element</name></member>
      <member refid="classGecode_1_1Matrix_1a6c0677a79248b1f7338691deca4f3994" prot="public" virt="non-virtual"><scope>Gecode::Matrix</scope><name>get_array</name></member>
      <member refid="classGecode_1_1Matrix_1a9bc77760569857e12b961bbabbd9c1d2" prot="public" virt="non-virtual"><scope>Gecode::Matrix</scope><name>height</name></member>
      <member refid="classGecode_1_1Matrix_1adccf9c9c4ae2ba6ea1d1128e86be100e" prot="public" virt="non-virtual"><scope>Gecode::Matrix</scope><name>Matrix</name></member>
      <member refid="classGecode_1_1Matrix_1abb26dbb7a9da2bf6c2a6a48869813572" prot="public" virt="non-virtual"><scope>Gecode::Matrix</scope><name>Matrix</name></member>
      <member refid="classGecode_1_1Matrix_1af41321dff730a55ffb7b42d79ec15805" prot="public" virt="non-virtual"><scope>Gecode::Matrix</scope><name>operator()</name></member>
      <member refid="classGecode_1_1Matrix_1af42a163046c76ca3ab8b88d080b442ad" prot="public" virt="non-virtual"><scope>Gecode::Matrix</scope><name>operator()</name></member>
      <member refid="classGecode_1_1Matrix_1a5f402fa5a459583d01f91d88da2c7166" prot="public" virt="non-virtual"><scope>Gecode::Matrix</scope><name>operator&lt;&lt;</name></member>
      <member refid="classGecode_1_1Matrix_1a55ebdb0672927c8644f8a32ab33f6fea" prot="public" virt="non-virtual"><scope>Gecode::Matrix</scope><name>operator&lt;&lt;</name></member>
      <member refid="classGecode_1_1Matrix_1a8ea675452963e06e4b1a4fc459b63078" prot="public" virt="non-virtual"><scope>Gecode::Matrix</scope><name>row</name></member>
      <member refid="classGecode_1_1Matrix_1a97fcdbbf22861781500b5220c0c77df3" prot="public" virt="non-virtual"><scope>Gecode::Matrix</scope><name>rows_interchange</name></member>
      <member refid="classGecode_1_1Matrix_1a996c45e59ba035b301ed9eb3ca239ad7" prot="public" virt="non-virtual"><scope>Gecode::Matrix</scope><name>rows_reflect</name></member>
      <member refid="classGecode_1_1Matrix_1a1759af537ec360c3c4959e8952682aeb" prot="public" virt="non-virtual"><scope>Gecode::Matrix</scope><name>slice</name></member>
      <member refid="classGecode_1_1Matrix_1ac989d3e93f2916f54e1695dcd55c71fb" prot="private" virt="non-virtual"><scope>Gecode::Matrix</scope><name>StorageType</name></member>
      <member refid="classGecode_1_1Matrix_1a5f94c2a7883b5b2f3a11592c8aff51eb" prot="public" virt="non-virtual"><scope>Gecode::Matrix</scope><name>ValueType</name></member>
      <member refid="classGecode_1_1Matrix_1a742da0e317430fc93d95d4b68713ff5e" prot="public" virt="non-virtual"><scope>Gecode::Matrix</scope><name>width</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
