<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classGecode_1_1ValCommit" kind="class" prot="public">
    <compoundname>Gecode::ValCommit</compoundname>
    <includes refid="brancher-val-commit_8hpp" local="no">brancher-val-commit.hpp</includes>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>_View</declname>
        <defname>_View</defname>
      </param>
      <param>
        <type>class</type>
        <declname>_Val</declname>
        <defname>_Val</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classGecode_1_1ValCommit_1ac14c515eb7d66bdcba521e13eb0db0da" prot="public" static="no">
        <type>_View</type>
        <definition>typedef _View Gecode::ValCommit&lt; _View, _Val &gt;::View</definition>
        <argsstring></argsstring>
        <name>View</name>
        <briefdescription>
<para>View type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/brancher-val-commit.hpp" line="51" column="1" bodyfile="/usr/include/gecode/kernel/brancher-val-commit.hpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classGecode_1_1ValCommit_1abca8d62ca4173efc87a20f442c11e25e" prot="public" static="no">
        <type>_Val</type>
        <definition>typedef _Val Gecode::ValCommit&lt; _View, _Val &gt;::Val</definition>
        <argsstring></argsstring>
        <name>Val</name>
        <briefdescription>
<para>Value type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/brancher-val-commit.hpp" line="53" column="1" bodyfile="/usr/include/gecode/kernel/brancher-val-commit.hpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classGecode_1_1ValCommit_1a920a0cd48c53c6e33ad4458313ae01b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::ValCommit&lt; View, Val &gt;::ValCommit</definition>
        <argsstring>(Space &amp;home, const ValBranch &amp;vb)</argsstring>
        <name>ValCommit</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1ValBranch" kindref="compound">ValBranch</ref> &amp;</type>
          <declname>vb</declname>
        </param>
        <briefdescription>
<para>Constructor for initialization. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/brancher-val-commit.hpp" line="56" column="1" bodyfile="/usr/include/gecode/kernel/brancher-val-commit.hpp" bodystart="99" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1ValCommit_1a7cef4dd276cd789ff71e1ac479e78b2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::ValCommit&lt; View, Val &gt;::ValCommit</definition>
        <argsstring>(Space &amp;home, bool shared, ValCommit&lt; View, Val &gt; &amp;vs)</argsstring>
        <name>ValCommit</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>shared</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ValCommit" kindref="compound">ValCommit</ref>&lt; <ref refid="classGecode_1_1ValCommit_1ac14c515eb7d66bdcba521e13eb0db0da" kindref="member">View</ref>, <ref refid="classGecode_1_1ValCommit_1abca8d62ca4173efc87a20f442c11e25e" kindref="member">Val</ref> &gt; &amp;</type>
          <declname>vs</declname>
        </param>
        <briefdescription>
<para>Constructor for cloning. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/brancher-val-commit.hpp" line="58" column="1" bodyfile="/usr/include/gecode/kernel/brancher-val-commit.hpp" bodystart="102" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1ValCommit_1a27594fca7c49155fdd66218963b28cfe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::ValCommit&lt; View, Val &gt;::notice</definition>
        <argsstring>(void) const </argsstring>
        <name>notice</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Whether dispose must always be called (that is, notice is needed) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/brancher-val-commit.hpp" line="60" column="1" bodyfile="/usr/include/gecode/kernel/brancher-val-commit.hpp" bodystart="105" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1ValCommit_1a99b526c56e60c02474ce7400a087d5a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::ValCommit&lt; View, Val &gt;::dispose</definition>
        <argsstring>(Space &amp;home)</argsstring>
        <name>dispose</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <briefdescription>
<para>Delete value commit. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/brancher-val-commit.hpp" line="62" column="1" bodyfile="/usr/include/gecode/kernel/brancher-val-commit.hpp" bodystart="110" bodyend="110"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Base class for value commit. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/usr/include/gecode/kernel/brancher-val-commit.hpp" line="48" column="1" bodyfile="/usr/include/gecode/kernel/brancher-val-commit.hpp" bodystart="48" bodyend="63"/>
    <listofallmembers>
      <member refid="classGecode_1_1ValCommit_1a99b526c56e60c02474ce7400a087d5a5" prot="public" virt="non-virtual"><scope>Gecode::ValCommit</scope><name>dispose</name></member>
      <member refid="classGecode_1_1ValCommit_1a27594fca7c49155fdd66218963b28cfe" prot="public" virt="non-virtual"><scope>Gecode::ValCommit</scope><name>notice</name></member>
      <member refid="classGecode_1_1ValCommit_1abca8d62ca4173efc87a20f442c11e25e" prot="public" virt="non-virtual"><scope>Gecode::ValCommit</scope><name>Val</name></member>
      <member refid="classGecode_1_1ValCommit_1a920a0cd48c53c6e33ad4458313ae01b6" prot="public" virt="non-virtual"><scope>Gecode::ValCommit</scope><name>ValCommit</name></member>
      <member refid="classGecode_1_1ValCommit_1a7cef4dd276cd789ff71e1ac479e78b2e" prot="public" virt="non-virtual"><scope>Gecode::ValCommit</scope><name>ValCommit</name></member>
      <member refid="classGecode_1_1ValCommit_1ac14c515eb7d66bdcba521e13eb0db0da" prot="public" virt="non-virtual"><scope>Gecode::ValCommit</scope><name>View</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
