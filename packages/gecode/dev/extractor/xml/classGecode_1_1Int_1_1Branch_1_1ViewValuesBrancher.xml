<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classGecode_1_1Int_1_1Branch_1_1ViewValuesBrancher" kind="class" prot="public">
    <compoundname>Gecode::Int::Branch::ViewValuesBrancher</compoundname>
    <basecompoundref refid="classGecode_1_1ViewBrancher" prot="public" virt="non-virtual">Gecode::ViewBrancher&lt; IntView, n &gt;</basecompoundref>
    <includes refid="int_2branch_8hh" local="no">branch.hh</includes>
    <templateparamlist>
      <param>
        <type>int</type>
        <declname>n</declname>
        <defname>n</defname>
      </param>
      <param>
        <type>bool</type>
        <declname>min</declname>
        <defname>min</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classGecode_1_1Int_1_1Branch_1_1ViewValuesBrancher_1ae5b0a2dab124c4d393f5928578797d6c" prot="private" static="no">
        <type><ref refid="classGecode_1_1ViewBrancher" kindref="compound">ViewBrancher</ref>&lt; <ref refid="classGecode_1_1Int_1_1IntView" kindref="compound">IntView</ref>, n &gt;::BranchFilter</type>
        <definition>typedef ViewBrancher&lt;IntView,n&gt;::BranchFilter Gecode::Int::Branch::ViewValuesBrancher&lt; n, min &gt;::BranchFilter</definition>
        <argsstring></argsstring>
        <name>BranchFilter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/branch.hh" line="633" column="1" bodyfile="/usr/include/gecode/int/branch.hh" bodystart="633" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classGecode_1_1Int_1_1Branch_1_1ViewValuesBrancher_1a0177fa566b7b5d94c3ca5d31aa8165c1" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceGecode_1a623fea8dd944c5caa09f5f8b906819ae" kindref="member">IntVarValPrint</ref></type>
        <definition>IntVarValPrint Gecode::Int::Branch::ViewValuesBrancher&lt; n, min &gt;::vvp</definition>
        <argsstring></argsstring>
        <name>vvp</name>
        <briefdescription>
<para>Print function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/branch.hh" line="637" column="1" bodyfile="/usr/include/gecode/int/branch.hh" bodystart="637" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classGecode_1_1Int_1_1Branch_1_1ViewValuesBrancher_1a6ca22c5d3eb30ec17a944dcebd21974f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Int::Branch::ViewValuesBrancher&lt; n, min &gt;::ViewValuesBrancher</definition>
        <argsstring>(Space &amp;home, bool shared, ViewValuesBrancher &amp;b)</argsstring>
        <name>ViewValuesBrancher</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>shared</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1Branch_1_1ViewValuesBrancher" kindref="compound">ViewValuesBrancher</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Constructor for cloning <emphasis>b</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/branch.hh" line="639" column="1" bodyfile="/usr/include/gecode/int/branch/view-values.hpp" bodystart="113" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Branch_1_1ViewValuesBrancher_1a066b80c3a9beb88261c34048f90d0fa8" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Int::Branch::ViewValuesBrancher&lt; n, min &gt;::ViewValuesBrancher</definition>
        <argsstring>(Home home, ViewArray&lt; IntView &gt; &amp;x, ViewSel&lt; IntView &gt; *vs[n], BranchFilter bf, IntVarValPrint vvp)</argsstring>
        <name>ViewValuesBrancher</name>
        <param>
          <type><ref refid="classGecode_1_1Home" kindref="compound">Home</ref></type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; <ref refid="classGecode_1_1Int_1_1IntView" kindref="compound">IntView</ref> &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewSel" kindref="compound">ViewSel</ref>&lt; <ref refid="classGecode_1_1Int_1_1IntView" kindref="compound">IntView</ref> &gt; *</type>
          <declname>vs</declname>
          <array>[n]</array>
        </param>
        <param>
          <type>BranchFilter</type>
          <declname>bf</declname>
        </param>
        <param>
          <type><ref refid="namespaceGecode_1a623fea8dd944c5caa09f5f8b906819ae" kindref="member">IntVarValPrint</ref></type>
          <declname>vvp</declname>
        </param>
        <briefdescription>
<para>Constructor for creation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/branch.hh" line="641" column="1" bodyfile="/usr/include/gecode/int/branch/view-values.hpp" bodystart="97" bodyend="100"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classGecode_1_1Int_1_1Branch_1_1ViewValuesBrancher_1a14c38ee6d73a2a7109369a93fed82f5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="classGecode_1_1Choice" kindref="compound">Choice</ref> *</type>
        <definition>const Choice * Gecode::Int::Branch::ViewValuesBrancher&lt; n, min &gt;::choice</definition>
        <argsstring>(Space &amp;home)</argsstring>
        <name>choice</name>
        <reimplements refid="classGecode_1_1Brancher_1a268f77feb1a24032ce46a8edde97d986">choice</reimplements>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <briefdescription>
<para>Return choice. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/branch.hh" line="646" column="1" bodyfile="/usr/include/gecode/int/branch/view-values.hpp" bodystart="124" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Branch_1_1ViewValuesBrancher_1af65e3067ef200bca5146ca91c2ff1b1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="classGecode_1_1Choice" kindref="compound">Choice</ref> *</type>
        <definition>const Choice * Gecode::Int::Branch::ViewValuesBrancher&lt; n, min &gt;::choice</definition>
        <argsstring>(const Space &amp;home, Archive &amp;e)</argsstring>
        <name>choice</name>
        <reimplements refid="classGecode_1_1Brancher_1ac4d93468b5d836cea115149e2128a646">choice</reimplements>
        <param>
          <type>const <ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Archive" kindref="compound">Archive</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Return choice. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/branch.hh" line="648" column="1" bodyfile="/usr/include/gecode/int/branch/view-values.hpp" bodystart="132" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Branch_1_1ViewValuesBrancher_1a740cead4323953ac998c31c8aec19143" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>ExecStatus Gecode::Int::Branch::ViewValuesBrancher&lt; n, min &gt;::commit</definition>
        <argsstring>(Space &amp;home, const Choice &amp;c, unsigned int a)</argsstring>
        <name>commit</name>
        <reimplements refid="classGecode_1_1Brancher_1a56fc00c1123d15ee979363b2a8126cca">commit</reimplements>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1Choice" kindref="compound">Choice</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>Perform commit for choice <emphasis>c</emphasis> and alternative <emphasis>a</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/branch.hh" line="650" column="1" bodyfile="/usr/include/gecode/int/branch/view-values.hpp" bodystart="142" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Branch_1_1ViewValuesBrancher_1a52d6002589dcc5650b09890a26accae3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classGecode_1_1NGL" kindref="compound">NGL</ref> *</type>
        <definition>NGL * Gecode::Int::Branch::ViewValuesBrancher&lt; n, min &gt;::ngl</definition>
        <argsstring>(Space &amp;home, const Choice &amp;c, unsigned int a) const </argsstring>
        <name>ngl</name>
        <reimplements refid="classGecode_1_1Brancher_1a8d426b216e3273202ca46fc1ed4fd345">ngl</reimplements>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1Choice" kindref="compound">Choice</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>Create no-good literal for choice <emphasis>c</emphasis> and alternative <emphasis>a</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/branch.hh" line="652" column="1" bodyfile="/usr/include/gecode/int/branch/view-values.hpp" bodystart="153" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Branch_1_1ViewValuesBrancher_1a4164936d6e0ef3b9c81ab8de371f2750" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Gecode::Int::Branch::ViewValuesBrancher&lt; n, min &gt;::print</definition>
        <argsstring>(const Space &amp;home, const Choice &amp;c, unsigned int a, std::ostream &amp;o) const </argsstring>
        <name>print</name>
        <reimplements refid="classGecode_1_1Brancher_1ad578d17b478416450835db84421f92e1">print</reimplements>
        <param>
          <type>const <ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1Choice" kindref="compound">Choice</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>a</declname>
        </param>
        <param>
          <type>std::ostream &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
<para>Print branch for choice <emphasis>c</emphasis> and alternative <emphasis>a</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>Prints an explanation of the alternative <emphasis>a</emphasis> of choice <emphasis>c</emphasis> on the stream <emphasis>o</emphasis>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/branch.hh" line="660" column="1" bodyfile="/usr/include/gecode/int/branch/view-values.hpp" bodystart="164" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Branch_1_1ViewValuesBrancher_1aaff31d299582701d097f0834b79bcf5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classGecode_1_1Actor" kindref="compound">Actor</ref> *</type>
        <definition>Actor * Gecode::Int::Branch::ViewValuesBrancher&lt; n, min &gt;::copy</definition>
        <argsstring>(Space &amp;home, bool share)</argsstring>
        <name>copy</name>
        <reimplements refid="classGecode_1_1Actor_1a67b240e2810720846c3632c94cc9c99d">copy</reimplements>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>share</declname>
        </param>
        <briefdescription>
<para>Perform cloning. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/branch.hh" line="663" column="1" bodyfile="/usr/include/gecode/int/branch/view-values.hpp" bodystart="118" bodyend="120"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classGecode_1_1Int_1_1Branch_1_1ViewValuesBrancher_1adad53cc9119979f5907c99149e7c0b80" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGecode_1_1BrancherHandle" kindref="compound">BrancherHandle</ref></type>
        <definition>BrancherHandle Gecode::Int::Branch::ViewValuesBrancher&lt; n, min &gt;::post</definition>
        <argsstring>(Home home, ViewArray&lt; IntView &gt; &amp;x, ViewSel&lt; IntView &gt; *vs[n], BranchFilter bf, IntVarValPrint vvp)</argsstring>
        <name>post</name>
        <param>
          <type><ref refid="classGecode_1_1Home" kindref="compound">Home</ref></type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; <ref refid="classGecode_1_1Int_1_1IntView" kindref="compound">IntView</ref> &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewSel" kindref="compound">ViewSel</ref>&lt; <ref refid="classGecode_1_1Int_1_1IntView" kindref="compound">IntView</ref> &gt; *</type>
          <declname>vs</declname>
          <array>[n]</array>
        </param>
        <param>
          <type>BranchFilter</type>
          <declname>bf</declname>
        </param>
        <param>
          <type><ref refid="namespaceGecode_1a623fea8dd944c5caa09f5f8b906819ae" kindref="member">IntVarValPrint</ref></type>
          <declname>vvp</declname>
        </param>
        <briefdescription>
<para>Constructor for creation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/branch.hh" line="665" column="1" bodyfile="/usr/include/gecode/int/branch/view-values.hpp" bodystart="104" bodyend="108"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Brancher by view and values selection </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="8021">
        <label>Gecode::ViewBrancher&lt; IntView, n &gt;</label>
        <link refid="classGecode_1_1ViewBrancher"/>
        <childnode refid="8022" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8022">
        <label>Gecode::Brancher</label>
        <link refid="classGecode_1_1Brancher"/>
        <childnode refid="8023" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8023">
        <label>Gecode::Actor</label>
        <link refid="classGecode_1_1Actor"/>
        <childnode refid="8024" relation="private-inheritance">
        </childnode>
      </node>
      <node id="8024">
        <label>Gecode::ActorLink</label>
        <link refid="classGecode_1_1ActorLink"/>
      </node>
      <node id="8020">
        <label>Gecode::Int::Branch::ViewValuesBrancher&lt; n, min &gt;</label>
        <link refid="classGecode_1_1Int_1_1Branch_1_1ViewValuesBrancher"/>
        <childnode refid="8021" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="8026">
        <label>Gecode::ViewBrancher&lt; IntView, n &gt;</label>
        <link refid="classGecode_1_1ViewBrancher"/>
        <childnode refid="8027" relation="public-inheritance">
        </childnode>
        <childnode refid="8030" relation="usage">
          <edgelabel>x</edgelabel>
        </childnode>
        <childnode refid="8031" relation="usage">
          <edgelabel>bf</edgelabel>
        </childnode>
        <childnode refid="8032" relation="usage">
          <edgelabel>vs</edgelabel>
        </childnode>
      </node>
      <node id="8036">
        <label>Gecode::SharedHandle::Object</label>
        <link refid="classGecode_1_1SharedHandle_1_1Object"/>
      </node>
      <node id="8034">
        <label>Gecode::LocalObject</label>
        <link refid="classGecode_1_1LocalObject"/>
        <childnode refid="8028" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8035">
        <label>Gecode::VarImpBase</label>
        <link refid="classGecode_1_1VarImpBase"/>
      </node>
      <node id="8032">
        <label>Gecode::ViewSel&lt; IntView &gt;</label>
        <link refid="classGecode_1_1ViewSel"/>
      </node>
      <node id="8033">
        <label>Gecode::Space</label>
        <link refid="classGecode_1_1Space"/>
        <childnode refid="8034" relation="usage">
          <edgelabel>local</edgelabel>
        </childnode>
        <childnode refid="8035" relation="usage">
          <edgelabel>vars_u</edgelabel>
          <edgelabel>vars_noidx</edgelabel>
        </childnode>
        <childnode refid="8036" relation="usage">
          <edgelabel>shared</edgelabel>
        </childnode>
        <childnode refid="8029" relation="usage">
          <edgelabel>active</edgelabel>
          <edgelabel>queue</edgelabel>
        </childnode>
      </node>
      <node id="8031">
        <label>Gecode::BranchTraits&lt; typename IntView::VarType &gt;</label>
        <link refid="classGecode_1_1BranchTraits"/>
      </node>
      <node id="8027">
        <label>Gecode::Brancher</label>
        <link refid="classGecode_1_1Brancher"/>
        <childnode refid="8028" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8028">
        <label>Gecode::Actor</label>
        <link refid="classGecode_1_1Actor"/>
        <childnode refid="8029" relation="private-inheritance">
        </childnode>
      </node>
      <node id="8029">
        <label>Gecode::ActorLink</label>
        <link refid="classGecode_1_1ActorLink"/>
      </node>
      <node id="8025">
        <label>Gecode::Int::Branch::ViewValuesBrancher&lt; n, min &gt;</label>
        <link refid="classGecode_1_1Int_1_1Branch_1_1ViewValuesBrancher"/>
        <childnode refid="8026" relation="public-inheritance">
        </childnode>
        <childnode refid="8033" relation="usage">
          <edgelabel>vvp</edgelabel>
        </childnode>
      </node>
      <node id="8030">
        <label>Gecode::ViewArray&lt; IntView &gt;</label>
        <link refid="classGecode_1_1ViewArray"/>
      </node>
    </collaborationgraph>
    <location file="/usr/include/gecode/int/branch.hh" line="632" column="1" bodyfile="/usr/include/gecode/int/branch.hh" bodystart="632" bodyend="668"/>
    <listofallmembers>
      <member refid="classGecode_1_1ViewBrancher_1a8bd06d8ce2ebbeeba3a0df263d0fbacf" prot="protected" virt="non-virtual"><scope>Gecode::Int::Branch::ViewValuesBrancher</scope><name>bf</name></member>
      <member refid="classGecode_1_1Brancher_1a7bbaf1f4df629265dade447af948298e" prot="protected" virt="non-virtual"><scope>Gecode::Int::Branch::ViewValuesBrancher</scope><name>Brancher</name></member>
      <member refid="classGecode_1_1Brancher_1a837e2b189b53fe84794a3b0da82b790a" prot="protected" virt="non-virtual"><scope>Gecode::Int::Branch::ViewValuesBrancher</scope><name>Brancher</name></member>
      <member refid="classGecode_1_1Int_1_1Branch_1_1ViewValuesBrancher_1ae5b0a2dab124c4d393f5928578797d6c" prot="private" virt="non-virtual"><scope>Gecode::Int::Branch::ViewValuesBrancher</scope><name>BranchFilter</name></member>
      <member refid="classGecode_1_1ActorLink_1a8427f41a27a72b52ceb52d0fdad21063" prot="public" virt="non-virtual" ambiguityscope="Gecode::ActorLink::"><scope>Gecode::Int::Branch::ViewValuesBrancher</scope><name>cast</name></member>
      <member refid="classGecode_1_1ActorLink_1a464526456db41981f82a1193a8b4e569" prot="public" virt="non-virtual" ambiguityscope="Gecode::ActorLink::"><scope>Gecode::Int::Branch::ViewValuesBrancher</scope><name>cast</name></member>
      <member refid="classGecode_1_1Int_1_1Branch_1_1ViewValuesBrancher_1a14c38ee6d73a2a7109369a93fed82f5c" prot="public" virt="virtual"><scope>Gecode::Int::Branch::ViewValuesBrancher</scope><name>choice</name></member>
      <member refid="classGecode_1_1Int_1_1Branch_1_1ViewValuesBrancher_1af65e3067ef200bca5146ca91c2ff1b1e" prot="public" virt="virtual"><scope>Gecode::Int::Branch::ViewValuesBrancher</scope><name>choice</name></member>
      <member refid="classGecode_1_1Int_1_1Branch_1_1ViewValuesBrancher_1a740cead4323953ac998c31c8aec19143" prot="public" virt="virtual"><scope>Gecode::Int::Branch::ViewValuesBrancher</scope><name>commit</name></member>
      <member refid="classGecode_1_1Int_1_1Branch_1_1ViewValuesBrancher_1aaff31d299582701d097f0834b79bcf5c" prot="public" virt="virtual"><scope>Gecode::Int::Branch::ViewValuesBrancher</scope><name>copy</name></member>
      <member refid="classGecode_1_1ViewBrancher_1a7c159d5c1f31e889235685e19dd4745c" prot="public" virt="virtual"><scope>Gecode::Int::Branch::ViewValuesBrancher</scope><name>dispose</name></member>
      <member refid="classGecode_1_1Brancher_1abf3e7cd63277085696ce0a48ae1c840d" prot="public" virt="non-virtual"><scope>Gecode::Int::Branch::ViewValuesBrancher</scope><name>id</name></member>
      <member refid="classGecode_1_1Int_1_1Branch_1_1ViewValuesBrancher_1a52d6002589dcc5650b09890a26accae3" prot="public" virt="virtual"><scope>Gecode::Int::Branch::ViewValuesBrancher</scope><name>ngl</name></member>
      <member refid="classGecode_1_1Actor_1a388f671145dcf906f81d22bde2dc0f3d" prot="public" virt="non-virtual"><scope>Gecode::Int::Branch::ViewValuesBrancher</scope><name>operator delete</name></member>
      <member refid="classGecode_1_1Actor_1ac28b9601b530076a1bda75834487f898" prot="public" virt="non-virtual"><scope>Gecode::Int::Branch::ViewValuesBrancher</scope><name>operator new</name></member>
      <member refid="classGecode_1_1ViewBrancher_1a3bccef15a969bd042419c9adf7d24728" prot="protected" virt="non-virtual"><scope>Gecode::Int::Branch::ViewValuesBrancher</scope><name>pos</name></member>
      <member refid="classGecode_1_1Int_1_1Branch_1_1ViewValuesBrancher_1adad53cc9119979f5907c99149e7c0b80" prot="public" virt="non-virtual"><scope>Gecode::Int::Branch::ViewValuesBrancher</scope><name>post</name></member>
      <member refid="classGecode_1_1Int_1_1Branch_1_1ViewValuesBrancher_1a4164936d6e0ef3b9c81ab8de371f2750" prot="public" virt="virtual"><scope>Gecode::Int::Branch::ViewValuesBrancher</scope><name>print</name></member>
      <member refid="classGecode_1_1ViewBrancher_1ad4d6e8b38f157e325cf3845e64ed75d7" prot="protected" virt="non-virtual"><scope>Gecode::Int::Branch::ViewValuesBrancher</scope><name>start</name></member>
      <member refid="classGecode_1_1ViewBrancher_1ab06acc3718206ef2dd69f2a5fbd29ff9" prot="public" virt="virtual"><scope>Gecode::Int::Branch::ViewValuesBrancher</scope><name>status</name></member>
      <member refid="classGecode_1_1ViewBrancher_1a5326d83d4f34ed591f7c5e946b8d7fe5" prot="protected" virt="non-virtual"><scope>Gecode::Int::Branch::ViewValuesBrancher</scope><name>view</name></member>
      <member refid="classGecode_1_1ViewBrancher_1a60203bdac8f1a00dc1a4b7c6c70b8d98" prot="protected" virt="non-virtual"><scope>Gecode::Int::Branch::ViewValuesBrancher</scope><name>ViewBrancher</name></member>
      <member refid="classGecode_1_1ViewBrancher_1a1bc868729c81ce5dc2d2edb28ee60752" prot="protected" virt="non-virtual"><scope>Gecode::Int::Branch::ViewValuesBrancher</scope><name>ViewBrancher</name></member>
      <member refid="classGecode_1_1Int_1_1Branch_1_1ViewValuesBrancher_1a6ca22c5d3eb30ec17a944dcebd21974f" prot="protected" virt="non-virtual"><scope>Gecode::Int::Branch::ViewValuesBrancher</scope><name>ViewValuesBrancher</name></member>
      <member refid="classGecode_1_1Int_1_1Branch_1_1ViewValuesBrancher_1a066b80c3a9beb88261c34048f90d0fa8" prot="protected" virt="non-virtual"><scope>Gecode::Int::Branch::ViewValuesBrancher</scope><name>ViewValuesBrancher</name></member>
      <member refid="classGecode_1_1ViewBrancher_1af24b93d52c489f9c90b2f6823e1b0c0f" prot="protected" virt="non-virtual"><scope>Gecode::Int::Branch::ViewValuesBrancher</scope><name>vs</name></member>
      <member refid="classGecode_1_1Int_1_1Branch_1_1ViewValuesBrancher_1a0177fa566b7b5d94c3ca5d31aa8165c1" prot="protected" virt="non-virtual"><scope>Gecode::Int::Branch::ViewValuesBrancher</scope><name>vvp</name></member>
      <member refid="classGecode_1_1ViewBrancher_1ae1d184233cf870880995fe3bbd4a37fe" prot="protected" virt="non-virtual"><scope>Gecode::Int::Branch::ViewValuesBrancher</scope><name>x</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
