<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="clang_8hpp" kind="file">
    <compoundname>clang.hpp</compoundname>
      <sectiondef kind="define">
      <memberdef kind="define" id="clang_8hpp_1ad5806f9ad0d62bb56ccf649ea83f058f" prot="public" static="no">
        <name>BOOST_NO_RTTI</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/config/compiler/clang.hpp" line="17" column="11" bodyfile="/usr/include/gecode/third-party/boost/config/compiler/clang.hpp" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="clang_8hpp_1aede545b6ee9ac012d10b43e533834127" prot="public" static="no">
        <name>BOOST_HAS_NRVO</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/config/compiler/clang.hpp" line="24" column="9" bodyfile="/usr/include/gecode/third-party/boost/config/compiler/clang.hpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="clang_8hpp_1a454e263333ba0a545af8b803fd1a8a53" prot="public" static="no">
        <name>BOOST_NO_AUTO_DECLARATIONS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/config/compiler/clang.hpp" line="28" column="9" bodyfile="/usr/include/gecode/third-party/boost/config/compiler/clang.hpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="clang_8hpp_1abee59fa974ed5df6c79e90ad5d2935a2" prot="public" static="no">
        <name>BOOST_NO_AUTO_MULTIDECLARATIONS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/config/compiler/clang.hpp" line="29" column="9" bodyfile="/usr/include/gecode/third-party/boost/config/compiler/clang.hpp" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="clang_8hpp_1a7f33717514f6be9134295a6976c17ab0" prot="public" static="no">
        <name>BOOST_NO_CHAR16_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/config/compiler/clang.hpp" line="30" column="9" bodyfile="/usr/include/gecode/third-party/boost/config/compiler/clang.hpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="clang_8hpp_1a58c90dea21e43297b322244141749bb3" prot="public" static="no">
        <name>BOOST_NO_CHAR32_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/config/compiler/clang.hpp" line="31" column="9" bodyfile="/usr/include/gecode/third-party/boost/config/compiler/clang.hpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="clang_8hpp_1a2ab158f48b5ebc962868ca4fae0e235e" prot="public" static="no">
        <name>BOOST_NO_CONSTEXPR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/config/compiler/clang.hpp" line="32" column="9" bodyfile="/usr/include/gecode/third-party/boost/config/compiler/clang.hpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="clang_8hpp_1a5265b73b38627ec9f12a526bc43a53a7" prot="public" static="no">
        <name>BOOST_NO_DECLTYPE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/config/compiler/clang.hpp" line="35" column="11" bodyfile="/usr/include/gecode/third-party/boost/config/compiler/clang.hpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="clang_8hpp_1a1e33c4ee8a0e882792a1ab749898fc25" prot="public" static="no">
        <name>BOOST_NO_DEFAULTED_FUNCTIONS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/config/compiler/clang.hpp" line="38" column="9" bodyfile="/usr/include/gecode/third-party/boost/config/compiler/clang.hpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="clang_8hpp_1ac6990e4e38c813084b7fb78af7ce1225" prot="public" static="no">
        <name>BOOST_NO_DELETED_FUNCTIONS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/config/compiler/clang.hpp" line="41" column="11" bodyfile="/usr/include/gecode/third-party/boost/config/compiler/clang.hpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="clang_8hpp_1a86822fbd4a31972ef0b6c1ded3a4405e" prot="public" static="no">
        <name>BOOST_NO_EXPLICIT_CONVERSION_OPERATORS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/config/compiler/clang.hpp" line="44" column="9" bodyfile="/usr/include/gecode/third-party/boost/config/compiler/clang.hpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="clang_8hpp_1a1afa1eecb86fade06c2c9d679c2acd99" prot="public" static="no">
        <name>BOOST_NO_FUNCTION_TEMPLATE_DEFAULT_ARGS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/config/compiler/clang.hpp" line="47" column="11" bodyfile="/usr/include/gecode/third-party/boost/config/compiler/clang.hpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="clang_8hpp_1a5a8aa8a671e0f4abfebd733b8f6fb6a4" prot="public" static="no">
        <name>BOOST_NO_INITIALIZER_LISTS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/config/compiler/clang.hpp" line="50" column="9" bodyfile="/usr/include/gecode/third-party/boost/config/compiler/clang.hpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="clang_8hpp_1a16e1e4611bfbfa7240467ed9d4a7c9d0" prot="public" static="no">
        <name>BOOST_NO_LAMBDAS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/config/compiler/clang.hpp" line="51" column="9" bodyfile="/usr/include/gecode/third-party/boost/config/compiler/clang.hpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="clang_8hpp_1a0579c4e6a9f145f7bfbbdf63b1cb115a" prot="public" static="no">
        <name>BOOST_NO_NOEXCEPT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/config/compiler/clang.hpp" line="52" column="9" bodyfile="/usr/include/gecode/third-party/boost/config/compiler/clang.hpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="clang_8hpp_1aaf1c53a1bb595a0379a07db8f2c38353" prot="public" static="no">
        <name>BOOST_NO_NULLPTR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/config/compiler/clang.hpp" line="53" column="9" bodyfile="/usr/include/gecode/third-party/boost/config/compiler/clang.hpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="clang_8hpp_1a7f6939964e1d2ff8d7a4f5f3d98f807a" prot="public" static="no">
        <name>BOOST_NO_RAW_LITERALS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/config/compiler/clang.hpp" line="54" column="9" bodyfile="/usr/include/gecode/third-party/boost/config/compiler/clang.hpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="clang_8hpp_1a7501099fcfc0a918e188478cac7d6f31" prot="public" static="no">
        <name>BOOST_NO_UNIFIED_INITIALIZATION_SYNTAX</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/config/compiler/clang.hpp" line="55" column="9" bodyfile="/usr/include/gecode/third-party/boost/config/compiler/clang.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="clang_8hpp_1aab711e4e53ece4b8ff79a12ace10492f" prot="public" static="no">
        <name>BOOST_NO_RVALUE_REFERENCES</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/config/compiler/clang.hpp" line="58" column="11" bodyfile="/usr/include/gecode/third-party/boost/config/compiler/clang.hpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="clang_8hpp_1a673f164000ed2c207f200528add4f736" prot="public" static="no">
        <name>BOOST_NO_SCOPED_ENUMS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/config/compiler/clang.hpp" line="62" column="11" bodyfile="/usr/include/gecode/third-party/boost/config/compiler/clang.hpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="clang_8hpp_1a982d85c01772e8754849378db91f4f1c" prot="public" static="no">
        <name>BOOST_NO_STATIC_ASSERT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/config/compiler/clang.hpp" line="66" column="11" bodyfile="/usr/include/gecode/third-party/boost/config/compiler/clang.hpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="clang_8hpp_1ab6ce230323006d1a142b49de8090dda8" prot="public" static="no">
        <name>BOOST_NO_TEMPLATE_ALIASES</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/config/compiler/clang.hpp" line="69" column="9" bodyfile="/usr/include/gecode/third-party/boost/config/compiler/clang.hpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="clang_8hpp_1a4080e71a9718560d54bdffbd2a9a3cb2" prot="public" static="no">
        <name>BOOST_NO_UNICODE_LITERALS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/config/compiler/clang.hpp" line="70" column="9" bodyfile="/usr/include/gecode/third-party/boost/config/compiler/clang.hpp" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="clang_8hpp_1ac6f562f47e6a764127297fdec648165e" prot="public" static="no">
        <name>BOOST_NO_VARIADIC_TEMPLATES</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/config/compiler/clang.hpp" line="73" column="11" bodyfile="/usr/include/gecode/third-party/boost/config/compiler/clang.hpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="clang_8hpp_1a78005f877b1cc90480de16ddfd9a0def" prot="public" static="no">
        <name>BOOST_COMPILER</name>
        <initializer>&quot;Clang version &quot; __clang_version__</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/config/compiler/clang.hpp" line="80" column="11" bodyfile="/usr/include/gecode/third-party/boost/config/compiler/clang.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="clang_8hpp_1a9bb99392877785ad62a849b72f90a4bf" prot="public" static="no">
        <name>BOOST_CLANG</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/config/compiler/clang.hpp" line="84" column="9" bodyfile="/usr/include/gecode/third-party/boost/config/compiler/clang.hpp" bodystart="84" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>(C)<sp/>Copyright<sp/>Douglas<sp/>Gregor<sp/>2010</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Use,<sp/>modification<sp/>and<sp/>distribution<sp/>are<sp/>subject<sp/>to<sp/>the<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Boost<sp/>Software<sp/>License,<sp/>Version<sp/>1.0.<sp/>(See<sp/>accompanying<sp/>file<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>LICENSE_1_0.txt<sp/>or<sp/>copy<sp/>at<sp/>http://www.boost.org/LICENSE_1_0.txt)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>See<sp/>http://www.boost.org<sp/>for<sp/>most<sp/>recent<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Clang<sp/>compiler<sp/>setup.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__has_feature(cxx_exceptions)<sp/>&amp;&amp;<sp/>!defined(BOOST_NO_EXCEPTIONS)</highlight></codeline>
<codeline lineno="12"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="13"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>BOOST_NO_EXCEPTIONS</highlight></codeline>
<codeline lineno="14"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="15"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!__has_feature(cxx_rtti)</highlight></codeline>
<codeline lineno="17"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>BOOST_NO_RTTI</highlight></codeline>
<codeline lineno="18"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="19"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__int64)</highlight></codeline>
<codeline lineno="21"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>BOOST_HAS_MS_INT64</highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BOOST_HAS_NRVO</highlight></codeline>
<codeline lineno="25"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Clang<sp/>supports<sp/>&quot;long<sp/>long&quot;<sp/>in<sp/>all<sp/>compilation<sp/>modes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BOOST_NO_AUTO_DECLARATIONS</highlight></codeline>
<codeline lineno="29"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>BOOST_NO_AUTO_MULTIDECLARATIONS</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>BOOST_NO_CHAR16_T</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>BOOST_NO_CHAR32_T</highlight></codeline>
<codeline lineno="32"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>BOOST_NO_CONSTEXPR</highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!__has_feature(cxx_decltype)</highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>BOOST_NO_DECLTYPE</highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="37"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BOOST_NO_DEFAULTED_FUNCTIONS</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!__has_feature(cxx_deleted_functions)</highlight></codeline>
<codeline lineno="41"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>BOOST_NO_DELETED_FUNCTIONS</highlight></codeline>
<codeline lineno="42"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="43"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BOOST_NO_EXPLICIT_CONVERSION_OPERATORS</highlight></codeline>
<codeline lineno="45"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!__has_feature(cxx_default_function_template_args)</highlight></codeline>
<codeline lineno="47"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>BOOST_NO_FUNCTION_TEMPLATE_DEFAULT_ARGS</highlight></codeline>
<codeline lineno="48"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="49"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BOOST_NO_INITIALIZER_LISTS</highlight></codeline>
<codeline lineno="51"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>BOOST_NO_LAMBDAS</highlight></codeline>
<codeline lineno="52"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>BOOST_NO_NOEXCEPT</highlight></codeline>
<codeline lineno="53"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>BOOST_NO_NULLPTR</highlight></codeline>
<codeline lineno="54"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>BOOST_NO_RAW_LITERALS</highlight></codeline>
<codeline lineno="55"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>BOOST_NO_UNIFIED_INITIALIZATION_SYNTAX</highlight></codeline>
<codeline lineno="56"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!__has_feature(cxx_rvalue_references)</highlight></codeline>
<codeline lineno="58"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>BOOST_NO_RVALUE_REFERENCES</highlight></codeline>
<codeline lineno="59"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="60"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!__has_feature(cxx_strong_enums)</highlight></codeline>
<codeline lineno="62"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>BOOST_NO_SCOPED_ENUMS</highlight></codeline>
<codeline lineno="63"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="64"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!__has_feature(cxx_static_assert)</highlight></codeline>
<codeline lineno="66"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>BOOST_NO_STATIC_ASSERT</highlight></codeline>
<codeline lineno="67"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="68"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BOOST_NO_TEMPLATE_ALIASES</highlight></codeline>
<codeline lineno="70"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>BOOST_NO_UNICODE_LITERALS</highlight></codeline>
<codeline lineno="71"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!__has_feature(cxx_variadic_templates)</highlight></codeline>
<codeline lineno="73"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>BOOST_NO_VARIADIC_TEMPLATES</highlight></codeline>
<codeline lineno="74"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="75"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Clang<sp/>always<sp/>supports<sp/>variadic<sp/>macros</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Clang<sp/>always<sp/>supports<sp/>extern<sp/>templates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>BOOST_COMPILER</highlight></codeline>
<codeline lineno="80"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>BOOST_COMPILER<sp/>&quot;Clang<sp/>version<sp/>&quot;<sp/>__clang_version__</highlight></codeline>
<codeline lineno="81"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="82"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Macro<sp/>used<sp/>to<sp/>identify<sp/>the<sp/>Clang<sp/>compiler.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BOOST_CLANG<sp/>1</highlight></codeline>
<codeline lineno="85"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/usr/include/gecode/third-party/boost/config/compiler/clang.hpp"/>
  </compounddef>
</doxygen>
