<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classGecode_1_1ViewValBrancher" kind="class" prot="public">
    <compoundname>Gecode::ViewValBrancher</compoundname>
    <basecompoundref refid="classGecode_1_1ViewBrancher" prot="public" virt="non-virtual">Gecode::ViewBrancher&lt; View, n &gt;</basecompoundref>
    <derivedcompoundref refid="classGecode_1_1Int_1_1LDSB_1_1LDSBBrancher" prot="public" virt="non-virtual">Gecode::Int::LDSB::LDSBBrancher&lt; View, n, Val, a &gt;</derivedcompoundref>
    <includes refid="brancher-view-val_8hpp" local="no">brancher-view-val.hpp</includes>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>View</declname>
        <defname>View</defname>
      </param>
      <param>
        <type>int</type>
        <declname>n</declname>
        <defname>n</defname>
      </param>
      <param>
        <type>class</type>
        <declname>Val</declname>
        <defname>Val</defname>
      </param>
      <param>
        <type>unsigned int</type>
        <declname>a</declname>
        <defname>a</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classGecode_1_1ViewValBrancher_1afb36cd81d6fc55c585cc798fe1b725ed" prot="private" static="no">
        <type><ref refid="classGecode_1_1ViewBrancher" kindref="compound">ViewBrancher</ref>&lt; View, n &gt;::BranchFilter</type>
        <definition>typedef ViewBrancher&lt;View,n&gt;::BranchFilter Gecode::ViewValBrancher&lt; View, n, Val, a &gt;::BranchFilter</definition>
        <argsstring></argsstring>
        <name>BranchFilter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/brancher-view-val.hpp" line="96" column="1" bodyfile="/usr/include/gecode/kernel/brancher-view-val.hpp" bodystart="96" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-type">
      <memberdef kind="typedef" id="classGecode_1_1ViewValBrancher_1ae0e1c5f3aa3c467d92832d99cab8cb0d" prot="protected" static="no">
        <type>void(*</type>
        <definition>typedef void(* Gecode::ViewValBrancher&lt; View, n, Val, a &gt;::VarValPrint)(const Space &amp;home, const BrancherHandle &amp;bh, unsigned int b, typename View::VarType x, int i, const Val &amp;m, std::ostream &amp;o)</definition>
        <argsstring>)(const Space &amp;home, const BrancherHandle &amp;bh, unsigned int b, typename View::VarType x, int i, const Val &amp;m, std::ostream &amp;o)</argsstring>
        <name>VarValPrint</name>
        <briefdescription>
<para>Function type for printing variable and value selection. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/brancher-view-val.hpp" line="103" column="1" bodyfile="/usr/include/gecode/kernel/brancher-view-val.hpp" bodystart="103" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classGecode_1_1ViewValBrancher_1ae65901eb7dca91c33e962b05bc3f2d97" prot="protected" static="no" mutable="no">
        <type><ref refid="classGecode_1_1ValSelCommitBase" kindref="compound">ValSelCommitBase</ref>&lt; View, Val &gt; *</type>
        <definition>ValSelCommitBase&lt;View,Val&gt;* Gecode::ViewValBrancher&lt; View, n, Val, a &gt;::vsc</definition>
        <argsstring></argsstring>
        <name>vsc</name>
        <briefdescription>
<para>Value selection and commit object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/brancher-view-val.hpp" line="101" column="1" bodyfile="/usr/include/gecode/kernel/brancher-view-val.hpp" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1ViewValBrancher_1a63c5e6ebf613316bd58c76ade0ea5df2" prot="protected" static="no" mutable="no">
        <type><ref refid="classGecode_1_1ViewValBrancher_1ae0e1c5f3aa3c467d92832d99cab8cb0d" kindref="member">VarValPrint</ref></type>
        <definition>VarValPrint Gecode::ViewValBrancher&lt; View, n, Val, a &gt;::vvp</definition>
        <argsstring></argsstring>
        <name>vvp</name>
        <briefdescription>
<para>Print function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/brancher-view-val.hpp" line="109" column="1" bodyfile="/usr/include/gecode/kernel/brancher-view-val.hpp" bodystart="109" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classGecode_1_1ViewValBrancher_1aeae02be6ee25c0d4bcb699690137eb3f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::ViewValBrancher&lt; View, n, Val, a &gt;::ViewValBrancher</definition>
        <argsstring>(Space &amp;home, bool share, ViewValBrancher &amp;b)</argsstring>
        <name>ViewValBrancher</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>share</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewValBrancher" kindref="compound">ViewValBrancher</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Constructor for cloning <emphasis>b</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/brancher-view-val.hpp" line="111" column="1" bodyfile="/usr/include/gecode/kernel/brancher-view-val.hpp" bodystart="249" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1ViewValBrancher_1ab0d73a199cda2c9c6e6c9e8134ee1aed" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::ViewValBrancher&lt; View, n, Val, a &gt;::ViewValBrancher</definition>
        <argsstring>(Home home, ViewArray&lt; View &gt; &amp;x, ViewSel&lt; View &gt; *vs[n], ValSelCommitBase&lt; View, Val &gt; *vsc, BranchFilter bf, VarValPrint vvp)</argsstring>
        <name>ViewValBrancher</name>
        <param>
          <type><ref refid="classGecode_1_1Home" kindref="compound">Home</ref></type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; View &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewSel" kindref="compound">ViewSel</ref>&lt; View &gt; *</type>
          <declname>vs</declname>
          <array>[n]</array>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ValSelCommitBase" kindref="compound">ValSelCommitBase</ref>&lt; View, Val &gt; *</type>
          <declname>vsc</declname>
        </param>
        <param>
          <type>BranchFilter</type>
          <declname>bf</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewValBrancher_1ae0e1c5f3aa3c467d92832d99cab8cb0d" kindref="member">VarValPrint</ref></type>
          <declname>vvp</declname>
        </param>
        <briefdescription>
<para>Constructor for creation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/brancher-view-val.hpp" line="113" column="1" bodyfile="/usr/include/gecode/kernel/brancher-view-val.hpp" bodystart="225" bodyend="234"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classGecode_1_1ViewValBrancher_1a71a35056046196cfbbfcf624c2209de9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="classGecode_1_1Choice" kindref="compound">Choice</ref> *</type>
        <definition>const Choice * Gecode::ViewValBrancher&lt; View, n, Val, a &gt;::choice</definition>
        <argsstring>(Space &amp;home)</argsstring>
        <name>choice</name>
        <reimplements refid="classGecode_1_1Brancher_1a268f77feb1a24032ce46a8edde97d986">choice</reimplements>
        <reimplementedby refid="classGecode_1_1Set_1_1LDSB_1_1LDSBSetBrancher_1a66e128c5005ab10f536c4abe2f2c2772">choice</reimplementedby>
        <reimplementedby refid="classGecode_1_1Int_1_1LDSB_1_1LDSBBrancher_1a95b8a227d5cadb7ae16d30dd9174ef64">choice</reimplementedby>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <briefdescription>
<para>Return choice. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/brancher-view-val.hpp" line="121" column="1" bodyfile="/usr/include/gecode/kernel/brancher-view-val.hpp" bodystart="261" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1ViewValBrancher_1a50ffb6bee3aa645335bfa8285211ebe0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="classGecode_1_1Choice" kindref="compound">Choice</ref> *</type>
        <definition>const Choice * Gecode::ViewValBrancher&lt; View, n, Val, a &gt;::choice</definition>
        <argsstring>(const Space &amp;home, Archive &amp;e)</argsstring>
        <name>choice</name>
        <reimplements refid="classGecode_1_1Brancher_1ac4d93468b5d836cea115149e2128a646">choice</reimplements>
        <reimplementedby refid="classGecode_1_1Int_1_1LDSB_1_1LDSBBrancher_1ab4bc607d3fb770864f52ec9c0554acd3">choice</reimplementedby>
        <param>
          <type>const <ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Archive" kindref="compound">Archive</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Return choice. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/brancher-view-val.hpp" line="123" column="1" bodyfile="/usr/include/gecode/kernel/brancher-view-val.hpp" bodystart="269" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1ViewValBrancher_1a1966df9fb7c73b77148d759ca53e4882" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>ExecStatus Gecode::ViewValBrancher&lt; View, n, Val, a &gt;::commit</definition>
        <argsstring>(Space &amp;home, const Choice &amp;c, unsigned int b)</argsstring>
        <name>commit</name>
        <reimplements refid="classGecode_1_1Brancher_1a56fc00c1123d15ee979363b2a8126cca">commit</reimplements>
        <reimplementedby refid="classGecode_1_1Set_1_1LDSB_1_1LDSBSetBrancher_1a2e7997c8381ffcac6713342f7e75f087">commit</reimplementedby>
        <reimplementedby refid="classGecode_1_1Int_1_1LDSB_1_1LDSBBrancher_1af9017341283acdaf6c99532458c7d495">commit</reimplementedby>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1Choice" kindref="compound">Choice</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Perform commit for choice <emphasis>c</emphasis> and alternative <emphasis>b</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/brancher-view-val.hpp" line="125" column="1" bodyfile="/usr/include/gecode/kernel/brancher-view-val.hpp" bodystart="279" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1ViewValBrancher_1a8095e6d2d826b0a69cca2751dc73c7f8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classGecode_1_1NGL" kindref="compound">NGL</ref> *</type>
        <definition>NGL * Gecode::ViewValBrancher&lt; View, n, Val, a &gt;::ngl</definition>
        <argsstring>(Space &amp;home, const Choice &amp;c, unsigned int b) const </argsstring>
        <name>ngl</name>
        <reimplements refid="classGecode_1_1Brancher_1a8d426b216e3273202ca46fc1ed4fd345">ngl</reimplements>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1Choice" kindref="compound">Choice</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Create no-good literal for choice <emphasis>c</emphasis> and alternative <emphasis>b</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/brancher-view-val.hpp" line="127" column="1" bodyfile="/usr/include/gecode/kernel/brancher-view-val.hpp" bodystart="292" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1ViewValBrancher_1ae69e93395dcf2264648112c8a9d86e98" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Gecode::ViewValBrancher&lt; View, n, Val, a &gt;::print</definition>
        <argsstring>(const Space &amp;home, const Choice &amp;c, unsigned int b, std::ostream &amp;o) const </argsstring>
        <name>print</name>
        <reimplements refid="classGecode_1_1Brancher_1ad578d17b478416450835db84421f92e1">print</reimplements>
        <param>
          <type>const <ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1Choice" kindref="compound">Choice</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>b</declname>
        </param>
        <param>
          <type>std::ostream &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
<para>Print branch for choice <emphasis>c</emphasis> and alternative <emphasis>b</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>Prints an explanation of the alternative <emphasis>b</emphasis> of choice <emphasis>c</emphasis> on the stream <emphasis>o</emphasis>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/brancher-view-val.hpp" line="135" column="1" bodyfile="/usr/include/gecode/kernel/brancher-view-val.hpp" bodystart="302" bodyend="312"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1ViewValBrancher_1a022fe17f0b2e1c48799b97adfbcdf384" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classGecode_1_1Actor" kindref="compound">Actor</ref> *</type>
        <definition>Actor * Gecode::ViewValBrancher&lt; View, n, Val, a &gt;::copy</definition>
        <argsstring>(Space &amp;home, bool share)</argsstring>
        <name>copy</name>
        <reimplements refid="classGecode_1_1Actor_1a67b240e2810720846c3632c94cc9c99d">copy</reimplements>
        <reimplementedby refid="classGecode_1_1Set_1_1LDSB_1_1LDSBSetBrancher_1ab04a379386740976682b0e5ace083721">copy</reimplementedby>
        <reimplementedby refid="classGecode_1_1Int_1_1LDSB_1_1LDSBBrancher_1a97258cbbc87dd077213dd4c3e65204d3">copy</reimplementedby>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>share</declname>
        </param>
        <briefdescription>
<para>Perform cloning. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/brancher-view-val.hpp" line="138" column="1" bodyfile="/usr/include/gecode/kernel/brancher-view-val.hpp" bodystart="255" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1ViewValBrancher_1a5927b457442e8fbab4d9737b12df2c06" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>size_t</type>
        <definition>forceinline size_t Gecode::ViewValBrancher&lt; View, n, Val, a &gt;::dispose</definition>
        <argsstring>(Space &amp;home)</argsstring>
        <name>dispose</name>
        <reimplements refid="classGecode_1_1ViewBrancher_1a7c159d5c1f31e889235685e19dd4745c">dispose</reimplements>
        <reimplementedby refid="classGecode_1_1Int_1_1LDSB_1_1LDSBBrancher_1a11fd58843746c1c30eea88ca2c5da0f9">dispose</reimplementedby>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <briefdescription>
<para>Delete brancher and return its size. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/brancher-view-val.hpp" line="140" column="1" bodyfile="/usr/include/gecode/kernel/brancher-view-val.hpp" bodystart="316" bodyend="322"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classGecode_1_1ViewValBrancher_1a3cac53948c9a6217603eec85883f5933" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGecode_1_1BrancherHandle" kindref="compound">BrancherHandle</ref></type>
        <definition>forceinline BrancherHandle Gecode::ViewValBrancher&lt; View, n, Val, a &gt;::post</definition>
        <argsstring>(Home home, ViewArray&lt; View &gt; &amp;x, ViewSel&lt; View &gt; *vs[n], ValSelCommitBase&lt; View, Val &gt; *vsc, BranchFilter bf, VarValPrint vvp)</argsstring>
        <name>post</name>
        <param>
          <type><ref refid="classGecode_1_1Home" kindref="compound">Home</ref></type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; View &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewSel" kindref="compound">ViewSel</ref>&lt; View &gt; *</type>
          <declname>vs</declname>
          <array>[n]</array>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ValSelCommitBase" kindref="compound">ValSelCommitBase</ref>&lt; View, Val &gt; *</type>
          <declname>vsc</declname>
        </param>
        <param>
          <type>BranchFilter</type>
          <declname>bf</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewValBrancher_1ae0e1c5f3aa3c467d92832d99cab8cb0d" kindref="member">VarValPrint</ref></type>
          <declname>vvp</declname>
        </param>
        <briefdescription>
<para><ref refid="classGecode_1_1Brancher" kindref="compound">Brancher</ref> post function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/brancher-view-val.hpp" line="142" column="1" bodyfile="/usr/include/gecode/kernel/brancher-view-val.hpp" bodystart="239" bodyend="244"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Generic brancher by view and value selection. </para>    </briefdescription>
    <detaileddescription>
<para>Implements view-based branching for an array of views (of type <emphasis>View</emphasis>) and value (of type <emphasis>Val</emphasis>). </para>    </detaileddescription>
    <inheritancegraph>
      <node id="7987">
        <label>Gecode::ViewValBrancher&lt; View, n, Val, a &gt;</label>
        <link refid="classGecode_1_1ViewValBrancher"/>
        <childnode refid="7988" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7989">
        <label>Gecode::Brancher</label>
        <link refid="classGecode_1_1Brancher"/>
        <childnode refid="7990" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7988">
        <label>Gecode::ViewBrancher&lt; View, n &gt;</label>
        <link refid="classGecode_1_1ViewBrancher"/>
        <childnode refid="7989" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7992">
        <label>Gecode::Int::LDSB::LDSBBrancher&lt; View, n, Val, a &gt;</label>
        <link refid="classGecode_1_1Int_1_1LDSB_1_1LDSBBrancher"/>
        <childnode refid="7987" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7990">
        <label>Gecode::Actor</label>
        <link refid="classGecode_1_1Actor"/>
        <childnode refid="7991" relation="private-inheritance">
        </childnode>
      </node>
      <node id="7991">
        <label>Gecode::ActorLink</label>
        <link refid="classGecode_1_1ActorLink"/>
      </node>
      <node id="7993">
        <label>Gecode::Set::LDSB::LDSBSetBrancher&lt; View, n, Val, a &gt;</label>
        <link refid="classGecode_1_1Set_1_1LDSB_1_1LDSBSetBrancher"/>
        <childnode refid="7992" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="8004">
        <label>Gecode::SharedHandle::Object</label>
        <link refid="classGecode_1_1SharedHandle_1_1Object"/>
      </node>
      <node id="8002">
        <label>Gecode::LocalObject</label>
        <link refid="classGecode_1_1LocalObject"/>
        <childnode refid="7997" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8005">
        <label>Gecode::ValSelCommitBase&lt; View, Val &gt;</label>
        <link refid="classGecode_1_1ValSelCommitBase"/>
      </node>
      <node id="8000">
        <label>Gecode::BranchTraits&lt; typename View::VarType &gt;</label>
        <link refid="classGecode_1_1BranchTraits"/>
      </node>
      <node id="8003">
        <label>Gecode::VarImpBase</label>
        <link refid="classGecode_1_1VarImpBase"/>
      </node>
      <node id="7999">
        <label>Gecode::ViewSel&lt; View &gt;</label>
        <link refid="classGecode_1_1ViewSel"/>
      </node>
      <node id="8001">
        <label>Gecode::Space</label>
        <link refid="classGecode_1_1Space"/>
        <childnode refid="8002" relation="usage">
          <edgelabel>local</edgelabel>
        </childnode>
        <childnode refid="8003" relation="usage">
          <edgelabel>vars_u</edgelabel>
          <edgelabel>vars_noidx</edgelabel>
        </childnode>
        <childnode refid="8004" relation="usage">
          <edgelabel>shared</edgelabel>
        </childnode>
        <childnode refid="7998" relation="usage">
          <edgelabel>active</edgelabel>
          <edgelabel>queue</edgelabel>
        </childnode>
      </node>
      <node id="7994">
        <label>Gecode::ViewValBrancher&lt; View, n, Val, a &gt;</label>
        <link refid="classGecode_1_1ViewValBrancher"/>
        <childnode refid="7995" relation="public-inheritance">
        </childnode>
        <childnode refid="8001" relation="usage">
          <edgelabel>vvp</edgelabel>
        </childnode>
        <childnode refid="8005" relation="usage">
          <edgelabel>vsc</edgelabel>
        </childnode>
      </node>
      <node id="7996">
        <label>Gecode::Brancher</label>
        <link refid="classGecode_1_1Brancher"/>
        <childnode refid="7997" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7995">
        <label>Gecode::ViewBrancher&lt; View, n &gt;</label>
        <link refid="classGecode_1_1ViewBrancher"/>
        <childnode refid="7996" relation="public-inheritance">
        </childnode>
        <childnode refid="7999" relation="usage">
          <edgelabel>vs</edgelabel>
        </childnode>
        <childnode refid="8000" relation="usage">
          <edgelabel>bf</edgelabel>
        </childnode>
      </node>
      <node id="7997">
        <label>Gecode::Actor</label>
        <link refid="classGecode_1_1Actor"/>
        <childnode refid="7998" relation="private-inheritance">
        </childnode>
      </node>
      <node id="7998">
        <label>Gecode::ActorLink</label>
        <link refid="classGecode_1_1ActorLink"/>
      </node>
    </collaborationgraph>
    <location file="/usr/include/gecode/kernel/brancher-view-val.hpp" line="95" column="1" bodyfile="/usr/include/gecode/kernel/brancher-view-val.hpp" bodystart="95" bodyend="148"/>
    <listofallmembers>
      <member refid="classGecode_1_1ViewBrancher_1a8bd06d8ce2ebbeeba3a0df263d0fbacf" prot="protected" virt="non-virtual"><scope>Gecode::ViewValBrancher</scope><name>bf</name></member>
      <member refid="classGecode_1_1Brancher_1a7bbaf1f4df629265dade447af948298e" prot="protected" virt="non-virtual"><scope>Gecode::ViewValBrancher</scope><name>Brancher</name></member>
      <member refid="classGecode_1_1Brancher_1a837e2b189b53fe84794a3b0da82b790a" prot="protected" virt="non-virtual"><scope>Gecode::ViewValBrancher</scope><name>Brancher</name></member>
      <member refid="classGecode_1_1ViewValBrancher_1afb36cd81d6fc55c585cc798fe1b725ed" prot="private" virt="non-virtual"><scope>Gecode::ViewValBrancher</scope><name>BranchFilter</name></member>
      <member refid="classGecode_1_1ActorLink_1a8427f41a27a72b52ceb52d0fdad21063" prot="public" virt="non-virtual" ambiguityscope="Gecode::ActorLink::"><scope>Gecode::ViewValBrancher</scope><name>cast</name></member>
      <member refid="classGecode_1_1ActorLink_1a464526456db41981f82a1193a8b4e569" prot="public" virt="non-virtual" ambiguityscope="Gecode::ActorLink::"><scope>Gecode::ViewValBrancher</scope><name>cast</name></member>
      <member refid="classGecode_1_1ViewValBrancher_1a71a35056046196cfbbfcf624c2209de9" prot="public" virt="virtual"><scope>Gecode::ViewValBrancher</scope><name>choice</name></member>
      <member refid="classGecode_1_1ViewValBrancher_1a50ffb6bee3aa645335bfa8285211ebe0" prot="public" virt="virtual"><scope>Gecode::ViewValBrancher</scope><name>choice</name></member>
      <member refid="classGecode_1_1ViewValBrancher_1a1966df9fb7c73b77148d759ca53e4882" prot="public" virt="virtual"><scope>Gecode::ViewValBrancher</scope><name>commit</name></member>
      <member refid="classGecode_1_1ViewValBrancher_1a022fe17f0b2e1c48799b97adfbcdf384" prot="public" virt="virtual"><scope>Gecode::ViewValBrancher</scope><name>copy</name></member>
      <member refid="classGecode_1_1ViewValBrancher_1a5927b457442e8fbab4d9737b12df2c06" prot="public" virt="virtual"><scope>Gecode::ViewValBrancher</scope><name>dispose</name></member>
      <member refid="classGecode_1_1Brancher_1abf3e7cd63277085696ce0a48ae1c840d" prot="public" virt="non-virtual"><scope>Gecode::ViewValBrancher</scope><name>id</name></member>
      <member refid="classGecode_1_1ViewValBrancher_1a8095e6d2d826b0a69cca2751dc73c7f8" prot="public" virt="virtual"><scope>Gecode::ViewValBrancher</scope><name>ngl</name></member>
      <member refid="classGecode_1_1Actor_1a388f671145dcf906f81d22bde2dc0f3d" prot="public" virt="non-virtual"><scope>Gecode::ViewValBrancher</scope><name>operator delete</name></member>
      <member refid="classGecode_1_1Actor_1ac28b9601b530076a1bda75834487f898" prot="public" virt="non-virtual"><scope>Gecode::ViewValBrancher</scope><name>operator new</name></member>
      <member refid="classGecode_1_1ViewBrancher_1a3bccef15a969bd042419c9adf7d24728" prot="protected" virt="non-virtual"><scope>Gecode::ViewValBrancher</scope><name>pos</name></member>
      <member refid="classGecode_1_1ViewValBrancher_1a3cac53948c9a6217603eec85883f5933" prot="public" virt="non-virtual"><scope>Gecode::ViewValBrancher</scope><name>post</name></member>
      <member refid="classGecode_1_1ViewValBrancher_1ae69e93395dcf2264648112c8a9d86e98" prot="public" virt="virtual"><scope>Gecode::ViewValBrancher</scope><name>print</name></member>
      <member refid="classGecode_1_1ViewBrancher_1ad4d6e8b38f157e325cf3845e64ed75d7" prot="protected" virt="non-virtual"><scope>Gecode::ViewValBrancher</scope><name>start</name></member>
      <member refid="classGecode_1_1ViewBrancher_1ab06acc3718206ef2dd69f2a5fbd29ff9" prot="public" virt="virtual"><scope>Gecode::ViewValBrancher</scope><name>status</name></member>
      <member refid="classGecode_1_1ViewValBrancher_1ae0e1c5f3aa3c467d92832d99cab8cb0d" prot="protected" virt="non-virtual"><scope>Gecode::ViewValBrancher</scope><name>VarValPrint</name></member>
      <member refid="classGecode_1_1ViewBrancher_1a5326d83d4f34ed591f7c5e946b8d7fe5" prot="protected" virt="non-virtual"><scope>Gecode::ViewValBrancher</scope><name>view</name></member>
      <member refid="classGecode_1_1ViewBrancher_1a60203bdac8f1a00dc1a4b7c6c70b8d98" prot="protected" virt="non-virtual"><scope>Gecode::ViewValBrancher</scope><name>ViewBrancher</name></member>
      <member refid="classGecode_1_1ViewBrancher_1a1bc868729c81ce5dc2d2edb28ee60752" prot="protected" virt="non-virtual"><scope>Gecode::ViewValBrancher</scope><name>ViewBrancher</name></member>
      <member refid="classGecode_1_1ViewValBrancher_1aeae02be6ee25c0d4bcb699690137eb3f" prot="protected" virt="non-virtual"><scope>Gecode::ViewValBrancher</scope><name>ViewValBrancher</name></member>
      <member refid="classGecode_1_1ViewValBrancher_1ab0d73a199cda2c9c6e6c9e8134ee1aed" prot="protected" virt="non-virtual"><scope>Gecode::ViewValBrancher</scope><name>ViewValBrancher</name></member>
      <member refid="classGecode_1_1ViewBrancher_1af24b93d52c489f9c90b2f6823e1b0c0f" prot="protected" virt="non-virtual"><scope>Gecode::ViewValBrancher</scope><name>vs</name></member>
      <member refid="classGecode_1_1ViewValBrancher_1ae65901eb7dca91c33e962b05bc3f2d97" prot="protected" virt="non-virtual"><scope>Gecode::ViewValBrancher</scope><name>vsc</name></member>
      <member refid="classGecode_1_1ViewValBrancher_1a63c5e6ebf613316bd58c76ade0ea5df2" prot="protected" virt="non-virtual"><scope>Gecode::ViewValBrancher</scope><name>vvp</name></member>
      <member refid="classGecode_1_1ViewBrancher_1ae1d184233cf870880995fe3bbd4a37fe" prot="protected" virt="non-virtual"><scope>Gecode::ViewValBrancher</scope><name>x</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
