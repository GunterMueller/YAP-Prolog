<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="sorted_2propagate_8hpp" kind="file">
    <compoundname>propagate.hpp</compoundname>
    <includes refid="int_2rel_8hh" local="no">gecode/int/rel.hh</includes>
    <includes refid="int_2distinct_8hh" local="no">gecode/int/distinct.hh</includes>
    <includedby refid="sorted_8hh" local="no">/usr/include/gecode/int/sorted.hh</includedby>
    <incdepgraph>
      <node id="10316">
        <label>gecode/support/cast.hpp</label>
        <link refid="cast_8hpp_source"/>
      </node>
      <node id="10408">
        <label>gecode/iter/values-ranges.hpp</label>
        <link refid="values-ranges_8hpp_source"/>
      </node>
      <node id="10430">
        <label>gecode/int/div.hh</label>
        <link refid="div_8hh_source"/>
        <childnode refid="10300" relation="include">
        </childnode>
        <childnode refid="10431" relation="include">
        </childnode>
      </node>
      <node id="10429">
        <label>gecode/int/view/scale.hpp</label>
        <link refid="int_2view_2scale_8hpp_source"/>
        <childnode refid="10430" relation="include">
        </childnode>
      </node>
      <node id="10397">
        <label>gecode/iter/ranges-rangelist.hpp</label>
        <link refid="ranges-rangelist_8hpp_source"/>
      </node>
      <node id="10461">
        <label>gecode/int/view-val-graph/node.hpp</label>
        <link refid="int_2view-val-graph_2node_8hpp_source"/>
      </node>
      <node id="10370">
        <label>gecode/kernel/brancher-val-sel-commit.hpp</label>
        <link refid="brancher-val-sel-commit_8hpp_source"/>
      </node>
      <node id="10403">
        <label>gecode/iter/values-map.hpp</label>
        <link refid="values-map_8hpp_source"/>
      </node>
      <node id="10388">
        <label>gecode/iter/ranges-negative.hpp</label>
        <link refid="ranges-negative_8hpp_source"/>
        <childnode refid="10319" relation="include">
        </childnode>
      </node>
      <node id="10332">
        <label>gecode/support/static-stack.hpp</label>
        <link refid="static-stack_8hpp_source"/>
      </node>
      <node id="10372">
        <label>gecode/kernel/var-imp.hpp</label>
        <link refid="kernel_2var-imp_8hpp_source"/>
      </node>
      <node id="10330">
        <label>gecode/support/random.hpp</label>
        <link refid="random_8hpp_source"/>
      </node>
      <node id="10453">
        <label>gecode/int/rel/nq.hpp</label>
        <link refid="int_2rel_2nq_8hpp_source"/>
        <childnode refid="10319" relation="include">
        </childnode>
      </node>
      <node id="10374">
        <label>limits</label>
      </node>
      <node id="10348">
        <label>gecode/kernel/var.hpp</label>
        <link refid="kernel_2var_8hpp_source"/>
      </node>
      <node id="10433">
        <label>gecode/int/view/bool.hpp</label>
        <link refid="int_2view_2bool_8hpp_source"/>
      </node>
      <node id="10412">
        <label>gecode/iter/ranges-size.hpp</label>
        <link refid="ranges-size_8hpp_source"/>
      </node>
      <node id="10333">
        <label>gecode/support/thread/none.hpp</label>
        <link refid="none_8hpp_source"/>
      </node>
      <node id="10352">
        <label>iterator</label>
      </node>
      <node id="10380">
        <label>gecode/iter/ranges-array.hpp</label>
        <link refid="ranges-array_8hpp_source"/>
      </node>
      <node id="10335">
        <label>gecode/support/timer.hpp</label>
        <link refid="timer_8hpp_source"/>
      </node>
      <node id="10456">
        <label>gecode/int/distinct.hh</label>
        <link refid="int_2distinct_8hh_source"/>
        <childnode refid="10300" relation="include">
        </childnode>
        <childnode refid="10457" relation="include">
        </childnode>
        <childnode refid="10299" relation="include">
        </childnode>
        <childnode refid="10464" relation="include">
        </childnode>
        <childnode refid="10465" relation="include">
        </childnode>
        <childnode refid="10466" relation="include">
        </childnode>
        <childnode refid="10467" relation="include">
        </childnode>
        <childnode refid="10468" relation="include">
        </childnode>
        <childnode refid="10469" relation="include">
        </childnode>
      </node>
      <node id="10334">
        <label>gecode/support/thread/thread.hpp</label>
        <link refid="thread_2thread_8hpp_source"/>
      </node>
      <node id="10396">
        <label>gecode/iter/ranges-singleton-append.hpp</label>
        <link refid="ranges-singleton-append_8hpp_source"/>
      </node>
      <node id="10390">
        <label>gecode/iter/ranges-positive.hpp</label>
        <link refid="ranges-positive_8hpp_source"/>
        <childnode refid="10319" relation="include">
        </childnode>
      </node>
      <node id="10369">
        <label>gecode/kernel/brancher-val-commit.hpp</label>
        <link refid="brancher-val-commit_8hpp_source"/>
      </node>
      <node id="10421">
        <label>gecode/int/view/iter.hpp</label>
        <link refid="int_2view_2iter_8hpp_source"/>
      </node>
      <node id="10464">
        <label>gecode/int/distinct/val.hpp</label>
        <link refid="int_2distinct_2val_8hpp_source"/>
      </node>
      <node id="10299">
        <label>gecode/int/rel.hh</label>
        <link refid="int_2rel_8hh_source"/>
        <childnode refid="10300" relation="include">
        </childnode>
        <childnode refid="10452" relation="include">
        </childnode>
        <childnode refid="10453" relation="include">
        </childnode>
        <childnode refid="10454" relation="include">
        </childnode>
        <childnode refid="10455" relation="include">
        </childnode>
      </node>
      <node id="10359">
        <label>gecode/kernel/afc.hpp</label>
        <link refid="kernel_2afc_8hpp_source"/>
      </node>
      <node id="10344">
        <label>gecode/kernel/var-type.hpp</label>
        <link refid="var-type_8hpp_source"/>
      </node>
      <node id="10336">
        <label>gecode/support/hw-rnd.hpp</label>
        <link refid="hw-rnd_8hpp_source"/>
      </node>
      <node id="10400">
        <label>gecode/iter/values-bitsetoffset.hpp</label>
        <link refid="values-bitsetoffset_8hpp_source"/>
      </node>
      <node id="10324">
        <label>cmath</label>
      </node>
      <node id="10309">
        <label>cassert</label>
      </node>
      <node id="10366">
        <label>gecode/kernel/brancher-view-sel.hpp</label>
        <link refid="brancher-view-sel_8hpp_source"/>
      </node>
      <node id="10373">
        <label>gecode/kernel/allocators.hpp</label>
        <link refid="allocators_8hpp_source"/>
        <childnode refid="10374" relation="include">
        </childnode>
      </node>
      <node id="10469">
        <label>gecode/int/distinct/dom.hpp</label>
        <link refid="distinct_2dom_8hpp_source"/>
        <childnode refid="10301" relation="include">
        </childnode>
      </node>
      <node id="10441">
        <label>gecode/int/int-set-2.hpp</label>
        <link refid="int-set-2_8hpp_source"/>
      </node>
      <node id="10351">
        <label>cstdarg</label>
      </node>
      <node id="10322">
        <label>gecode/support/bitset-base.hpp</label>
        <link refid="bitset-base_8hpp_source"/>
        <childnode refid="10301" relation="include">
        </childnode>
      </node>
      <node id="10354">
        <label>gecode/kernel/shared-array.hpp</label>
        <link refid="shared-array_8hpp_source"/>
        <childnode refid="10351" relation="include">
        </childnode>
        <childnode refid="10303" relation="include">
        </childnode>
        <childnode refid="10353" relation="include">
        </childnode>
      </node>
      <node id="10432">
        <label>gecode/int/view/cached.hpp</label>
        <link refid="int_2view_2cached_8hpp_source"/>
      </node>
      <node id="10345">
        <label>gecode/kernel/modevent.hpp</label>
        <link refid="modevent_8hpp_source"/>
      </node>
      <node id="10338">
        <label>gecode/kernel/memory-config.hpp</label>
        <link refid="memory-config_8hpp_source"/>
      </node>
      <node id="10450">
        <label>gecode/int/branch/val.hpp</label>
        <link refid="int_2branch_2val_8hpp_source"/>
      </node>
      <node id="10321">
        <label>gecode/support/int-type.hpp</label>
        <link refid="int-type_8hpp_source"/>
        <childnode refid="10301" relation="include">
        </childnode>
      </node>
      <node id="10467">
        <label>gecode/int/distinct/graph.hpp</label>
        <link refid="distinct_2graph_8hpp_source"/>
        <childnode refid="10301" relation="include">
        </childnode>
      </node>
      <node id="10407">
        <label>gecode/iter/values-positive.hpp</label>
        <link refid="values-positive_8hpp_source"/>
      </node>
      <node id="10302">
        <label>cfloat</label>
      </node>
      <node id="10463">
        <label>gecode/int/view-val-graph/graph.hpp</label>
        <link refid="view-val-graph_2graph_8hpp_source"/>
        <childnode refid="10301" relation="include">
        </childnode>
      </node>
      <node id="10413">
        <label>gecode/int/exception.hpp</label>
        <link refid="int_2exception_8hpp_source"/>
      </node>
      <node id="10314">
        <label>gecode/support/exception.hpp</label>
        <link refid="support_2exception_8hpp_source"/>
        <childnode refid="10315" relation="include">
        </childnode>
      </node>
      <node id="10315">
        <label>exception</label>
      </node>
      <node id="10468">
        <label>gecode/int/distinct/dom-ctrl.hpp</label>
        <link refid="dom-ctrl_8hpp_source"/>
        <childnode refid="10301" relation="include">
        </childnode>
      </node>
      <node id="10386">
        <label>gecode/iter/ranges-map.hpp</label>
        <link refid="ranges-map_8hpp_source"/>
      </node>
      <node id="10347">
        <label>gecode/kernel/region.hpp</label>
        <link refid="region_8hpp_source"/>
      </node>
      <node id="10320">
        <label>gecode/support/marked-pointer.hpp</label>
        <link refid="marked-pointer_8hpp_source"/>
        <childnode refid="10306" relation="include">
        </childnode>
      </node>
      <node id="10317">
        <label>gecode/support/thread.hpp</label>
        <link refid="thread_8hpp_source"/>
        <childnode refid="10306" relation="include">
        </childnode>
      </node>
      <node id="10305">
        <label>gecode/kernel.hh</label>
        <link refid="kernel_8hh_source"/>
        <childnode refid="10306" relation="include">
        </childnode>
        <childnode refid="10307" relation="include">
        </childnode>
        <childnode refid="10308" relation="include">
        </childnode>
        <childnode refid="10309" relation="include">
        </childnode>
        <childnode refid="10310" relation="include">
        </childnode>
        <childnode refid="10312" relation="include">
        </childnode>
        <childnode refid="10337" relation="include">
        </childnode>
        <childnode refid="10338" relation="include">
        </childnode>
        <childnode refid="10339" relation="include">
        </childnode>
        <childnode refid="10340" relation="include">
        </childnode>
        <childnode refid="10341" relation="include">
        </childnode>
        <childnode refid="10342" relation="include">
        </childnode>
        <childnode refid="10343" relation="include">
        </childnode>
        <childnode refid="10345" relation="include">
        </childnode>
        <childnode refid="10346" relation="include">
        </childnode>
        <childnode refid="10347" relation="include">
        </childnode>
        <childnode refid="10348" relation="include">
        </childnode>
        <childnode refid="10349" relation="include">
        </childnode>
        <childnode refid="10350" relation="include">
        </childnode>
        <childnode refid="10354" relation="include">
        </childnode>
        <childnode refid="10355" relation="include">
        </childnode>
        <childnode refid="10357" relation="include">
        </childnode>
        <childnode refid="10358" relation="include">
        </childnode>
        <childnode refid="10359" relation="include">
        </childnode>
        <childnode refid="10360" relation="include">
        </childnode>
        <childnode refid="10361" relation="include">
        </childnode>
        <childnode refid="10362" relation="include">
        </childnode>
        <childnode refid="10363" relation="include">
        </childnode>
        <childnode refid="10364" relation="include">
        </childnode>
        <childnode refid="10365" relation="include">
        </childnode>
        <childnode refid="10366" relation="include">
        </childnode>
        <childnode refid="10367" relation="include">
        </childnode>
        <childnode refid="10368" relation="include">
        </childnode>
        <childnode refid="10369" relation="include">
        </childnode>
        <childnode refid="10370" relation="include">
        </childnode>
        <childnode refid="10371" relation="include">
        </childnode>
        <childnode refid="10372" relation="include">
        </childnode>
        <childnode refid="10373" relation="include">
        </childnode>
      </node>
      <node id="10415">
        <label>gecode/int/int-set-1.hpp</label>
        <link refid="int-set-1_8hpp_source"/>
        <childnode refid="10353" relation="include">
        </childnode>
      </node>
      <node id="10360">
        <label>gecode/kernel/branch-traits.hpp</label>
        <link refid="branch-traits_8hpp_source"/>
      </node>
      <node id="10426">
        <label>gecode/int/view/zero.hpp</label>
        <link refid="zero_8hpp_source"/>
      </node>
      <node id="10382">
        <label>gecode/iter/ranges-compl.hpp</label>
        <link refid="ranges-compl_8hpp_source"/>
      </node>
      <node id="10444">
        <label>gecode/int/extensional/dfa.hpp</label>
        <link refid="dfa_8hpp_source"/>
        <childnode refid="10353" relation="include">
        </childnode>
      </node>
      <node id="10350">
        <label>gecode/kernel/array.hpp</label>
        <link refid="kernel_2array_8hpp_source"/>
        <childnode refid="10351" relation="include">
        </childnode>
        <childnode refid="10303" relation="include">
        </childnode>
        <childnode refid="10352" relation="include">
        </childnode>
        <childnode refid="10304" relation="include">
        </childnode>
        <childnode refid="10353" relation="include">
        </childnode>
      </node>
      <node id="10447">
        <label>gecode/int/branch/afc.hpp</label>
        <link refid="int_2branch_2afc_8hpp_source"/>
      </node>
      <node id="10364">
        <label>gecode/kernel/branch-val.hpp</label>
        <link refid="branch-val_8hpp_source"/>
      </node>
      <node id="10329">
        <label>gecode/support/dynamic-stack.hpp</label>
        <link refid="dynamic-stack_8hpp_source"/>
      </node>
      <node id="10391">
        <label>gecode/iter/ranges-scale.hpp</label>
        <link refid="ranges-scale_8hpp_source"/>
        <childnode refid="10324" relation="include">
        </childnode>
      </node>
      <node id="10341">
        <label>gecode/kernel/archive.hpp</label>
        <link refid="archive_8hpp_source"/>
      </node>
      <node id="10346">
        <label>gecode/kernel/range-list.hpp</label>
        <link refid="range-list_8hpp_source"/>
      </node>
      <node id="10402">
        <label>gecode/iter/values-inter.hpp</label>
        <link refid="values-inter_8hpp_source"/>
      </node>
      <node id="10365">
        <label>gecode/kernel/brancher-merit.hpp</label>
        <link refid="brancher-merit_8hpp_source"/>
      </node>
      <node id="10311">
        <label>gecode/support/config.hpp</label>
        <link refid="support_2config_8hpp_source"/>
      </node>
      <node id="10438">
        <label>gecode/int/view/bool-test.hpp</label>
        <link refid="bool-test_8hpp_source"/>
      </node>
      <node id="10395">
        <label>gecode/iter/ranges-add.hpp</label>
        <link refid="ranges-add_8hpp_source"/>
      </node>
      <node id="10420">
        <label>gecode/int/view.hpp</label>
        <link refid="int_2view_8hpp_source"/>
        <childnode refid="10303" relation="include">
        </childnode>
        <childnode refid="10421" relation="include">
        </childnode>
        <childnode refid="10422" relation="include">
        </childnode>
        <childnode refid="10423" relation="include">
        </childnode>
        <childnode refid="10424" relation="include">
        </childnode>
        <childnode refid="10425" relation="include">
        </childnode>
        <childnode refid="10426" relation="include">
        </childnode>
        <childnode refid="10427" relation="include">
        </childnode>
        <childnode refid="10428" relation="include">
        </childnode>
        <childnode refid="10429" relation="include">
        </childnode>
        <childnode refid="10432" relation="include">
        </childnode>
        <childnode refid="10433" relation="include">
        </childnode>
        <childnode refid="10434" relation="include">
        </childnode>
        <childnode refid="10435" relation="include">
        </childnode>
        <childnode refid="10436" relation="include">
        </childnode>
        <childnode refid="10437" relation="include">
        </childnode>
        <childnode refid="10438" relation="include">
        </childnode>
      </node>
      <node id="10401">
        <label>gecode/iter/values-list.hpp</label>
        <link refid="values-list_8hpp_source"/>
      </node>
      <node id="10404">
        <label>gecode/iter/values-minus.hpp</label>
        <link refid="values-minus_8hpp_source"/>
      </node>
      <node id="10362">
        <label>gecode/kernel/branch-var.hpp</label>
        <link refid="branch-var_8hpp_source"/>
      </node>
      <node id="10454">
        <label>gecode/int/rel/lq-le.hpp</label>
        <link refid="int_2rel_2lq-le_8hpp_source"/>
      </node>
      <node id="10339">
        <label>gecode/kernel/memory-manager.hpp</label>
        <link refid="memory-manager_8hpp_source"/>
      </node>
      <node id="10414">
        <label>gecode/int/limits.hpp</label>
        <link refid="int_2limits_8hpp_source"/>
      </node>
      <node id="10328">
        <label>gecode/support/dynamic-queue.hpp</label>
        <link refid="dynamic-queue_8hpp_source"/>
      </node>
      <node id="10439">
        <label>gecode/int/propagator.hpp</label>
        <link refid="int_2propagator_8hpp_source"/>
      </node>
      <node id="10446">
        <label>gecode/int/branch/traits.hpp</label>
        <link refid="int_2branch_2traits_8hpp_source"/>
      </node>
      <node id="10410">
        <label>gecode/iter/values-union.hpp</label>
        <link refid="values-union_8hpp_source"/>
      </node>
      <node id="10340">
        <label>gecode/kernel/macros.hpp</label>
        <link refid="kernel_2macros_8hpp_source"/>
      </node>
      <node id="10389">
        <label>gecode/iter/ranges-offset.hpp</label>
        <link refid="ranges-offset_8hpp_source"/>
      </node>
      <node id="10356">
        <label>ctime</label>
      </node>
      <node id="10428">
        <label>gecode/int/view/offset.hpp</label>
        <link refid="int_2view_2offset_8hpp_source"/>
      </node>
      <node id="10398">
        <label>gecode/iter/values-array.hpp</label>
        <link refid="values-array_8hpp_source"/>
      </node>
      <node id="10458">
        <label>gecode/int/view-val-graph/comb-ptr-flag.hpp</label>
        <link refid="comb-ptr-flag_8hpp_source"/>
      </node>
      <node id="10449">
        <label>gecode/int/branch/var.hpp</label>
        <link refid="int_2branch_2var_8hpp_source"/>
      </node>
      <node id="10392">
        <label>gecode/iter/ranges-singleton.hpp</label>
        <link refid="ranges-singleton_8hpp_source"/>
      </node>
      <node id="10304">
        <label>vector</label>
      </node>
      <node id="10455">
        <label>gecode/int/rel/lex.hpp</label>
        <link refid="lex_8hpp_source"/>
      </node>
      <node id="10435">
        <label>gecode/int/view/print.hpp</label>
        <link refid="int_2view_2print_8hpp_source"/>
        <childnode refid="10353" relation="include">
        </childnode>
      </node>
      <node id="10358">
        <label>gecode/kernel/advisor.hpp</label>
        <link refid="advisor_8hpp_source"/>
      </node>
      <node id="10457">
        <label>gecode/int/view-val-graph.hh</label>
        <link refid="view-val-graph_8hh_source"/>
        <childnode refid="10300" relation="include">
        </childnode>
        <childnode refid="10458" relation="include">
        </childnode>
        <childnode refid="10459" relation="include">
        </childnode>
        <childnode refid="10460" relation="include">
        </childnode>
        <childnode refid="10461" relation="include">
        </childnode>
        <childnode refid="10462" relation="include">
        </childnode>
        <childnode refid="10463" relation="include">
        </childnode>
      </node>
      <node id="10298">
        <label>/usr/include/gecode/int/sorted/propagate.hpp</label>
        <link refid="sorted/propagate.hpp"/>
        <childnode refid="10299" relation="include">
        </childnode>
        <childnode refid="10456" relation="include">
        </childnode>
      </node>
      <node id="10445">
        <label>gecode/int/extensional/tuple-set.hpp</label>
        <link refid="tuple-set_8hpp_source"/>
        <childnode refid="10353" relation="include">
        </childnode>
      </node>
      <node id="10462">
        <label>gecode/int/view-val-graph/iter-prune-val.hpp</label>
        <link refid="iter-prune-val_8hpp_source"/>
      </node>
      <node id="10460">
        <label>gecode/int/view-val-graph/edge.hpp</label>
        <link refid="edge_8hpp_source"/>
      </node>
      <node id="10371">
        <label>gecode/kernel/brancher-view-val.hpp</label>
        <link refid="brancher-view-val_8hpp_source"/>
      </node>
      <node id="10424">
        <label>gecode/int/view/int.hpp</label>
        <link refid="int_2view_2int_8hpp_source"/>
      </node>
      <node id="10437">
        <label>gecode/int/view/rel-test.hpp</label>
        <link refid="int_2view_2rel-test_8hpp_source"/>
      </node>
      <node id="10353">
        <label>sstream</label>
      </node>
      <node id="10440">
        <label>gecode/int/array-traits.hpp</label>
        <link refid="int_2array-traits_8hpp_source"/>
      </node>
      <node id="10368">
        <label>gecode/kernel/brancher-val-sel.hpp</label>
        <link refid="brancher-val-sel_8hpp_source"/>
      </node>
      <node id="10357">
        <label>gecode/kernel/propagator.hpp</label>
        <link refid="kernel_2propagator_8hpp_source"/>
      </node>
      <node id="10459">
        <label>gecode/int/view-val-graph/bi-link.hpp</label>
        <link refid="bi-link_8hpp_source"/>
      </node>
      <node id="10326">
        <label>gecode/support/block-allocator.hpp</label>
        <link refid="block-allocator_8hpp_source"/>
      </node>
      <node id="10431">
        <label>gecode/int/div.hpp</label>
        <link refid="int_2div_8hpp_source"/>
      </node>
      <node id="10406">
        <label>gecode/iter/values-offset.hpp</label>
        <link refid="values-offset_8hpp_source"/>
      </node>
      <node id="10442">
        <label>gecode/int/array.hpp</label>
        <link refid="int_2array_8hpp_source"/>
      </node>
      <node id="10361">
        <label>gecode/kernel/activity.hpp</label>
        <link refid="kernel_2activity_8hpp_source"/>
      </node>
      <node id="10300">
        <label>gecode/int.hh</label>
        <link refid="int_8hh_source"/>
        <childnode refid="10301" relation="include">
        </childnode>
        <childnode refid="10302" relation="include">
        </childnode>
        <childnode refid="10303" relation="include">
        </childnode>
        <childnode refid="10304" relation="include">
        </childnode>
        <childnode refid="10305" relation="include">
        </childnode>
        <childnode refid="10375" relation="include">
        </childnode>
        <childnode refid="10312" relation="include">
        </childnode>
        <childnode refid="10413" relation="include">
        </childnode>
        <childnode refid="10414" relation="include">
        </childnode>
        <childnode refid="10415" relation="include">
        </childnode>
        <childnode refid="10416" relation="include">
        </childnode>
        <childnode refid="10420" relation="include">
        </childnode>
        <childnode refid="10439" relation="include">
        </childnode>
        <childnode refid="10440" relation="include">
        </childnode>
        <childnode refid="10441" relation="include">
        </childnode>
        <childnode refid="10442" relation="include">
        </childnode>
        <childnode refid="10443" relation="include">
        </childnode>
        <childnode refid="10444" relation="include">
        </childnode>
        <childnode refid="10445" relation="include">
        </childnode>
        <childnode refid="10446" relation="include">
        </childnode>
        <childnode refid="10447" relation="include">
        </childnode>
        <childnode refid="10448" relation="include">
        </childnode>
        <childnode refid="10449" relation="include">
        </childnode>
        <childnode refid="10450" relation="include">
        </childnode>
        <childnode refid="10451" relation="include">
        </childnode>
      </node>
      <node id="10307">
        <label>cstdlib</label>
      </node>
      <node id="10323">
        <label>gecode/support/bitset.hpp</label>
        <link refid="bitset_8hpp_source"/>
        <childnode refid="10301" relation="include">
        </childnode>
        <childnode refid="10324" relation="include">
        </childnode>
      </node>
      <node id="10423">
        <label>gecode/int/var/bool.hpp</label>
        <link refid="int_2var_2bool_8hpp_source"/>
      </node>
      <node id="10312">
        <label>gecode/support/auto-link.hpp</label>
        <link refid="auto-link_8hpp_source"/>
      </node>
      <node id="10451">
        <label>gecode/int/branch/assign.hpp</label>
        <link refid="int_2branch_2assign_8hpp_source"/>
      </node>
      <node id="10303">
        <label>iostream</label>
      </node>
      <node id="10337">
        <label>gecode/kernel/exception.hpp</label>
        <link refid="kernel_2exception_8hpp_source"/>
      </node>
      <node id="10434">
        <label>gecode/int/view/neg-bool.hpp</label>
        <link refid="neg-bool_8hpp_source"/>
      </node>
      <node id="10387">
        <label>gecode/iter/ranges-minus.hpp</label>
        <link refid="ranges-minus_8hpp_source"/>
      </node>
      <node id="10405">
        <label>gecode/iter/values-negative.hpp</label>
        <link refid="values-negative_8hpp_source"/>
      </node>
      <node id="10313">
        <label>gecode/support/macros.hpp</label>
        <link refid="support_2macros_8hpp_source"/>
      </node>
      <node id="10349">
        <label>gecode/kernel/view.hpp</label>
        <link refid="kernel_2view_8hpp_source"/>
      </node>
      <node id="10363">
        <label>gecode/kernel/branch-tiebreak.hpp</label>
        <link refid="branch-tiebreak_8hpp_source"/>
      </node>
      <node id="10306">
        <label>cstddef</label>
      </node>
      <node id="10301">
        <label>climits</label>
      </node>
      <node id="10409">
        <label>gecode/iter/values-singleton.hpp</label>
        <link refid="values-singleton_8hpp_source"/>
      </node>
      <node id="10343">
        <label>gecode/kernel/core.hpp</label>
        <link refid="core_8hpp_source"/>
        <childnode refid="10303" relation="include">
        </childnode>
        <childnode refid="10344" relation="include">
        </childnode>
      </node>
      <node id="10385">
        <label>gecode/iter/ranges-inter.hpp</label>
        <link refid="ranges-inter_8hpp_source"/>
        <childnode refid="10319" relation="include">
        </childnode>
      </node>
      <node id="10379">
        <label>gecode/iter/ranges-append.hpp</label>
        <link refid="ranges-append_8hpp_source"/>
      </node>
      <node id="10376">
        <label>gecode/iter/ranges-operations.hpp</label>
        <link refid="ranges-operations_8hpp_source"/>
      </node>
      <node id="10310">
        <label>gecode/support.hh</label>
        <link refid="support_8hh_source"/>
        <childnode refid="10309" relation="include">
        </childnode>
        <childnode refid="10311" relation="include">
        </childnode>
        <childnode refid="10312" relation="include">
        </childnode>
        <childnode refid="10313" relation="include">
        </childnode>
        <childnode refid="10314" relation="include">
        </childnode>
        <childnode refid="10316" relation="include">
        </childnode>
        <childnode refid="10317" relation="include">
        </childnode>
        <childnode refid="10318" relation="include">
        </childnode>
        <childnode refid="10320" relation="include">
        </childnode>
        <childnode refid="10321" relation="include">
        </childnode>
        <childnode refid="10322" relation="include">
        </childnode>
        <childnode refid="10323" relation="include">
        </childnode>
        <childnode refid="10325" relation="include">
        </childnode>
        <childnode refid="10326" relation="include">
        </childnode>
        <childnode refid="10327" relation="include">
        </childnode>
        <childnode refid="10328" relation="include">
        </childnode>
        <childnode refid="10329" relation="include">
        </childnode>
        <childnode refid="10330" relation="include">
        </childnode>
        <childnode refid="10331" relation="include">
        </childnode>
        <childnode refid="10332" relation="include">
        </childnode>
        <childnode refid="10333" relation="include">
        </childnode>
        <childnode refid="10334" relation="include">
        </childnode>
        <childnode refid="10335" relation="include">
        </childnode>
        <childnode refid="10336" relation="include">
        </childnode>
      </node>
      <node id="10448">
        <label>gecode/int/branch/activity.hpp</label>
        <link refid="int_2branch_2activity_8hpp_source"/>
      </node>
      <node id="10418">
        <label>gecode/int/var-imp/int.hpp</label>
        <link refid="int_2var-imp_2int_8hpp_source"/>
      </node>
      <node id="10416">
        <label>gecode/int/var-imp.hpp</label>
        <link refid="int_2var-imp_8hpp_source"/>
        <childnode refid="10324" relation="include">
        </childnode>
        <childnode refid="10417" relation="include">
        </childnode>
        <childnode refid="10418" relation="include">
        </childnode>
        <childnode refid="10419" relation="include">
        </childnode>
      </node>
      <node id="10381">
        <label>gecode/iter/ranges-cache.hpp</label>
        <link refid="ranges-cache_8hpp_source"/>
      </node>
      <node id="10327">
        <label>gecode/support/dynamic-array.hpp</label>
        <link refid="dynamic-array_8hpp_source"/>
        <childnode refid="10319" relation="include">
        </childnode>
      </node>
      <node id="10425">
        <label>gecode/int/view/constint.hpp</label>
        <link refid="constint_8hpp_source"/>
      </node>
      <node id="10411">
        <label>gecode/iter/values-unique.hpp</label>
        <link refid="values-unique_8hpp_source"/>
      </node>
      <node id="10383">
        <label>gecode/iter/ranges-diff.hpp</label>
        <link refid="ranges-diff_8hpp_source"/>
      </node>
      <node id="10466">
        <label>gecode/int/distinct/ter-dom.hpp</label>
        <link refid="ter-dom_8hpp_source"/>
      </node>
      <node id="10331">
        <label>gecode/support/sort.hpp</label>
        <link refid="support_2sort_8hpp_source"/>
        <childnode refid="10319" relation="include">
        </childnode>
        <childnode refid="10301" relation="include">
        </childnode>
      </node>
      <node id="10417">
        <label>gecode/int/var-imp/delta.hpp</label>
        <link refid="int_2var-imp_2delta_8hpp_source"/>
      </node>
      <node id="10355">
        <label>gecode/kernel/rnd.hpp</label>
        <link refid="rnd_8hpp_source"/>
        <childnode refid="10356" relation="include">
        </childnode>
      </node>
      <node id="10319">
        <label>algorithm</label>
      </node>
      <node id="10367">
        <label>gecode/kernel/brancher-view.hpp</label>
        <link refid="brancher-view_8hpp_source"/>
      </node>
      <node id="10452">
        <label>gecode/int/rel/eq.hpp</label>
        <link refid="int_2rel_2eq_8hpp_source"/>
      </node>
      <node id="10399">
        <label>gecode/iter/values-bitset.hpp</label>
        <link refid="values-bitset_8hpp_source"/>
      </node>
      <node id="10342">
        <label>gecode/kernel/global-afc.hpp</label>
        <link refid="global-afc_8hpp_source"/>
        <childnode refid="10324" relation="include">
        </childnode>
      </node>
      <node id="10384">
        <label>gecode/iter/ranges-empty.hpp</label>
        <link refid="ranges-empty_8hpp_source"/>
      </node>
      <node id="10422">
        <label>gecode/int/var/int.hpp</label>
        <link refid="int_2var_2int_8hpp_source"/>
      </node>
      <node id="10375">
        <label>gecode/iter.hh</label>
        <link refid="iter_8hh_source"/>
        <childnode refid="10305" relation="include">
        </childnode>
        <childnode refid="10376" relation="include">
        </childnode>
        <childnode refid="10377" relation="include">
        </childnode>
        <childnode refid="10378" relation="include">
        </childnode>
        <childnode refid="10379" relation="include">
        </childnode>
        <childnode refid="10380" relation="include">
        </childnode>
        <childnode refid="10381" relation="include">
        </childnode>
        <childnode refid="10382" relation="include">
        </childnode>
        <childnode refid="10383" relation="include">
        </childnode>
        <childnode refid="10384" relation="include">
        </childnode>
        <childnode refid="10385" relation="include">
        </childnode>
        <childnode refid="10386" relation="include">
        </childnode>
        <childnode refid="10387" relation="include">
        </childnode>
        <childnode refid="10388" relation="include">
        </childnode>
        <childnode refid="10389" relation="include">
        </childnode>
        <childnode refid="10390" relation="include">
        </childnode>
        <childnode refid="10391" relation="include">
        </childnode>
        <childnode refid="10392" relation="include">
        </childnode>
        <childnode refid="10393" relation="include">
        </childnode>
        <childnode refid="10394" relation="include">
        </childnode>
        <childnode refid="10395" relation="include">
        </childnode>
        <childnode refid="10396" relation="include">
        </childnode>
        <childnode refid="10397" relation="include">
        </childnode>
        <childnode refid="10398" relation="include">
        </childnode>
        <childnode refid="10399" relation="include">
        </childnode>
        <childnode refid="10400" relation="include">
        </childnode>
        <childnode refid="10401" relation="include">
        </childnode>
        <childnode refid="10402" relation="include">
        </childnode>
        <childnode refid="10403" relation="include">
        </childnode>
        <childnode refid="10404" relation="include">
        </childnode>
        <childnode refid="10405" relation="include">
        </childnode>
        <childnode refid="10406" relation="include">
        </childnode>
        <childnode refid="10407" relation="include">
        </childnode>
        <childnode refid="10408" relation="include">
        </childnode>
        <childnode refid="10409" relation="include">
        </childnode>
        <childnode refid="10410" relation="include">
        </childnode>
        <childnode refid="10411" relation="include">
        </childnode>
        <childnode refid="10412" relation="include">
        </childnode>
      </node>
      <node id="10465">
        <label>gecode/int/distinct/bnd.hpp</label>
        <link refid="distinct_2bnd_8hpp_source"/>
      </node>
      <node id="10394">
        <label>gecode/iter/ranges-values.hpp</label>
        <link refid="ranges-values_8hpp_source"/>
      </node>
      <node id="10419">
        <label>gecode/int/var-imp/bool.hpp</label>
        <link refid="int_2var-imp_2bool_8hpp_source"/>
      </node>
      <node id="10308">
        <label>cstring</label>
      </node>
      <node id="10443">
        <label>gecode/int/reify.hpp</label>
        <link refid="reify_8hpp_source"/>
      </node>
      <node id="10393">
        <label>gecode/iter/ranges-union.hpp</label>
        <link refid="ranges-union_8hpp_source"/>
        <childnode refid="10319" relation="include">
        </childnode>
      </node>
      <node id="10427">
        <label>gecode/int/view/minus.hpp</label>
        <link refid="int_2view_2minus_8hpp_source"/>
      </node>
      <node id="10377">
        <label>gecode/iter/ranges-minmax.hpp</label>
        <link refid="ranges-minmax_8hpp_source"/>
      </node>
      <node id="10325">
        <label>gecode/support/bitset-offset.hpp</label>
        <link refid="bitset-offset_8hpp_source"/>
        <childnode refid="10301" relation="include">
        </childnode>
        <childnode refid="10324" relation="include">
        </childnode>
        <childnode refid="10303" relation="include">
        </childnode>
      </node>
      <node id="10318">
        <label>gecode/support/heap.hpp</label>
        <link refid="heap_8hpp_source"/>
        <childnode refid="10308" relation="include">
        </childnode>
        <childnode refid="10307" relation="include">
        </childnode>
        <childnode refid="10319" relation="include">
        </childnode>
      </node>
      <node id="10436">
        <label>gecode/int/var/print.hpp</label>
        <link refid="int_2var_2print_8hpp_source"/>
      </node>
      <node id="10378">
        <label>gecode/iter/ranges-list.hpp</label>
        <link refid="ranges-list_8hpp_source"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="10470">
        <label>/usr/include/gecode/int/sorted/propagate.hpp</label>
        <link refid="sorted/propagate.hpp"/>
        <childnode refid="10471" relation="include">
        </childnode>
      </node>
      <node id="10471">
        <label>/usr/include/gecode/int/sorted.hh</label>
        <link refid="sorted_8hh_source"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespaceGecode">Gecode</innernamespace>
    <innernamespace refid="namespaceGecode_1_1Int">Gecode::Int</innernamespace>
    <innernamespace refid="namespaceGecode_1_1Int_1_1Sorted">Gecode::Int::Sorted</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>mode:<sp/>C++;<sp/>c-basic-offset:<sp/>2;<sp/>indent-tabs-mode:<sp/>nil<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/><sp/>Main<sp/>authors:</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Patrick<sp/>Pekczynski<sp/>&lt;pekczynski@ps.uni-sb.de&gt;</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>Copyright:</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Patrick<sp/>Pekczynski,<sp/>2004</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/>Last<sp/>modified:</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>$Date:<sp/>2013-09-30<sp/>13:48:20<sp/>+0200<sp/>(Mon,<sp/>30<sp/>Sep<sp/>2013)<sp/>$<sp/>by<sp/>$Author:<sp/>tack<sp/>$</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>$Revision:<sp/>14017<sp/>$</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>Gecode,<sp/>the<sp/>generic<sp/>constraint</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/>development<sp/>environment:</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.gecode.org</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/><sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/><sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/><sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/><sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/><sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/><sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/><sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/><sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/><sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/><sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gecode/int/rel.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gecode/int/distinct.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Gecode<sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Int<sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Sorted<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Summary<sp/>of<sp/>the<sp/>propagation<sp/>algorithm<sp/>as<sp/>implemented<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/><sp/><sp/>*<sp/>propagate<sp/>method<sp/>below:</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/><sp/><sp/>*<sp/>STEP<sp/>1:<sp/>Normalize<sp/>the<sp/>domains<sp/>of<sp/>the<sp/>y<sp/>variables</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/><sp/><sp/>*<sp/>STEP<sp/>2:<sp/>Sort<sp/>the<sp/>domains<sp/>of<sp/>the<sp/>x<sp/>variables<sp/>according<sp/>to<sp/>their<sp/>lower</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>upper<sp/>endpoints</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/><sp/><sp/>*<sp/>STEP<sp/>3:<sp/>Compute<sp/>the<sp/>matchings<sp/>phi<sp/>and<sp/>phiprime<sp/>with</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Glover&apos;s<sp/>matching<sp/>algorithm</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/><sp/><sp/>*<sp/>STEP<sp/>4:<sp/>Compute<sp/>the<sp/>strongly<sp/>connected<sp/>components<sp/>in</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>oriented<sp/>intersection<sp/>graph</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/><sp/><sp/>*<sp/>STEP<sp/>5:<sp/>Narrow<sp/>the<sp/>domains<sp/>of<sp/>the<sp/>variables</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>View,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Perm&gt;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></highlight></codeline>
<codeline lineno="77" refid="namespaceGecode_1_1Int_1_1Sorted_1aecf93ae73245c48fb62e6ec8ab83ab57" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespaceGecode_1_1Int_1_1Sorted_1aecf93ae73245c48fb62e6ec8ab83ab57" kindref="member">bounds_propagation</ref>(<ref refid="classGecode_1_1Space" kindref="compound">Space</ref>&amp;<sp/>home,<sp/><ref refid="classGecode_1_1Propagator" kindref="compound">Propagator</ref>&amp;<sp/>p,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray&lt;View&gt;</ref>&amp;<sp/>x,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray&lt;View&gt;</ref>&amp;<sp/>y,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray&lt;View&gt;</ref>&amp;<sp/>z,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>repairpass,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>nofix,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>match_fixed){</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>x.<ref refid="classGecode_1_1ViewArray_1a65940b23e2457e97607475f8bd8f4ac6" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Region" kindref="compound">Region</ref><sp/>r(home);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>tau<sp/>=<sp/>r.<ref refid="classGecode_1_1Region_1a167cff2d16f08d890fff11f80e519233" kindref="member">alloc</ref>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;(n);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>phi<sp/>=<sp/>r.<ref refid="classGecode_1_1Region_1a167cff2d16f08d890fff11f80e519233" kindref="member">alloc</ref>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;(n);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>phiprime<sp/>=<sp/>r.<ref refid="classGecode_1_1Region_1a167cff2d16f08d890fff11f80e519233" kindref="member">alloc</ref>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;(n);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Int_1_1Sorted_1_1OfflineMinItem" kindref="compound">OfflineMinItem</ref>*<sp/><ref refid="group__TaskModelIntSequence_1ga3bc04a3aea7c48a707d6b551fee2127f" kindref="member">sequence</ref><sp/>=<sp/>r.<ref refid="classGecode_1_1Region_1a167cff2d16f08d890fff11f80e519233" kindref="member">alloc</ref>&lt;<ref refid="classGecode_1_1Int_1_1Sorted_1_1OfflineMinItem" kindref="compound">OfflineMinItem</ref>&gt;(n);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>vertices<sp/>=<sp/>r.<ref refid="classGecode_1_1Region_1a167cff2d16f08d890fff11f80e519233" kindref="member">alloc</ref>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;(n);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(match_fixed)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sorting<sp/>is<sp/>determined,<sp/>sigma<sp/>and<sp/>tau<sp/>coincide</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=n;<sp/>i--;<sp/>)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tau[z[i].val()]<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>n;<sp/>i--;<sp/>)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tau[i]<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Perm)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>normalized<sp/>and<sp/>sorted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>collect<sp/>all<sp/>bounds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Int_1_1Sorted_1_1Rank" kindref="compound">Rank</ref>*<sp/>allbnd<sp/>=<sp/>r.<ref refid="classGecode_1_1Region_1a167cff2d16f08d890fff11f80e519233" kindref="member">alloc</ref>&lt;<ref refid="classGecode_1_1Int_1_1Sorted_1_1Rank" kindref="compound">Rank</ref>&gt;(x.<ref refid="classGecode_1_1ViewArray_1a65940b23e2457e97607475f8bd8f4ac6" kindref="member">size</ref>());</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NDEBUG</highlight></codeline>
<codeline lineno="109"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=n;<sp/>i--;)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allbnd[i].min<sp/>=<sp/>allbnd[i].max<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="112"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=n;<sp/>i--;)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min<sp/>=<sp/>x[i].min();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max<sp/>=<sp/>x[i].max();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;<sp/>j&lt;n;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(y[j].min()<sp/>&gt;<sp/>min)<sp/>||</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(y[j].min()<sp/>&lt;=<sp/>min<sp/>&amp;&amp;<sp/>min<sp/>&lt;=<sp/>y[j].max())<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allbnd[i].<ref refid="classGecode_1_1Int_1_1Sorted_1_1Rank_1ab44408d166f34077159846a84c75daa0" kindref="member">min</ref><sp/>=<sp/>j;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=n;<sp/>j--;)<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y[j].min()<sp/>&gt;<sp/>max)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allbnd[i].<ref refid="classGecode_1_1Int_1_1Sorted_1_1Rank_1a13cbee823959be7e02aac56623d69728" kindref="member">max</ref><sp/>=<sp/>j-1;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y[j].min()<sp/>&lt;=<sp/>max<sp/>&amp;&amp;<sp/>min<sp/>&lt;=<sp/>y[j].max())<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allbnd[i].<ref refid="classGecode_1_1Int_1_1Sorted_1_1Rank_1a13cbee823959be7e02aac56623d69728" kindref="member">max</ref><sp/>=<sp/>j;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>n;<sp/>i--;<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>minimum<sp/>reachable<sp/>y-variable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minr<sp/>=<sp/>allbnd[i].<ref refid="classGecode_1_1Int_1_1Sorted_1_1Rank_1ab44408d166f34077159846a84c75daa0" kindref="member">min</ref>;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(minr<sp/>!=<sp/>-1);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxr<sp/>=<sp/>allbnd[i].<ref refid="classGecode_1_1Int_1_1Sorted_1_1Rank_1a13cbee823959be7e02aac56623d69728" kindref="member">max</ref>;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(maxr<sp/>!=<sp/>-1);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref><sp/>me<sp/>=<sp/>x[i].gq(home,<sp/>y[minr].min());</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceGecode_1a93e4dea4e5e021b4f58d0ccc78ac1523" kindref="member">me_failed</ref>(me))</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5a839b40c2e7ccebb2e61e92e274833089" kindref="member">ES_FAILED</ref>;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nofix<sp/>|=<sp/>(<ref refid="namespaceGecode_1ab0c2b67fac58a0d289893450d8a9b2bd" kindref="member">me_modified</ref>(me)<sp/>&amp;&amp;<sp/>(x[i].min()<sp/>!=<sp/>y[minr].min()));</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>me<sp/>=<sp/>x[i].lq(home,<sp/>y[maxr].max());</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceGecode_1a93e4dea4e5e021b4f58d0ccc78ac1523" kindref="member">me_failed</ref>(me))</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5a839b40c2e7ccebb2e61e92e274833089" kindref="member">ES_FAILED</ref>;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nofix<sp/>|=<sp/>(<ref refid="namespaceGecode_1ab0c2b67fac58a0d289893450d8a9b2bd" kindref="member">me_modified</ref>(me)<sp/>&amp;&amp;<sp/>(x[i].min()<sp/>!=<sp/>y[maxr].max()));</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>me<sp/>=<sp/>z[i].gq(home,<sp/>minr);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceGecode_1a93e4dea4e5e021b4f58d0ccc78ac1523" kindref="member">me_failed</ref>(me))</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5a839b40c2e7ccebb2e61e92e274833089" kindref="member">ES_FAILED</ref>;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nofix<sp/>|=<sp/>(<ref refid="namespaceGecode_1ab0c2b67fac58a0d289893450d8a9b2bd" kindref="member">me_modified</ref>(me)<sp/>&amp;&amp;<sp/><sp/>(z[i].min()<sp/>!=<sp/>minr));</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>me<sp/>=<sp/>z[i].lq(home,<sp/>maxr);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceGecode_1a93e4dea4e5e021b4f58d0ccc78ac1523" kindref="member">me_failed</ref>(me))</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5a839b40c2e7ccebb2e61e92e274833089" kindref="member">ES_FAILED</ref>;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nofix<sp/>|=<sp/>(<ref refid="namespaceGecode_1ab0c2b67fac58a0d289893450d8a9b2bd" kindref="member">me_modified</ref>(me)<sp/>&amp;&amp;<sp/><sp/>(z[i].max()<sp/>!=<sp/>maxr));</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>channel<sp/>information<sp/>from<sp/>x<sp/>to<sp/>y<sp/>through<sp/>permutation<sp/>variables<sp/>in<sp/>z</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespaceGecode_1_1Int_1_1Sorted_1aa19844bf69be376126ba3e9ae2859a5b" kindref="member">channel</ref>(home,x,y,z,nofix))</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5a839b40c2e7ccebb2e61e92e274833089" kindref="member">ES_FAILED</ref>;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nofix)</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5ac32341b682bca52b8617a8ad004023ef" kindref="member">ES_NOFIX</ref>;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>STEP<sp/>1:</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>normalization<sp/>is<sp/>implemented<sp/>in<sp/>&quot;order.hpp&quot;</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>o<sp/><sp/>setting<sp/>the<sp/>lower<sp/>bounds<sp/>of<sp/>the<sp/>y_i<sp/>domains<sp/>(\lb<sp/>E_i)</highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>max(\lb<sp/>E_{i-1},\lb<sp/>E_i)</highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>o<sp/><sp/>setting<sp/>the<sp/>upper<sp/>bounds<sp/>of<sp/>the<sp/>y_i<sp/>domains<sp/>(\ub<sp/>E_i)</highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>min(\ub<sp/>E_i,\ub<sp/>E_{i+1})</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespaceGecode_1_1Int_1_1Sorted_1a66d87ee008af9992aea5b88a0f0ed69d" kindref="member">normalize</ref>(home,<sp/>y,<sp/>x,<sp/>nofix))</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5a839b40c2e7ccebb2e61e92e274833089" kindref="member">ES_FAILED</ref>;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Perm)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>consistency<sp/>of<sp/>channeling<sp/>after<sp/>normalization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespaceGecode_1_1Int_1_1Sorted_1aa19844bf69be376126ba3e9ae2859a5b" kindref="member">channel</ref>(home,x,y,z,nofix))</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5a839b40c2e7ccebb2e61e92e274833089" kindref="member">ES_FAILED</ref>;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nofix)</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5ac32341b682bca52b8617a8ad004023ef" kindref="member">ES_NOFIX</ref>;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>bounds<sp/>have<sp/>changed<sp/>we<sp/>have<sp/>to<sp/>recreate<sp/>sigma<sp/>to<sp/>restore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>optimized<sp/>dropping<sp/>of<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>sort_sigma&lt;View,Perm&gt;(home,x,z);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>subsumed<sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>array_subs<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>dropfst<sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>noperm_bc<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!check_subsumption&lt;View,Perm&gt;(x,y,z,subsumed,dropfst)<sp/>||</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!array_assigned&lt;View,Perm&gt;(home,x,y,z,array_subs,match_fixed,nofix,noperm_bc))</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5a839b40c2e7ccebb2e61e92e274833089" kindref="member">ES_FAILED</ref>;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(subsumed<sp/>||<sp/>array_subs)</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>home.ES_SUBSUMED(p);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="207"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>STEP<sp/>2:<sp/>creating<sp/>tau</highlight></codeline>
<codeline lineno="208"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Sort<sp/>the<sp/>domains<sp/>of<sp/>the<sp/>x<sp/>variables<sp/>according</highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>to<sp/>their<sp/>lower<sp/>bounds,<sp/>where<sp/>we<sp/>use<sp/>an</highlight></codeline>
<codeline lineno="210"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>intermediate<sp/>array<sp/>of<sp/>integers<sp/>for<sp/>sorting</highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>sort_tau&lt;View,Perm&gt;(x,z,tau);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="215"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>STEP<sp/>3:</highlight></codeline>
<codeline lineno="216"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>Compute<sp/>the<sp/>matchings<sp/>\phi<sp/>and<sp/>\phi&apos;<sp/>between</highlight></codeline>
<codeline lineno="217"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>the<sp/>x<sp/>and<sp/>the<sp/>y<sp/>variables</highlight></codeline>
<codeline lineno="218"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>with<sp/>Glover&apos;s<sp/>matching<sp/>algorithm.</highlight></codeline>
<codeline lineno="219"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>o<sp/><sp/>phi<sp/>is<sp/>computed<sp/>with<sp/>the<sp/>glover<sp/>function</highlight></codeline>
<codeline lineno="220"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>o<sp/><sp/>phiprime<sp/>is<sp/>computed<sp/>with<sp/>the<sp/>revglover<sp/>function</highlight></codeline>
<codeline lineno="221"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>glover<sp/>and<sp/>revglover<sp/>are<sp/>implemented<sp/>in<sp/>&quot;matching.hpp&quot;</highlight></codeline>
<codeline lineno="222"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!match_fixed)<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespaceGecode_1_1Int_1_1Sorted_1a74d820c53477b730ba0a0fd1861db2d3" kindref="member">glover</ref>(x,y,tau,phi,sequence,vertices))</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5a839b40c2e7ccebb2e61e92e274833089" kindref="member">ES_FAILED</ref>;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>x.size();<sp/>i--;<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phi[i]<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>z[i].val();</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phiprime[i]<sp/>=<sp/>phi[i];</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>n;<sp/>i--;<sp/>)</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!y[i].assigned())<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>phiprime<sp/>is<sp/>not<sp/>needed<sp/>to<sp/>narrow<sp/>the<sp/>domains<sp/>of<sp/>the<sp/>x-variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!match_fixed<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="namespaceGecode_1_1Int_1_1Sorted_1ae9ddfbb92df29d6b5a54ce7c2751557e" kindref="member">revglover</ref>(x,y,tau,phiprime,sequence,vertices))</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5a839b40c2e7ccebb2e61e92e274833089" kindref="member">ES_FAILED</ref>;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespaceGecode_1_1Int_1_1Sorted_1a01efcaeedc8b1881281cb1b75e2f3e2b" kindref="member">narrow_domy</ref>(home,x,y,phi,phiprime,nofix))</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5a839b40c2e7ccebb2e61e92e274833089" kindref="member">ES_FAILED</ref>;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nofix<sp/>&amp;&amp;<sp/>!match_fixed)<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>data<sp/>structures<sp/>(matching)<sp/>destroyed<sp/>by<sp/>domains<sp/>with<sp/>holes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>y.size();<sp/>j--;<sp/>)</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phi[j]=phiprime[j]=0;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespaceGecode_1_1Int_1_1Sorted_1a74d820c53477b730ba0a0fd1861db2d3" kindref="member">glover</ref>(x,y,tau,phi,sequence,vertices))</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5a839b40c2e7ccebb2e61e92e274833089" kindref="member">ES_FAILED</ref>;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespaceGecode_1_1Int_1_1Sorted_1ae9ddfbb92df29d6b5a54ce7c2751557e" kindref="member">revglover</ref>(x,y,tau,phiprime,sequence,vertices))</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5a839b40c2e7ccebb2e61e92e274833089" kindref="member">ES_FAILED</ref>;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespaceGecode_1_1Int_1_1Sorted_1a01efcaeedc8b1881281cb1b75e2f3e2b" kindref="member">narrow_domy</ref>(home,x,y,phi,phiprime,nofix))</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5a839b40c2e7ccebb2e61e92e274833089" kindref="member">ES_FAILED</ref>;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Perm)<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>consistency<sp/>of<sp/>channeling<sp/>after<sp/>normalization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespaceGecode_1_1Int_1_1Sorted_1aa19844bf69be376126ba3e9ae2859a5b" kindref="member">channel</ref>(home,x,y,z,nofix))</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5a839b40c2e7ccebb2e61e92e274833089" kindref="member">ES_FAILED</ref>;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nofix)</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5ac32341b682bca52b8617a8ad004023ef" kindref="member">ES_NOFIX</ref>;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="271"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>STEP<sp/>4:</highlight></codeline>
<codeline lineno="272"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>Compute<sp/>the<sp/>strongly<sp/>connected<sp/>components<sp/>in</highlight></codeline>
<codeline lineno="273"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>the<sp/>oriented<sp/>intersection<sp/>graph</highlight></codeline>
<codeline lineno="274"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>the<sp/>computation<sp/>of<sp/>the<sp/>sccs<sp/>is<sp/>implemented<sp/>in</highlight></codeline>
<codeline lineno="275"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>&quot;narrowing.hpp&quot;<sp/>in<sp/>the<sp/>function<sp/>narrow_domx</highlight></codeline>
<codeline lineno="276"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>scclist<sp/>=<sp/>r.<ref refid="classGecode_1_1Region_1a167cff2d16f08d890fff11f80e519233" kindref="member">alloc</ref>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;(n);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Int_1_1Sorted_1_1SccComponent" kindref="compound">SccComponent</ref>*<sp/>sinfo<sp/>=<sp/>r.<ref refid="classGecode_1_1Region_1a167cff2d16f08d890fff11f80e519233" kindref="member">alloc</ref>&lt;<ref refid="classGecode_1_1Int_1_1Sorted_1_1SccComponent" kindref="compound">SccComponent</ref>&gt;(n);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>n;<sp/>i--;<sp/>)</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sinfo[i].left=sinfo[i].right=sinfo[i].rightmost=sinfo[i].leftmost=<sp/>i;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceGecode_1_1Int_1_1Sorted_1adcdcd10eff8ffd29056ccbb4ab507855" kindref="member">computesccs</ref>(home,x,y,phi,sinfo,scclist);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="287"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>STEP<sp/>5:</highlight></codeline>
<codeline lineno="288"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>Narrow<sp/>the<sp/>domains<sp/>of<sp/>the<sp/>variables</highlight></codeline>
<codeline lineno="289"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>Also<sp/>implemented<sp/>in<sp/>&quot;narrowing.hpp&quot;</highlight></codeline>
<codeline lineno="290"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>in<sp/>the<sp/>functions<sp/>narrow_domx<sp/>and<sp/>narrow_domy</highlight></codeline>
<codeline lineno="291"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!narrow_domx&lt;View,Perm&gt;(home,x,y,z,tau,phi,scclist,sinfo,nofix))</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5a839b40c2e7ccebb2e61e92e274833089" kindref="member">ES_FAILED</ref>;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Perm)<sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!noperm_bc<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!perm_bc&lt;View&gt;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(home,<sp/>tau,<sp/>sinfo,<sp/>scclist,<sp/>x,z,<sp/>repairpass,<sp/>nofix))</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5a839b40c2e7ccebb2e61e92e274833089" kindref="member">ES_FAILED</ref>;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>channeling<sp/>also<sp/>needed<sp/>after<sp/>normal<sp/>propagation<sp/>steps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>order<sp/>to<sp/>ensure<sp/>consistency<sp/>after<sp/>possible<sp/>modification<sp/>in<sp/>perm_bc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespaceGecode_1_1Int_1_1Sorted_1aa19844bf69be376126ba3e9ae2859a5b" kindref="member">channel</ref>(home,x,y,z,nofix))</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5a839b40c2e7ccebb2e61e92e274833089" kindref="member">ES_FAILED</ref>;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nofix)</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5ac32341b682bca52b8617a8ad004023ef" kindref="member">ES_NOFIX</ref>;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>sort_tau&lt;View,Perm&gt;(x,z,tau);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Perm)<sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>special<sp/>case<sp/>of<sp/>sccs<sp/>of<sp/>size<sp/>2<sp/>denoted<sp/>by<sp/>permutation<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>used<sp/>to<sp/>enforce<sp/>consistency<sp/>from<sp/>x<sp/>to<sp/>y</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>case<sp/>of<sp/>the<sp/>upper<sp/>bound<sp/>ordering<sp/>tau</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>x.size()<sp/>-<sp/>1;<sp/>i--;<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>two<sp/>x<sp/>variables<sp/>are<sp/>in<sp/>the<sp/>same<sp/>scc<sp/>of<sp/>size<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z[tau[i]].min()<sp/>==<sp/>z[tau[i+1]].min()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z[tau[i]].max()<sp/>==<sp/>z[tau[i+1]].max()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z[tau[i]].size()<sp/>==<sp/>2<sp/>&amp;&amp;<sp/>z[tau[i]].range())<sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>bounds<sp/>are<sp/>strictly<sp/>smaller</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x[tau[i]].max()<sp/>&lt;<sp/>x[tau[i+1]].max())<sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref><sp/>me<sp/>=<sp/>y[z[tau[i]].min()].lq(home,<sp/>x[tau[i]].max());</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceGecode_1a93e4dea4e5e021b4f58d0ccc78ac1523" kindref="member">me_failed</ref>(me))</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5a839b40c2e7ccebb2e61e92e274833089" kindref="member">ES_FAILED</ref>;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nofix<sp/>|=<sp/>(<ref refid="namespaceGecode_1ab0c2b67fac58a0d289893450d8a9b2bd" kindref="member">me_modified</ref>(me)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y[z[tau[i]].min()].max()<sp/>!=<sp/>x[tau[i]].max());</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>me<sp/>=<sp/>y[z[tau[i+1]].max()].lq(home,<sp/>x[tau[i+1]].max());</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceGecode_1a93e4dea4e5e021b4f58d0ccc78ac1523" kindref="member">me_failed</ref>(me))</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5a839b40c2e7ccebb2e61e92e274833089" kindref="member">ES_FAILED</ref>;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nofix<sp/>|=<sp/>(<ref refid="namespaceGecode_1ab0c2b67fac58a0d289893450d8a9b2bd" kindref="member">me_modified</ref>(me)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y[z[tau[i+1]].max()].max()<sp/>!=<sp/>x[tau[i+1]].max());</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nofix<sp/>?<sp/><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5ac32341b682bca52b8617a8ad004023ef" kindref="member">ES_NOFIX</ref><sp/>:<sp/><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5a13bb69056fb9293e8df98c0e347ba634" kindref="member">ES_FIX</ref>;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>View,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Perm&gt;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/>forceinline<sp/><ref refid="classGecode_1_1Int_1_1Sorted_1_1Sorted" kindref="compound">Sorted&lt;View,Perm&gt;::</ref></highlight></codeline>
<codeline lineno="343" refid="classGecode_1_1Int_1_1Sorted_1_1Sorted_1aa1ebe3581769a6332c6a33da54899516" refkind="member"><highlight class="normal"><ref refid="classGecode_1_1Int_1_1Sorted_1_1Sorted" kindref="compound">  Sorted</ref>(<ref refid="classGecode_1_1Space" kindref="compound">Space</ref>&amp;<sp/>home,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>share,<sp/><ref refid="classGecode_1_1Int_1_1Sorted_1_1Sorted" kindref="compound">Sorted&lt;View,Perm&gt;</ref>&amp;<sp/>p):</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Propagator" kindref="compound">Propagator</ref>(home,<sp/>share,<sp/>p),</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>reachable(p.reachable)<sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Int_1_1Sorted_1_1Sorted_1aa76548049f56854807b0388039e55952" kindref="member">x</ref>.update(home,<sp/>share,<sp/>p.x);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Int_1_1Sorted_1_1Sorted_1ac7233e90e6d8c8867914ac636666cd3e" kindref="member">y</ref>.update(home,<sp/>share,<sp/>p.y);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Int_1_1Sorted_1_1Sorted_1acf1e2bfdf2212f441c7265e5c11d4cdd" kindref="member">z</ref>.update(home,<sp/>share,<sp/>p.z);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Int_1_1Sorted_1_1Sorted_1a146de365123670939fc72efd7898d52d" kindref="member">w</ref>.update(home,<sp/>share,<sp/>p.w);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>View,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Perm&gt;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1Sorted_1_1Sorted" kindref="compound">Sorted&lt;View,Perm&gt;::</ref></highlight></codeline>
<codeline lineno="354" refid="classGecode_1_1Int_1_1Sorted_1_1Sorted_1af1d6d6cc1f37c7a9e29ea59761d4ca66" refkind="member"><highlight class="normal"><ref refid="classGecode_1_1Int_1_1Sorted_1_1Sorted" kindref="compound">  Sorted</ref>(<ref refid="classGecode_1_1Home" kindref="compound">Home</ref><sp/>home,</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray&lt;View&gt;</ref>&amp;<sp/>x0,<sp/><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray&lt;View&gt;</ref>&amp;<sp/>y0,<sp/><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray&lt;View&gt;</ref>&amp;<sp/>z0)<sp/>:</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Propagator" kindref="compound">Propagator</ref>(home),<sp/>x(x0),<sp/>y(y0),<sp/>z(z0),<sp/>w(home,y0),<sp/>reachable(-1)<sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Int_1_1Sorted_1_1Sorted_1aa76548049f56854807b0388039e55952" kindref="member">x</ref>.subscribe(home,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>PC_INT_BND);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Int_1_1Sorted_1_1Sorted_1ac7233e90e6d8c8867914ac636666cd3e" kindref="member">y</ref>.subscribe(home,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>PC_INT_BND);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Perm)</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Int_1_1Sorted_1_1Sorted_1acf1e2bfdf2212f441c7265e5c11d4cdd" kindref="member">z</ref>.subscribe(home,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>PC_INT_BND);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>View,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Perm&gt;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365" refid="classGecode_1_1Int_1_1Sorted_1_1Sorted_1a05d710fab21382c9e129473cd39b7503" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1Sorted_1_1Sorted" kindref="compound">Sorted&lt;View,Perm&gt;::dispose</ref>(<ref refid="classGecode_1_1Space" kindref="compound">Space</ref>&amp;<sp/>home)<sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>x.cancel(home,*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>PC_INT_BND);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>y.cancel(home,*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>PC_INT_BND);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Perm)</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>z.cancel(home,*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>PC_INT_BND);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)<sp/><ref refid="classGecode_1_1Actor_1a143253b3eceda40f36834e38c8ac05d9" kindref="member">Propagator::dispose</ref>(home);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*this);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>View,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Perm&gt;</highlight></codeline>
<codeline lineno="375" refid="classGecode_1_1Int_1_1Sorted_1_1Sorted_1a1c5335a5158c3eb256cccf1b56768e06" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Actor" kindref="compound">Actor</ref>*<sp/><ref refid="classGecode_1_1Int_1_1Sorted_1_1Sorted" kindref="compound">Sorted&lt;View,Perm&gt;::copy</ref>(<ref refid="classGecode_1_1Space" kindref="compound">Space</ref>&amp;<sp/>home,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>share)<sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(home)<sp/><ref refid="classGecode_1_1Int_1_1Sorted_1_1Sorted" kindref="compound">Sorted&lt;View,Perm&gt;</ref>(home,<sp/>share,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>View,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Perm&gt;</highlight></codeline>
<codeline lineno="380" refid="classGecode_1_1Int_1_1Sorted_1_1Sorted_1a123a5ab00a04caa38b8e6d1582b2b5c5" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1PropCost" kindref="compound">PropCost</ref><sp/><ref refid="classGecode_1_1Int_1_1Sorted_1_1Sorted" kindref="compound">Sorted&lt;View,Perm&gt;::cost</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Space" kindref="compound">Space</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGecode_1a129e41c1d037528010d7b6706495a560" kindref="member">ModEventDelta</ref>&amp;)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1PropCost_1a4a383a3772df2c1e49341813edc19b34" kindref="member">PropCost::linear</ref>(<ref refid="classGecode_1_1PropCost_1ad1bebae59ea373495c5bf51ffc249dcda29f70a7d7f550f3822568ddce422d861" kindref="member">PropCost::LO</ref>,<sp/>x.size());</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>View,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Perm&gt;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></highlight></codeline>
<codeline lineno="386" refid="classGecode_1_1Int_1_1Sorted_1_1Sorted_1a0ee955860f01d102def2424554b80cf7" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1Sorted_1_1Sorted" kindref="compound">Sorted&lt;View,Perm&gt;::propagate</ref>(<ref refid="classGecode_1_1Space" kindref="compound">Space</ref>&amp;<sp/>home,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGecode_1a129e41c1d037528010d7b6706495a560" kindref="member">ModEventDelta</ref>&amp;)<sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>x.<ref refid="classGecode_1_1Propagator_1a1781b5b0df38c39dddca4b44c3a00530" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>secondpass<sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>nofix<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>dropfst<sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>subsumed<sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>array_subs<sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>match_fixed<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>normalization<sp/>of<sp/>x<sp/>and<sp/>y</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespaceGecode_1_1Int_1_1Sorted_1a66d87ee008af9992aea5b88a0f0ed69d" kindref="member">normalize</ref>(home,<sp/>y,<sp/>x,<sp/>nofix))</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5a839b40c2e7ccebb2e61e92e274833089" kindref="member">ES_FAILED</ref>;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>sigma<sp/>sorting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>sort_sigma&lt;View,Perm&gt;(home,x,z);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>noperm_bc<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!array_assigned&lt;View,Perm&gt;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(home,<sp/>x,<sp/>y,<sp/>z,<sp/>array_subs,<sp/>match_fixed,<sp/>nofix,<sp/>noperm_bc))</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5a839b40c2e7ccebb2e61e92e274833089" kindref="member">ES_FAILED</ref>;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(array_subs)</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>home.ES_SUBSUMED(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>sort_sigma&lt;View,Perm&gt;(home,x,z);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>this<sp/>case<sp/>check_subsumptions<sp/>is<sp/>guaranteed<sp/>to<sp/>find</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>xs<sp/>ordered<sp/>by<sp/>sigma</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!check_subsumption&lt;View,Perm&gt;(x,y,z,subsumed,dropfst))</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5a839b40c2e7ccebb2e61e92e274833089" kindref="member">ES_FAILED</ref>;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(subsumed)</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>home.ES_SUBSUMED(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Perm)<sp/>{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dropping<sp/>possibly<sp/>yields<sp/>inconsistent<sp/>indices<sp/>on<sp/>permutation<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dropfst)<sp/>{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reachable<sp/>=<sp/>w[dropfst<sp/>-<sp/>1].max();</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>unreachable<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>x.size();<sp/>unreachable<sp/>&amp;&amp;<sp/>i--<sp/>;<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unreachable<sp/>&amp;=<sp/>(reachable<sp/>&lt;<sp/>x[i].min());</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unreachable)<sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x.drop_fst(dropfst,<sp/>home,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>PC_INT_BND);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y.drop_fst(dropfst,<sp/>home,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>PC_INT_BND);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z.drop_fst(dropfst,<sp/>home,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>PC_INT_BND);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dropfst<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>x.size();</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&lt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x[0].max()<sp/>&lt;<sp/>y[0].min()<sp/>||<sp/>y[0].max()<sp/>&lt;<sp/>x[0].min())</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5a839b40c2e7ccebb2e61e92e274833089" kindref="member">ES_FAILED</ref>;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Perm)<sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GECODE_ME_CHECK(z[0].eq(home,<sp/>w.size()<sp/>-<sp/>1));</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GECODE_REWRITE(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,(<ref refid="classGecode_1_1Int_1_1Rel_1_1EqBnd" kindref="compound">Rel::EqBnd&lt;View,View&gt;::post</ref>(home(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">),<sp/>x[0],<sp/>y[0])));</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>whether<sp/>shifting<sp/>the<sp/>permutation<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>necessary<sp/>after<sp/>dropping<sp/>x<sp/>and<sp/>y<sp/>vars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>highest<sp/>reachable<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>valid<sp/>=<sp/>n<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>shift<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>n;<sp/>i--;<sp/>){</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z[i].max()<sp/>&gt;<sp/>index)</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/>z[i].max();</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&gt;<sp/>valid)</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shift<sp/>=<sp/>index<sp/>-<sp/>valid;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shift)<sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray&lt;OffsetView&gt;</ref><sp/>ox(home,n),<sp/>oy(home,n),<sp/>oz(home,n);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>n;<sp/>i--;<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GECODE_ME_CHECK(z[i].gq(home,<sp/>shift));</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oz[i]<sp/>=<sp/><ref refid="classGecode_1_1Int_1_1OffsetView" kindref="compound">OffsetView</ref>(z[i],<sp/>-shift);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ox[i]<sp/>=<sp/><ref refid="classGecode_1_1Int_1_1OffsetView" kindref="compound">OffsetView</ref>(x[i],<sp/>0);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oy[i]<sp/>=<sp/><ref refid="classGecode_1_1Int_1_1OffsetView" kindref="compound">OffsetView</ref>(y[i],<sp/>0);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GECODE_ES_CHECK((bounds_propagation&lt;OffsetView,Perm&gt;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(home,*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,ox,oy,oz,secondpass,nofix,match_fixed)));</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(secondpass)<sp/>{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GECODE_ES_CHECK((bounds_propagation&lt;OffsetView,Perm&gt;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(home,*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,ox,oy,oz,secondpass,nofix,match_fixed)));</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GECODE_ES_CHECK((bounds_propagation&lt;View,Perm&gt;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(home,*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,x,y,z,secondpass,nofix,match_fixed)));</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(secondpass)<sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GECODE_ES_CHECK((bounds_propagation&lt;View,Perm&gt;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(home,*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,x,y,z,secondpass,nofix,match_fixed)));</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dropping<sp/>has<sp/>no<sp/>consequences</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dropfst)<sp/>{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x.drop_fst(dropfst,<sp/>home,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>PC_INT_BND);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y.drop_fst(dropfst,<sp/>home,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>PC_INT_BND);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>x.size();</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&lt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x[0].max()<sp/>&lt;<sp/>y[0].min()<sp/>||<sp/>y[0].max()<sp/>&lt;<sp/>x[0].min())</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5a839b40c2e7ccebb2e61e92e274833089" kindref="member">ES_FAILED</ref>;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GECODE_REWRITE(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,(<ref refid="classGecode_1_1Int_1_1Rel_1_1EqBnd" kindref="compound">Rel::EqBnd&lt;View,View&gt;::post</ref>(home(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">),<sp/>x[0],<sp/>y[0])));</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GECODE_ES_CHECK((bounds_propagation&lt;View,Perm&gt;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(home,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>x,<sp/>y,<sp/>z,secondpass,<sp/>nofix,<sp/>match_fixed)));</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>second<sp/>pass<sp/>possible<sp/>if<sp/>there<sp/>are<sp/>no<sp/>permvars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespaceGecode_1_1Int_1_1Sorted_1a66d87ee008af9992aea5b88a0f0ed69d" kindref="member">normalize</ref>(home,<sp/>y,<sp/>x,<sp/>nofix))</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5a839b40c2e7ccebb2e61e92e274833089" kindref="member">ES_FAILED</ref>;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Region" kindref="compound">Region</ref><sp/>r(home);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>tau<sp/>=<sp/>r.<ref refid="classGecode_1_1Region_1a167cff2d16f08d890fff11f80e519233" kindref="member">alloc</ref>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;(n);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(match_fixed)<sp/>{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sorting<sp/>is<sp/>determined</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sigma<sp/>and<sp/>tau<sp/>coincide</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>x.size();<sp/>i--;<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pi<sp/>=<sp/>z[i].val();</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tau[pi]<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>n;<sp/>i--;<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tau[i]<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>sort_tau&lt;View,Perm&gt;(x,z,tau);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>recreate<sp/>consistency<sp/>for<sp/>already<sp/>assigned<sp/>subparts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>order<sp/>of<sp/>the<sp/>upper<sp/>bounds<sp/>starting<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>xbassigned<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>x.size();<sp/>i--;<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x[tau[i]].assigned()<sp/>&amp;&amp;<sp/>xbassigned)<sp/>{</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GECODE_ME_CHECK(y[i].eq(home,<sp/>x[tau[i]].val()));</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xbassigned<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>subsumed<sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>array_subs<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>noperm_bc<sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>creating<sp/>sorting<sp/>anew</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>sort_sigma&lt;View,Perm&gt;(home,x,z);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Perm)<sp/>{</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>x.size()<sp/>-<sp/>1;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>special<sp/>case<sp/>of<sp/>subsccs<sp/>of<sp/>size2<sp/>for<sp/>the<sp/>lower<sp/>bounds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>two<sp/>x<sp/>variables<sp/>are<sp/>in<sp/>the<sp/>same<sp/>scc<sp/>of<sp/>size<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z[i].min()<sp/>==<sp/>z[i+1].min()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z[i].max()<sp/>==<sp/>z[i+1].max()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z[i].size()<sp/>==<sp/>2<sp/>&amp;&amp;<sp/>z[i].range())<sp/>{</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x[i].min()<sp/>&lt;<sp/>x[i+1].min())<sp/>{</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref><sp/>me<sp/>=<sp/>y[z[i].min()].gq(home,<sp/>x[i].min());</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GECODE_ME_CHECK(me);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nofix<sp/>|=<sp/>(<ref refid="namespaceGecode_1ab0c2b67fac58a0d289893450d8a9b2bd" kindref="member">me_modified</ref>(me)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y[z[i].min()].min()<sp/>!=<sp/>x[i].min());</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>me<sp/>=<sp/>y[z[i+1].max()].gq(home,<sp/>x[i+1].min());</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GECODE_ME_CHECK(me);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nofix<sp/>|=<sp/>(<ref refid="namespaceGecode_1ab0c2b67fac58a0d289893450d8a9b2bd" kindref="member">me_modified</ref>(me)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y[z[i+1].max()].min()<sp/>!=<sp/>x[i+1].min());</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>assigned</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>should<sp/>be<sp/>sorted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>xassigned<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>x.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x[i].assigned()<sp/>&amp;&amp;<sp/>xassigned)<sp/>{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GECODE_ME_CHECK(y[i].eq(home,x[i].val()));</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xassigned<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sorted<sp/>check<sp/>bounds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>final<sp/>check<sp/>that<sp/>variables<sp/>are<sp/>consitent<sp/>with<sp/>least<sp/>and<sp/>greatest<sp/>possible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tlb<sp/>=<sp/><ref refid="group__TaskModelFloatArith_1ga121700708772a60191be6256c3c0d151" kindref="member">std::min</ref>(x[0].min(),<sp/>y[0].min());</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tub<sp/>=<sp/><ref refid="group__TaskModelFloatArith_1ga958cb25ae9754d6cc35c7c6e34ebc1e3" kindref="member">std::max</ref>(x[x.size()<sp/>-<sp/>1].max(),<sp/>y[y.size()<sp/>-<sp/>1].max());</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>x.size();<sp/>i--;<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref><sp/>me<sp/>=<sp/>y[i].lq(home,<sp/>tub);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GECODE_ME_CHECK(me);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nofix<sp/>|=<sp/><ref refid="namespaceGecode_1ab0c2b67fac58a0d289893450d8a9b2bd" kindref="member">me_modified</ref>(me)<sp/>&amp;&amp;<sp/>(y[i].max()<sp/>!=<sp/>tub);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>me<sp/>=<sp/>y[i].gq(home,<sp/>tlb);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GECODE_ME_CHECK(me);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nofix<sp/>|=<sp/><ref refid="namespaceGecode_1ab0c2b67fac58a0d289893450d8a9b2bd" kindref="member">me_modified</ref>(me)<sp/>&amp;&amp;<sp/>(y[i].min()<sp/>!=<sp/>tlb);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>me<sp/>=<sp/>x[i].lq(home,<sp/>tub);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GECODE_ME_CHECK(me);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nofix<sp/>|=<sp/><ref refid="namespaceGecode_1ab0c2b67fac58a0d289893450d8a9b2bd" kindref="member">me_modified</ref>(me)<sp/>&amp;&amp;<sp/>(x[i].max()<sp/>!=<sp/>tub);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>me<sp/>=<sp/>x[i].gq(home,<sp/>tlb);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GECODE_ME_CHECK(me);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nofix<sp/>|=<sp/><ref refid="namespaceGecode_1ab0c2b67fac58a0d289893450d8a9b2bd" kindref="member">me_modified</ref>(me)<sp/>&amp;&amp;<sp/>(x[i].min()<sp/>!=<sp/>tlb);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!array_assigned&lt;View,Perm&gt;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(home,<sp/>x,<sp/>y,<sp/>z,<sp/>array_subs,<sp/>match_fixed,<sp/>nofix,<sp/>noperm_bc))</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5a839b40c2e7ccebb2e61e92e274833089" kindref="member">ES_FAILED</ref>;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(array_subs)</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>home.ES_SUBSUMED(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!check_subsumption&lt;View,Perm&gt;(x,y,z,subsumed,dropfst))</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5a839b40c2e7ccebb2e61e92e274833089" kindref="member">ES_FAILED</ref>;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(subsumed)</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>home.ES_SUBSUMED(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nofix<sp/>?<sp/><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5ac32341b682bca52b8617a8ad004023ef" kindref="member">ES_NOFIX</ref><sp/>:<sp/><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5a13bb69056fb9293e8df98c0e347ba634" kindref="member">ES_FIX</ref>;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>View,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Perm&gt;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1Sorted_1_1Sorted" kindref="compound">Sorted&lt;View,Perm&gt;::</ref></highlight></codeline>
<codeline lineno="624" refid="classGecode_1_1Int_1_1Sorted_1_1Sorted_1a91f1fa1835f62deafd21c816559bd130" refkind="member"><highlight class="normal"><ref refid="classGecode_1_1Int_1_1Sorted_1_1Sorted" kindref="compound">  post</ref>(<ref refid="classGecode_1_1Home" kindref="compound">Home</ref><sp/>home,</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray&lt;View&gt;</ref>&amp;<sp/>x0,<sp/><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray&lt;View&gt;</ref>&amp;<sp/>y0,<sp/><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray&lt;View&gt;</ref>&amp;<sp/>z0)<sp/>{</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>x0.<ref refid="classGecode_1_1ViewArray_1a65940b23e2457e97607475f8bd8f4ac6" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&lt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((x0[0].max()<sp/>&lt;<sp/>y0[0].min())<sp/>||<sp/>(y0[0].max()<sp/>&lt;<sp/>x0[0].min()))</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5a839b40c2e7ccebb2e61e92e274833089" kindref="member">ES_FAILED</ref>;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GECODE_ES_CHECK((<ref refid="classGecode_1_1Int_1_1Rel_1_1EqBnd" kindref="compound">Rel::EqBnd&lt;View,View&gt;::post</ref>(home,x0[0],y0[0])));</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Perm)<sp/>{</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GECODE_ME_CHECK(z0[0].eq(home,0));</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Perm)<sp/>{</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray&lt;View&gt;</ref><sp/>z(home,n);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=n;<sp/>i--;<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z[i]=z0[i];</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GECODE_ME_CHECK(z[i].gq(home,0));</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GECODE_ME_CHECK(z[i].lq(home,n-1));</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GECODE_ES_CHECK(<ref refid="classGecode_1_1Int_1_1Distinct_1_1Bnd" kindref="compound">Distinct::Bnd&lt;View&gt;::post</ref>(home,z));</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(home)<sp/><ref refid="classGecode_1_1Int_1_1Sorted_1_1Sorted" kindref="compound">Sorted&lt;View,Perm&gt;</ref>(home,x0,y0,z0);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5a01d6fb1ec70479e8e413d5ecfd63e303" kindref="member">ES_OK</ref>;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal">}}}</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight><highlight class="comment">//<sp/>STATISTICS:<sp/>int-prop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/usr/include/gecode/int/sorted/propagate.hpp"/>
  </compounddef>
</doxygen>
