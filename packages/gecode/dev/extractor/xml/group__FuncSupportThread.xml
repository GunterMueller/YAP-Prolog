<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="group__FuncSupportThread" kind="group">
    <compoundname>FuncSupportThread</compoundname>
    <title>Simple thread and synchronization support</title>
    <innerclass refid="classGecode_1_1Support_1_1Mutex" prot="public">Gecode::Support::Mutex</innerclass>
    <innerclass refid="classGecode_1_1Support_1_1Lock" prot="public">Gecode::Support::Lock</innerclass>
    <innerclass refid="classGecode_1_1Support_1_1Event" prot="public">Gecode::Support::Event</innerclass>
    <innerclass refid="classGecode_1_1Support_1_1Runnable" prot="public">Gecode::Support::Runnable</innerclass>
    <innerclass refid="classGecode_1_1Support_1_1Thread" prot="public">Gecode::Support::Thread</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This is very simplistic, just enough for parallel search engines. Do not mistake it for a full-fledged thread package.</para><para>If the platform supports threads, the macro GECODE_HAS_THREADS is defined. If threads are not supported, all classes are still available, but are noops with the exception of trying to create a new thread which will throw an exception. </para>    </detaileddescription>
  </compounddef>
</doxygen>
