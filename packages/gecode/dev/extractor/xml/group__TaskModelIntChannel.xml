<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="group__TaskModelIntChannel" kind="group">
    <compoundname>TaskModelIntChannel</compoundname>
    <title>Channel constraints</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__TaskModelIntChannel_1ga7d814ba66077284ee4fe2a6126ff116b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GECODE_INT_EXPORT void</type>
        <definition>GECODE_INT_EXPORT void Gecode::channel</definition>
        <argsstring>(Home home, const IntVarArgs &amp;x, const IntVarArgs &amp;y, IntConLevel icl=ICL_DEF)</argsstring>
        <name>channel</name>
        <param>
          <type>Home</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const IntVarArgs &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const IntVarArgs &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>IntConLevel</type>
          <declname>icl</declname>
          <defval>ICL_DEF</defval>
        </param>
        <briefdescription>
<para>Post propagator for <formula id="246">$ x_i = j\leftrightarrow y_j=i$</formula> for all <formula id="53">$0\leq i&lt;|x|$</formula>. </para>        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Supports domain consistency (<emphasis>icl</emphasis> = ICL_DOM) and value propagation (all other values for <emphasis>icl</emphasis>, default). </para></listitem>
<listitem><para>Throws an exception of type <ref refid="classGecode_1_1Int_1_1ArgumentSizeMismatch" kindref="compound">Int::ArgumentSizeMismatch</ref>, if <emphasis>x</emphasis> and <emphasis>y</emphasis> are of different size. </para></listitem>
<listitem><para>Throws an exception of type <ref refid="classGecode_1_1Int_1_1ArgumentSame" kindref="compound">Int::ArgumentSame</ref>, if <emphasis>x</emphasis> or <emphasis>y</emphasis> contain the same unassigned variable multiply. Note that a variable can occur in both <emphasis>x</emphasis> and <emphasis>y</emphasis>, but not more than once in either <emphasis>x</emphasis> or <emphasis>y</emphasis>. </para></listitem>
</itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int.hh" line="1516" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__TaskModelIntChannel_1ga89b5c52a588127462bb20572512b509e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GECODE_INT_EXPORT void</type>
        <definition>GECODE_INT_EXPORT void Gecode::channel</definition>
        <argsstring>(Home home, const IntVarArgs &amp;x, int xoff, const IntVarArgs &amp;y, int yoff, IntConLevel icl=ICL_DEF)</argsstring>
        <name>channel</name>
        <param>
          <type>Home</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const IntVarArgs &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>xoff</declname>
        </param>
        <param>
          <type>const IntVarArgs &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>yoff</declname>
        </param>
        <param>
          <type>IntConLevel</type>
          <declname>icl</declname>
          <defval>ICL_DEF</defval>
        </param>
        <briefdescription>
<para>Post propagator for <formula id="247">$ x_i - \mathit{xoff} = j\leftrightarrow y_j - \mathit{yoff} = i$</formula> for all <formula id="53">$0\leq i&lt;|x|$</formula>. </para>        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Supports domain consistency (<emphasis>icl</emphasis> = ICL_DOM) and value propagation (all other values for <emphasis>icl</emphasis>, default). </para></listitem>
<listitem><para>Throws an exception of type <ref refid="classGecode_1_1Int_1_1ArgumentSizeMismatch" kindref="compound">Int::ArgumentSizeMismatch</ref>, if <emphasis>x</emphasis> and <emphasis>y</emphasis> are of different size. </para></listitem>
<listitem><para>Throws an exception of type <ref refid="classGecode_1_1Int_1_1ArgumentSame" kindref="compound">Int::ArgumentSame</ref>, if <emphasis>x</emphasis> or <emphasis>y</emphasis> contain the same unassigned variable multiply. Note that a variable can occur in both <emphasis>x</emphasis> and <emphasis>y</emphasis>, but not more than once in either <emphasis>x</emphasis> or <emphasis>y</emphasis>. </para></listitem>
<listitem><para>Throws an exception of type <ref refid="classGecode_1_1Int_1_1OutOfLimits" kindref="compound">Int::OutOfLimits</ref>, if <emphasis>xoff</emphasis> or <emphasis>yoff</emphasis> are negative. </para></listitem>
</itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int.hh" line="1533" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__TaskModelIntChannel_1ga424587a8011aab2b91899df30c47be85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GECODE_INT_EXPORT void</type>
        <definition>GECODE_INT_EXPORT void Gecode::channel</definition>
        <argsstring>(Home home, BoolVar x0, IntVar x1, IntConLevel icl=ICL_DEF)</argsstring>
        <name>channel</name>
        <param>
          <type>Home</type>
          <declname>home</declname>
        </param>
        <param>
          <type>BoolVar</type>
          <declname>x0</declname>
        </param>
        <param>
          <type>IntVar</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>IntConLevel</type>
          <declname>icl</declname>
          <defval>ICL_DEF</defval>
        </param>
        <briefdescription>
<para>Post domain consistent propagator for channeling a Boolean and an integer variable <formula id="19">$ x_0 = x_1$</formula>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int.hh" line="1539" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__TaskModelIntChannel_1ga619a04a9d728a308d83f73dd81cf377c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>forceinline void</type>
        <definition>forceinline void Gecode::channel</definition>
        <argsstring>(Home home, IntVar x0, BoolVar x1, IntConLevel icl=ICL_DEF)</argsstring>
        <name>channel</name>
        <param>
          <type>Home</type>
          <declname>home</declname>
        </param>
        <param>
          <type>IntVar</type>
          <declname>x0</declname>
        </param>
        <param>
          <type>BoolVar</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>IntConLevel</type>
          <declname>icl</declname>
          <defval>ICL_DEF</defval>
        </param>
        <briefdescription>
<para>Post domain consistent propagator for channeling an integer and a Boolean variable <formula id="19">$ x_0 = x_1$</formula>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int.hh" line="1543" column="1" bodyfile="/usr/include/gecode/int.hh" bodystart="1543" bodyend="1546"/>
      </memberdef>
      <memberdef kind="function" id="group__TaskModelIntChannel_1ga9517534eac5e8c615b64f2f1964fc470" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GECODE_INT_EXPORT void</type>
        <definition>GECODE_INT_EXPORT void Gecode::channel</definition>
        <argsstring>(Home home, const BoolVarArgs &amp;x, IntVar y, int o=0, IntConLevel icl=ICL_DEF)</argsstring>
        <name>channel</name>
        <param>
          <type>Home</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const BoolVarArgs &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>IntVar</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>IntConLevel</type>
          <declname>icl</declname>
          <defval>ICL_DEF</defval>
        </param>
        <briefdescription>
<para>Post domain consistent propagator for channeling Boolean and integer variables <formula id="112">$ x_i = 1\leftrightarrow y=i+o$</formula>. </para>        </briefdescription>
        <detaileddescription>
<para>Throws an exception of type <ref refid="classGecode_1_1Int_1_1ArgumentSame" kindref="compound">Int::ArgumentSame</ref>, if <emphasis>x</emphasis> contains the same unassigned variable multiply. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int.hh" line="1553" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
