<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classGecode_1_1Int_1_1BinPacking_1_1Pack" kind="class" prot="public">
    <compoundname>Gecode::Int::BinPacking::Pack</compoundname>
    <basecompoundref refid="classGecode_1_1Propagator" prot="public" virt="non-virtual">Gecode::Propagator</basecompoundref>
    <includes refid="bin-packing_8hh" local="no">bin-packing.hh</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classGecode_1_1Int_1_1BinPacking_1_1Pack_1a0de5f6b61b7baa2e820db67bde2a3bba" prot="protected" static="no" mutable="no">
        <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; <ref refid="classGecode_1_1Int_1_1OffsetView" kindref="compound">OffsetView</ref> &gt;</type>
        <definition>ViewArray&lt;OffsetView&gt; Gecode::Int::BinPacking::Pack::l</definition>
        <argsstring></argsstring>
        <name>l</name>
        <briefdescription>
<para>Views for load of bins. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/bin-packing.hh" line="144" column="1" bodyfile="/usr/include/gecode/int/bin-packing.hh" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Int_1_1BinPacking_1_1Pack_1a3657a1b5941547308b3b699ff2ce575e" prot="protected" static="no" mutable="no">
        <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; <ref refid="classGecode_1_1Int_1_1BinPacking_1_1Item" kindref="compound">Item</ref> &gt;</type>
        <definition>ViewArray&lt;Item&gt; Gecode::Int::BinPacking::Pack::bs</definition>
        <argsstring></argsstring>
        <name>bs</name>
        <briefdescription>
<para>Items with bin and size. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/bin-packing.hh" line="146" column="1" bodyfile="/usr/include/gecode/int/bin-packing.hh" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Int_1_1BinPacking_1_1Pack_1a41399dd1e47362f301e19c4e15952477" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int Gecode::Int::BinPacking::Pack::t</definition>
        <argsstring></argsstring>
        <name>t</name>
        <briefdescription>
<para>Total size of all items. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/bin-packing.hh" line="148" column="1" bodyfile="/usr/include/gecode/int/bin-packing.hh" bodystart="148" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classGecode_1_1Int_1_1BinPacking_1_1Pack_1afa73f4bc4e694b492854529a0cfd3cbc" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Int::BinPacking::Pack::Pack</definition>
        <argsstring>(Home home, ViewArray&lt; OffsetView &gt; &amp;l, ViewArray&lt; Item &gt; &amp;bs)</argsstring>
        <name>Pack</name>
        <param>
          <type><ref refid="classGecode_1_1Home" kindref="compound">Home</ref></type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; <ref refid="classGecode_1_1Int_1_1OffsetView" kindref="compound">OffsetView</ref> &gt; &amp;</type>
          <declname>l</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; <ref refid="classGecode_1_1Int_1_1BinPacking_1_1Item" kindref="compound">Item</ref> &gt; &amp;</type>
          <declname>bs</declname>
        </param>
        <briefdescription>
<para>Constructor for posting. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/bin-packing.hh" line="150" column="1" bodyfile="/usr/include/gecode/int/bin-packing/propagate.hpp" bodystart="155" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1BinPacking_1_1Pack_1af5a34e099987028573f9a4cba53ec9eb" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Int::BinPacking::Pack::Pack</definition>
        <argsstring>(Space &amp;home, bool share, Pack &amp;p)</argsstring>
        <name>Pack</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>share</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1BinPacking_1_1Pack" kindref="compound">Pack</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Constructor for cloning <emphasis>p</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/bin-packing.hh" line="152" column="1" bodyfile="/usr/include/gecode/int/bin-packing/propagate.hpp" bodystart="164" bodyend="168"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classGecode_1_1Int_1_1BinPacking_1_1Pack_1ae2a2e7bdada510dca8d474d57a360782" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GECODE_INT_EXPORT <ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>static GECODE_INT_EXPORT ExecStatus Gecode::Int::BinPacking::Pack::post</definition>
        <argsstring>(Home home, ViewArray&lt; OffsetView &gt; &amp;l, ViewArray&lt; Item &gt; &amp;bs)</argsstring>
        <name>post</name>
        <param>
          <type><ref refid="classGecode_1_1Home" kindref="compound">Home</ref></type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; <ref refid="classGecode_1_1Int_1_1OffsetView" kindref="compound">OffsetView</ref> &gt; &amp;</type>
          <declname>l</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; <ref refid="classGecode_1_1Int_1_1BinPacking_1_1Item" kindref="compound">Item</ref> &gt; &amp;</type>
          <declname>bs</declname>
        </param>
        <briefdescription>
<para>Post propagator for loads <emphasis>l</emphasis> and items <emphasis>bs</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/bin-packing.hh" line="156" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classGecode_1_1Int_1_1BinPacking_1_1Pack_1a99aa5ee471923da82859eb4e45d30a25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classGecode_1_1Int_1_1BinPacking_1_1SizeSet" kindref="compound">SizeSet</ref></type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool Gecode::Int::BinPacking::Pack::nosum</definition>
        <argsstring>(const SizeSet &amp;s, int a, int b, int &amp;ap, int &amp;bp)</argsstring>
        <name>nosum</name>
        <param>
          <type>const <ref refid="classGecode_1_1Int_1_1BinPacking_1_1SizeSet" kindref="compound">SizeSet</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>ap</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>bp</declname>
        </param>
        <briefdescription>
<para>Detect non-existence of sums in <emphasis>a</emphasis> .. <emphasis>b</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/bin-packing.hh" line="160" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1BinPacking_1_1Pack_1a2855a618baa2023976830e47da204aa4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classGecode_1_1Int_1_1BinPacking_1_1SizeSet" kindref="compound">SizeSet</ref></type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool Gecode::Int::BinPacking::Pack::nosum</definition>
        <argsstring>(const SizeSet &amp;s, int a, int b)</argsstring>
        <name>nosum</name>
        <param>
          <type>const <ref refid="classGecode_1_1Int_1_1BinPacking_1_1SizeSet" kindref="compound">SizeSet</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Detect non-existence of sums in <emphasis>a</emphasis> .. <emphasis>b</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/bin-packing.hh" line="163" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1BinPacking_1_1Pack_1aa6e1499dfabfd36384644a5762d6fbf0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>GECODE_INT_EXPORT <ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>virtual GECODE_INT_EXPORT ExecStatus Gecode::Int::BinPacking::Pack::propagate</definition>
        <argsstring>(Space &amp;home, const ModEventDelta &amp;med)</argsstring>
        <name>propagate</name>
        <reimplements refid="classGecode_1_1Propagator_1ad2dc98c1345222892592339948c6cde1">propagate</reimplements>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceGecode_1a129e41c1d037528010d7b6706495a560" kindref="member">ModEventDelta</ref> &amp;</type>
          <declname>med</declname>
        </param>
        <briefdescription>
<para>Perform propagation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/bin-packing.hh" line="166" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1BinPacking_1_1Pack_1a97c1a58a189f604745b54094df6df58b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>GECODE_INT_EXPORT <ref refid="classGecode_1_1PropCost" kindref="compound">PropCost</ref></type>
        <definition>virtual GECODE_INT_EXPORT PropCost Gecode::Int::BinPacking::Pack::cost</definition>
        <argsstring>(const Space &amp;home, const ModEventDelta &amp;med) const </argsstring>
        <name>cost</name>
        <reimplements refid="classGecode_1_1Propagator_1a3de049f07a191fb956c9dbd4153efe75">cost</reimplements>
        <param>
          <type>const <ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceGecode_1a129e41c1d037528010d7b6706495a560" kindref="member">ModEventDelta</ref> &amp;</type>
          <declname>med</declname>
        </param>
        <briefdescription>
<para>Cost function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/bin-packing.hh" line="169" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1BinPacking_1_1Pack_1ab107911aa540cd174dadb59a30f7401c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>GECODE_INT_EXPORT <ref refid="classGecode_1_1Actor" kindref="compound">Actor</ref> *</type>
        <definition>virtual GECODE_INT_EXPORT Actor* Gecode::Int::BinPacking::Pack::copy</definition>
        <argsstring>(Space &amp;home, bool share)</argsstring>
        <name>copy</name>
        <reimplements refid="classGecode_1_1Actor_1a67b240e2810720846c3632c94cc9c99d">copy</reimplements>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>share</declname>
        </param>
        <briefdescription>
<para>Copy propagator during cloning. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/bin-packing.hh" line="172" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1BinPacking_1_1Pack_1a42840a5a9bf0d1f21fb76f17e803c397" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>size_t</type>
        <definition>forceinline size_t Gecode::Int::BinPacking::Pack::dispose</definition>
        <argsstring>(Space &amp;home)</argsstring>
        <name>dispose</name>
        <reimplements refid="classGecode_1_1Actor_1a143253b3eceda40f36834e38c8ac05d9">dispose</reimplements>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <briefdescription>
<para>Destructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/bin-packing.hh" line="174" column="1" bodyfile="/usr/include/gecode/int/bin-packing/propagate.hpp" bodystart="171" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1BinPacking_1_1Pack_1af9c4afa88c4d361b8fb312f1ef38435e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classGecode_1_1Int_1_1BinPacking_1_1SizeSet" kindref="compound">SizeSet</ref></type>
          </param>
        </templateparamlist>
        <type>forceinline bool</type>
        <definition>forceinline bool Gecode::Int::BinPacking::Pack::nosum</definition>
        <argsstring>(const SizeSet &amp;s, int a, int b, int &amp;ap, int &amp;bp)</argsstring>
        <name>nosum</name>
        <param>
          <type>const <ref refid="classGecode_1_1Int_1_1BinPacking_1_1SizeSet" kindref="compound">SizeSet</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>ap</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>bp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/bin-packing/propagate.hpp" line="180" column="1" bodyfile="/usr/include/gecode/int/bin-packing/propagate.hpp" bodystart="180" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1BinPacking_1_1Pack_1a7ae42164b9a6f90f3c75f4f49836aefc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classGecode_1_1Int_1_1BinPacking_1_1SizeSet" kindref="compound">SizeSet</ref></type>
          </param>
        </templateparamlist>
        <type>forceinline bool</type>
        <definition>forceinline bool Gecode::Int::BinPacking::Pack::nosum</definition>
        <argsstring>(const SizeSet &amp;s, int a, int b)</argsstring>
        <name>nosum</name>
        <param>
          <type>const <ref refid="classGecode_1_1Int_1_1BinPacking_1_1SizeSet" kindref="compound">SizeSet</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/bin-packing/propagate.hpp" line="211" column="1" bodyfile="/usr/include/gecode/int/bin-packing/propagate.hpp" bodystart="211" bodyend="214"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Bin-packing propagator. </para>    </briefdescription>
    <detaileddescription>
<para>The algorithm is taken from: Paul Shaw. A Constraint for Bin Packing. CP 2004.</para><para>Requires<programlisting><codeline><highlight class="preprocessor">#include<sp/>&lt;gecode/int/bin-packing.hh&gt;</highlight><highlight class="normal"><sp/></highlight></codeline>
</programlisting> </para>    </detaileddescription>
    <inheritancegraph>
      <node id="5055">
        <label>Gecode::Propagator</label>
        <link refid="classGecode_1_1Propagator"/>
        <childnode refid="5056" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5054">
        <label>Gecode::Int::BinPacking::Pack</label>
        <link refid="classGecode_1_1Int_1_1BinPacking_1_1Pack"/>
        <childnode refid="5055" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5056">
        <label>Gecode::Actor</label>
        <link refid="classGecode_1_1Actor"/>
        <childnode refid="5057" relation="private-inheritance">
        </childnode>
      </node>
      <node id="5057">
        <label>Gecode::ActorLink</label>
        <link refid="classGecode_1_1ActorLink"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5063">
        <label>Gecode::ViewArray&lt; Gecode::Int::OffsetView &gt;</label>
        <link refid="classGecode_1_1ViewArray"/>
      </node>
      <node id="5062">
        <label>Gecode::ViewArray&lt; Gecode::Int::BinPacking::Item &gt;</label>
        <link refid="classGecode_1_1ViewArray"/>
      </node>
      <node id="5059">
        <label>Gecode::Propagator</label>
        <link refid="classGecode_1_1Propagator"/>
        <childnode refid="5060" relation="public-inheritance">
        </childnode>
        <childnode refid="5061" relation="usage">
          <edgelabel>advisors</edgelabel>
        </childnode>
      </node>
      <node id="5058">
        <label>Gecode::Int::BinPacking::Pack</label>
        <link refid="classGecode_1_1Int_1_1BinPacking_1_1Pack"/>
        <childnode refid="5059" relation="public-inheritance">
        </childnode>
        <childnode refid="5062" relation="usage">
          <edgelabel>bs</edgelabel>
        </childnode>
        <childnode refid="5063" relation="usage">
          <edgelabel>l</edgelabel>
        </childnode>
      </node>
      <node id="5060">
        <label>Gecode::Actor</label>
        <link refid="classGecode_1_1Actor"/>
        <childnode refid="5061" relation="private-inheritance">
        </childnode>
      </node>
      <node id="5061">
        <label>Gecode::ActorLink</label>
        <link refid="classGecode_1_1ActorLink"/>
      </node>
    </collaborationgraph>
    <location file="/usr/include/gecode/int/bin-packing.hh" line="141" column="1" bodyfile="/usr/include/gecode/int/bin-packing.hh" bodystart="141" bodyend="175"/>
    <listofallmembers>
      <member refid="classGecode_1_1Propagator_1a55629f061a0fd8ecb2a4c41aa1568e28" prot="public" virt="virtual"><scope>Gecode::Int::BinPacking::Pack</scope><name>advise</name></member>
      <member refid="classGecode_1_1Propagator_1afee33d8aed2bc9debee126f17b5015cf" prot="public" virt="non-virtual"><scope>Gecode::Int::BinPacking::Pack</scope><name>advisors</name></member>
      <member refid="classGecode_1_1Propagator_1a593de773d2204f47ea365a99df2f75d0" prot="public" virt="non-virtual"><scope>Gecode::Int::BinPacking::Pack</scope><name>afc</name></member>
      <member refid="classGecode_1_1Int_1_1BinPacking_1_1Pack_1a3657a1b5941547308b3b699ff2ce575e" prot="protected" virt="non-virtual"><scope>Gecode::Int::BinPacking::Pack</scope><name>bs</name></member>
      <member refid="classGecode_1_1ActorLink_1a8427f41a27a72b52ceb52d0fdad21063" prot="public" virt="non-virtual" ambiguityscope="Gecode::ActorLink::"><scope>Gecode::Int::BinPacking::Pack</scope><name>cast</name></member>
      <member refid="classGecode_1_1ActorLink_1a464526456db41981f82a1193a8b4e569" prot="public" virt="non-virtual" ambiguityscope="Gecode::ActorLink::"><scope>Gecode::Int::BinPacking::Pack</scope><name>cast</name></member>
      <member refid="classGecode_1_1Int_1_1BinPacking_1_1Pack_1ab107911aa540cd174dadb59a30f7401c" prot="public" virt="virtual"><scope>Gecode::Int::BinPacking::Pack</scope><name>copy</name></member>
      <member refid="classGecode_1_1Int_1_1BinPacking_1_1Pack_1a97c1a58a189f604745b54094df6df58b" prot="public" virt="virtual"><scope>Gecode::Int::BinPacking::Pack</scope><name>cost</name></member>
      <member refid="classGecode_1_1Int_1_1BinPacking_1_1Pack_1a42840a5a9bf0d1f21fb76f17e803c397" prot="public" virt="virtual"><scope>Gecode::Int::BinPacking::Pack</scope><name>dispose</name></member>
      <member refid="classGecode_1_1Propagator_1a3b286c7aec9843b60a531b495015b5f7" prot="protected" virt="non-virtual"><scope>Gecode::Int::BinPacking::Pack</scope><name>fwd</name></member>
      <member refid="classGecode_1_1Int_1_1BinPacking_1_1Pack_1a0de5f6b61b7baa2e820db67bde2a3bba" prot="protected" virt="non-virtual"><scope>Gecode::Int::BinPacking::Pack</scope><name>l</name></member>
      <member refid="classGecode_1_1Propagator_1ae9dfa55e47e4ff8e0c8e4c2a6efdbfc0" prot="public" virt="non-virtual"><scope>Gecode::Int::BinPacking::Pack</scope><name>med</name></member>
      <member refid="classGecode_1_1Propagator_1a4905db55af49af8f38558bdbcf5fd4a2" prot="public" virt="non-virtual"><scope>Gecode::Int::BinPacking::Pack</scope><name>modeventdelta</name></member>
      <member refid="classGecode_1_1Int_1_1BinPacking_1_1Pack_1a99aa5ee471923da82859eb4e45d30a25" prot="public" virt="non-virtual"><scope>Gecode::Int::BinPacking::Pack</scope><name>nosum</name></member>
      <member refid="classGecode_1_1Int_1_1BinPacking_1_1Pack_1a2855a618baa2023976830e47da204aa4" prot="public" virt="non-virtual"><scope>Gecode::Int::BinPacking::Pack</scope><name>nosum</name></member>
      <member refid="classGecode_1_1Int_1_1BinPacking_1_1Pack_1af9c4afa88c4d361b8fb312f1ef38435e" prot="public" virt="non-virtual"><scope>Gecode::Int::BinPacking::Pack</scope><name>nosum</name></member>
      <member refid="classGecode_1_1Int_1_1BinPacking_1_1Pack_1a7ae42164b9a6f90f3c75f4f49836aefc" prot="public" virt="non-virtual"><scope>Gecode::Int::BinPacking::Pack</scope><name>nosum</name></member>
      <member refid="classGecode_1_1Actor_1a388f671145dcf906f81d22bde2dc0f3d" prot="public" virt="non-virtual"><scope>Gecode::Int::BinPacking::Pack</scope><name>operator delete</name></member>
      <member refid="classGecode_1_1Actor_1ac28b9601b530076a1bda75834487f898" prot="public" virt="non-virtual"><scope>Gecode::Int::BinPacking::Pack</scope><name>operator new</name></member>
      <member refid="classGecode_1_1Int_1_1BinPacking_1_1Pack_1afa73f4bc4e694b492854529a0cfd3cbc" prot="protected" virt="non-virtual"><scope>Gecode::Int::BinPacking::Pack</scope><name>Pack</name></member>
      <member refid="classGecode_1_1Int_1_1BinPacking_1_1Pack_1af5a34e099987028573f9a4cba53ec9eb" prot="protected" virt="non-virtual"><scope>Gecode::Int::BinPacking::Pack</scope><name>Pack</name></member>
      <member refid="classGecode_1_1Int_1_1BinPacking_1_1Pack_1ae2a2e7bdada510dca8d474d57a360782" prot="public" virt="non-virtual"><scope>Gecode::Int::BinPacking::Pack</scope><name>post</name></member>
      <member refid="classGecode_1_1Int_1_1BinPacking_1_1Pack_1aa6e1499dfabfd36384644a5762d6fbf0" prot="public" virt="virtual"><scope>Gecode::Int::BinPacking::Pack</scope><name>propagate</name></member>
      <member refid="classGecode_1_1Propagator_1a891f3e84cde2e8e60f8ad9340ad74b05" prot="protected" virt="non-virtual"><scope>Gecode::Int::BinPacking::Pack</scope><name>Propagator</name></member>
      <member refid="classGecode_1_1Propagator_1afeaeed8dae67de4313858bd82fdae5d0" prot="protected" virt="non-virtual"><scope>Gecode::Int::BinPacking::Pack</scope><name>Propagator</name></member>
      <member refid="classGecode_1_1Propagator_1a1781b5b0df38c39dddca4b44c3a00530" prot="public" virt="non-virtual"><scope>Gecode::Int::BinPacking::Pack</scope><name>size</name></member>
      <member refid="classGecode_1_1Int_1_1BinPacking_1_1Pack_1a41399dd1e47362f301e19c4e15952477" prot="protected" virt="non-virtual"><scope>Gecode::Int::BinPacking::Pack</scope><name>t</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
