<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph" kind="class" prot="public">
    <compoundname>Gecode::Int::Extensional::LayeredGraph</compoundname>
    <basecompoundref refid="classGecode_1_1Propagator" prot="public" virt="non-virtual">Gecode::Propagator</basecompoundref>
    <includes refid="extensional_8hh" local="no">extensional.hh</includes>
    <innerclass refid="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1_1Edge" prot="protected">Gecode::Int::Extensional::LayeredGraph::Edge</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1_1Index" prot="protected">Gecode::Int::Extensional::LayeredGraph::Index</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1_1IndexRange" prot="protected">Gecode::Int::Extensional::LayeredGraph::IndexRange</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1_1Layer" prot="protected">Gecode::Int::Extensional::LayeredGraph::Layer</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1_1LayerValues" prot="protected">Gecode::Int::Extensional::LayeredGraph::LayerValues</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1_1State" prot="protected">Gecode::Int::Extensional::LayeredGraph::State</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1_1Support" prot="protected">Gecode::Int::Extensional::LayeredGraph::Support</innerclass>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>View</declname>
        <defname>View</defname>
      </param>
      <param>
        <type>class</type>
        <declname>Val</declname>
        <defname>Val</defname>
      </param>
      <param>
        <type>class</type>
        <declname>Degree</declname>
        <defname>Degree</defname>
      </param>
      <param>
        <type>class</type>
        <declname>StateIdx</declname>
        <defname>StateIdx</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-type">
      <memberdef kind="typedef" id="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1a2ee95e8c4b2c30c85b3388af6da97289" prot="protected" static="no">
        <type><ref refid="classGecode_1_1Support_1_1IntTypeTraits" kindref="compound">Gecode::Support::IntTypeTraits</ref>&lt; Val &gt;::utype</type>
        <definition>typedef Gecode::Support::IntTypeTraits&lt;Val&gt;::utype Gecode::Int::Extensional::LayeredGraph&lt; View, Val, Degree, StateIdx &gt;::ValSize</definition>
        <argsstring></argsstring>
        <name>ValSize</name>
        <briefdescription>
<para>Type for support size. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/extensional.hh" line="93" column="1" bodyfile="/usr/include/gecode/int/extensional.hh" bodystart="93" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1a99385e34b8df18df5d1463ab77bc9cbf" prot="protected" static="no" mutable="no">
        <type><ref refid="classGecode_1_1Council" kindref="compound">Council</ref>&lt; <ref refid="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1_1Index" kindref="compound">Index</ref> &gt;</type>
        <definition>Council&lt;Index&gt; Gecode::Int::Extensional::LayeredGraph&lt; View, Val, Degree, StateIdx &gt;::c</definition>
        <argsstring></argsstring>
        <name>c</name>
        <briefdescription>
<para>The advisor council. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/extensional.hh" line="156" column="1" bodyfile="/usr/include/gecode/int/extensional.hh" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1a4a920d3ca602e6df07a109fd92231de1" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int Gecode::Int::Extensional::LayeredGraph&lt; View, Val, Degree, StateIdx &gt;::n</definition>
        <argsstring></argsstring>
        <name>n</name>
        <briefdescription>
<para>Number of layers (and views) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/extensional.hh" line="158" column="1" bodyfile="/usr/include/gecode/int/extensional.hh" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1af69c92c1bfce788d9670a3484ac0f212" prot="protected" static="no" mutable="no">
        <type><ref refid="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1_1Layer" kindref="compound">Layer</ref> *</type>
        <definition>Layer* Gecode::Int::Extensional::LayeredGraph&lt; View, Val, Degree, StateIdx &gt;::layers</definition>
        <argsstring></argsstring>
        <name>layers</name>
        <briefdescription>
<para>The layers of the graph. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/extensional.hh" line="160" column="1" bodyfile="/usr/include/gecode/int/extensional.hh" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1a37aaa0c60346da4a5db2d088abd03f17" prot="protected" static="no" mutable="no">
        <type>StateIdx</type>
        <definition>StateIdx Gecode::Int::Extensional::LayeredGraph&lt; View, Val, Degree, StateIdx &gt;::max_states</definition>
        <argsstring></argsstring>
        <name>max_states</name>
        <briefdescription>
<para>Maximal number of states per layer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/extensional.hh" line="162" column="1" bodyfile="/usr/include/gecode/int/extensional.hh" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1a3cfed3cfc8f09c20c6d80d58ef560cb7" prot="protected" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int Gecode::Int::Extensional::LayeredGraph&lt; View, Val, Degree, StateIdx &gt;::n_states</definition>
        <argsstring></argsstring>
        <name>n_states</name>
        <briefdescription>
<para>Total number of states. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/extensional.hh" line="164" column="1" bodyfile="/usr/include/gecode/int/extensional.hh" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1a10bd62c709cd80ff54f978ef7293d023" prot="protected" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int Gecode::Int::Extensional::LayeredGraph&lt; View, Val, Degree, StateIdx &gt;::n_edges</definition>
        <argsstring></argsstring>
        <name>n_edges</name>
        <briefdescription>
<para>Total number of edges. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/extensional.hh" line="166" column="1" bodyfile="/usr/include/gecode/int/extensional.hh" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1a8c6f798cc3b0358c1b7d46bf09f95e2d" prot="protected" static="no" mutable="no">
        <type><ref refid="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1_1IndexRange" kindref="compound">IndexRange</ref></type>
        <definition>IndexRange Gecode::Int::Extensional::LayeredGraph&lt; View, Val, Degree, StateIdx &gt;::i_ch</definition>
        <argsstring></argsstring>
        <name>i_ch</name>
        <briefdescription>
<para><ref refid="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1_1Index" kindref="compound">Index</ref> range with in-degree modifications. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/extensional.hh" line="168" column="1" bodyfile="/usr/include/gecode/int/extensional.hh" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1a5e0e22d061e66e532a090de300171681" prot="protected" static="no" mutable="no">
        <type><ref refid="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1_1IndexRange" kindref="compound">IndexRange</ref></type>
        <definition>IndexRange Gecode::Int::Extensional::LayeredGraph&lt; View, Val, Degree, StateIdx &gt;::o_ch</definition>
        <argsstring></argsstring>
        <name>o_ch</name>
        <briefdescription>
<para><ref refid="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1_1Index" kindref="compound">Index</ref> range with out-degree modifications. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/extensional.hh" line="170" column="1" bodyfile="/usr/include/gecode/int/extensional.hh" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1a5f48d31b72f68923fc5d7accb64b12e6" prot="protected" static="no" mutable="no">
        <type><ref refid="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1_1IndexRange" kindref="compound">IndexRange</ref></type>
        <definition>IndexRange Gecode::Int::Extensional::LayeredGraph&lt; View, Val, Degree, StateIdx &gt;::a_ch</definition>
        <argsstring></argsstring>
        <name>a_ch</name>
        <briefdescription>
<para><ref refid="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1_1Index" kindref="compound">Index</ref> range for any change (for compression) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/extensional.hh" line="172" column="1" bodyfile="/usr/include/gecode/int/extensional.hh" bodystart="172" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1a14ff9d9d4eeff3e7765ca983d2053313" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1_1State" kindref="compound">State</ref> &amp;</type>
        <definition>forceinline LayeredGraph&lt; View, Val, Degree, StateIdx &gt;::State &amp; Gecode::Int::Extensional::LayeredGraph&lt; View, Val, Degree, StateIdx &gt;::i_state</definition>
        <argsstring>(int i, StateIdx is)</argsstring>
        <name>i_state</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>StateIdx</type>
          <declname>is</declname>
        </param>
        <briefdescription>
<para>Return in state for layer <emphasis>i</emphasis> and state index <emphasis>is</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/extensional.hh" line="174" column="1" bodyfile="/usr/include/gecode/int/extensional/layered-graph.hpp" bodystart="89" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1a6053e1a0e2e384a887d844bdc8028d41" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1_1State" kindref="compound">State</ref> &amp;</type>
        <definition>State&amp; Gecode::Int::Extensional::LayeredGraph&lt; View, Val, Degree, StateIdx &gt;::i_state</definition>
        <argsstring>(int i, const Edge &amp;e)</argsstring>
        <name>i_state</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1_1Edge" kindref="compound">Edge</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Return in state for layer <emphasis>i</emphasis> and in state of edge <emphasis>e</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/extensional.hh" line="176" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1a6e1e6096577738e5b2a123fe0dcff375" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::Int::Extensional::LayeredGraph&lt; View, Val, Degree, StateIdx &gt;::i_dec</definition>
        <argsstring>(int i, const Edge &amp;e)</argsstring>
        <name>i_dec</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1_1Edge" kindref="compound">Edge</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Decrement out degree for in state of edge <emphasis>e</emphasis> for layer <emphasis>i</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/extensional.hh" line="178" column="1" bodyfile="/usr/include/gecode/int/extensional/layered-graph.hpp" bodystart="101" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1ae89d01dd329d06bca48382fc068eaf9c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1_1State" kindref="compound">State</ref> &amp;</type>
        <definition>forceinline LayeredGraph&lt; View, Val, Degree, StateIdx &gt;::State &amp; Gecode::Int::Extensional::LayeredGraph&lt; View, Val, Degree, StateIdx &gt;::o_state</definition>
        <argsstring>(int i, StateIdx os)</argsstring>
        <name>o_state</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>StateIdx</type>
          <declname>os</declname>
        </param>
        <briefdescription>
<para>Return out state for layer <emphasis>i</emphasis> and state index <emphasis>os</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/extensional.hh" line="180" column="1" bodyfile="/usr/include/gecode/int/extensional/layered-graph.hpp" bodystart="106" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1afb4fe7045ddede614912430647502456" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1_1State" kindref="compound">State</ref> &amp;</type>
        <definition>State&amp; Gecode::Int::Extensional::LayeredGraph&lt; View, Val, Degree, StateIdx &gt;::o_state</definition>
        <argsstring>(int i, const Edge &amp;e)</argsstring>
        <name>o_state</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1_1Edge" kindref="compound">Edge</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Return state for layer <emphasis>i</emphasis> and out state of edge <emphasis>e</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/extensional.hh" line="182" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1a19aed150ceb222c958f998088b573788" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::Int::Extensional::LayeredGraph&lt; View, Val, Degree, StateIdx &gt;::o_dec</definition>
        <argsstring>(int i, const Edge &amp;e)</argsstring>
        <name>o_dec</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1_1Edge" kindref="compound">Edge</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Decrement in degree for out state of edge <emphasis>e</emphasis> for layer <emphasis>i</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/extensional.hh" line="184" column="1" bodyfile="/usr/include/gecode/int/extensional/layered-graph.hpp" bodystart="118" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1ab3edc0dfd7ca5fe93c6a8742a23273bf" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Int::Extensional::LayeredGraph&lt; View, Val, Degree, StateIdx &gt;::audit</definition>
        <argsstring>(void)</argsstring>
        <name>audit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Perform consistency check on data structures. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/extensional.hh" line="186" column="1" bodyfile="/usr/include/gecode/int/extensional/layered-graph.hpp" bodystart="247" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1a09450fd1e2bdad4852b63975b3b58086" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classGecode_1_1Var" kindref="compound">Var</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>ExecStatus Gecode::Int::Extensional::LayeredGraph&lt; View, Val, Degree, StateIdx &gt;::initialize</definition>
        <argsstring>(Space &amp;home, const VarArgArray&lt; Var &gt; &amp;x, const DFA &amp;dfa)</argsstring>
        <name>initialize</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1VarArgArray" kindref="compound">VarArgArray</ref>&lt; <ref refid="classGecode_1_1Var" kindref="compound">Var</ref> &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1DFA" kindref="compound">DFA</ref> &amp;</type>
          <declname>dfa</declname>
        </param>
        <briefdescription>
<para>Initialize layered graph. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/extensional.hh" line="189" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1aecc6fa1eaaf4eccfd826ffeddd0f8c6d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Int::Extensional::LayeredGraph&lt; View, Val, Degree, StateIdx &gt;::LayeredGraph</definition>
        <argsstring>(Space &amp;home, bool share, LayeredGraph&lt; View, Val, Degree, StateIdx &gt; &amp;p)</argsstring>
        <name>LayeredGraph</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>share</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph" kindref="compound">LayeredGraph</ref>&lt; View, Val, Degree, StateIdx &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Constructor for cloning <emphasis>p</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/extensional.hh" line="192" column="1" bodyfile="/usr/include/gecode/int/extensional/layered-graph.hpp" bodystart="704" bodyend="734"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1a62779e9577357ff6cf0aa11009474821" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classGecode_1_1Var" kindref="compound">Var</ref></type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>Gecode::Int::Extensional::LayeredGraph&lt; View, Val, Degree, StateIdx &gt;::LayeredGraph</definition>
        <argsstring>(Home home, const VarArgArray&lt; Var &gt; &amp;x, const DFA &amp;dfa)</argsstring>
        <name>LayeredGraph</name>
        <param>
          <type><ref refid="classGecode_1_1Home" kindref="compound">Home</ref></type>
          <declname>home</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1VarArgArray" kindref="compound">VarArgArray</ref>&lt; <ref refid="classGecode_1_1Var" kindref="compound">Var</ref> &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1DFA" kindref="compound">DFA</ref> &amp;</type>
          <declname>dfa</declname>
        </param>
        <briefdescription>
<para>Constructor for posting. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/extensional.hh" line="197" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1abf11ab9af04a56f5ec8192ac82b5edaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classGecode_1_1Actor" kindref="compound">Actor</ref> *</type>
        <definition>Actor * Gecode::Int::Extensional::LayeredGraph&lt; View, Val, Degree, StateIdx &gt;::copy</definition>
        <argsstring>(Space &amp;home, bool share)</argsstring>
        <name>copy</name>
        <reimplements refid="classGecode_1_1Actor_1a67b240e2810720846c3632c94cc9c99d">copy</reimplements>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>share</declname>
        </param>
        <briefdescription>
<para>Copy propagator during cloning. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/extensional.hh" line="200" column="1" bodyfile="/usr/include/gecode/int/extensional/layered-graph.hpp" bodystart="745" bodyend="847"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1a82cf4d5d1a9a27b26838e9e7da86bc86" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classGecode_1_1PropCost" kindref="compound">PropCost</ref></type>
        <definition>PropCost Gecode::Int::Extensional::LayeredGraph&lt; View, Val, Degree, StateIdx &gt;::cost</definition>
        <argsstring>(const Space &amp;home, const ModEventDelta &amp;med) const </argsstring>
        <name>cost</name>
        <reimplements refid="classGecode_1_1Propagator_1a3de049f07a191fb956c9dbd4153efe75">cost</reimplements>
        <param>
          <type>const <ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceGecode_1a129e41c1d037528010d7b6706495a560" kindref="member">ModEventDelta</ref> &amp;</type>
          <declname>med</declname>
        </param>
        <briefdescription>
<para>Cost function (defined as high linear) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/extensional.hh" line="202" column="1" bodyfile="/usr/include/gecode/int/extensional/layered-graph.hpp" bodystart="738" bodyend="741"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1a10314b5ab6d417e5fd241990b363f769" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>ExecStatus Gecode::Int::Extensional::LayeredGraph&lt; View, Val, Degree, StateIdx &gt;::advise</definition>
        <argsstring>(Space &amp;home, Advisor &amp;a, const Delta &amp;d)</argsstring>
        <name>advise</name>
        <reimplements refid="classGecode_1_1Propagator_1a55629f061a0fd8ecb2a4c41aa1568e28">advise</reimplements>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Advisor" kindref="compound">Advisor</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1Delta" kindref="compound">Delta</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Give advice to propagator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/extensional.hh" line="204" column="1" bodyfile="/usr/include/gecode/int/extensional/layered-graph.hpp" bodystart="442" bodyend="584"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1a27d298d2f8f3ef2802e23abc01fabca7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>ExecStatus Gecode::Int::Extensional::LayeredGraph&lt; View, Val, Degree, StateIdx &gt;::propagate</definition>
        <argsstring>(Space &amp;home, const ModEventDelta &amp;med)</argsstring>
        <name>propagate</name>
        <reimplements refid="classGecode_1_1Propagator_1ad2dc98c1345222892592339948c6cde1">propagate</reimplements>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceGecode_1a129e41c1d037528010d7b6706495a560" kindref="member">ModEventDelta</ref> &amp;</type>
          <declname>med</declname>
        </param>
        <briefdescription>
<para>Perform propagation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/extensional.hh" line="206" column="1" bodyfile="/usr/include/gecode/int/extensional/layered-graph.hpp" bodystart="596" bodyend="675"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1aa873cd0a025dad8e397b1363da2f2a94" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>size_t</type>
        <definition>forceinline size_t Gecode::Int::Extensional::LayeredGraph&lt; View, Val, Degree, StateIdx &gt;::dispose</definition>
        <argsstring>(Space &amp;home)</argsstring>
        <name>dispose</name>
        <reimplements refid="classGecode_1_1Actor_1a143253b3eceda40f36834e38c8ac05d9">dispose</reimplements>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <briefdescription>
<para>Delete propagator and return its size. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/extensional.hh" line="208" column="1" bodyfile="/usr/include/gecode/int/extensional/layered-graph.hpp" bodystart="588" bodyend="592"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1ae41d48378898ffa040f2031da74287b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classGecode_1_1Var" kindref="compound">Var</ref></type>
          </param>
        </templateparamlist>
        <type>forceinline</type>
        <definition>forceinline Gecode::Int::Extensional::LayeredGraph&lt; View, Val, Degree, StateIdx &gt;::LayeredGraph</definition>
        <argsstring>(Home home, const VarArgArray&lt; Var &gt; &amp;x, const DFA &amp;dfa)</argsstring>
        <name>LayeredGraph</name>
        <param>
          <type><ref refid="classGecode_1_1Home" kindref="compound">Home</ref></type>
          <declname>home</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1VarArgArray" kindref="compound">VarArgArray</ref>&lt; <ref refid="classGecode_1_1Var" kindref="compound">Var</ref> &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1DFA" kindref="compound">DFA</ref> &amp;</type>
          <declname>dfa</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/extensional/layered-graph.hpp" line="237" column="1" bodyfile="/usr/include/gecode/int/extensional/layered-graph.hpp" bodystart="237" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1aae123181656fcc289d31343ccf972643" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classGecode_1_1Var" kindref="compound">Var</ref></type>
          </param>
        </templateparamlist>
        <type>forceinline <ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>forceinline ExecStatus Gecode::Int::Extensional::LayeredGraph&lt; View, Val, Degree, StateIdx &gt;::initialize</definition>
        <argsstring>(Space &amp;home, const VarArgArray&lt; Var &gt; &amp;x, const DFA &amp;dfa)</argsstring>
        <name>initialize</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1VarArgArray" kindref="compound">VarArgArray</ref>&lt; <ref refid="classGecode_1_1Var" kindref="compound">Var</ref> &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1DFA" kindref="compound">DFA</ref> &amp;</type>
          <declname>dfa</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/extensional/layered-graph.hpp" line="270" column="1" bodyfile="/usr/include/gecode/int/extensional/layered-graph.hpp" bodystart="270" bodyend="438"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1aa1c95f50276c2c2bb145cb53c905b9b7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classGecode_1_1Var" kindref="compound">Var</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>ExecStatus Gecode::Int::Extensional::LayeredGraph&lt; View, Val, Degree, StateIdx &gt;::post</definition>
        <argsstring>(Home home, const VarArgArray&lt; Var &gt; &amp;x, const DFA &amp;dfa)</argsstring>
        <name>post</name>
        <param>
          <type><ref refid="classGecode_1_1Home" kindref="compound">Home</ref></type>
          <declname>home</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1VarArgArray" kindref="compound">VarArgArray</ref>&lt; <ref refid="classGecode_1_1Var" kindref="compound">Var</ref> &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1DFA" kindref="compound">DFA</ref> &amp;</type>
          <declname>dfa</declname>
        </param>
        <briefdescription>
<para>Post propagator on views <emphasis>x</emphasis> and <ref refid="classGecode_1_1DFA" kindref="compound">DFA</ref> <emphasis>dfa</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/extensional.hh" line="211" column="1" bodyfile="/usr/include/gecode/int/extensional/layered-graph.hpp" bodystart="681" bodyend="699"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Domain consistent layered graph (regular) propagator. </para>    </briefdescription>
    <detaileddescription>
<para>The algorithm for the regular propagator is based on: Gilles Pesant, A Regular Language Membership Constraint for Finite Sequences of Variables, CP 2004. Pages 482-495, LNCS 3258, Springer-Verlag, 2004.</para><para>The propagator is not capable of dealing with multiple occurences of the same view.</para><para>Requires<programlisting><codeline><highlight class="preprocessor">#include<sp/>&lt;gecode/int/extensional.hh&gt;</highlight><highlight class="normal"><sp/></highlight></codeline>
</programlisting> </para>    </detaileddescription>
    <inheritancegraph>
      <node id="3165">
        <label>Gecode::Int::Extensional::LayeredGraph&lt; View, Val, Degree, StateIdx &gt;</label>
        <link refid="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph"/>
        <childnode refid="3166" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3166">
        <label>Gecode::Propagator</label>
        <link refid="classGecode_1_1Propagator"/>
        <childnode refid="3167" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3167">
        <label>Gecode::Actor</label>
        <link refid="classGecode_1_1Actor"/>
        <childnode refid="3168" relation="private-inheritance">
        </childnode>
      </node>
      <node id="3168">
        <label>Gecode::ActorLink</label>
        <link refid="classGecode_1_1ActorLink"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3169">
        <label>Gecode::Int::Extensional::LayeredGraph&lt; View, Val, Degree, StateIdx &gt;</label>
        <link refid="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph"/>
        <childnode refid="3170" relation="public-inheritance">
        </childnode>
        <childnode refid="3173" relation="usage">
          <edgelabel>c</edgelabel>
        </childnode>
        <childnode refid="3174" relation="usage">
          <edgelabel>layers</edgelabel>
        </childnode>
        <childnode refid="3181" relation="usage">
          <edgelabel>a_ch</edgelabel>
          <edgelabel>o_ch</edgelabel>
          <edgelabel>i_ch</edgelabel>
        </childnode>
      </node>
      <node id="3176">
        <label>Gecode::Int::Extensional::LayeredGraph&lt; View, Val, Degree, StateIdx &gt;::Edge</label>
        <link refid="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1_1Edge"/>
      </node>
      <node id="3175">
        <label>Gecode::Int::Extensional::LayeredGraph&lt; View, Val, Degree, StateIdx &gt;::Support</label>
        <link refid="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1_1Support"/>
        <childnode refid="3176" relation="usage">
          <edgelabel>edges</edgelabel>
        </childnode>
        <childnode refid="3177" relation="usage">
          <edgelabel>val</edgelabel>
        </childnode>
      </node>
      <node id="3179">
        <label>Gecode::Int::Extensional::LayeredGraph&lt; View, Val, Degree, StateIdx &gt;::State</label>
        <link refid="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1_1State"/>
      </node>
      <node id="3180">
        <label>Gecode::Support::IntTypeTraits&lt; Val &gt;</label>
        <link refid="classGecode_1_1Support_1_1IntTypeTraits"/>
      </node>
      <node id="3177">
        <label>Val</label>
      </node>
      <node id="3181">
        <label>Gecode::Int::Extensional::LayeredGraph&lt; View, Val, Degree, StateIdx &gt;::IndexRange</label>
        <link refid="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1_1IndexRange"/>
      </node>
      <node id="3178">
        <label>View</label>
      </node>
      <node id="3170">
        <label>Gecode::Propagator</label>
        <link refid="classGecode_1_1Propagator"/>
        <childnode refid="3171" relation="public-inheritance">
        </childnode>
        <childnode refid="3172" relation="usage">
          <edgelabel>advisors</edgelabel>
        </childnode>
      </node>
      <node id="3173">
        <label>Gecode::Council&lt; Gecode::Int::Extensional::LayeredGraph::Index &gt;</label>
        <link refid="classGecode_1_1Council"/>
      </node>
      <node id="3174">
        <label>Gecode::Int::Extensional::LayeredGraph&lt; View, Val, Degree, StateIdx &gt;::Layer</label>
        <link refid="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1_1Layer"/>
        <childnode refid="3175" relation="usage">
          <edgelabel>support</edgelabel>
        </childnode>
        <childnode refid="3178" relation="usage">
          <edgelabel>x</edgelabel>
        </childnode>
        <childnode refid="3179" relation="usage">
          <edgelabel>states</edgelabel>
        </childnode>
        <childnode refid="3180" relation="usage">
          <edgelabel>size</edgelabel>
        </childnode>
      </node>
      <node id="3171">
        <label>Gecode::Actor</label>
        <link refid="classGecode_1_1Actor"/>
        <childnode refid="3172" relation="private-inheritance">
        </childnode>
      </node>
      <node id="3172">
        <label>Gecode::ActorLink</label>
        <link refid="classGecode_1_1ActorLink"/>
      </node>
    </collaborationgraph>
    <location file="/usr/include/gecode/int/extensional.hh" line="69" column="1" bodyfile="/usr/include/gecode/int/extensional.hh" bodystart="69" bodyend="213"/>
    <listofallmembers>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1a5f48d31b72f68923fc5d7accb64b12e6" prot="protected" virt="non-virtual"><scope>Gecode::Int::Extensional::LayeredGraph</scope><name>a_ch</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1a10314b5ab6d417e5fd241990b363f769" prot="public" virt="virtual"><scope>Gecode::Int::Extensional::LayeredGraph</scope><name>advise</name></member>
      <member refid="classGecode_1_1Propagator_1afee33d8aed2bc9debee126f17b5015cf" prot="public" virt="non-virtual"><scope>Gecode::Int::Extensional::LayeredGraph</scope><name>advisors</name></member>
      <member refid="classGecode_1_1Propagator_1a593de773d2204f47ea365a99df2f75d0" prot="public" virt="non-virtual"><scope>Gecode::Int::Extensional::LayeredGraph</scope><name>afc</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1ab3edc0dfd7ca5fe93c6a8742a23273bf" prot="protected" virt="non-virtual"><scope>Gecode::Int::Extensional::LayeredGraph</scope><name>audit</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1a99385e34b8df18df5d1463ab77bc9cbf" prot="protected" virt="non-virtual"><scope>Gecode::Int::Extensional::LayeredGraph</scope><name>c</name></member>
      <member refid="classGecode_1_1ActorLink_1a8427f41a27a72b52ceb52d0fdad21063" prot="public" virt="non-virtual" ambiguityscope="Gecode::ActorLink::"><scope>Gecode::Int::Extensional::LayeredGraph</scope><name>cast</name></member>
      <member refid="classGecode_1_1ActorLink_1a464526456db41981f82a1193a8b4e569" prot="public" virt="non-virtual" ambiguityscope="Gecode::ActorLink::"><scope>Gecode::Int::Extensional::LayeredGraph</scope><name>cast</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1abf11ab9af04a56f5ec8192ac82b5edaa" prot="public" virt="virtual"><scope>Gecode::Int::Extensional::LayeredGraph</scope><name>copy</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1a82cf4d5d1a9a27b26838e9e7da86bc86" prot="public" virt="virtual"><scope>Gecode::Int::Extensional::LayeredGraph</scope><name>cost</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1aa873cd0a025dad8e397b1363da2f2a94" prot="public" virt="virtual"><scope>Gecode::Int::Extensional::LayeredGraph</scope><name>dispose</name></member>
      <member refid="classGecode_1_1Propagator_1a3b286c7aec9843b60a531b495015b5f7" prot="protected" virt="non-virtual"><scope>Gecode::Int::Extensional::LayeredGraph</scope><name>fwd</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1a8c6f798cc3b0358c1b7d46bf09f95e2d" prot="protected" virt="non-virtual"><scope>Gecode::Int::Extensional::LayeredGraph</scope><name>i_ch</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1a6e1e6096577738e5b2a123fe0dcff375" prot="protected" virt="non-virtual"><scope>Gecode::Int::Extensional::LayeredGraph</scope><name>i_dec</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1a14ff9d9d4eeff3e7765ca983d2053313" prot="protected" virt="non-virtual"><scope>Gecode::Int::Extensional::LayeredGraph</scope><name>i_state</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1a6053e1a0e2e384a887d844bdc8028d41" prot="protected" virt="non-virtual"><scope>Gecode::Int::Extensional::LayeredGraph</scope><name>i_state</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1a09450fd1e2bdad4852b63975b3b58086" prot="protected" virt="non-virtual"><scope>Gecode::Int::Extensional::LayeredGraph</scope><name>initialize</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1aae123181656fcc289d31343ccf972643" prot="public" virt="non-virtual"><scope>Gecode::Int::Extensional::LayeredGraph</scope><name>initialize</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1aecc6fa1eaaf4eccfd826ffeddd0f8c6d" prot="protected" virt="non-virtual"><scope>Gecode::Int::Extensional::LayeredGraph</scope><name>LayeredGraph</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1a62779e9577357ff6cf0aa11009474821" prot="public" virt="non-virtual"><scope>Gecode::Int::Extensional::LayeredGraph</scope><name>LayeredGraph</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1ae41d48378898ffa040f2031da74287b0" prot="public" virt="non-virtual"><scope>Gecode::Int::Extensional::LayeredGraph</scope><name>LayeredGraph</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1af69c92c1bfce788d9670a3484ac0f212" prot="protected" virt="non-virtual"><scope>Gecode::Int::Extensional::LayeredGraph</scope><name>layers</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1a37aaa0c60346da4a5db2d088abd03f17" prot="protected" virt="non-virtual"><scope>Gecode::Int::Extensional::LayeredGraph</scope><name>max_states</name></member>
      <member refid="classGecode_1_1Propagator_1ae9dfa55e47e4ff8e0c8e4c2a6efdbfc0" prot="public" virt="non-virtual"><scope>Gecode::Int::Extensional::LayeredGraph</scope><name>med</name></member>
      <member refid="classGecode_1_1Propagator_1a4905db55af49af8f38558bdbcf5fd4a2" prot="public" virt="non-virtual"><scope>Gecode::Int::Extensional::LayeredGraph</scope><name>modeventdelta</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1a4a920d3ca602e6df07a109fd92231de1" prot="protected" virt="non-virtual"><scope>Gecode::Int::Extensional::LayeredGraph</scope><name>n</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1a10bd62c709cd80ff54f978ef7293d023" prot="protected" virt="non-virtual"><scope>Gecode::Int::Extensional::LayeredGraph</scope><name>n_edges</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1a3cfed3cfc8f09c20c6d80d58ef560cb7" prot="protected" virt="non-virtual"><scope>Gecode::Int::Extensional::LayeredGraph</scope><name>n_states</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1a5e0e22d061e66e532a090de300171681" prot="protected" virt="non-virtual"><scope>Gecode::Int::Extensional::LayeredGraph</scope><name>o_ch</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1a19aed150ceb222c958f998088b573788" prot="protected" virt="non-virtual"><scope>Gecode::Int::Extensional::LayeredGraph</scope><name>o_dec</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1ae89d01dd329d06bca48382fc068eaf9c" prot="protected" virt="non-virtual"><scope>Gecode::Int::Extensional::LayeredGraph</scope><name>o_state</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1afb4fe7045ddede614912430647502456" prot="protected" virt="non-virtual"><scope>Gecode::Int::Extensional::LayeredGraph</scope><name>o_state</name></member>
      <member refid="classGecode_1_1Actor_1a388f671145dcf906f81d22bde2dc0f3d" prot="public" virt="non-virtual"><scope>Gecode::Int::Extensional::LayeredGraph</scope><name>operator delete</name></member>
      <member refid="classGecode_1_1Actor_1ac28b9601b530076a1bda75834487f898" prot="public" virt="non-virtual"><scope>Gecode::Int::Extensional::LayeredGraph</scope><name>operator new</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1aa1c95f50276c2c2bb145cb53c905b9b7" prot="public" virt="non-virtual"><scope>Gecode::Int::Extensional::LayeredGraph</scope><name>post</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1a27d298d2f8f3ef2802e23abc01fabca7" prot="public" virt="virtual"><scope>Gecode::Int::Extensional::LayeredGraph</scope><name>propagate</name></member>
      <member refid="classGecode_1_1Propagator_1a891f3e84cde2e8e60f8ad9340ad74b05" prot="protected" virt="non-virtual"><scope>Gecode::Int::Extensional::LayeredGraph</scope><name>Propagator</name></member>
      <member refid="classGecode_1_1Propagator_1afeaeed8dae67de4313858bd82fdae5d0" prot="protected" virt="non-virtual"><scope>Gecode::Int::Extensional::LayeredGraph</scope><name>Propagator</name></member>
      <member refid="classGecode_1_1Propagator_1a1781b5b0df38c39dddca4b44c3a00530" prot="public" virt="non-virtual"><scope>Gecode::Int::Extensional::LayeredGraph</scope><name>size</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1LayeredGraph_1a2ee95e8c4b2c30c85b3388af6da97289" prot="protected" virt="non-virtual"><scope>Gecode::Int::Extensional::LayeredGraph</scope><name>ValSize</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
