<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classGecode_1_1NGL" kind="class" prot="public" abstract="yes">
    <compoundname>Gecode::NGL</compoundname>
    <derivedcompoundref refid="classGecode_1_1Search_1_1Meta_1_1NoNGL" prot="public" virt="non-virtual">Gecode::Search::Meta::NoNGL</derivedcompoundref>
    <derivedcompoundref refid="classGecode_1_1ViewValNGL" prot="public" virt="non-virtual">Gecode::ViewValNGL&lt; View, Val, pc &gt;</derivedcompoundref>
    <derivedcompoundref refid="classGecode_1_1ViewValNGL" prot="public" virt="non-virtual">Gecode::ViewValNGL&lt; SetView, int, PC_SET_ANY &gt;</derivedcompoundref>
    <derivedcompoundref refid="classGecode_1_1ViewValNGL" prot="public" virt="non-virtual">Gecode::ViewValNGL&lt; View, int, PC_INT_BND &gt;</derivedcompoundref>
    <derivedcompoundref refid="classGecode_1_1ViewValNGL" prot="public" virt="non-virtual">Gecode::ViewValNGL&lt; View, int, PC_INT_DOM &gt;</derivedcompoundref>
    <derivedcompoundref refid="classGecode_1_1ViewValNGL" prot="public" virt="non-virtual">Gecode::ViewValNGL&lt; View, int, PC_INT_VAL &gt;</derivedcompoundref>
    <includes refid="core_8hpp" local="no">core.hpp</includes>
      <sectiondef kind="user-defined">
      <header>Internal management routines</header>
      <memberdef kind="function" id="classGecode_1_1NGL_1ab493fcf7336785648d59ed027db0e13d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::NGL::leaf</definition>
        <argsstring>(void) const </argsstring>
        <name>leaf</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test whether literal is a leaf. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/core.hpp" line="1006" column="1" bodyfile="/usr/include/gecode/kernel/core.hpp" bodystart="3115" bodyend="3117"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1NGL_1ab65889237b58594c3837f1171a50ba7d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGecode_1_1NGL" kindref="compound">NGL</ref> *</type>
        <definition>forceinline NGL * Gecode::NGL::next</definition>
        <argsstring>(void) const </argsstring>
        <name>next</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return pointer to next literal. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/core.hpp" line="1008" column="1" bodyfile="/usr/include/gecode/kernel/core.hpp" bodystart="3119" bodyend="3121"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1NGL_1af736c5497f09b5c1be49dd2c35e01bc4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::NGL::leaf</definition>
        <argsstring>(bool l)</argsstring>
        <name>leaf</name>
        <param>
          <type>bool</type>
          <declname>l</declname>
        </param>
        <briefdescription>
<para>Mark literal as leaf or not. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/core.hpp" line="1010" column="1" bodyfile="/usr/include/gecode/kernel/core.hpp" bodystart="3123" bodyend="3125"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1NGL_1acadd5ea3421b6be5de007f9b8ba48714" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::NGL::next</definition>
        <argsstring>(NGL *n)</argsstring>
        <name>next</name>
        <param>
          <type><ref refid="classGecode_1_1NGL" kindref="compound">NGL</ref> *</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para><ref refid="namespaceGecode_1_1Set" kindref="compound">Set</ref> pointer to next literal. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/core.hpp" line="1012" column="1" bodyfile="/usr/include/gecode/kernel/core.hpp" bodystart="3127" bodyend="3129"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1NGL_1abf10da0a1776ea70bc0a00d099e6c5eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGecode_1_1NGL" kindref="compound">NGL</ref> *</type>
        <definition>forceinline NGL * Gecode::NGL::add</definition>
        <argsstring>(NGL *n, bool l)</argsstring>
        <name>add</name>
        <param>
          <type><ref refid="classGecode_1_1NGL" kindref="compound">NGL</ref> *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>l</declname>
        </param>
        <briefdescription>
<para>Add node <emphasis>n</emphasis> and mark it as leaf <emphasis>l</emphasis> and return <emphasis>n</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/core.hpp" line="1014" column="1" bodyfile="/usr/include/gecode/kernel/core.hpp" bodystart="3131" bodyend="3135"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Memory management</header>
      <memberdef kind="function" id="classGecode_1_1NGL_1a543472a1a92ab3dfe36352cac4d576b1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>forceinline void * Gecode::NGL::operator new</definition>
        <argsstring>(size_t s, Space &amp;home)</argsstring>
        <name>operator new</name>
        <param>
          <type>size_t</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <briefdescription>
<para>Allocate memory from space. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/core.hpp" line="1019" column="1" bodyfile="/usr/include/gecode/kernel/core.hpp" bodystart="2559" bodyend="2561"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1NGL_1a13852a4a7ed1d8f6db3b9a9501989342" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::NGL::operator delete</definition>
        <argsstring>(void *s, Space &amp;home)</argsstring>
        <name>operator delete</name>
        <param>
          <type>void *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <briefdescription>
<para>Return memory to space. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/core.hpp" line="1021" column="1" bodyfile="/usr/include/gecode/kernel/core.hpp" bodystart="2557" bodyend="2557"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1NGL_1a243a4071e60a2f8a893dd918189136b0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::NGL::operator delete</definition>
        <argsstring>(void *p)</argsstring>
        <name>operator delete</name>
        <param>
          <type>void *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Needed for exceptions. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/core.hpp" line="1023" column="1" bodyfile="/usr/include/gecode/kernel/core.hpp" bodystart="2555" bodyend="2555"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classGecode_1_1NGL_1aab4befbc70f2ae73712d48cac3038453" prot="public" static="no">
        <name>Status</name>
        <enumvalue id="classGecode_1_1NGL_1aab4befbc70f2ae73712d48cac3038453a85e8c9a66310532b7a9b5720c2ec6caa" prot="public">
          <name>FAILED</name>
          <briefdescription>
<para>The literal is failed. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classGecode_1_1NGL_1aab4befbc70f2ae73712d48cac3038453a6e954f72d530a4730f12473184bb41f8" prot="public">
          <name>SUBSUMED</name>
          <briefdescription>
<para>The literal is subsumed. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classGecode_1_1NGL_1aab4befbc70f2ae73712d48cac3038453ae802e69bb079cf2b0cdbee4bd023072a" prot="public">
          <name>NONE</name>
          <briefdescription>
<para>The literal is neither failed nor subsumed. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>The status of a no-good literal. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/core.hpp" line="977" column="1" bodyfile="/usr/include/gecode/kernel/core.hpp" bodystart="977" bodyend="981"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classGecode_1_1NGL_1a72a880d232540e35f24b4bfbb77d1b51" prot="private" static="no" mutable="no">
        <type>void *</type>
        <definition>void* Gecode::NGL::nl</definition>
        <argsstring></argsstring>
        <name>nl</name>
        <briefdescription>
<para>Combines pointer to next literal and mark whether it is a leaf. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/core.hpp" line="974" column="1" bodyfile="/usr/include/gecode/kernel/core.hpp" bodystart="974" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classGecode_1_1NGL_1a05f720aed6c927bbb6f2a0287e64f94c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::NGL::NGL</definition>
        <argsstring>(void)</argsstring>
        <name>NGL</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Constructor for creation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/core.hpp" line="983" column="1" bodyfile="/usr/include/gecode/kernel/core.hpp" bodystart="3138" bodyend="3139"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1NGL_1a7423f00a7d70569436a87ad15fb7ea0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::NGL::NGL</definition>
        <argsstring>(Space &amp;home)</argsstring>
        <name>NGL</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <briefdescription>
<para>Constructor for creation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/core.hpp" line="985" column="1" bodyfile="/usr/include/gecode/kernel/core.hpp" bodystart="3141" bodyend="3142"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1NGL_1afe7ff58964955787759f6483ac2b82d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::NGL::NGL</definition>
        <argsstring>(Space &amp;home, bool share, NGL &amp;ngl)</argsstring>
        <name>NGL</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>share</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1NGL" kindref="compound">NGL</ref> &amp;</type>
          <declname>ngl</declname>
        </param>
        <briefdescription>
<para>Constructor for cloning <emphasis>ngl</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/core.hpp" line="987" column="1" bodyfile="/usr/include/gecode/kernel/core.hpp" bodystart="3144" bodyend="3145"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1NGL_1a33168f9e7e8ca3a786b86003dd141ed3" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Gecode::NGL::subscribe</definition>
        <argsstring>(Space &amp;home, Propagator &amp;p)=0</argsstring>
        <name>subscribe</name>
        <reimplementedby refid="classGecode_1_1Search_1_1Meta_1_1NoNGL_1afe6c5040bdcc285ecbc40a2dfa8b5ed8">subscribe</reimplementedby>
        <reimplementedby refid="classGecode_1_1ViewValNGL_1ae57047793ad3211f80e899a6011895db">subscribe</reimplementedby>
        <reimplementedby refid="classGecode_1_1ViewValNGL_1ae57047793ad3211f80e899a6011895db">subscribe</reimplementedby>
        <reimplementedby refid="classGecode_1_1ViewValNGL_1ae57047793ad3211f80e899a6011895db">subscribe</reimplementedby>
        <reimplementedby refid="classGecode_1_1ViewValNGL_1ae57047793ad3211f80e899a6011895db">subscribe</reimplementedby>
        <reimplementedby refid="classGecode_1_1ViewValNGL_1ae57047793ad3211f80e899a6011895db">subscribe</reimplementedby>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Propagator" kindref="compound">Propagator</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Subscribe propagator <emphasis>p</emphasis> to all views of the no-good literal. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/core.hpp" line="989" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1NGL_1a2979fc3a4a53cb50d1d79a3d85dd68ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Gecode::NGL::cancel</definition>
        <argsstring>(Space &amp;home, Propagator &amp;p)=0</argsstring>
        <name>cancel</name>
        <reimplementedby refid="classGecode_1_1Search_1_1Meta_1_1NoNGL_1a4ddebaff51927463abf6f06d20011c44">cancel</reimplementedby>
        <reimplementedby refid="classGecode_1_1ViewValNGL_1a9b7543d29220e599e79f56a0bd774261">cancel</reimplementedby>
        <reimplementedby refid="classGecode_1_1ViewValNGL_1a9b7543d29220e599e79f56a0bd774261">cancel</reimplementedby>
        <reimplementedby refid="classGecode_1_1ViewValNGL_1a9b7543d29220e599e79f56a0bd774261">cancel</reimplementedby>
        <reimplementedby refid="classGecode_1_1ViewValNGL_1a9b7543d29220e599e79f56a0bd774261">cancel</reimplementedby>
        <reimplementedby refid="classGecode_1_1ViewValNGL_1a9b7543d29220e599e79f56a0bd774261">cancel</reimplementedby>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Propagator" kindref="compound">Propagator</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Cancel propagator <emphasis>p</emphasis> from all views of the no-good literal. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/core.hpp" line="991" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1NGL_1a4676887e6b690e021703b2c24b06c978" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classGecode_1_1NGL_1aab4befbc70f2ae73712d48cac3038453" kindref="member">NGL::Status</ref></type>
        <definition>virtual NGL::Status Gecode::NGL::status</definition>
        <argsstring>(const Space &amp;home) const =0</argsstring>
        <name>status</name>
        <reimplementedby refid="classGecode_1_1Search_1_1Meta_1_1NoNGL_1a1802583128c5f3fa65d2aa9bfc6e7a77">status</reimplementedby>
        <reimplementedby refid="classGecode_1_1Set_1_1Branch_1_1IncNGL_1ada01340c4e1a8a1b70420abe02ced36c">status</reimplementedby>
        <reimplementedby refid="classGecode_1_1Set_1_1Branch_1_1ExcNGL_1ad2f8bbc37ab3ff3d1ad4bb3b7c6f29d2">status</reimplementedby>
        <reimplementedby refid="classGecode_1_1Int_1_1Branch_1_1EqNGL_1a085a6205e20e5e7c48091a76f0885930">status</reimplementedby>
        <reimplementedby refid="classGecode_1_1Int_1_1Branch_1_1NqNGL_1af70dc205446ad55c248cad4706e0b2dd">status</reimplementedby>
        <reimplementedby refid="classGecode_1_1Int_1_1Branch_1_1LqNGL_1ae070937c85cb923b4f6aa81d55b480f8">status</reimplementedby>
        <reimplementedby refid="classGecode_1_1Int_1_1Branch_1_1GqNGL_1a13c8457ac74620a02f616f0998f42460">status</reimplementedby>
        <param>
          <type>const <ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <briefdescription>
<para>Test the status of the no-good literal. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/core.hpp" line="993" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1NGL_1a0f1fbdf22a14b796288280cb1b0f9841" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>virtual ExecStatus Gecode::NGL::prune</definition>
        <argsstring>(Space &amp;home)=0</argsstring>
        <name>prune</name>
        <reimplementedby refid="classGecode_1_1Search_1_1Meta_1_1NoNGL_1a3e0126be4c0796d3ef14f637c1e12c3e">prune</reimplementedby>
        <reimplementedby refid="classGecode_1_1Set_1_1Branch_1_1IncNGL_1a3e4250421bd5fd859b4b338380d3a91a">prune</reimplementedby>
        <reimplementedby refid="classGecode_1_1Set_1_1Branch_1_1ExcNGL_1a64922d8ffc5ad3240e37f34980adb20a">prune</reimplementedby>
        <reimplementedby refid="classGecode_1_1Int_1_1Branch_1_1EqNGL_1aab4c632859baab19ea372ea28f395e8e">prune</reimplementedby>
        <reimplementedby refid="classGecode_1_1Int_1_1Branch_1_1NqNGL_1a2eebdd35d45366f56109233a511da6e4">prune</reimplementedby>
        <reimplementedby refid="classGecode_1_1Int_1_1Branch_1_1LqNGL_1aa83895ba838c7188cbb46bf095d37352">prune</reimplementedby>
        <reimplementedby refid="classGecode_1_1Int_1_1Branch_1_1GqNGL_1af4810fd97fad3c320604a746a1cd823d">prune</reimplementedby>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <briefdescription>
<para>Propagate the negation of the no-good literal. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/core.hpp" line="995" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1NGL_1ad1b6fe104e32ec020e6738b1aebb8224" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classGecode_1_1NGL" kindref="compound">NGL</ref> *</type>
        <definition>virtual NGL* Gecode::NGL::copy</definition>
        <argsstring>(Space &amp;home, bool share)=0</argsstring>
        <name>copy</name>
        <reimplementedby refid="classGecode_1_1Search_1_1Meta_1_1NoNGL_1a762e6b8d6563db4081933caaaaf1e637">copy</reimplementedby>
        <reimplementedby refid="classGecode_1_1Set_1_1Branch_1_1IncNGL_1a74922d80dd9674f6ea511ae7d53cb1c4">copy</reimplementedby>
        <reimplementedby refid="classGecode_1_1Set_1_1Branch_1_1ExcNGL_1abaa53fab11c2585b0c5ba01599ec5c66">copy</reimplementedby>
        <reimplementedby refid="classGecode_1_1Int_1_1Branch_1_1EqNGL_1a2e3bdce4b927d31d529cd47449a2978f">copy</reimplementedby>
        <reimplementedby refid="classGecode_1_1Int_1_1Branch_1_1NqNGL_1ac8f19b97e392972dd943f0a9394227b1">copy</reimplementedby>
        <reimplementedby refid="classGecode_1_1Int_1_1Branch_1_1LqNGL_1a6d57d0f6cc0764cf7494ece491ca1d6d">copy</reimplementedby>
        <reimplementedby refid="classGecode_1_1Int_1_1Branch_1_1GqNGL_1affefa462f587cf98d3a604d9284fc7ff">copy</reimplementedby>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>share</declname>
        </param>
        <briefdescription>
<para>Create copy. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/core.hpp" line="997" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1NGL_1a3a39754c900ab2a274af11972fea45a6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>GECODE_KERNEL_EXPORT bool</type>
        <definition>virtual GECODE_KERNEL_EXPORT bool Gecode::NGL::notice</definition>
        <argsstring>(void) const </argsstring>
        <name>notice</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Whether dispose must always be called (returns false) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/core.hpp" line="1000" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1NGL_1afd8655a06d89684571304621d06ffc50" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>size_t</type>
        <definition>forceinline size_t Gecode::NGL::dispose</definition>
        <argsstring>(Space &amp;home)</argsstring>
        <name>dispose</name>
        <reimplementedby refid="classGecode_1_1ViewValNGL_1ad1eb07a0062850a3b83f474cdab8d27d">dispose</reimplementedby>
        <reimplementedby refid="classGecode_1_1ViewValNGL_1ad1eb07a0062850a3b83f474cdab8d27d">dispose</reimplementedby>
        <reimplementedby refid="classGecode_1_1ViewValNGL_1ad1eb07a0062850a3b83f474cdab8d27d">dispose</reimplementedby>
        <reimplementedby refid="classGecode_1_1ViewValNGL_1ad1eb07a0062850a3b83f474cdab8d27d">dispose</reimplementedby>
        <reimplementedby refid="classGecode_1_1ViewValNGL_1ad1eb07a0062850a3b83f474cdab8d27d">dispose</reimplementedby>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <briefdescription>
<para>Dispose. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/core.hpp" line="1002" column="1" bodyfile="/usr/include/gecode/kernel/core.hpp" bodystart="3147" bodyend="3149"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>No-good literal recorded during search. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4413">
        <label>Gecode::Int::Branch::LqNGL&lt; View &gt;</label>
        <link refid="classGecode_1_1Int_1_1Branch_1_1LqNGL"/>
        <childnode refid="4411" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4409">
        <label>Gecode::Set::Branch::ExcNGL</label>
        <link refid="classGecode_1_1Set_1_1Branch_1_1ExcNGL"/>
        <childnode refid="4408" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4410">
        <label>Gecode::Set::Branch::IncNGL</label>
        <link refid="classGecode_1_1Set_1_1Branch_1_1IncNGL"/>
        <childnode refid="4408" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4407">
        <label>Gecode::ViewValNGL&lt; View, Val, pc &gt;</label>
        <link refid="classGecode_1_1ViewValNGL"/>
        <childnode refid="4405" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4414">
        <label>Gecode::ViewValNGL&lt; View, int, PC_INT_DOM &gt;</label>
        <link refid="classGecode_1_1ViewValNGL"/>
        <childnode refid="4405" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4408">
        <label>Gecode::ViewValNGL&lt; SetView, int, PC_SET_ANY &gt;</label>
        <link refid="classGecode_1_1ViewValNGL"/>
        <childnode refid="4405" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4416">
        <label>Gecode::ViewValNGL&lt; View, int, PC_INT_VAL &gt;</label>
        <link refid="classGecode_1_1ViewValNGL"/>
        <childnode refid="4405" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4415">
        <label>Gecode::Int::Branch::NqNGL&lt; View &gt;</label>
        <link refid="classGecode_1_1Int_1_1Branch_1_1NqNGL"/>
        <childnode refid="4414" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4417">
        <label>Gecode::Int::Branch::EqNGL&lt; View &gt;</label>
        <link refid="classGecode_1_1Int_1_1Branch_1_1EqNGL"/>
        <childnode refid="4416" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4411">
        <label>Gecode::ViewValNGL&lt; View, int, PC_INT_BND &gt;</label>
        <link refid="classGecode_1_1ViewValNGL"/>
        <childnode refid="4405" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4412">
        <label>Gecode::Int::Branch::GqNGL&lt; View &gt;</label>
        <link refid="classGecode_1_1Int_1_1Branch_1_1GqNGL"/>
        <childnode refid="4411" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4406">
        <label>Gecode::Search::Meta::NoNGL</label>
        <link refid="classGecode_1_1Search_1_1Meta_1_1NoNGL"/>
        <childnode refid="4405" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4405">
        <label>Gecode::NGL</label>
        <link refid="classGecode_1_1NGL"/>
      </node>
    </inheritancegraph>
    <location file="/usr/include/gecode/kernel/core.hpp" line="971" column="1" bodyfile="/usr/include/gecode/kernel/core.hpp" bodystart="971" bodyend="1025"/>
    <listofallmembers>
      <member refid="classGecode_1_1NGL_1abf10da0a1776ea70bc0a00d099e6c5eb" prot="public" virt="non-virtual"><scope>Gecode::NGL</scope><name>add</name></member>
      <member refid="classGecode_1_1NGL_1a2979fc3a4a53cb50d1d79a3d85dd68ff" prot="public" virt="pure-virtual"><scope>Gecode::NGL</scope><name>cancel</name></member>
      <member refid="classGecode_1_1NGL_1ad1b6fe104e32ec020e6738b1aebb8224" prot="public" virt="pure-virtual"><scope>Gecode::NGL</scope><name>copy</name></member>
      <member refid="classGecode_1_1NGL_1afd8655a06d89684571304621d06ffc50" prot="public" virt="virtual"><scope>Gecode::NGL</scope><name>dispose</name></member>
      <member refid="classGecode_1_1NGL_1aab4befbc70f2ae73712d48cac3038453a85e8c9a66310532b7a9b5720c2ec6caa" prot="public" virt="non-virtual"><scope>Gecode::NGL</scope><name>FAILED</name></member>
      <member refid="classGecode_1_1NGL_1ab493fcf7336785648d59ed027db0e13d" prot="public" virt="non-virtual"><scope>Gecode::NGL</scope><name>leaf</name></member>
      <member refid="classGecode_1_1NGL_1af736c5497f09b5c1be49dd2c35e01bc4" prot="public" virt="non-virtual"><scope>Gecode::NGL</scope><name>leaf</name></member>
      <member refid="classGecode_1_1NGL_1ab65889237b58594c3837f1171a50ba7d" prot="public" virt="non-virtual"><scope>Gecode::NGL</scope><name>next</name></member>
      <member refid="classGecode_1_1NGL_1acadd5ea3421b6be5de007f9b8ba48714" prot="public" virt="non-virtual"><scope>Gecode::NGL</scope><name>next</name></member>
      <member refid="classGecode_1_1NGL_1a05f720aed6c927bbb6f2a0287e64f94c" prot="public" virt="non-virtual"><scope>Gecode::NGL</scope><name>NGL</name></member>
      <member refid="classGecode_1_1NGL_1a7423f00a7d70569436a87ad15fb7ea0c" prot="public" virt="non-virtual"><scope>Gecode::NGL</scope><name>NGL</name></member>
      <member refid="classGecode_1_1NGL_1afe7ff58964955787759f6483ac2b82d1" prot="public" virt="non-virtual"><scope>Gecode::NGL</scope><name>NGL</name></member>
      <member refid="classGecode_1_1NGL_1a72a880d232540e35f24b4bfbb77d1b51" prot="private" virt="non-virtual"><scope>Gecode::NGL</scope><name>nl</name></member>
      <member refid="classGecode_1_1NGL_1aab4befbc70f2ae73712d48cac3038453ae802e69bb079cf2b0cdbee4bd023072a" prot="public" virt="non-virtual"><scope>Gecode::NGL</scope><name>NONE</name></member>
      <member refid="classGecode_1_1NGL_1a3a39754c900ab2a274af11972fea45a6" prot="public" virt="virtual"><scope>Gecode::NGL</scope><name>notice</name></member>
      <member refid="classGecode_1_1NGL_1a13852a4a7ed1d8f6db3b9a9501989342" prot="public" virt="non-virtual"><scope>Gecode::NGL</scope><name>operator delete</name></member>
      <member refid="classGecode_1_1NGL_1a243a4071e60a2f8a893dd918189136b0" prot="public" virt="non-virtual"><scope>Gecode::NGL</scope><name>operator delete</name></member>
      <member refid="classGecode_1_1NGL_1a543472a1a92ab3dfe36352cac4d576b1" prot="public" virt="non-virtual"><scope>Gecode::NGL</scope><name>operator new</name></member>
      <member refid="classGecode_1_1NGL_1a0f1fbdf22a14b796288280cb1b0f9841" prot="public" virt="pure-virtual"><scope>Gecode::NGL</scope><name>prune</name></member>
      <member refid="classGecode_1_1NGL_1aab4befbc70f2ae73712d48cac3038453" prot="public" virt="non-virtual"><scope>Gecode::NGL</scope><name>Status</name></member>
      <member refid="classGecode_1_1NGL_1a4676887e6b690e021703b2c24b06c978" prot="public" virt="pure-virtual"><scope>Gecode::NGL</scope><name>status</name></member>
      <member refid="classGecode_1_1NGL_1a33168f9e7e8ca3a786b86003dd141ed3" prot="public" virt="pure-virtual"><scope>Gecode::NGL</scope><name>subscribe</name></member>
      <member refid="classGecode_1_1NGL_1aab4befbc70f2ae73712d48cac3038453a6e954f72d530a4730f12473184bb41f8" prot="public" virt="non-virtual"><scope>Gecode::NGL</scope><name>SUBSUMED</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
