<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classGecode_1_1Int_1_1Arithmetic_1_1SqrOps" kind="class" prot="public">
    <compoundname>Gecode::Int::Arithmetic::SqrOps</compoundname>
    <includes refid="int_2arithmetic_8hh" local="no">arithmetic.hh</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classGecode_1_1Int_1_1Arithmetic_1_1SqrOps_1a0f38f871f4476109132a05e12bf2d0b5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::Int::Arithmetic::SqrOps::even</definition>
        <argsstring>(void) const </argsstring>
        <name>even</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return whether exponent is even. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/arithmetic.hh" line="262" column="1" bodyfile="/usr/include/gecode/int/arithmetic/pow-ops.hpp" bodystart="176" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Arithmetic_1_1SqrOps_1a1fcfae6ca62325e443049571e6ebed56" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Int::Arithmetic::SqrOps::exp</definition>
        <argsstring>(void) const </argsstring>
        <name>exp</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return exponent. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/arithmetic.hh" line="264" column="1" bodyfile="/usr/include/gecode/int/arithmetic/pow-ops.hpp" bodystart="181" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Arithmetic_1_1SqrOps_1acd3e7baebfcae4773f34fbbfe0b634aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Int::Arithmetic::SqrOps::exp</definition>
        <argsstring>(int m)</argsstring>
        <name>exp</name>
        <param>
          <type>int</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para><ref refid="namespaceGecode_1_1Set" kindref="compound">Set</ref> exponent to <emphasis>m</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/arithmetic.hh" line="266" column="1" bodyfile="/usr/include/gecode/int/arithmetic/pow-ops.hpp" bodystart="186" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Arithmetic_1_1SqrOps_1a40c8287768d03ace932ba5f25b007d55" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class IntType</type>
          </param>
        </templateparamlist>
        <type>IntType</type>
        <definition>IntType Gecode::Int::Arithmetic::SqrOps::pow</definition>
        <argsstring>(IntType x) const </argsstring>
        <name>pow</name>
        <param>
          <type>IntType</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Return <formula id="88">$x^2$</formula>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/arithmetic.hh" line="269" column="1" bodyfile="/usr/include/gecode/int/arithmetic/pow-ops.hpp" bodystart="192" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Arithmetic_1_1SqrOps_1ab4f9f0e694262a5e2c13667f66841dce" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Gecode::Int::Arithmetic::SqrOps::tpow</definition>
        <argsstring>(int x) const </argsstring>
        <name>tpow</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Return <formula id="88">$x^2$</formula> truncated to integer limits. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/arithmetic.hh" line="271" column="1" bodyfile="/usr/include/gecode/int/arithmetic/pow-ops.hpp" bodystart="197" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Arithmetic_1_1SqrOps_1a85c99cd06ef721babe629f34462f7b8e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Gecode::Int::Arithmetic::SqrOps::fnroot</definition>
        <argsstring>(int x) const </argsstring>
        <name>fnroot</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Return <formula id="89">$\lfloor \sqrt{x}\rfloor$</formula> where <emphasis>x</emphasis> must be non-negative and <formula id="90">$n&gt;0$</formula>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/arithmetic.hh" line="273" column="1" bodyfile="/usr/include/gecode/int/arithmetic/pow-ops.hpp" bodystart="207" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Arithmetic_1_1SqrOps_1a8d8c5d8af76bafe36dbc669eacdd5b29" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Gecode::Int::Arithmetic::SqrOps::cnroot</definition>
        <argsstring>(int x) const </argsstring>
        <name>cnroot</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Return <formula id="91">$\lceil \sqrt{x}\rceil$</formula> where <emphasis>x</emphasis> must be non-negative and <formula id="90">$n&gt;0$</formula>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/arithmetic.hh" line="275" column="1" bodyfile="/usr/include/gecode/int/arithmetic/pow-ops.hpp" bodystart="224" bodyend="238"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Operations for square and square-root propagators. </para>    </briefdescription>
    <detaileddescription>
<para>Requires<programlisting><codeline><highlight class="preprocessor">#include<sp/>&lt;gecode/int/arithmetic.hh&gt;</highlight><highlight class="normal"><sp/></highlight></codeline>
</programlisting> </para>    </detaileddescription>
    <location file="/usr/include/gecode/int/arithmetic.hh" line="259" column="1" bodyfile="/usr/include/gecode/int/arithmetic.hh" bodystart="259" bodyend="276"/>
    <listofallmembers>
      <member refid="classGecode_1_1Int_1_1Arithmetic_1_1SqrOps_1a8d8c5d8af76bafe36dbc669eacdd5b29" prot="public" virt="non-virtual"><scope>Gecode::Int::Arithmetic::SqrOps</scope><name>cnroot</name></member>
      <member refid="classGecode_1_1Int_1_1Arithmetic_1_1SqrOps_1a0f38f871f4476109132a05e12bf2d0b5" prot="public" virt="non-virtual"><scope>Gecode::Int::Arithmetic::SqrOps</scope><name>even</name></member>
      <member refid="classGecode_1_1Int_1_1Arithmetic_1_1SqrOps_1a1fcfae6ca62325e443049571e6ebed56" prot="public" virt="non-virtual"><scope>Gecode::Int::Arithmetic::SqrOps</scope><name>exp</name></member>
      <member refid="classGecode_1_1Int_1_1Arithmetic_1_1SqrOps_1acd3e7baebfcae4773f34fbbfe0b634aa" prot="public" virt="non-virtual"><scope>Gecode::Int::Arithmetic::SqrOps</scope><name>exp</name></member>
      <member refid="classGecode_1_1Int_1_1Arithmetic_1_1SqrOps_1a85c99cd06ef721babe629f34462f7b8e" prot="public" virt="non-virtual"><scope>Gecode::Int::Arithmetic::SqrOps</scope><name>fnroot</name></member>
      <member refid="classGecode_1_1Int_1_1Arithmetic_1_1SqrOps_1a40c8287768d03ace932ba5f25b007d55" prot="public" virt="non-virtual"><scope>Gecode::Int::Arithmetic::SqrOps</scope><name>pow</name></member>
      <member refid="classGecode_1_1Int_1_1Arithmetic_1_1SqrOps_1ab4f9f0e694262a5e2c13667f66841dce" prot="public" virt="non-virtual"><scope>Gecode::Int::Arithmetic::SqrOps</scope><name>tpow</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
