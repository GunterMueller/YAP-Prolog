<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="namespaceGecode_1_1Int_1_1Arithmetic" kind="namespace">
    <compoundname>Gecode::Int::Arithmetic</compoundname>
    <innerclass refid="classGecode_1_1Int_1_1Arithmetic_1_1RangesMapPow" prot="public">Gecode::Int::Arithmetic::RangesMapPow</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1Arithmetic_1_1RangesMapNroot" prot="public">Gecode::Int::Arithmetic::RangesMapNroot</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1Arithmetic_1_1ValuesMapPow" prot="public">Gecode::Int::Arithmetic::ValuesMapPow</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1Arithmetic_1_1ValuesMapNroot" prot="public">Gecode::Int::Arithmetic::ValuesMapNroot</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1Arithmetic_1_1ValuesMapNrootSigned" prot="public">Gecode::Int::Arithmetic::ValuesMapNrootSigned</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1Arithmetic_1_1AbsBnd" prot="public">Gecode::Int::Arithmetic::AbsBnd</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1Arithmetic_1_1AbsDom" prot="public">Gecode::Int::Arithmetic::AbsDom</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1Arithmetic_1_1MaxBnd" prot="public">Gecode::Int::Arithmetic::MaxBnd</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1Arithmetic_1_1NaryMaxBnd" prot="public">Gecode::Int::Arithmetic::NaryMaxBnd</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1Arithmetic_1_1MaxDom" prot="public">Gecode::Int::Arithmetic::MaxDom</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1Arithmetic_1_1NaryMaxDom" prot="public">Gecode::Int::Arithmetic::NaryMaxDom</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1Arithmetic_1_1SqrOps" prot="public">Gecode::Int::Arithmetic::SqrOps</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1Arithmetic_1_1PowOps" prot="public">Gecode::Int::Arithmetic::PowOps</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1Arithmetic_1_1PowPlusBnd" prot="public">Gecode::Int::Arithmetic::PowPlusBnd</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1Arithmetic_1_1PowBnd" prot="public">Gecode::Int::Arithmetic::PowBnd</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1Arithmetic_1_1PowPlusDom" prot="public">Gecode::Int::Arithmetic::PowPlusDom</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1Arithmetic_1_1PowDom" prot="public">Gecode::Int::Arithmetic::PowDom</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1Arithmetic_1_1NrootPlusBnd" prot="public">Gecode::Int::Arithmetic::NrootPlusBnd</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1Arithmetic_1_1NrootBnd" prot="public">Gecode::Int::Arithmetic::NrootBnd</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1Arithmetic_1_1NrootPlusDom" prot="public">Gecode::Int::Arithmetic::NrootPlusDom</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1Arithmetic_1_1NrootDom" prot="public">Gecode::Int::Arithmetic::NrootDom</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1Arithmetic_1_1MultZeroOne" prot="public">Gecode::Int::Arithmetic::MultZeroOne</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1Arithmetic_1_1MultPlusBnd" prot="public">Gecode::Int::Arithmetic::MultPlusBnd</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1Arithmetic_1_1MultBnd" prot="public">Gecode::Int::Arithmetic::MultBnd</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1Arithmetic_1_1MultPlusDom" prot="public">Gecode::Int::Arithmetic::MultPlusDom</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1Arithmetic_1_1MultDom" prot="public">Gecode::Int::Arithmetic::MultDom</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1Arithmetic_1_1DivPlusBnd" prot="public">Gecode::Int::Arithmetic::DivPlusBnd</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1Arithmetic_1_1DivBnd" prot="public">Gecode::Int::Arithmetic::DivBnd</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1Arithmetic_1_1DivMod" prot="public">Gecode::Int::Arithmetic::DivMod</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="namespaceGecode_1_1Int_1_1Arithmetic_1a6533183312c20c57c0dee7e1c531c149" prot="public" static="no">
        <name>MaxPropStatus</name>
        <enumvalue id="namespaceGecode_1_1Int_1_1Arithmetic_1a6533183312c20c57c0dee7e1c531c149aa189e703a4203de7315c4a308249ee9e" prot="public">
          <name>MPS_ASSIGNED</name>
          <initializer>= 1&lt;&lt;0</initializer>
          <briefdescription>
<para>All views are assigned. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceGecode_1_1Int_1_1Arithmetic_1a6533183312c20c57c0dee7e1c531c149a2e9b5a8df9fa129af00052669ea228cd" prot="public">
          <name>MPS_REMOVED</name>
          <initializer>= 1&lt;&lt;1</initializer>
          <briefdescription>
<para>A view is removed. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceGecode_1_1Int_1_1Arithmetic_1a6533183312c20c57c0dee7e1c531c149a6f952345cfa5a00df73a37c5602bbaba" prot="public">
          <name>MPS_NEW_BOUND</name>
          <initializer>= 1&lt;&lt;2</initializer>
          <briefdescription>
<para>Telling has found a new upper bound. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Status of propagation for nary max. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/arithmetic/max.hpp" line="179" column="1" bodyfile="/usr/include/gecode/int/arithmetic/max.hpp" bodystart="179" bodyend="183"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Arithmetic_1a69b8793577b9f889fbf0142864fa5df4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class View</type>
          </param>
          <param>
            <type>template&lt; class View0, class View1 &gt; class</type>
            <declname>Eq</declname>
            <defname>Eq</defname>
          </param>
        </templateparamlist>
        <type><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>ExecStatus Gecode::Int::Arithmetic::prop_abs_bnd</definition>
        <argsstring>(Space &amp;home, Propagator &amp;p, View x0, View x1)</argsstring>
        <name>prop_abs_bnd</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Propagator" kindref="compound">Propagator</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>View</type>
          <declname>x0</declname>
        </param>
        <param>
          <type>View</type>
          <declname>x1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/arithmetic/abs.hpp" line="46" column="1" bodyfile="/usr/include/gecode/int/arithmetic/abs.hpp" bodystart="46" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Arithmetic_1a6ce99492674dff8e986b89fa1e574fe1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class View</type>
          </param>
        </templateparamlist>
        <type>forceinline <ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>forceinline ExecStatus Gecode::Int::Arithmetic::prop_max_bnd</definition>
        <argsstring>(Space &amp;home, View x0, View x1, View x2)</argsstring>
        <name>prop_max_bnd</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>View</type>
          <declname>x0</declname>
        </param>
        <param>
          <type>View</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>View</type>
          <declname>x2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/arithmetic/max.hpp" line="49" column="1" bodyfile="/usr/include/gecode/int/arithmetic/max.hpp" bodystart="49" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Arithmetic_1af9d0a6b5bdd3b3181bd9eb045575b191" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class View</type>
          </param>
        </templateparamlist>
        <type>forceinline <ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>forceinline ExecStatus Gecode::Int::Arithmetic::prop_nary_max_bnd</definition>
        <argsstring>(Space &amp;home, Propagator &amp;p, ViewArray&lt; View &gt; &amp;x, View y, PropCond pc)</argsstring>
        <name>prop_nary_max_bnd</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Propagator" kindref="compound">Propagator</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; View &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>View</type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="group__TaskVarMEPC_1gad24536e327a507a903179b6a5efd2e3d" kindref="member">PropCond</ref></type>
          <declname>pc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/arithmetic/max.hpp" line="187" column="1" bodyfile="/usr/include/gecode/int/arithmetic/max.hpp" bodystart="187" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Arithmetic_1af570eca1a52d9f82cdb80f6e607f5746" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>forceinline long long int</type>
        <definition>forceinline long long int Gecode::Int::Arithmetic::mll</definition>
        <argsstring>(long long int x, long long int y)</argsstring>
        <name>mll</name>
        <param>
          <type>long long int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>long long int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Multiply <emphasis>x</emphasis> and . </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/arithmetic/mult.hpp" line="52" column="1" bodyfile="/usr/include/gecode/int/arithmetic/mult.hpp" bodystart="52" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Arithmetic_1a3b5687feaf312b9c1d0379226a707aa2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>forceinline long long int</type>
        <definition>forceinline long long int Gecode::Int::Arithmetic::ll</definition>
        <argsstring>(int x)</argsstring>
        <name>ll</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Cast <emphasis>x</emphasis> into a long long int. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/arithmetic/mult.hpp" line="57" column="1" bodyfile="/usr/include/gecode/int/arithmetic/mult.hpp" bodystart="57" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Arithmetic_1a9707c3047bc730a679c618204435bbf1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>forceinline long long int</type>
        <definition>forceinline long long int Gecode::Int::Arithmetic::ill</definition>
        <argsstring>(int x)</argsstring>
        <name>ill</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Increment <emphasis>x</emphasis> by one. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/arithmetic/mult.hpp" line="62" column="1" bodyfile="/usr/include/gecode/int/arithmetic/mult.hpp" bodystart="62" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Arithmetic_1a38c6fc5acff7cabf0f1aefb757eab238" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>forceinline long long int</type>
        <definition>forceinline long long int Gecode::Int::Arithmetic::dll</definition>
        <argsstring>(int x)</argsstring>
        <name>dll</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Decrement <emphasis>x</emphasis> by one. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/arithmetic/mult.hpp" line="67" column="1" bodyfile="/usr/include/gecode/int/arithmetic/mult.hpp" bodystart="67" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Arithmetic_1a2bdb22b9a75bfcb96af7fdd23c2e86d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class View</type>
          </param>
        </templateparamlist>
        <type>forceinline bool</type>
        <definition>forceinline bool Gecode::Int::Arithmetic::pos</definition>
        <argsstring>(const View &amp;x)</argsstring>
        <name>pos</name>
        <param>
          <type>const View &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Test whether <emphasis>x</emphasis> is postive. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/arithmetic/mult.hpp" line="74" column="1" bodyfile="/usr/include/gecode/int/arithmetic/mult.hpp" bodystart="74" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Arithmetic_1a821d7a1c3c1d946848374295b2cfa757" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class View</type>
          </param>
        </templateparamlist>
        <type>forceinline bool</type>
        <definition>forceinline bool Gecode::Int::Arithmetic::neg</definition>
        <argsstring>(const View &amp;x)</argsstring>
        <name>neg</name>
        <param>
          <type>const View &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Test whether <emphasis>x</emphasis> is negative. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/arithmetic/mult.hpp" line="80" column="1" bodyfile="/usr/include/gecode/int/arithmetic/mult.hpp" bodystart="80" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Arithmetic_1ae9ad9f2e8e0a5eede7fa2860381f2e16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class View</type>
          </param>
        </templateparamlist>
        <type>forceinline bool</type>
        <definition>forceinline bool Gecode::Int::Arithmetic::any</definition>
        <argsstring>(const View &amp;x)</argsstring>
        <name>any</name>
        <param>
          <type>const View &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Test whether <emphasis>x</emphasis> is neither positive nor negative. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/arithmetic/mult.hpp" line="86" column="1" bodyfile="/usr/include/gecode/int/arithmetic/mult.hpp" bodystart="86" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Arithmetic_1a34ed0fe364e8426cf6e317b286e60af3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class VA</type>
          </param>
          <param>
            <type>class VB</type>
          </param>
          <param>
            <type>class VC</type>
          </param>
        </templateparamlist>
        <type>forceinline <ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>forceinline ExecStatus Gecode::Int::Arithmetic::prop_mult_plus_bnd</definition>
        <argsstring>(Space &amp;home, Propagator &amp;p, VA x0, VB x1, VC x2)</argsstring>
        <name>prop_mult_plus_bnd</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Propagator" kindref="compound">Propagator</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>VA</type>
          <declname>x0</declname>
        </param>
        <param>
          <type>VB</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>VC</type>
          <declname>x2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/arithmetic/mult.hpp" line="183" column="1" bodyfile="/usr/include/gecode/int/arithmetic/mult.hpp" bodystart="183" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Arithmetic_1a457ac4fb2f0d3111c2925fefe793a5ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class View</type>
          </param>
        </templateparamlist>
        <type>forceinline <ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>forceinline ExecStatus Gecode::Int::Arithmetic::prop_mult_dom</definition>
        <argsstring>(Space &amp;home, Propagator &amp;p, View x0, View x1, View x2)</argsstring>
        <name>prop_mult_dom</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Propagator" kindref="compound">Propagator</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>View</type>
          <declname>x0</declname>
        </param>
        <param>
          <type>View</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>View</type>
          <declname>x2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/arithmetic/mult.hpp" line="278" column="1" bodyfile="/usr/include/gecode/int/arithmetic/mult.hpp" bodystart="278" bodyend="294"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Arithmetic_1aecd73428b5942ec25543c8c69d517389" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Ops</type>
          </param>
          <param>
            <type>bool</type>
            <declname>minus</declname>
            <defname>minus</defname>
          </param>
        </templateparamlist>
        <type>forceinline <ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>forceinline ExecStatus Gecode::Int::Arithmetic::prop_nroot_plus_bnd</definition>
        <argsstring>(Space &amp;home, IntView x0, IntView x1, const Ops &amp;ops)</argsstring>
        <name>prop_nroot_plus_bnd</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1IntView" kindref="compound">IntView</ref></type>
          <declname>x0</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1IntView" kindref="compound">IntView</ref></type>
          <declname>x1</declname>
        </param>
        <param>
          <type>const Ops &amp;</type>
          <declname>ops</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/arithmetic/nroot.hpp" line="52" column="1" bodyfile="/usr/include/gecode/int/arithmetic/nroot.hpp" bodystart="52" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Arithmetic_1af884a6367be3da47e824d86119d05105" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Ops</type>
          </param>
        </templateparamlist>
        <type>forceinline <ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>forceinline ExecStatus Gecode::Int::Arithmetic::prop_nroot_bnd</definition>
        <argsstring>(Space &amp;home, IntView x0, IntView x1, const Ops &amp;ops)</argsstring>
        <name>prop_nroot_bnd</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1IntView" kindref="compound">IntView</ref></type>
          <declname>x0</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1IntView" kindref="compound">IntView</ref></type>
          <declname>x1</declname>
        </param>
        <param>
          <type>const Ops &amp;</type>
          <declname>ops</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/arithmetic/nroot.hpp" line="156" column="1" bodyfile="/usr/include/gecode/int/arithmetic/nroot.hpp" bodystart="156" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Arithmetic_1a3d373ee305ac8c7bb286f9eafc8a4acf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class VA</type>
          </param>
          <param>
            <type>class VB</type>
          </param>
          <param>
            <type>class Ops</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>ExecStatus Gecode::Int::Arithmetic::prop_pow_plus_bnd</definition>
        <argsstring>(Space &amp;home, VA x0, VB x1, const Ops &amp;ops)</argsstring>
        <name>prop_pow_plus_bnd</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>VA</type>
          <declname>x0</declname>
        </param>
        <param>
          <type>VB</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>const Ops &amp;</type>
          <declname>ops</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/arithmetic/pow.hpp" line="51" column="1" bodyfile="/usr/include/gecode/int/arithmetic/pow.hpp" bodystart="51" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Arithmetic_1ab7ee298d178d8298cbb5956d7b616385" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Ops</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>ExecStatus Gecode::Int::Arithmetic::prop_pow_bnd</definition>
        <argsstring>(Space &amp;home, IntView x0, IntView x1, const Ops &amp;ops)</argsstring>
        <name>prop_pow_bnd</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1IntView" kindref="compound">IntView</ref></type>
          <declname>x0</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1IntView" kindref="compound">IntView</ref></type>
          <declname>x1</declname>
        </param>
        <param>
          <type>const Ops &amp;</type>
          <declname>ops</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/arithmetic/pow.hpp" line="127" column="1" bodyfile="/usr/include/gecode/int/arithmetic/pow.hpp" bodystart="127" bodyend="144"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Numerical (arithmetic) propagators. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/usr/include/gecode/int/arithmetic/abs.hpp" line="42" column="1"/>
  </compounddef>
</doxygen>
