<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classGecode_1_1ValSelCommitBase" kind="class" prot="public" abstract="yes">
    <compoundname>Gecode::ValSelCommitBase</compoundname>
    <includes refid="brancher-val-sel-commit_8hpp" local="no">brancher-val-sel-commit.hpp</includes>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>_View</declname>
        <defname>_View</defname>
      </param>
      <param>
        <type>class</type>
        <declname>_Val</declname>
        <defname>_Val</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Memory management</header>
      <memberdef kind="function" id="classGecode_1_1ValSelCommitBase_1a0ee14246336933185a961486b0ee0069" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>forceinline void * Gecode::ValSelCommitBase&lt; View, Val &gt;::operator new</definition>
        <argsstring>(size_t s, Space &amp;home)</argsstring>
        <name>operator new</name>
        <param>
          <type>size_t</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <briefdescription>
<para>Allocate memory from space. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/brancher-val-sel-commit.hpp" line="81" column="1" bodyfile="/usr/include/gecode/kernel/brancher-val-sel-commit.hpp" bodystart="145" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1ValSelCommitBase_1a9aa565913196d07a049954045650f083" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::ValSelCommitBase&lt; View, Val &gt;::operator delete</definition>
        <argsstring>(void *p, Space &amp;home)</argsstring>
        <name>operator delete</name>
        <param>
          <type>void *</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <briefdescription>
<para>Return memory to space. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/brancher-val-sel-commit.hpp" line="83" column="1" bodyfile="/usr/include/gecode/kernel/brancher-val-sel-commit.hpp" bodystart="142" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1ValSelCommitBase_1a05ac49867bde8d48fc2acc82a3690315" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::ValSelCommitBase&lt; View, Val &gt;::operator delete</definition>
        <argsstring>(void *p)</argsstring>
        <name>operator delete</name>
        <param>
          <type>void *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Needed for exceptions. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/brancher-val-sel-commit.hpp" line="85" column="1" bodyfile="/usr/include/gecode/kernel/brancher-val-sel-commit.hpp" bodystart="139" bodyend="139"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classGecode_1_1ValSelCommitBase_1a83afac14ab9952d1e2cec017f3e6ae29" prot="public" static="no">
        <type>_View</type>
        <definition>typedef _View Gecode::ValSelCommitBase&lt; _View, _Val &gt;::View</definition>
        <argsstring></argsstring>
        <name>View</name>
        <briefdescription>
<para>View type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/brancher-val-sel-commit.hpp" line="51" column="1" bodyfile="/usr/include/gecode/kernel/brancher-val-sel-commit.hpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classGecode_1_1ValSelCommitBase_1aea76d86174df5df2832725f688c9ce91" prot="public" static="no">
        <type>_Val</type>
        <definition>typedef _Val Gecode::ValSelCommitBase&lt; _View, _Val &gt;::Val</definition>
        <argsstring></argsstring>
        <name>Val</name>
        <briefdescription>
<para>Value type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/brancher-val-sel-commit.hpp" line="53" column="1" bodyfile="/usr/include/gecode/kernel/brancher-val-sel-commit.hpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classGecode_1_1ValSelCommitBase_1a358581edaeef98017ed1f5c84dd7f878" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::ValSelCommitBase&lt; View, Val &gt;::ValSelCommitBase</definition>
        <argsstring>(Space &amp;home, const ValBranch &amp;vb)</argsstring>
        <name>ValSelCommitBase</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1ValBranch" kindref="compound">ValBranch</ref> &amp;</type>
          <declname>vb</declname>
        </param>
        <briefdescription>
<para>Constructor for initialization. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/brancher-val-sel-commit.hpp" line="56" column="1" bodyfile="/usr/include/gecode/kernel/brancher-val-sel-commit.hpp" bodystart="131" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1ValSelCommitBase_1ab8306d78f1b033a58a49d21267bcf8da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::ValSelCommitBase&lt; View, Val &gt;::ValSelCommitBase</definition>
        <argsstring>(Space &amp;home, bool shared, ValSelCommitBase&lt; View, Val &gt; &amp;vsc)</argsstring>
        <name>ValSelCommitBase</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>shared</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ValSelCommitBase" kindref="compound">ValSelCommitBase</ref>&lt; <ref refid="classGecode_1_1ValSelCommitBase_1a83afac14ab9952d1e2cec017f3e6ae29" kindref="member">View</ref>, <ref refid="classGecode_1_1ValSelCommitBase_1aea76d86174df5df2832725f688c9ce91" kindref="member">Val</ref> &gt; &amp;</type>
          <declname>vsc</declname>
        </param>
        <briefdescription>
<para>Constructor for cloning. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/brancher-val-sel-commit.hpp" line="58" column="1" bodyfile="/usr/include/gecode/kernel/brancher-val-sel-commit.hpp" bodystart="135" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1ValSelCommitBase_1a60c87b6c54ca414f93cef96cab5910f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classGecode_1_1ValSelCommitBase_1aea76d86174df5df2832725f688c9ce91" kindref="member">Val</ref></type>
        <definition>virtual Val Gecode::ValSelCommitBase&lt; _View, _Val &gt;::val</definition>
        <argsstring>(const Space &amp;home, View x, int i)=0</argsstring>
        <name>val</name>
        <reimplementedby refid="classGecode_1_1ValSelCommit_1a9c6f3f7679c37ab4d87d1bc39645142b">val</reimplementedby>
        <param>
          <type>const <ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ValSelCommitBase_1a83afac14ab9952d1e2cec017f3e6ae29" kindref="member">View</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Return value of view <emphasis>x</emphasis> at position <emphasis>i</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/brancher-val-sel-commit.hpp" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1ValSelCommitBase_1a07da4a911e5ea1512ce13eaa174e9466" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>virtual ModEvent Gecode::ValSelCommitBase&lt; _View, _Val &gt;::commit</definition>
        <argsstring>(Space &amp;home, unsigned int a, View x, int i, Val n)=0</argsstring>
        <name>commit</name>
        <reimplementedby refid="classGecode_1_1ValSelCommit_1aaa88da2b45021b8c8889774c1219ee72">commit</reimplementedby>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ValSelCommitBase_1a83afac14ab9952d1e2cec017f3e6ae29" kindref="member">View</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ValSelCommitBase_1aea76d86174df5df2832725f688c9ce91" kindref="member">Val</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Commit view <emphasis>x</emphasis> at position <emphasis>i</emphasis> to value <emphasis>n</emphasis> for alternative <emphasis>a</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/brancher-val-sel-commit.hpp" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1ValSelCommitBase_1a39c438b0d8f03ce3ad0058d15b909d36" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classGecode_1_1NGL" kindref="compound">NGL</ref> *</type>
        <definition>virtual NGL* Gecode::ValSelCommitBase&lt; _View, _Val &gt;::ngl</definition>
        <argsstring>(Space &amp;home, unsigned int a, View x, Val n) const =0</argsstring>
        <name>ngl</name>
        <reimplementedby refid="classGecode_1_1ValSelCommit_1a8e16673cd1d2e4a60056579da900a6c6">ngl</reimplementedby>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ValSelCommitBase_1a83afac14ab9952d1e2cec017f3e6ae29" kindref="member">View</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ValSelCommitBase_1aea76d86174df5df2832725f688c9ce91" kindref="member">Val</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Create no-good literal for choice <emphasis>c</emphasis> and alternative <emphasis>a</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/brancher-val-sel-commit.hpp" line="66" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1ValSelCommitBase_1a94cfc929da76a464e4a98251720eb007" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Gecode::ValSelCommitBase&lt; _View, _Val &gt;::print</definition>
        <argsstring>(const Space &amp;home, unsigned int a, View x, int i, const Val &amp;n, std::ostream &amp;o) const =0</argsstring>
        <name>print</name>
        <reimplementedby refid="classGecode_1_1ValSelCommit_1a45adf5057b3a8e523f785cc675559772">print</reimplementedby>
        <param>
          <type>const <ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ValSelCommitBase_1a83afac14ab9952d1e2cec017f3e6ae29" kindref="member">View</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1ValSelCommitBase_1aea76d86174df5df2832725f688c9ce91" kindref="member">Val</ref> &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>std::ostream &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
<para>Print on <emphasis>o</emphasis> branch for alternative <emphasis>a</emphasis>, view <emphasis>x</emphasis> at position <emphasis>i</emphasis>, and value <emphasis>n</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/brancher-val-sel-commit.hpp" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1ValSelCommitBase_1aacf724ce06eb5fdbf07c89b6f898268f" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classGecode_1_1ValSelCommitBase" kindref="compound">ValSelCommitBase</ref>&lt; <ref refid="classGecode_1_1ValSelCommitBase_1a83afac14ab9952d1e2cec017f3e6ae29" kindref="member">View</ref>, <ref refid="classGecode_1_1ValSelCommitBase_1aea76d86174df5df2832725f688c9ce91" kindref="member">Val</ref> &gt; *</type>
        <definition>virtual ValSelCommitBase&lt;View,Val&gt;* Gecode::ValSelCommitBase&lt; _View, _Val &gt;::copy</definition>
        <argsstring>(Space &amp;home, bool shared)=0</argsstring>
        <name>copy</name>
        <reimplementedby refid="classGecode_1_1ValSelCommit_1a14a40b3b2acc04506a4af17a865bfc2c">copy</reimplementedby>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>shared</declname>
        </param>
        <briefdescription>
<para>Perform cloning. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/brancher-val-sel-commit.hpp" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1ValSelCommitBase_1aabb0896e9be1dd51b09c86e7fb7a5634" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool Gecode::ValSelCommitBase&lt; _View, _Val &gt;::notice</definition>
        <argsstring>(void) const =0</argsstring>
        <name>notice</name>
        <reimplementedby refid="classGecode_1_1ValSelCommit_1ade55ceb17f72120c27ca1730f728f471">notice</reimplementedby>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Whether dispose must always be called (that is, notice is needed) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/brancher-val-sel-commit.hpp" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1ValSelCommitBase_1a933ce7d2e4cb215482da500c82d8da41" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Gecode::ValSelCommitBase&lt; _View, _Val &gt;::dispose</definition>
        <argsstring>(Space &amp;home)=0</argsstring>
        <name>dispose</name>
        <reimplementedby refid="classGecode_1_1ValSelCommit_1adcfde640fb7366091d76cffbdb86af69">dispose</reimplementedby>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <briefdescription>
<para>Delete value selection. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/brancher-val-sel-commit.hpp" line="77" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Base class for value selection and commit. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/usr/include/gecode/kernel/brancher-val-sel-commit.hpp" line="48" column="1" bodyfile="/usr/include/gecode/kernel/brancher-val-sel-commit.hpp" bodystart="48" bodyend="87"/>
    <listofallmembers>
      <member refid="classGecode_1_1ValSelCommitBase_1a07da4a911e5ea1512ce13eaa174e9466" prot="public" virt="pure-virtual"><scope>Gecode::ValSelCommitBase</scope><name>commit</name></member>
      <member refid="classGecode_1_1ValSelCommitBase_1aacf724ce06eb5fdbf07c89b6f898268f" prot="public" virt="pure-virtual"><scope>Gecode::ValSelCommitBase</scope><name>copy</name></member>
      <member refid="classGecode_1_1ValSelCommitBase_1a933ce7d2e4cb215482da500c82d8da41" prot="public" virt="pure-virtual"><scope>Gecode::ValSelCommitBase</scope><name>dispose</name></member>
      <member refid="classGecode_1_1ValSelCommitBase_1a39c438b0d8f03ce3ad0058d15b909d36" prot="public" virt="pure-virtual"><scope>Gecode::ValSelCommitBase</scope><name>ngl</name></member>
      <member refid="classGecode_1_1ValSelCommitBase_1aabb0896e9be1dd51b09c86e7fb7a5634" prot="public" virt="pure-virtual"><scope>Gecode::ValSelCommitBase</scope><name>notice</name></member>
      <member refid="classGecode_1_1ValSelCommitBase_1a9aa565913196d07a049954045650f083" prot="public" virt="non-virtual"><scope>Gecode::ValSelCommitBase</scope><name>operator delete</name></member>
      <member refid="classGecode_1_1ValSelCommitBase_1a05ac49867bde8d48fc2acc82a3690315" prot="public" virt="non-virtual"><scope>Gecode::ValSelCommitBase</scope><name>operator delete</name></member>
      <member refid="classGecode_1_1ValSelCommitBase_1a0ee14246336933185a961486b0ee0069" prot="public" virt="non-virtual"><scope>Gecode::ValSelCommitBase</scope><name>operator new</name></member>
      <member refid="classGecode_1_1ValSelCommitBase_1a94cfc929da76a464e4a98251720eb007" prot="public" virt="pure-virtual"><scope>Gecode::ValSelCommitBase</scope><name>print</name></member>
      <member refid="classGecode_1_1ValSelCommitBase_1aea76d86174df5df2832725f688c9ce91" prot="public" virt="non-virtual"><scope>Gecode::ValSelCommitBase</scope><name>Val</name></member>
      <member refid="classGecode_1_1ValSelCommitBase_1a60c87b6c54ca414f93cef96cab5910f3" prot="public" virt="pure-virtual"><scope>Gecode::ValSelCommitBase</scope><name>val</name></member>
      <member refid="classGecode_1_1ValSelCommitBase_1a358581edaeef98017ed1f5c84dd7f878" prot="public" virt="non-virtual"><scope>Gecode::ValSelCommitBase</scope><name>ValSelCommitBase</name></member>
      <member refid="classGecode_1_1ValSelCommitBase_1ab8306d78f1b033a58a49d21267bcf8da" prot="public" virt="non-virtual"><scope>Gecode::ValSelCommitBase</scope><name>ValSelCommitBase</name></member>
      <member refid="classGecode_1_1ValSelCommitBase_1a83afac14ab9952d1e2cec017f3e6ae29" prot="public" virt="non-virtual"><scope>Gecode::ValSelCommitBase</scope><name>View</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
