<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classGecode_1_1Iter_1_1Ranges_1_1NaryUnion" kind="class" prot="public">
    <compoundname>Gecode::Iter::Ranges::NaryUnion</compoundname>
    <basecompoundref refid="classGecode_1_1Iter_1_1Ranges_1_1RangeListIter" prot="public" virt="non-virtual">Gecode::Iter::Ranges::RangeListIter</basecompoundref>
    <includes refid="ranges-union_8hpp" local="no">ranges-union.hpp</includes>
      <sectiondef kind="user-defined">
      <header>Constructors and initialization</header>
      <memberdef kind="function" id="classGecode_1_1Iter_1_1Ranges_1_1NaryUnion_1a1b6b977ffaf2a261a5012041f3251f41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Iter::Ranges::NaryUnion::NaryUnion</definition>
        <argsstring>(void)</argsstring>
        <name>NaryUnion</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/iter/ranges-union.hpp" line="92" column="1" bodyfile="/usr/include/gecode/iter/ranges-union.hpp" bodystart="279" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Iter_1_1Ranges_1_1NaryUnion_1a8c2e6de6ed45e8b9c5412321995711be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>Gecode::Iter::Ranges::NaryUnion::NaryUnion</definition>
        <argsstring>(Region &amp;r, I &amp;i)</argsstring>
        <name>NaryUnion</name>
        <param>
          <type><ref refid="classGecode_1_1Region" kindref="compound">Region</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>I &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Initialize with single iterator <emphasis>i</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/iter/ranges-union.hpp" line="95" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Iter_1_1Ranges_1_1NaryUnion_1a46efc67d1bef5cba1e292e9359e5e3bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class I</type>
          </param>
          <param>
            <type>class J</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>Gecode::Iter::Ranges::NaryUnion::NaryUnion</definition>
        <argsstring>(Region &amp;r, I &amp;i, J &amp;j)</argsstring>
        <name>NaryUnion</name>
        <param>
          <type><ref refid="classGecode_1_1Region" kindref="compound">Region</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>I &amp;</type>
          <declname>i</declname>
        </param>
        <param>
          <type>J &amp;</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>Initialize with iterators <emphasis>i</emphasis> and <emphasis>j</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/iter/ranges-union.hpp" line="98" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Iter_1_1Ranges_1_1NaryUnion_1ad7458717023fdc0d41e1068fe3f8c252" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>Gecode::Iter::Ranges::NaryUnion::NaryUnion</definition>
        <argsstring>(Region &amp;r, I *i, int n)</argsstring>
        <name>NaryUnion</name>
        <param>
          <type><ref refid="classGecode_1_1Region" kindref="compound">Region</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>I *</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Initialize with <emphasis>n</emphasis> iterators in <emphasis>i</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/iter/ranges-union.hpp" line="101" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Iter_1_1Ranges_1_1NaryUnion_1ae839fbf2398e2a95286aa49be447d8f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Gecode::Iter::Ranges::NaryUnion::init</definition>
        <argsstring>(Region &amp;r, I &amp;i)</argsstring>
        <name>init</name>
        <param>
          <type><ref refid="classGecode_1_1Region" kindref="compound">Region</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>I &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Initialize with single iterator <emphasis>i</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/iter/ranges-union.hpp" line="104" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Iter_1_1Ranges_1_1NaryUnion_1aff0be17644be8a70cbcb8225cc80d64e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class I</type>
          </param>
          <param>
            <type>class J</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Gecode::Iter::Ranges::NaryUnion::init</definition>
        <argsstring>(Region &amp;r, I &amp;i, J &amp;j)</argsstring>
        <name>init</name>
        <param>
          <type><ref refid="classGecode_1_1Region" kindref="compound">Region</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>I &amp;</type>
          <declname>i</declname>
        </param>
        <param>
          <type>J &amp;</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>Initialize with iterators <emphasis>i</emphasis> and <emphasis>j</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/iter/ranges-union.hpp" line="107" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Iter_1_1Ranges_1_1NaryUnion_1ac16f8586b021ab9ba6c3798cc33fb2b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Gecode::Iter::Ranges::NaryUnion::init</definition>
        <argsstring>(Region &amp;r, I *i, int n)</argsstring>
        <name>init</name>
        <param>
          <type><ref refid="classGecode_1_1Region" kindref="compound">Region</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>I *</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Initialize with <emphasis>n</emphasis> iterators in <emphasis>i</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/iter/ranges-union.hpp" line="110" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Iter_1_1Ranges_1_1NaryUnion_1aaa8915ca4fb0951af5223c959076a6a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Gecode::Iter::Ranges::NaryUnion::operator|=</definition>
        <argsstring>(I &amp;i)</argsstring>
        <name>operator|=</name>
        <param>
          <type>I &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Add iterator <emphasis>i</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/iter/ranges-union.hpp" line="113" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Iter_1_1Ranges_1_1NaryUnion_1a48fc5e39d703ab11eddc0c2d9ddb9022" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGecode_1_1Iter_1_1Ranges_1_1NaryUnion" kindref="compound">NaryUnion</ref> &amp;</type>
        <definition>forceinline NaryUnion &amp; Gecode::Iter::Ranges::NaryUnion::operator=</definition>
        <argsstring>(const NaryUnion &amp;m)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classGecode_1_1Iter_1_1Ranges_1_1NaryUnion" kindref="compound">NaryUnion</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Assignment operator (both iterators must be allocated from the same region) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/iter/ranges-union.hpp" line="115" column="1" bodyfile="/usr/include/gecode/iter/ranges-union.hpp" bodystart="354" bodyend="357"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classGecode_1_1Iter_1_1Ranges_1_1NaryUnion_1a1c8884a55a804009292be660a42e40d9" prot="protected" static="no" mutable="no">
        <type><ref refid="classGecode_1_1Iter_1_1Ranges_1_1RangeListIter_1_1RangeList" kindref="compound">RangeList</ref> *</type>
        <definition>RangeList* Gecode::Iter::Ranges::NaryUnion::f</definition>
        <argsstring></argsstring>
        <name>f</name>
        <briefdescription>
<para>Freelist used for allocation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/iter/ranges-union.hpp" line="81" column="1" bodyfile="/usr/include/gecode/iter/ranges-union.hpp" bodystart="81" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classGecode_1_1Iter_1_1Ranges_1_1NaryUnion_1afacbfe174294cdc2774e757340636ca3" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class I</type>
          </param>
          <param>
            <type>class J</type>
          </param>
        </templateparamlist>
        <type><ref refid="classGecode_1_1Iter_1_1Ranges_1_1RangeListIter_1_1RangeList" kindref="compound">RangeList</ref> *</type>
        <definition>RangeList* Gecode::Iter::Ranges::NaryUnion::two</definition>
        <argsstring>(I &amp;i, J &amp;j)</argsstring>
        <name>two</name>
        <param>
          <type>I &amp;</type>
          <declname>i</declname>
        </param>
        <param>
          <type>J &amp;</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>Return range list for union of two iterators. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/iter/ranges-union.hpp" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Iter_1_1Ranges_1_1NaryUnion_1a34fb9200711a316d9941f21932e5b77b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Gecode::Iter::Ranges::NaryUnion::insert</definition>
        <argsstring>(I &amp;i, RangeList *&amp;u)</argsstring>
        <name>insert</name>
        <param>
          <type>I &amp;</type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Iter_1_1Ranges_1_1RangeListIter_1_1RangeList" kindref="compound">RangeList</ref> *&amp;</type>
          <declname>u</declname>
        </param>
        <briefdescription>
<para>Insert ranges from <emphasis>i</emphasis> into <emphasis>u</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/iter/ranges-union.hpp" line="87" column="1" bodyfile="/usr/include/gecode/iter/ranges-union.hpp" bodystart="227" bodyend="275"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classGecode_1_1Iter_1_1Ranges_1_1NaryUnion_1a99387f9c12ed396f28b8af0b1974fe38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class I</type>
          </param>
          <param>
            <type>class J</type>
          </param>
        </templateparamlist>
        <type><ref refid="classGecode_1_1Iter_1_1Ranges_1_1RangeListIter_1_1RangeList" kindref="compound">RangeListIter::RangeList</ref> *</type>
        <definition>RangeListIter::RangeList* Gecode::Iter::Ranges::NaryUnion::two</definition>
        <argsstring>(I &amp;i, J &amp;j)</argsstring>
        <name>two</name>
        <param>
          <type>I &amp;</type>
          <declname>i</declname>
        </param>
        <param>
          <type>J &amp;</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/iter/ranges-union.hpp" line="184" column="1" bodyfile="/usr/include/gecode/iter/ranges-union.hpp" bodystart="184" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Iter_1_1Ranges_1_1NaryUnion_1a10d64e96df2ce53230bf23aef1585f52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type>forceinline void</type>
        <definition>forceinline void Gecode::Iter::Ranges::NaryUnion::init</definition>
        <argsstring>(Region &amp;r, I &amp;i)</argsstring>
        <name>init</name>
        <param>
          <type><ref refid="classGecode_1_1Region" kindref="compound">Region</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>I &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/iter/ranges-union.hpp" line="284" column="1" bodyfile="/usr/include/gecode/iter/ranges-union.hpp" bodystart="284" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Iter_1_1Ranges_1_1NaryUnion_1aaf6c81112294a54da59fdc002601ef88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class I</type>
          </param>
          <param>
            <type>class J</type>
          </param>
        </templateparamlist>
        <type>forceinline void</type>
        <definition>forceinline void Gecode::Iter::Ranges::NaryUnion::init</definition>
        <argsstring>(Region &amp;r, I &amp;i, J &amp;j)</argsstring>
        <name>init</name>
        <param>
          <type><ref refid="classGecode_1_1Region" kindref="compound">Region</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>I &amp;</type>
          <declname>i</declname>
        </param>
        <param>
          <type>J &amp;</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/iter/ranges-union.hpp" line="292" column="1" bodyfile="/usr/include/gecode/iter/ranges-union.hpp" bodystart="292" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Iter_1_1Ranges_1_1NaryUnion_1a51a646f4e8cc24fa7d650b56e38bdc8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type>forceinline void</type>
        <definition>forceinline void Gecode::Iter::Ranges::NaryUnion::init</definition>
        <argsstring>(Region &amp;r, I *i, int n)</argsstring>
        <name>init</name>
        <param>
          <type><ref refid="classGecode_1_1Region" kindref="compound">Region</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>I *</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/iter/ranges-union.hpp" line="300" column="1" bodyfile="/usr/include/gecode/iter/ranges-union.hpp" bodystart="300" bodyend="327"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Iter_1_1Ranges_1_1NaryUnion_1a0d190edf7636df779affd764b054a5ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type>forceinline</type>
        <definition>forceinline Gecode::Iter::Ranges::NaryUnion::NaryUnion</definition>
        <argsstring>(Region &amp;r, I &amp;i)</argsstring>
        <name>NaryUnion</name>
        <param>
          <type><ref refid="classGecode_1_1Region" kindref="compound">Region</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>I &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/iter/ranges-union.hpp" line="331" column="1" bodyfile="/usr/include/gecode/iter/ranges-union.hpp" bodystart="331" bodyend="333"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Iter_1_1Ranges_1_1NaryUnion_1a7cca5601792124962794cc45b1a712bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class I</type>
          </param>
          <param>
            <type>class J</type>
          </param>
        </templateparamlist>
        <type>forceinline</type>
        <definition>forceinline Gecode::Iter::Ranges::NaryUnion::NaryUnion</definition>
        <argsstring>(Region &amp;r, I &amp;i, J &amp;j)</argsstring>
        <name>NaryUnion</name>
        <param>
          <type><ref refid="classGecode_1_1Region" kindref="compound">Region</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>I &amp;</type>
          <declname>i</declname>
        </param>
        <param>
          <type>J &amp;</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/iter/ranges-union.hpp" line="336" column="1" bodyfile="/usr/include/gecode/iter/ranges-union.hpp" bodystart="336" bodyend="338"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Iter_1_1Ranges_1_1NaryUnion_1ab020d729c9ef1588e6ffc0e73780da10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type>forceinline</type>
        <definition>forceinline Gecode::Iter::Ranges::NaryUnion::NaryUnion</definition>
        <argsstring>(Region &amp;r, I *i, int n)</argsstring>
        <name>NaryUnion</name>
        <param>
          <type><ref refid="classGecode_1_1Region" kindref="compound">Region</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>I *</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/iter/ranges-union.hpp" line="341" column="1" bodyfile="/usr/include/gecode/iter/ranges-union.hpp" bodystart="341" bodyend="343"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Iter_1_1Ranges_1_1NaryUnion_1ae9ee65c4d0c534060486f9e16bdb9c8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type>forceinline void</type>
        <definition>forceinline void Gecode::Iter::Ranges::NaryUnion::operator|=</definition>
        <argsstring>(I &amp;i)</argsstring>
        <name>operator|=</name>
        <param>
          <type>I &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/iter/ranges-union.hpp" line="347" column="1" bodyfile="/usr/include/gecode/iter/ranges-union.hpp" bodystart="347" bodyend="351"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Range iterator for union of iterators. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4352">
        <label>Gecode::Iter::Ranges::RangeListIter</label>
        <link refid="classGecode_1_1Iter_1_1Ranges_1_1RangeListIter"/>
      </node>
      <node id="4351">
        <label>Gecode::Iter::Ranges::NaryUnion</label>
        <link refid="classGecode_1_1Iter_1_1Ranges_1_1NaryUnion"/>
        <childnode refid="4352" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4359">
        <label>Gecode::Iter::Ranges::RangeList</label>
        <link refid="classGecode_1_1Iter_1_1Ranges_1_1RangeList"/>
        <childnode refid="4360" relation="usage">
          <edgelabel>c</edgelabel>
        </childnode>
      </node>
      <node id="4355">
        <label>Gecode::Iter::Ranges::RangeListIter::RangeList</label>
        <link refid="classGecode_1_1Iter_1_1Ranges_1_1RangeListIter_1_1RangeList"/>
        <childnode refid="4356" relation="public-inheritance">
        </childnode>
        <childnode refid="4355" relation="usage">
          <edgelabel>next</edgelabel>
        </childnode>
      </node>
      <node id="4358">
        <label>Gecode::Support::BlockAllocator&lt; RangeList, Region &gt;</label>
        <link refid="classGecode_1_1Support_1_1BlockAllocator"/>
      </node>
      <node id="4356">
        <label>Gecode::Support::BlockClient&lt; RangeList, Region &gt;</label>
        <link refid="classGecode_1_1Support_1_1BlockClient"/>
      </node>
      <node id="4354">
        <label>Gecode::Iter::Ranges::RangeListIter</label>
        <link refid="classGecode_1_1Iter_1_1Ranges_1_1RangeListIter"/>
        <childnode refid="4355" relation="usage">
          <edgelabel>h</edgelabel>
          <edgelabel>c</edgelabel>
        </childnode>
        <childnode refid="4357" relation="usage">
          <edgelabel>rlio</edgelabel>
        </childnode>
      </node>
      <node id="4360">
        <label>Gecode::RangeList</label>
        <link refid="classGecode_1_1RangeList"/>
        <childnode refid="4361" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4357">
        <label>Gecode::Iter::Ranges::RangeListIter::RLIO</label>
        <link refid="classGecode_1_1Iter_1_1Ranges_1_1RangeListIter_1_1RLIO"/>
        <childnode refid="4358" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4353">
        <label>Gecode::Iter::Ranges::NaryUnion</label>
        <link refid="classGecode_1_1Iter_1_1Ranges_1_1NaryUnion"/>
        <childnode refid="4354" relation="public-inheritance">
        </childnode>
        <childnode refid="4359" relation="usage">
          <edgelabel>f</edgelabel>
        </childnode>
      </node>
      <node id="4361">
        <label>Gecode::FreeList</label>
        <link refid="classGecode_1_1FreeList"/>
        <childnode refid="4361" relation="usage">
          <edgelabel>_next</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/usr/include/gecode/iter/ranges-union.hpp" line="78" column="1" bodyfile="/usr/include/gecode/iter/ranges-union.hpp" bodystart="78" bodyend="117"/>
    <listofallmembers>
      <member refid="classGecode_1_1Iter_1_1Ranges_1_1RangeListIter_1a9f0ac227a70c273e05ebd9935f51710e" prot="protected" virt="non-virtual"><scope>Gecode::Iter::Ranges::NaryUnion</scope><name>c</name></member>
      <member refid="classGecode_1_1Iter_1_1Ranges_1_1RangeListIter_1a0ea16026e9e24ffcadab8b8947355583" prot="protected" virt="non-virtual"><scope>Gecode::Iter::Ranges::NaryUnion</scope><name>copy</name></member>
      <member refid="classGecode_1_1Iter_1_1Ranges_1_1NaryUnion_1a1c8884a55a804009292be660a42e40d9" prot="protected" virt="non-virtual"><scope>Gecode::Iter::Ranges::NaryUnion</scope><name>f</name></member>
      <member refid="classGecode_1_1Iter_1_1Ranges_1_1RangeListIter_1a19d9f5cd830a2d65de24db71e4decf3a" prot="protected" virt="non-virtual"><scope>Gecode::Iter::Ranges::NaryUnion</scope><name>get</name></member>
      <member refid="classGecode_1_1Iter_1_1Ranges_1_1RangeListIter_1ae057a12f50ae94a4c0ef75ac25b975f8" prot="protected" virt="non-virtual"><scope>Gecode::Iter::Ranges::NaryUnion</scope><name>h</name></member>
      <member refid="classGecode_1_1Iter_1_1Ranges_1_1NaryUnion_1ae839fbf2398e2a95286aa49be447d8f6" prot="public" virt="non-virtual"><scope>Gecode::Iter::Ranges::NaryUnion</scope><name>init</name></member>
      <member refid="classGecode_1_1Iter_1_1Ranges_1_1NaryUnion_1aff0be17644be8a70cbcb8225cc80d64e" prot="public" virt="non-virtual"><scope>Gecode::Iter::Ranges::NaryUnion</scope><name>init</name></member>
      <member refid="classGecode_1_1Iter_1_1Ranges_1_1NaryUnion_1ac16f8586b021ab9ba6c3798cc33fb2b4" prot="public" virt="non-virtual"><scope>Gecode::Iter::Ranges::NaryUnion</scope><name>init</name></member>
      <member refid="classGecode_1_1Iter_1_1Ranges_1_1NaryUnion_1a10d64e96df2ce53230bf23aef1585f52" prot="public" virt="non-virtual"><scope>Gecode::Iter::Ranges::NaryUnion</scope><name>init</name></member>
      <member refid="classGecode_1_1Iter_1_1Ranges_1_1NaryUnion_1aaf6c81112294a54da59fdc002601ef88" prot="public" virt="non-virtual"><scope>Gecode::Iter::Ranges::NaryUnion</scope><name>init</name></member>
      <member refid="classGecode_1_1Iter_1_1Ranges_1_1NaryUnion_1a51a646f4e8cc24fa7d650b56e38bdc8d" prot="public" virt="non-virtual"><scope>Gecode::Iter::Ranges::NaryUnion</scope><name>init</name></member>
      <member refid="classGecode_1_1Iter_1_1Ranges_1_1RangeListIter_1acb190d616bb87905b66f399e429f94c1" prot="public" virt="non-virtual" ambiguityscope="Gecode::Iter::Ranges::RangeListIter::"><scope>Gecode::Iter::Ranges::NaryUnion</scope><name>init</name></member>
      <member refid="classGecode_1_1Iter_1_1Ranges_1_1NaryUnion_1a34fb9200711a316d9941f21932e5b77b" prot="protected" virt="non-virtual"><scope>Gecode::Iter::Ranges::NaryUnion</scope><name>insert</name></member>
      <member refid="classGecode_1_1Iter_1_1Ranges_1_1RangeListIter_1af9ed32d0260719a410ab6c10121d4e7c" prot="public" virt="non-virtual"><scope>Gecode::Iter::Ranges::NaryUnion</scope><name>max</name></member>
      <member refid="classGecode_1_1Iter_1_1Ranges_1_1RangeListIter_1a4720de627a62a0b2aee5361e5e13df51" prot="public" virt="non-virtual"><scope>Gecode::Iter::Ranges::NaryUnion</scope><name>min</name></member>
      <member refid="classGecode_1_1Iter_1_1Ranges_1_1NaryUnion_1a1b6b977ffaf2a261a5012041f3251f41" prot="public" virt="non-virtual"><scope>Gecode::Iter::Ranges::NaryUnion</scope><name>NaryUnion</name></member>
      <member refid="classGecode_1_1Iter_1_1Ranges_1_1NaryUnion_1a8c2e6de6ed45e8b9c5412321995711be" prot="public" virt="non-virtual"><scope>Gecode::Iter::Ranges::NaryUnion</scope><name>NaryUnion</name></member>
      <member refid="classGecode_1_1Iter_1_1Ranges_1_1NaryUnion_1a46efc67d1bef5cba1e292e9359e5e3bf" prot="public" virt="non-virtual"><scope>Gecode::Iter::Ranges::NaryUnion</scope><name>NaryUnion</name></member>
      <member refid="classGecode_1_1Iter_1_1Ranges_1_1NaryUnion_1ad7458717023fdc0d41e1068fe3f8c252" prot="public" virt="non-virtual"><scope>Gecode::Iter::Ranges::NaryUnion</scope><name>NaryUnion</name></member>
      <member refid="classGecode_1_1Iter_1_1Ranges_1_1NaryUnion_1a0d190edf7636df779affd764b054a5ab" prot="public" virt="non-virtual"><scope>Gecode::Iter::Ranges::NaryUnion</scope><name>NaryUnion</name></member>
      <member refid="classGecode_1_1Iter_1_1Ranges_1_1NaryUnion_1a7cca5601792124962794cc45b1a712bb" prot="public" virt="non-virtual"><scope>Gecode::Iter::Ranges::NaryUnion</scope><name>NaryUnion</name></member>
      <member refid="classGecode_1_1Iter_1_1Ranges_1_1NaryUnion_1ab020d729c9ef1588e6ffc0e73780da10" prot="public" virt="non-virtual"><scope>Gecode::Iter::Ranges::NaryUnion</scope><name>NaryUnion</name></member>
      <member refid="classGecode_1_1Iter_1_1Ranges_1_1RangeListIter_1a490ee02914be1cc86a541b77f014489b" prot="public" virt="non-virtual"><scope>Gecode::Iter::Ranges::NaryUnion</scope><name>operator()</name></member>
      <member refid="classGecode_1_1Iter_1_1Ranges_1_1RangeListIter_1a9acfb095575a9db1d79aa67dd380269f" prot="public" virt="non-virtual"><scope>Gecode::Iter::Ranges::NaryUnion</scope><name>operator++</name></member>
      <member refid="classGecode_1_1Iter_1_1Ranges_1_1NaryUnion_1a48fc5e39d703ab11eddc0c2d9ddb9022" prot="public" virt="non-virtual"><scope>Gecode::Iter::Ranges::NaryUnion</scope><name>operator=</name></member>
      <member refid="classGecode_1_1Iter_1_1Ranges_1_1RangeListIter_1a4e5ec5bb8c6900217833bdfb4726e323" prot="public" virt="non-virtual" ambiguityscope="Gecode::Iter::Ranges::RangeListIter::"><scope>Gecode::Iter::Ranges::NaryUnion</scope><name>operator=</name></member>
      <member refid="classGecode_1_1Iter_1_1Ranges_1_1NaryUnion_1aaa8915ca4fb0951af5223c959076a6a0" prot="public" virt="non-virtual"><scope>Gecode::Iter::Ranges::NaryUnion</scope><name>operator|=</name></member>
      <member refid="classGecode_1_1Iter_1_1Ranges_1_1NaryUnion_1ae9ee65c4d0c534060486f9e16bdb9c8f" prot="public" virt="non-virtual"><scope>Gecode::Iter::Ranges::NaryUnion</scope><name>operator|=</name></member>
      <member refid="classGecode_1_1Iter_1_1Ranges_1_1RangeListIter_1a5688b76d90d5065c8c7d2aac79c16b80" prot="protected" virt="non-virtual"><scope>Gecode::Iter::Ranges::NaryUnion</scope><name>range</name></member>
      <member refid="classGecode_1_1Iter_1_1Ranges_1_1RangeListIter_1a8ac82f23a75a0bdab277222b480850fb" prot="protected" virt="non-virtual"><scope>Gecode::Iter::Ranges::NaryUnion</scope><name>range</name></member>
      <member refid="classGecode_1_1Iter_1_1Ranges_1_1RangeListIter_1a8960295f95bbda1986a46b4d8e5b8434" prot="protected" virt="non-virtual"><scope>Gecode::Iter::Ranges::NaryUnion</scope><name>range</name></member>
      <member refid="classGecode_1_1Iter_1_1Ranges_1_1RangeListIter_1ae4b849bb4e45d243c7e60e46c6c06dd4" prot="protected" virt="non-virtual"><scope>Gecode::Iter::Ranges::NaryUnion</scope><name>range</name></member>
      <member refid="classGecode_1_1Iter_1_1Ranges_1_1RangeListIter_1aad229a8c5f0f3043b4eebf9e66d0f9e4" prot="public" virt="non-virtual"><scope>Gecode::Iter::Ranges::NaryUnion</scope><name>range</name></member>
      <member refid="classGecode_1_1Iter_1_1Ranges_1_1RangeListIter_1a004c7f7a7879db6caa2790c1ce512485" prot="public" virt="non-virtual"><scope>Gecode::Iter::Ranges::NaryUnion</scope><name>range</name></member>
      <member refid="classGecode_1_1Iter_1_1Ranges_1_1RangeListIter_1a20baefe327ca3a8c60019809eb2a288b" prot="public" virt="non-virtual"><scope>Gecode::Iter::Ranges::NaryUnion</scope><name>RangeListIter</name></member>
      <member refid="classGecode_1_1Iter_1_1Ranges_1_1RangeListIter_1ae905e6df0a16145280f8dab551fc4122" prot="public" virt="non-virtual"><scope>Gecode::Iter::Ranges::NaryUnion</scope><name>RangeListIter</name></member>
      <member refid="classGecode_1_1Iter_1_1Ranges_1_1RangeListIter_1a40a1c7b1ad356f7565834ca82eb744fb" prot="public" virt="non-virtual"><scope>Gecode::Iter::Ranges::NaryUnion</scope><name>RangeListIter</name></member>
      <member refid="classGecode_1_1Iter_1_1Ranges_1_1RangeListIter_1ab5d71b116cf715dadb7926e6dcc31c7d" prot="public" virt="non-virtual"><scope>Gecode::Iter::Ranges::NaryUnion</scope><name>reset</name></member>
      <member refid="classGecode_1_1Iter_1_1Ranges_1_1RangeListIter_1a72a1375ffd83558a1517a20912d7ec4a" prot="protected" virt="non-virtual"><scope>Gecode::Iter::Ranges::NaryUnion</scope><name>rlio</name></member>
      <member refid="classGecode_1_1Iter_1_1Ranges_1_1RangeListIter_1ad200fe736a0ddb553943eda7a0c73785" prot="protected" virt="non-virtual"><scope>Gecode::Iter::Ranges::NaryUnion</scope><name>set</name></member>
      <member refid="classGecode_1_1Iter_1_1Ranges_1_1NaryUnion_1afacbfe174294cdc2774e757340636ca3" prot="protected" virt="non-virtual"><scope>Gecode::Iter::Ranges::NaryUnion</scope><name>two</name></member>
      <member refid="classGecode_1_1Iter_1_1Ranges_1_1NaryUnion_1a99387f9c12ed396f28b8af0b1974fe38" prot="public" virt="non-virtual"><scope>Gecode::Iter::Ranges::NaryUnion</scope><name>two</name></member>
      <member refid="classGecode_1_1Iter_1_1Ranges_1_1RangeListIter_1a2dcf3e47bd569f6b129a4d87e65d68dc" prot="public" virt="non-virtual"><scope>Gecode::Iter::Ranges::NaryUnion</scope><name>width</name></member>
      <member refid="classGecode_1_1Iter_1_1Ranges_1_1RangeListIter_1a1a338d54c76937032760ffc35eca08e6" prot="public" virt="non-virtual"><scope>Gecode::Iter::Ranges::NaryUnion</scope><name>~RangeListIter</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
