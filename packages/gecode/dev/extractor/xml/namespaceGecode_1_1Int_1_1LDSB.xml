<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="namespaceGecode_1_1Int_1_1LDSB" kind="namespace">
    <compoundname>Gecode::Int::LDSB</compoundname>
    <innerclass refid="classGecode_1_1Int_1_1LDSB_1_1Literal" prot="public">Gecode::Int::LDSB::Literal</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1LDSB_1_1SymmetryObject" prot="public">Gecode::Int::LDSB::SymmetryObject</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1LDSB_1_1VariableSymmetryObject" prot="public">Gecode::Int::LDSB::VariableSymmetryObject</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1LDSB_1_1ValueSymmetryObject" prot="public">Gecode::Int::LDSB::ValueSymmetryObject</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1LDSB_1_1VariableSequenceSymmetryObject" prot="public">Gecode::Int::LDSB::VariableSequenceSymmetryObject</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1LDSB_1_1ValueSequenceSymmetryObject" prot="public">Gecode::Int::LDSB::ValueSequenceSymmetryObject</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1LDSB_1_1SymmetryImp" prot="public">Gecode::Int::LDSB::SymmetryImp</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1LDSB_1_1VariableSymmetryImp" prot="public">Gecode::Int::LDSB::VariableSymmetryImp</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1LDSB_1_1ValueSymmetryImp" prot="public">Gecode::Int::LDSB::ValueSymmetryImp</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1LDSB_1_1VariableSequenceSymmetryImp" prot="public">Gecode::Int::LDSB::VariableSequenceSymmetryImp</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1LDSB_1_1ValueSequenceSymmetryImp" prot="public">Gecode::Int::LDSB::ValueSequenceSymmetryImp</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1LDSB_1_1LDSBChoice" prot="public">Gecode::Int::LDSB::LDSBChoice</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1LDSB_1_1LDSBBrancher" prot="public">Gecode::Int::LDSB::LDSBBrancher</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1LDSB_1afdb6149978b820e75ed5b295691b2199" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>ModEvent Gecode::Int::LDSB::prune&lt; Int::IntView &gt;</definition>
        <argsstring>(Space &amp;home, Int::IntView x, int v)</argsstring>
        <name>prune&lt; Int::IntView &gt;</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1IntView" kindref="compound">Int::IntView</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/ldsb/brancher.hpp" line="214" column="1" bodyfile="/usr/include/gecode/int/ldsb/brancher.hpp" bodystart="215" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1LDSB_1a51a36e93b6d80d5daaee0f2fae9d5871" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>ModEvent Gecode::Int::LDSB::prune&lt; Int::BoolView &gt;</definition>
        <argsstring>(Space &amp;home, Int::BoolView x, int v)</argsstring>
        <name>prune&lt; Int::BoolView &gt;</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1BoolView" kindref="compound">Int::BoolView</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/ldsb/brancher.hpp" line="221" column="1" bodyfile="/usr/include/gecode/int/ldsb/brancher.hpp" bodystart="222" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1LDSB_1acedfade4fdf4960a4c57135ac4d23425" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>class A</type>
          </param>
        </templateparamlist>
        <type><ref refid="classGecode_1_1ArgArray" kindref="compound">ArgArray</ref>&lt; T &gt;</type>
        <definition>ArgArray&lt;T&gt; Gecode::Int::LDSB::dynamicStackToArgArray</definition>
        <argsstring>(const Support::DynamicStack&lt; T, A &gt; &amp;s)</argsstring>
        <name>dynamicStackToArgArray</name>
        <param>
          <type>const <ref refid="classGecode_1_1Support_1_1DynamicStack" kindref="compound">Support::DynamicStack</ref>&lt; T, A &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Convert a <emphasis>DynamicStack&lt;T,A&gt;</emphasis> into an <emphasis>ArgArray&lt;T&gt;</emphasis> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/ldsb/sym-imp.hpp" line="43" column="1" bodyfile="/usr/include/gecode/int/ldsb/sym-imp.hpp" bodystart="43" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1LDSB_1ae9059090c4457e5e3fa8a44b1c6b2584" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GECODE_INT_EXPORT std::pair&lt; int, int &gt;</type>
        <definition>GECODE_INT_EXPORT std::pair&lt;int,int&gt; Gecode::Int::LDSB::findVar</definition>
        <argsstring>(int *indices, unsigned int n_values, unsigned int seq_size, int index)</argsstring>
        <name>findVar</name>
        <param>
          <type>int *</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>n_values</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>seq_size</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Find the location of an integer in a collection of sequences. </para>        </briefdescription>
        <detaileddescription>
<para>Given an array <emphasis>indices</emphasis> of integers (of length <emphasis>n_values</emphasis>), which represents a collection of sequences each of size <emphasis>seq_size</emphasis>, find the location of the first occurrence of the value <emphasis>index</emphasis>. Returns a pair of sequence number and position within that sequence (both zero-based). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/ldsb.hh" line="83" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1LDSB_1a1e8379fd355e41cd292a2108de3c5d45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class View</type>
          </param>
        </templateparamlist>
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>ModEvent Gecode::Int::LDSB::prune</definition>
        <argsstring>(Space &amp;home, View x, int v)</argsstring>
        <name>prune</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>View</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Exclude value  from variable view . </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/ldsb.hh" line="385" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Symmetry breaking for integer variables. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/usr/include/gecode/int/ldsb/brancher.hpp" line="41" column="1"/>
  </compounddef>
</doxygen>
