<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classGecode_1_1Int_1_1TaskTree" kind="class" prot="public">
    <compoundname>Gecode::Int::TaskTree</compoundname>
    <includes refid="task_8hh" local="no">task.hh</includes>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>TaskView</declname>
        <defname>TaskView</defname>
      </param>
      <param>
        <type>class</type>
        <declname>Node</declname>
        <defname>Node</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classGecode_1_1Int_1_1TaskTree_1abc7385a4c664cf2011a57763d375651f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class</type>
          </param>
          <param>
            <type>class</type>
          </param>
        </templateparamlist>
        <type>friend class</type>
        <definition>friend class TaskTree</definition>
        <argsstring></argsstring>
        <name>TaskTree</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/task.hh" line="366" column="1" bodyfile="/usr/include/gecode/int/task.hh" bodystart="366" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classGecode_1_1Int_1_1TaskTree_1a588d7ff506e04319c9730a20686c5736" prot="protected" static="no" mutable="no">
        <type>const <ref refid="classGecode_1_1Int_1_1TaskViewArray" kindref="compound">TaskViewArray</ref>&lt; TaskView &gt; &amp;</type>
        <definition>const TaskViewArray&lt;TaskView&gt;&amp; Gecode::Int::TaskTree&lt; TaskView, Node &gt;::tasks</definition>
        <argsstring></argsstring>
        <name>tasks</name>
        <briefdescription>
<para>The tasks from which the tree is computed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/task.hh" line="369" column="1" bodyfile="/usr/include/gecode/int/task.hh" bodystart="369" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Int_1_1TaskTree_1aa28702bb62f0ca56d396c62ab932e149" prot="protected" static="no" mutable="no">
        <type>Node *</type>
        <definition>Node* Gecode::Int::TaskTree&lt; TaskView, Node &gt;::node</definition>
        <argsstring></argsstring>
        <name>node</name>
        <briefdescription>
<para>Task nodes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/task.hh" line="371" column="1" bodyfile="/usr/include/gecode/int/task.hh" bodystart="371" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Int_1_1TaskTree_1ad3ffc82407eb8b4c9c0f4edd63ae91f7" prot="protected" static="no" mutable="no">
        <type>int *</type>
        <definition>int* Gecode::Int::TaskTree&lt; TaskView, Node &gt;::_leaf</definition>
        <argsstring></argsstring>
        <name>_leaf</name>
        <briefdescription>
<para>Map task number to leaf node number in right order. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/task.hh" line="373" column="1" bodyfile="/usr/include/gecode/int/task.hh" bodystart="373" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classGecode_1_1Int_1_1TaskTree_1ab462844f872a2e3ef78f1f19935828bc" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Int::TaskTree&lt; TaskView, Node &gt;::n_inner</definition>
        <argsstring>(void) const </argsstring>
        <name>n_inner</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return number of inner nodes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/task.hh" line="376" column="1" bodyfile="/usr/include/gecode/int/task/tree.hpp" bodystart="56" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1TaskTree_1ae6d009044ed117d747b162c2c382f5ac" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Int::TaskTree&lt; TaskView, Node &gt;::n_nodes</definition>
        <argsstring>(void) const </argsstring>
        <name>n_nodes</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return number of nodes for balanced binary tree. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/task.hh" line="378" column="1" bodyfile="/usr/include/gecode/int/task/tree.hpp" bodystart="61" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1TaskTree_1a48ca346b6fb17041f6071f19918551d3" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::Int::TaskTree&lt; TaskView, Node &gt;::n_leaf</definition>
        <argsstring>(int i) const </argsstring>
        <name>n_leaf</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Whether node <emphasis>i</emphasis> is leaf. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/task.hh" line="382" column="1" bodyfile="/usr/include/gecode/int/task/tree.hpp" bodystart="72" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1TaskTree_1aab3d5439983995ce1a163f34acff2da4" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Node &amp;</type>
        <definition>forceinline Node &amp; Gecode::Int::TaskTree&lt; TaskView, Node &gt;::leaf</definition>
        <argsstring>(int i)</argsstring>
        <name>leaf</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Return leaf for task <emphasis>i</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/task.hh" line="395" column="1" bodyfile="/usr/include/gecode/int/task/tree.hpp" bodystart="107" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1TaskTree_1a130379d0eb9b561fd8c2ecd34a1e6e85" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const Node &amp;</type>
        <definition>forceinline const Node &amp; Gecode::Int::TaskTree&lt; TaskView, Node &gt;::root</definition>
        <argsstring>(void) const </argsstring>
        <name>root</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return root node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/task.hh" line="397" column="1" bodyfile="/usr/include/gecode/int/task/tree.hpp" bodystart="113" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1TaskTree_1abfa208a7d67585ae6556caf8831de6e4" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Int::TaskTree&lt; TaskView, Node &gt;::update</definition>
        <argsstring>(int i, bool l=true)</argsstring>
        <name>update</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>l</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Update tree after leaf for task <emphasis>i</emphasis> has changed (<emphasis>l</emphasis> whether i refers to a leaf) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/task.hh" line="399" column="1" bodyfile="/usr/include/gecode/int/task/tree.hpp" bodystart="133" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1TaskTree_1ac3c4f8d8062e3f4184e0dc0f8e3f0780" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Int::TaskTree&lt; TaskView, Node &gt;::init</definition>
        <argsstring>(void)</argsstring>
        <name>init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize tree after leaves have been initialized. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/task.hh" line="401" column="1" bodyfile="/usr/include/gecode/int/task/tree.hpp" bodystart="119" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1TaskTree_1ae19f603654fbcfb07f639fc1b235872f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Int::TaskTree&lt; TaskView, Node &gt;::update</definition>
        <argsstring>(void)</argsstring>
        <name>update</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Update all inner nodes of tree after leaves have been initialized. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/task.hh" line="403" column="1" bodyfile="/usr/include/gecode/int/task/tree.hpp" bodystart="126" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1TaskTree_1ac9f29e170e81a1b0eab3cfff1c49c69a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Int::TaskTree&lt; TaskView, Node &gt;::TaskTree</definition>
        <argsstring>(Region &amp;r, const TaskViewArray&lt; TaskView &gt; &amp;t)</argsstring>
        <name>TaskTree</name>
        <param>
          <type><ref refid="classGecode_1_1Region" kindref="compound">Region</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1Int_1_1TaskViewArray" kindref="compound">TaskViewArray</ref>&lt; TaskView &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Initialize tree for tasks <emphasis>t</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/task.hh" line="405" column="1" bodyfile="/usr/include/gecode/int/task/tree.hpp" bodystart="145" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1TaskTree_1a928c59b923d120bbae1544164f6f0e70" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Node2</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>Gecode::Int::TaskTree&lt; TaskView, Node &gt;::TaskTree</definition>
        <argsstring>(Region &amp;r, const TaskTree&lt; TaskView, Node2 &gt; &amp;t)</argsstring>
        <name>TaskTree</name>
        <param>
          <type><ref refid="classGecode_1_1Region" kindref="compound">Region</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1Int_1_1TaskTree" kindref="compound">TaskTree</ref>&lt; TaskView, Node2 &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Initialize tree using tree <emphasis>t</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/task.hh" line="407" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="classGecode_1_1Int_1_1TaskTree_1a53b4a92e7008ccebc5fe6743850ebce3" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::Int::TaskTree&lt; TaskView, Node &gt;::n_root</definition>
        <argsstring>(int i)</argsstring>
        <name>n_root</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Whether node <emphasis>i</emphasis> is index of root. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/task.hh" line="380" column="1" bodyfile="/usr/include/gecode/int/task/tree.hpp" bodystart="67" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1TaskTree_1a042af8749ab881f8177a7dd6bb652493" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Int::TaskTree&lt; TaskView, Node &gt;::n_left</definition>
        <argsstring>(int i)</argsstring>
        <name>n_left</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Return index of left child of node <emphasis>i</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/task.hh" line="384" column="1" bodyfile="/usr/include/gecode/int/task/tree.hpp" bodystart="77" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1TaskTree_1ac1e2d7451276c8c66cb0f878245322a8" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::Int::TaskTree&lt; TaskView, Node &gt;::left</definition>
        <argsstring>(int i)</argsstring>
        <name>left</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Test whether node <emphasis>i</emphasis> is a left child. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/task.hh" line="386" column="1" bodyfile="/usr/include/gecode/int/task/tree.hpp" bodystart="82" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1TaskTree_1a8c5cba14df5398d4afb7bb3e39daa091" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Int::TaskTree&lt; TaskView, Node &gt;::n_right</definition>
        <argsstring>(int i)</argsstring>
        <name>n_right</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Return index of right child of node <emphasis>i</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/task.hh" line="388" column="1" bodyfile="/usr/include/gecode/int/task/tree.hpp" bodystart="89" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1TaskTree_1a02d1b8bd53d7fe4e96aac12157821e68" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::Int::TaskTree&lt; TaskView, Node &gt;::right</definition>
        <argsstring>(int i)</argsstring>
        <name>right</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Test whether node <emphasis>i</emphasis> is a right child. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/task.hh" line="390" column="1" bodyfile="/usr/include/gecode/int/task/tree.hpp" bodystart="94" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1TaskTree_1ae9aef5acf922e6023ed343a6067106bc" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Int::TaskTree&lt; TaskView, Node &gt;::n_parent</definition>
        <argsstring>(int i)</argsstring>
        <name>n_parent</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Return index of parent of node <emphasis>i</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/task.hh" line="392" column="1" bodyfile="/usr/include/gecode/int/task/tree.hpp" bodystart="101" bodyend="103"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classGecode_1_1Int_1_1TaskTree_1a7b9308e072bf8d0e886a248158bf15f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Node2</type>
          </param>
        </templateparamlist>
        <type>forceinline</type>
        <definition>forceinline Gecode::Int::TaskTree&lt; TaskView, Node &gt;::TaskTree</definition>
        <argsstring>(Region &amp;r, const TaskTree&lt; TaskView, Node2 &gt; &amp;t)</argsstring>
        <name>TaskTree</name>
        <param>
          <type><ref refid="classGecode_1_1Region" kindref="compound">Region</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1Int_1_1TaskTree" kindref="compound">TaskTree</ref>&lt; TaskView, Node2 &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/task/tree.hpp" line="172" column="1" bodyfile="/usr/include/gecode/int/task/tree.hpp" bodystart="172" bodyend="179"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Task trees for task views with node type <emphasis>Node</emphasis>. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="6917">
        <label>Gecode::Int::TaskTree&lt; TaskView, Node &gt;</label>
        <link refid="classGecode_1_1Int_1_1TaskTree"/>
        <childnode refid="6918" relation="usage">
          <edgelabel>node</edgelabel>
        </childnode>
      </node>
      <node id="6918">
        <label>Node</label>
      </node>
    </collaborationgraph>
    <location file="/usr/include/gecode/int/task.hh" line="365" column="1" bodyfile="/usr/include/gecode/int/task.hh" bodystart="365" bodyend="409"/>
    <listofallmembers>
      <member refid="classGecode_1_1Int_1_1TaskTree_1ad3ffc82407eb8b4c9c0f4edd63ae91f7" prot="protected" virt="non-virtual"><scope>Gecode::Int::TaskTree</scope><name>_leaf</name></member>
      <member refid="classGecode_1_1Int_1_1TaskTree_1ac3c4f8d8062e3f4184e0dc0f8e3f0780" prot="protected" virt="non-virtual"><scope>Gecode::Int::TaskTree</scope><name>init</name></member>
      <member refid="classGecode_1_1Int_1_1TaskTree_1aab3d5439983995ce1a163f34acff2da4" prot="protected" virt="non-virtual"><scope>Gecode::Int::TaskTree</scope><name>leaf</name></member>
      <member refid="classGecode_1_1Int_1_1TaskTree_1ac1e2d7451276c8c66cb0f878245322a8" prot="protected" virt="non-virtual"><scope>Gecode::Int::TaskTree</scope><name>left</name></member>
      <member refid="classGecode_1_1Int_1_1TaskTree_1ab462844f872a2e3ef78f1f19935828bc" prot="protected" virt="non-virtual"><scope>Gecode::Int::TaskTree</scope><name>n_inner</name></member>
      <member refid="classGecode_1_1Int_1_1TaskTree_1a48ca346b6fb17041f6071f19918551d3" prot="protected" virt="non-virtual"><scope>Gecode::Int::TaskTree</scope><name>n_leaf</name></member>
      <member refid="classGecode_1_1Int_1_1TaskTree_1a042af8749ab881f8177a7dd6bb652493" prot="protected" virt="non-virtual"><scope>Gecode::Int::TaskTree</scope><name>n_left</name></member>
      <member refid="classGecode_1_1Int_1_1TaskTree_1ae6d009044ed117d747b162c2c382f5ac" prot="protected" virt="non-virtual"><scope>Gecode::Int::TaskTree</scope><name>n_nodes</name></member>
      <member refid="classGecode_1_1Int_1_1TaskTree_1ae9aef5acf922e6023ed343a6067106bc" prot="protected" virt="non-virtual"><scope>Gecode::Int::TaskTree</scope><name>n_parent</name></member>
      <member refid="classGecode_1_1Int_1_1TaskTree_1a8c5cba14df5398d4afb7bb3e39daa091" prot="protected" virt="non-virtual"><scope>Gecode::Int::TaskTree</scope><name>n_right</name></member>
      <member refid="classGecode_1_1Int_1_1TaskTree_1a53b4a92e7008ccebc5fe6743850ebce3" prot="protected" virt="non-virtual"><scope>Gecode::Int::TaskTree</scope><name>n_root</name></member>
      <member refid="classGecode_1_1Int_1_1TaskTree_1aa28702bb62f0ca56d396c62ab932e149" prot="protected" virt="non-virtual"><scope>Gecode::Int::TaskTree</scope><name>node</name></member>
      <member refid="classGecode_1_1Int_1_1TaskTree_1a02d1b8bd53d7fe4e96aac12157821e68" prot="protected" virt="non-virtual"><scope>Gecode::Int::TaskTree</scope><name>right</name></member>
      <member refid="classGecode_1_1Int_1_1TaskTree_1a130379d0eb9b561fd8c2ecd34a1e6e85" prot="protected" virt="non-virtual"><scope>Gecode::Int::TaskTree</scope><name>root</name></member>
      <member refid="classGecode_1_1Int_1_1TaskTree_1a588d7ff506e04319c9730a20686c5736" prot="protected" virt="non-virtual"><scope>Gecode::Int::TaskTree</scope><name>tasks</name></member>
      <member refid="classGecode_1_1Int_1_1TaskTree_1abc7385a4c664cf2011a57763d375651f" prot="private" virt="non-virtual"><scope>Gecode::Int::TaskTree</scope><name>TaskTree</name></member>
      <member refid="classGecode_1_1Int_1_1TaskTree_1ac9f29e170e81a1b0eab3cfff1c49c69a" prot="protected" virt="non-virtual"><scope>Gecode::Int::TaskTree</scope><name>TaskTree</name></member>
      <member refid="classGecode_1_1Int_1_1TaskTree_1a928c59b923d120bbae1544164f6f0e70" prot="protected" virt="non-virtual"><scope>Gecode::Int::TaskTree</scope><name>TaskTree</name></member>
      <member refid="classGecode_1_1Int_1_1TaskTree_1a7b9308e072bf8d0e886a248158bf15f4" prot="public" virt="non-virtual"><scope>Gecode::Int::TaskTree</scope><name>TaskTree</name></member>
      <member refid="classGecode_1_1Int_1_1TaskTree_1abfa208a7d67585ae6556caf8831de6e4" prot="protected" virt="non-virtual"><scope>Gecode::Int::TaskTree</scope><name>update</name></member>
      <member refid="classGecode_1_1Int_1_1TaskTree_1ae19f603654fbcfb07f639fc1b235872f" prot="protected" virt="non-virtual"><scope>Gecode::Int::TaskTree</scope><name>update</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
