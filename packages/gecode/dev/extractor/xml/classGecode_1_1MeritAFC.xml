<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classGecode_1_1MeritAFC" kind="class" prot="public">
    <compoundname>Gecode::MeritAFC</compoundname>
    <basecompoundref refid="classGecode_1_1MeritBase" prot="public" virt="non-virtual">Gecode::MeritBase&lt; View, double &gt;</basecompoundref>
    <includes refid="brancher-merit_8hpp" local="no">brancher-merit.hpp</includes>
    <templateparamlist>
      <param>
        <type>class <ref refid="classGecode_1_1MeritBase_1a07837decee6635d337a2681f2d1a877c" kindref="member">View</ref></type>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classGecode_1_1MeritAFC_1ad73dc38119b2c638785c267f70b88995" prot="protected" static="no" mutable="no">
        <type><ref refid="classGecode_1_1AFC" kindref="compound">AFC</ref></type>
        <definition>AFC Gecode::MeritAFC&lt; View &gt;::afc</definition>
        <argsstring></argsstring>
        <name>afc</name>
        <briefdescription>
<para><ref refid="classGecode_1_1AFC" kindref="compound">AFC</ref> information. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/brancher-merit.hpp" line="109" column="1" bodyfile="/usr/include/gecode/kernel/brancher-merit.hpp" bodystart="109" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classGecode_1_1MeritAFC_1a29e95e730ae50589e1e46ca73b8a7afa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::MeritAFC&lt; View &gt;::MeritAFC</definition>
        <argsstring>(Space &amp;home, const VarBranch &amp;vb)</argsstring>
        <name>MeritAFC</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1VarBranch" kindref="compound">VarBranch</ref> &amp;</type>
          <declname>vb</declname>
        </param>
        <briefdescription>
<para>Constructor for initialization. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/brancher-merit.hpp" line="112" column="1" bodyfile="/usr/include/gecode/kernel/brancher-merit.hpp" bodystart="199" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1MeritAFC_1afb301307e54bd7bd624dc97b67b53212" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::MeritAFC&lt; View &gt;::MeritAFC</definition>
        <argsstring>(Space &amp;home, bool shared, MeritAFC &amp;ma)</argsstring>
        <name>MeritAFC</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>shared</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1MeritAFC" kindref="compound">MeritAFC</ref> &amp;</type>
          <declname>ma</declname>
        </param>
        <briefdescription>
<para>Constructor for cloning. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/brancher-merit.hpp" line="114" column="1" bodyfile="/usr/include/gecode/kernel/brancher-merit.hpp" bodystart="203" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1MeritAFC_1a6f85e1c61ad5e39ff5a81ac7e538616f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>forceinline double Gecode::MeritAFC&lt; View &gt;::operator()</definition>
        <argsstring>(const Space &amp;home, View x, int i)</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1MeritBase_1a07837decee6635d337a2681f2d1a877c" kindref="member">View</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Return <ref refid="classGecode_1_1AFC" kindref="compound">AFC</ref> as merit for view <emphasis>x</emphasis> at position <emphasis>i</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/brancher-merit.hpp" line="116" column="1" bodyfile="/usr/include/gecode/kernel/brancher-merit.hpp" bodystart="210" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1MeritAFC_1a197ab4e7a5c6a178ba1acd201ccc2e95" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::MeritAFC&lt; View &gt;::notice</definition>
        <argsstring>(void) const </argsstring>
        <name>notice</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Whether dispose must always be called (that is, notice is needed) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/brancher-merit.hpp" line="118" column="1" bodyfile="/usr/include/gecode/kernel/brancher-merit.hpp" bodystart="215" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1MeritAFC_1a05f022b1fec9a2cc8217d11ffff5c4e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::MeritAFC&lt; View &gt;::dispose</definition>
        <argsstring>(Space &amp;home)</argsstring>
        <name>dispose</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <briefdescription>
<para>Dispose view selection. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/brancher-merit.hpp" line="120" column="1" bodyfile="/usr/include/gecode/kernel/brancher-merit.hpp" bodystart="220" bodyend="222"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Merit class for <ref refid="classGecode_1_1AFC" kindref="compound">AFC</ref>. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3860">
        <label>Gecode::MeritAFC&lt; View &gt;</label>
        <link refid="classGecode_1_1MeritAFC"/>
        <childnode refid="3861" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3861">
        <label>Gecode::MeritBase&lt; View, double &gt;</label>
        <link refid="classGecode_1_1MeritBase"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3862">
        <label>Gecode::MeritAFC&lt; View &gt;</label>
        <link refid="classGecode_1_1MeritAFC"/>
        <childnode refid="3863" relation="public-inheritance">
        </childnode>
        <childnode refid="3864" relation="usage">
          <edgelabel>afc</edgelabel>
        </childnode>
      </node>
      <node id="3863">
        <label>Gecode::MeritBase&lt; View, double &gt;</label>
        <link refid="classGecode_1_1MeritBase"/>
      </node>
      <node id="3864">
        <label>Gecode::AFC</label>
        <link refid="classGecode_1_1AFC"/>
        <childnode refid="3864" relation="usage">
          <edgelabel>def</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/usr/include/gecode/kernel/brancher-merit.hpp" line="106" column="1" bodyfile="/usr/include/gecode/kernel/brancher-merit.hpp" bodystart="106" bodyend="121"/>
    <listofallmembers>
      <member refid="classGecode_1_1MeritAFC_1ad73dc38119b2c638785c267f70b88995" prot="protected" virt="non-virtual"><scope>Gecode::MeritAFC</scope><name>afc</name></member>
      <member refid="classGecode_1_1MeritAFC_1a05f022b1fec9a2cc8217d11ffff5c4e3" prot="public" virt="non-virtual"><scope>Gecode::MeritAFC</scope><name>dispose</name></member>
      <member refid="classGecode_1_1MeritAFC_1a29e95e730ae50589e1e46ca73b8a7afa" prot="public" virt="non-virtual"><scope>Gecode::MeritAFC</scope><name>MeritAFC</name></member>
      <member refid="classGecode_1_1MeritAFC_1afb301307e54bd7bd624dc97b67b53212" prot="public" virt="non-virtual"><scope>Gecode::MeritAFC</scope><name>MeritAFC</name></member>
      <member refid="classGecode_1_1MeritBase_1a0dd42399c470eef9ee7a23f238ad8fa9" prot="public" virt="non-virtual"><scope>Gecode::MeritAFC</scope><name>MeritBase</name></member>
      <member refid="classGecode_1_1MeritBase_1ae8ab6cc04c2cd2b34701e1deba2236b4" prot="public" virt="non-virtual"><scope>Gecode::MeritAFC</scope><name>MeritBase</name></member>
      <member refid="classGecode_1_1MeritAFC_1a197ab4e7a5c6a178ba1acd201ccc2e95" prot="public" virt="non-virtual"><scope>Gecode::MeritAFC</scope><name>notice</name></member>
      <member refid="classGecode_1_1MeritAFC_1a6f85e1c61ad5e39ff5a81ac7e538616f" prot="public" virt="non-virtual"><scope>Gecode::MeritAFC</scope><name>operator()</name></member>
      <member refid="classGecode_1_1MeritBase_1a5f83e32f550fdca23acf1a2a3904ef0a" prot="public" virt="non-virtual"><scope>Gecode::MeritAFC</scope><name>Val</name></member>
      <member refid="classGecode_1_1MeritBase_1a07837decee6635d337a2681f2d1a877c" prot="public" virt="non-virtual"><scope>Gecode::MeritAFC</scope><name>View</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
