<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classGecode_1_1MeritFunction" kind="class" prot="public">
    <compoundname>Gecode::MeritFunction</compoundname>
    <basecompoundref refid="classGecode_1_1MeritBase" prot="public" virt="non-virtual">Gecode::MeritBase&lt; View, double &gt;</basecompoundref>
    <includes refid="brancher-merit_8hpp" local="no">brancher-merit.hpp</includes>
    <templateparamlist>
      <param>
        <type>class <ref refid="classGecode_1_1MeritBase_1a07837decee6635d337a2681f2d1a877c" kindref="member">View</ref></type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classGecode_1_1MeritFunction_1abbc13c93bbcdb2abcf8b6bd1af42424c" prot="public" static="no">
        <type>View::VarType</type>
        <definition>typedef View::VarType Gecode::MeritFunction&lt; View &gt;::Var</definition>
        <argsstring></argsstring>
        <name>Var</name>
        <briefdescription>
<para>Corresponding variable type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/brancher-merit.hpp" line="73" column="1" bodyfile="/usr/include/gecode/kernel/brancher-merit.hpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classGecode_1_1MeritFunction_1a3b36c2a9e0fb4f143b4b4361b6736b4c" prot="public" static="no">
        <type><ref refid="classGecode_1_1BranchTraits" kindref="compound">BranchTraits</ref>&lt; <ref refid="classGecode_1_1MeritFunction_1abbc13c93bbcdb2abcf8b6bd1af42424c" kindref="member">Var</ref> &gt;::Merit</type>
        <definition>typedef BranchTraits&lt;Var&gt;::Merit Gecode::MeritFunction&lt; View &gt;::Function</definition>
        <argsstring></argsstring>
        <name>Function</name>
        <briefdescription>
<para>Corresponding merit function type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/brancher-merit.hpp" line="75" column="1" bodyfile="/usr/include/gecode/kernel/brancher-merit.hpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classGecode_1_1MeritFunction_1a462a0e3bacfb6c6f4ded762b1788860e" prot="protected" static="no" mutable="no">
        <type><ref refid="classGecode_1_1MeritFunction_1a3b36c2a9e0fb4f143b4b4361b6736b4c" kindref="member">Function</ref></type>
        <definition>Function Gecode::MeritFunction&lt; View &gt;::f</definition>
        <argsstring></argsstring>
        <name>f</name>
        <briefdescription>
<para>The user-defined merit function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/brancher-merit.hpp" line="78" column="1" bodyfile="/usr/include/gecode/kernel/brancher-merit.hpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classGecode_1_1MeritFunction_1aff78706416b751a3e509af3ac7478368" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::MeritFunction&lt; View &gt;::MeritFunction</definition>
        <argsstring>(Space &amp;home, const VarBranch &amp;vb)</argsstring>
        <name>MeritFunction</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1VarBranch" kindref="compound">VarBranch</ref> &amp;</type>
          <declname>vb</declname>
        </param>
        <briefdescription>
<para>Constructor for initialization. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/brancher-merit.hpp" line="81" column="1" bodyfile="/usr/include/gecode/kernel/brancher-merit.hpp" bodystart="165" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1MeritFunction_1acac4658beefac9d3d8dd62a76b84b492" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::MeritFunction&lt; View &gt;::MeritFunction</definition>
        <argsstring>(Space &amp;home, bool shared, MeritFunction &amp;mf)</argsstring>
        <name>MeritFunction</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>shared</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1MeritFunction" kindref="compound">MeritFunction</ref> &amp;</type>
          <declname>mf</declname>
        </param>
        <briefdescription>
<para>Constructor for cloning. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/brancher-merit.hpp" line="83" column="1" bodyfile="/usr/include/gecode/kernel/brancher-merit.hpp" bodystart="170" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1MeritFunction_1a2062f4b217427a912102edde8662e4d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>forceinline double Gecode::MeritFunction&lt; View &gt;::operator()</definition>
        <argsstring>(const Space &amp;home, View x, int i)</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1MeritBase_1a07837decee6635d337a2681f2d1a877c" kindref="member">View</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Return degree as merit for view <emphasis>x</emphasis> at position <emphasis>i</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/brancher-merit.hpp" line="85" column="1" bodyfile="/usr/include/gecode/kernel/brancher-merit.hpp" bodystart="175" bodyend="178"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Merit class for user-defined merit function. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3899">
        <label>Gecode::MeritBase&lt; View, double &gt;</label>
        <link refid="classGecode_1_1MeritBase"/>
      </node>
      <node id="3898">
        <label>Gecode::MeritFunction&lt; View &gt;</label>
        <link refid="classGecode_1_1MeritFunction"/>
        <childnode refid="3899" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3901">
        <label>Gecode::MeritBase&lt; View, double &gt;</label>
        <link refid="classGecode_1_1MeritBase"/>
      </node>
      <node id="3900">
        <label>Gecode::MeritFunction&lt; View &gt;</label>
        <link refid="classGecode_1_1MeritFunction"/>
        <childnode refid="3901" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/usr/include/gecode/kernel/brancher-merit.hpp" line="70" column="1" bodyfile="/usr/include/gecode/kernel/brancher-merit.hpp" bodystart="70" bodyend="86"/>
    <listofallmembers>
      <member refid="classGecode_1_1MeritBase_1a3b04ddc669a22b449129b2a835eefe26" prot="public" virt="non-virtual"><scope>Gecode::MeritFunction</scope><name>dispose</name></member>
      <member refid="classGecode_1_1MeritFunction_1a462a0e3bacfb6c6f4ded762b1788860e" prot="protected" virt="non-virtual"><scope>Gecode::MeritFunction</scope><name>f</name></member>
      <member refid="classGecode_1_1MeritFunction_1a3b36c2a9e0fb4f143b4b4361b6736b4c" prot="public" virt="non-virtual"><scope>Gecode::MeritFunction</scope><name>Function</name></member>
      <member refid="classGecode_1_1MeritBase_1a0dd42399c470eef9ee7a23f238ad8fa9" prot="public" virt="non-virtual"><scope>Gecode::MeritFunction</scope><name>MeritBase</name></member>
      <member refid="classGecode_1_1MeritBase_1ae8ab6cc04c2cd2b34701e1deba2236b4" prot="public" virt="non-virtual"><scope>Gecode::MeritFunction</scope><name>MeritBase</name></member>
      <member refid="classGecode_1_1MeritFunction_1aff78706416b751a3e509af3ac7478368" prot="public" virt="non-virtual"><scope>Gecode::MeritFunction</scope><name>MeritFunction</name></member>
      <member refid="classGecode_1_1MeritFunction_1acac4658beefac9d3d8dd62a76b84b492" prot="public" virt="non-virtual"><scope>Gecode::MeritFunction</scope><name>MeritFunction</name></member>
      <member refid="classGecode_1_1MeritBase_1a386345c2a920535002f34ae4dbc96501" prot="public" virt="non-virtual"><scope>Gecode::MeritFunction</scope><name>notice</name></member>
      <member refid="classGecode_1_1MeritFunction_1a2062f4b217427a912102edde8662e4d0" prot="public" virt="non-virtual"><scope>Gecode::MeritFunction</scope><name>operator()</name></member>
      <member refid="classGecode_1_1MeritBase_1a5f83e32f550fdca23acf1a2a3904ef0a" prot="public" virt="non-virtual"><scope>Gecode::MeritFunction</scope><name>Val</name></member>
      <member refid="classGecode_1_1MeritFunction_1abbc13c93bbcdb2abcf8b6bd1af42424c" prot="public" virt="non-virtual"><scope>Gecode::MeritFunction</scope><name>Var</name></member>
      <member refid="classGecode_1_1MeritBase_1a07837decee6635d337a2681f2d1a877c" prot="public" virt="non-virtual"><scope>Gecode::MeritFunction</scope><name>View</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
