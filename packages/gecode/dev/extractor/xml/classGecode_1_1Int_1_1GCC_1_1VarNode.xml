<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classGecode_1_1Int_1_1GCC_1_1VarNode" kind="class" prot="public">
    <compoundname>Gecode::Int::GCC::VarNode</compoundname>
    <basecompoundref refid="classGecode_1_1Int_1_1GCC_1_1Node" prot="public" virt="non-virtual">Gecode::Int::GCC::Node</basecompoundref>
    <includes refid="dom-sup_8hpp" local="no">dom-sup.hpp</includes>
      <sectiondef kind="user-defined">
      <header>Constructors and initialization</header>
      <memberdef kind="function" id="classGecode_1_1Int_1_1GCC_1_1VarNode_1a93b09c64c481fe27b4aba6c1cc605bc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Int::GCC::VarNode::VarNode</definition>
        <argsstring>(void)</argsstring>
        <name>VarNode</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/gcc/dom-sup.hpp" line="145" column="1" bodyfile="/usr/include/gecode/int/gcc/dom-sup.hpp" bodystart="575" bodyend="575"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1GCC_1_1VarNode_1a3272c6393b68010e1979f7b9cdd801ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Int::GCC::VarNode::VarNode</definition>
        <argsstring>(int i)</argsstring>
        <name>VarNode</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Creates a variable node with index <emphasis>i</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/gcc/dom-sup.hpp" line="147" column="1" bodyfile="/usr/include/gecode/int/gcc/dom-sup.hpp" bodystart="578" bodyend="579"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Access</header>
      <memberdef kind="function" id="classGecode_1_1Int_1_1GCC_1_1VarNode_1a84464b71d373c8560de6e2cd7c5e7e62" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGecode_1_1Int_1_1GCC_1_1Edge" kindref="compound">Edge</ref> *</type>
        <definition>forceinline Edge * Gecode::Int::GCC::VarNode::get_match</definition>
        <argsstring>(BC bc) const </argsstring>
        <name>get_match</name>
        <param>
          <type><ref refid="namespaceGecode_1_1Int_1_1GCC_1a4e75bf3ac1c08f27964f54f5361f4cab" kindref="member">BC</ref></type>
          <declname>bc</declname>
        </param>
        <briefdescription>
<para>Return the matching edge on the node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/gcc/dom-sup.hpp" line="153" column="1" bodyfile="/usr/include/gecode/int/gcc/dom-sup.hpp" bodystart="615" bodyend="620"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1GCC_1_1VarNode_1a9454a6ececa6d47a19df2293244d5f4e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::Int::GCC::VarNode::matched</definition>
        <argsstring>(BC bc) const </argsstring>
        <name>matched</name>
        <param>
          <type><ref refid="namespaceGecode_1_1Int_1_1GCC_1a4e75bf3ac1c08f27964f54f5361f4cab" kindref="member">BC</ref></type>
          <declname>bc</declname>
        </param>
        <briefdescription>
<para>tests whether the node is matched or not </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/gcc/dom-sup.hpp" line="155" column="1" bodyfile="/usr/include/gecode/int/gcc/dom-sup.hpp" bodystart="582" bodyend="587"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Update</header>
      <memberdef kind="function" id="classGecode_1_1Int_1_1GCC_1_1VarNode_1ad14164bad6e2f1c543cf318f46c99bfc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Int::GCC::VarNode::set_match</definition>
        <argsstring>(BC bc, Edge *m)</argsstring>
        <name>set_match</name>
        <param>
          <type><ref refid="namespaceGecode_1_1Int_1_1GCC_1a4e75bf3ac1c08f27964f54f5361f4cab" kindref="member">BC</ref></type>
          <declname>bc</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1GCC_1_1Edge" kindref="compound">Edge</ref> *</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para><ref refid="namespaceGecode_1_1Set" kindref="compound">Set</ref> the pointer of the matching edge to m. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/gcc/dom-sup.hpp" line="161" column="1" bodyfile="/usr/include/gecode/int/gcc/dom-sup.hpp" bodystart="598" bodyend="603"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1GCC_1_1VarNode_1a7a9f94fd004d2b003d81cf8b0333b496" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Int::GCC::VarNode::match</definition>
        <argsstring>(BC bc)</argsstring>
        <name>match</name>
        <param>
          <type><ref refid="namespaceGecode_1_1Int_1_1GCC_1a4e75bf3ac1c08f27964f54f5361f4cab" kindref="member">BC</ref></type>
          <declname>bc</declname>
        </param>
        <briefdescription>
<para><ref refid="namespaceGecode_1_1Set" kindref="compound">Set</ref> node to matched. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/gcc/dom-sup.hpp" line="163" column="1" bodyfile="/usr/include/gecode/int/gcc/dom-sup.hpp" bodystart="590" bodyend="595"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1GCC_1_1VarNode_1af69881d9b05fd4e5cce007d7cacda2b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Int::GCC::VarNode::unmatch</definition>
        <argsstring>(BC bc)</argsstring>
        <name>unmatch</name>
        <param>
          <type><ref refid="namespaceGecode_1_1Int_1_1GCC_1a4e75bf3ac1c08f27964f54f5361f4cab" kindref="member">BC</ref></type>
          <declname>bc</declname>
        </param>
        <briefdescription>
<para>Unmatch the node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/gcc/dom-sup.hpp" line="165" column="1" bodyfile="/usr/include/gecode/int/gcc/dom-sup.hpp" bodystart="606" bodyend="612"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classGecode_1_1Int_1_1GCC_1_1VarNode_1a12fee9c9328f1b66a8571d121d594ad9" prot="protected" static="no" mutable="no">
        <type><ref refid="classGecode_1_1Int_1_1GCC_1_1Edge" kindref="compound">Edge</ref> *</type>
        <definition>Edge* Gecode::Int::GCC::VarNode::ubm</definition>
        <argsstring></argsstring>
        <name>ubm</name>
        <briefdescription>
<para>Stores the matching edge on this node in the UBC. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/gcc/dom-sup.hpp" line="138" column="1" bodyfile="/usr/include/gecode/int/gcc/dom-sup.hpp" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Int_1_1GCC_1_1VarNode_1ad1a07928a211bcbc2cf6cef49c9335c2" prot="protected" static="no" mutable="no">
        <type><ref refid="classGecode_1_1Int_1_1GCC_1_1Edge" kindref="compound">Edge</ref> *</type>
        <definition>Edge* Gecode::Int::GCC::VarNode::lbm</definition>
        <argsstring></argsstring>
        <name>lbm</name>
        <briefdescription>
<para>Stores the matching edge on this node in the LBC. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/gcc/dom-sup.hpp" line="140" column="1" bodyfile="/usr/include/gecode/int/gcc/dom-sup.hpp" bodystart="140" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Variable node </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="7728">
        <label>Gecode::Int::GCC::Node</label>
        <link refid="classGecode_1_1Int_1_1GCC_1_1Node"/>
      </node>
      <node id="7727">
        <label>Gecode::Int::GCC::VarNode</label>
        <link refid="classGecode_1_1Int_1_1GCC_1_1VarNode"/>
        <childnode refid="7728" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="7731">
        <label>Gecode::Int::GCC::Edge</label>
        <link refid="classGecode_1_1Int_1_1GCC_1_1Edge"/>
      </node>
      <node id="7730">
        <label>Gecode::Int::GCC::Node</label>
        <link refid="classGecode_1_1Int_1_1GCC_1_1Node"/>
        <childnode refid="7731" relation="usage">
          <edgelabel>fst</edgelabel>
          <edgelabel>lst</edgelabel>
          <edgelabel>ie</edgelabel>
          <edgelabel>e</edgelabel>
        </childnode>
      </node>
      <node id="7729">
        <label>Gecode::Int::GCC::VarNode</label>
        <link refid="classGecode_1_1Int_1_1GCC_1_1VarNode"/>
        <childnode refid="7730" relation="public-inheritance">
        </childnode>
        <childnode refid="7731" relation="usage">
          <edgelabel>lbm</edgelabel>
          <edgelabel>ubm</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/usr/include/gecode/int/gcc/dom-sup.hpp" line="135" column="1" bodyfile="/usr/include/gecode/int/gcc/dom-sup.hpp" bodystart="135" bodyend="167"/>
    <listofallmembers>
      <member refid="classGecode_1_1Int_1_1GCC_1_1Node_1a268be12be30d0e75ec4042261d415d65" prot="public" virt="non-virtual"><scope>Gecode::Int::GCC::VarNode</scope><name>adj</name></member>
      <member refid="classGecode_1_1Int_1_1GCC_1_1Node_1a0d2c61bb43ea6aec77fd89305334bd10" prot="protected" virt="non-virtual"><scope>Gecode::Int::GCC::VarNode</scope><name>e</name></member>
      <member refid="classGecode_1_1Int_1_1GCC_1_1Node_1a6ca3606e3c63c67e312c63958cdbc3a4" prot="public" virt="non-virtual"><scope>Gecode::Int::GCC::VarNode</scope><name>first</name></member>
      <member refid="classGecode_1_1Int_1_1GCC_1_1Node_1a11043245ac40d8d788756898830e9b18" prot="public" virt="non-virtual"><scope>Gecode::Int::GCC::VarNode</scope><name>first</name></member>
      <member refid="classGecode_1_1Int_1_1GCC_1_1Node_1a7bb2a663649ed86b55c79458f2ad31e0" prot="protected" virt="non-virtual"><scope>Gecode::Int::GCC::VarNode</scope><name>fst</name></member>
      <member refid="classGecode_1_1Int_1_1GCC_1_1VarNode_1a84464b71d373c8560de6e2cd7c5e7e62" prot="public" virt="non-virtual"><scope>Gecode::Int::GCC::VarNode</scope><name>get_match</name></member>
      <member refid="classGecode_1_1Int_1_1GCC_1_1Node_1a55c6f06c62a192f3e5431a99e1d0dc0b" prot="protected" virt="non-virtual"><scope>Gecode::Int::GCC::VarNode</scope><name>idx</name></member>
      <member refid="classGecode_1_1Int_1_1GCC_1_1Node_1adc4d648ab1c3d5cb74e6ced2dc977f0d" prot="protected" virt="non-virtual"><scope>Gecode::Int::GCC::VarNode</scope><name>ie</name></member>
      <member refid="classGecode_1_1Int_1_1GCC_1_1Node_1a737bdc661cbb379e5cc2ff42c904df59" prot="public" virt="non-virtual"><scope>Gecode::Int::GCC::VarNode</scope><name>index</name></member>
      <member refid="classGecode_1_1Int_1_1GCC_1_1Node_1a4482bd92486fb830a6c5ad5ec5774e9c" prot="public" virt="non-virtual"><scope>Gecode::Int::GCC::VarNode</scope><name>index</name></member>
      <member refid="classGecode_1_1Int_1_1GCC_1_1Node_1a2a51477f91e4b7a5e961c2ca7e50434b" prot="public" virt="non-virtual"><scope>Gecode::Int::GCC::VarNode</scope><name>inedge</name></member>
      <member refid="classGecode_1_1Int_1_1GCC_1_1Node_1a2a49d3a8247a7f432c38e0fd9068a9fc" prot="public" virt="non-virtual"><scope>Gecode::Int::GCC::VarNode</scope><name>inedge</name></member>
      <member refid="classGecode_1_1Int_1_1GCC_1_1Node_1a58e35acf8adca0c29ca96fb3040ad300" prot="public" virt="non-virtual"><scope>Gecode::Int::GCC::VarNode</scope><name>last</name></member>
      <member refid="classGecode_1_1Int_1_1GCC_1_1Node_1aca8c02020d13fb5b110569c20e04cc94" prot="public" virt="non-virtual"><scope>Gecode::Int::GCC::VarNode</scope><name>last</name></member>
      <member refid="classGecode_1_1Int_1_1GCC_1_1VarNode_1ad1a07928a211bcbc2cf6cef49c9335c2" prot="protected" virt="non-virtual"><scope>Gecode::Int::GCC::VarNode</scope><name>lbm</name></member>
      <member refid="classGecode_1_1Int_1_1GCC_1_1Node_1a17e8f77215a89c1a26e546fa3af4740c" prot="protected" virt="non-virtual"><scope>Gecode::Int::GCC::VarNode</scope><name>lst</name></member>
      <member refid="classGecode_1_1Int_1_1GCC_1_1VarNode_1a7a9f94fd004d2b003d81cf8b0333b496" prot="public" virt="non-virtual"><scope>Gecode::Int::GCC::VarNode</scope><name>match</name></member>
      <member refid="classGecode_1_1Int_1_1GCC_1_1VarNode_1a9454a6ececa6d47a19df2293244d5f4e" prot="public" virt="non-virtual"><scope>Gecode::Int::GCC::VarNode</scope><name>matched</name></member>
      <member refid="classGecode_1_1Int_1_1GCC_1_1Node_1ac5c94cafd4b6c87f7d90026272a72db0" prot="protected" virt="non-virtual"><scope>Gecode::Int::GCC::VarNode</scope><name>nf</name></member>
      <member refid="classGecode_1_1Int_1_1GCC_1_1Node_1aa9b75ce9bb8914f6f32e272ad9cc93e7af8e2c12a55f4415028f8b8ca3226ed05" prot="protected" virt="non-virtual"><scope>Gecode::Int::GCC::VarNode</scope><name>NF_M_LBC</name></member>
      <member refid="classGecode_1_1Int_1_1GCC_1_1Node_1aa9b75ce9bb8914f6f32e272ad9cc93e7a57ef9affd4631f09b4703058becb1f59" prot="protected" virt="non-virtual"><scope>Gecode::Int::GCC::VarNode</scope><name>NF_M_UBC</name></member>
      <member refid="classGecode_1_1Int_1_1GCC_1_1Node_1aa9b75ce9bb8914f6f32e272ad9cc93e7a912a2161ed6406de0ba0c4ee2d4501e1" prot="protected" virt="non-virtual"><scope>Gecode::Int::GCC::VarNode</scope><name>NF_NONE</name></member>
      <member refid="classGecode_1_1Int_1_1GCC_1_1Node_1aa9b75ce9bb8914f6f32e272ad9cc93e7a605e59e130c9e5582a1772a20a444975" prot="protected" virt="non-virtual"><scope>Gecode::Int::GCC::VarNode</scope><name>NF_VAL</name></member>
      <member refid="classGecode_1_1Int_1_1GCC_1_1Node_1ac2e891d6c49e0002f06faa7ea4323285" prot="public" virt="non-virtual"><scope>Gecode::Int::GCC::VarNode</scope><name>Node</name></member>
      <member refid="classGecode_1_1Int_1_1GCC_1_1Node_1a1ebfc93c7997b241fc4f9ec88a31f964" prot="public" virt="non-virtual"><scope>Gecode::Int::GCC::VarNode</scope><name>Node</name></member>
      <member refid="classGecode_1_1Int_1_1GCC_1_1Node_1aa9b75ce9bb8914f6f32e272ad9cc93e7" prot="protected" virt="non-virtual"><scope>Gecode::Int::GCC::VarNode</scope><name>NodeFlag</name></member>
      <member refid="classGecode_1_1Int_1_1GCC_1_1Node_1a96e897b003201faab5ecb3bae6c00a42" prot="public" virt="non-virtual"><scope>Gecode::Int::GCC::VarNode</scope><name>noe</name></member>
      <member refid="classGecode_1_1Int_1_1GCC_1_1Node_1a31e65604d805c4cdbd63380e3f9cb80d" prot="public" virt="non-virtual"><scope>Gecode::Int::GCC::VarNode</scope><name>operator delete</name></member>
      <member refid="classGecode_1_1Int_1_1GCC_1_1Node_1ad930406587c2876a9e5a7c0bafd42e87" prot="public" virt="non-virtual"><scope>Gecode::Int::GCC::VarNode</scope><name>operator delete</name></member>
      <member refid="classGecode_1_1Int_1_1GCC_1_1Node_1ab30b712c5523b945a3e229b01a5014e8" prot="public" virt="non-virtual"><scope>Gecode::Int::GCC::VarNode</scope><name>operator new</name></member>
      <member refid="classGecode_1_1Int_1_1GCC_1_1Node_1a50e057086821aaf80544b21f687ba73e" prot="public" virt="non-virtual"><scope>Gecode::Int::GCC::VarNode</scope><name>removed</name></member>
      <member refid="classGecode_1_1Int_1_1GCC_1_1VarNode_1ad14164bad6e2f1c543cf318f46c99bfc" prot="public" virt="non-virtual"><scope>Gecode::Int::GCC::VarNode</scope><name>set_match</name></member>
      <member refid="classGecode_1_1Int_1_1GCC_1_1Node_1aa715558fd6a2db05fd5323cb8a4c4a62" prot="public" virt="non-virtual"><scope>Gecode::Int::GCC::VarNode</scope><name>type</name></member>
      <member refid="classGecode_1_1Int_1_1GCC_1_1VarNode_1a12fee9c9328f1b66a8571d121d594ad9" prot="protected" virt="non-virtual"><scope>Gecode::Int::GCC::VarNode</scope><name>ubm</name></member>
      <member refid="classGecode_1_1Int_1_1GCC_1_1VarNode_1af69881d9b05fd4e5cce007d7cacda2b0" prot="public" virt="non-virtual"><scope>Gecode::Int::GCC::VarNode</scope><name>unmatch</name></member>
      <member refid="classGecode_1_1Int_1_1GCC_1_1VarNode_1a93b09c64c481fe27b4aba6c1cc605bc9" prot="public" virt="non-virtual"><scope>Gecode::Int::GCC::VarNode</scope><name>VarNode</name></member>
      <member refid="classGecode_1_1Int_1_1GCC_1_1VarNode_1a3272c6393b68010e1979f7b9cdd801ee" prot="public" virt="non-virtual"><scope>Gecode::Int::GCC::VarNode</scope><name>VarNode</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
