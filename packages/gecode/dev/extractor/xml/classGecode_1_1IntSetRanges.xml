<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classGecode_1_1IntSetRanges" kind="class" prot="public">
    <compoundname>Gecode::IntSetRanges</compoundname>
    <includes refid="int_8hh" local="no">int.hh</includes>
      <sectiondef kind="user-defined">
      <header>Constructors and initialization</header>
      <memberdef kind="function" id="classGecode_1_1IntSetRanges_1aaa04f91c7ad98ba261fa29f9ee7f71d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::IntSetRanges::IntSetRanges</definition>
        <argsstring>(void)</argsstring>
        <name>IntSetRanges</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int.hh" line="279" column="1" bodyfile="/usr/include/gecode/int/int-set-1.hpp" bodystart="178" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1IntSetRanges_1ac6e310ff6b38f543f75cc2d96a64af8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::IntSetRanges::IntSetRanges</definition>
        <argsstring>(const IntSet &amp;s)</argsstring>
        <name>IntSetRanges</name>
        <param>
          <type>const <ref refid="classGecode_1_1IntSet" kindref="compound">IntSet</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Initialize with ranges for set <emphasis>s</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int.hh" line="281" column="1" bodyfile="/usr/include/gecode/int/int-set-1.hpp" bodystart="190" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1IntSetRanges_1a626d5c44272d44ea420b39e61e1e3929" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::IntSetRanges::init</definition>
        <argsstring>(const IntSet &amp;s)</argsstring>
        <name>init</name>
        <param>
          <type>const <ref refid="classGecode_1_1IntSet" kindref="compound">IntSet</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Initialize with ranges for set <emphasis>s</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int.hh" line="283" column="1" bodyfile="/usr/include/gecode/int/int-set-1.hpp" bodystart="181" bodyend="188"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Iteration control</header>
      <memberdef kind="function" id="classGecode_1_1IntSetRanges_1a4660a3924fbc6d0207d11241ecdaeaa8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::IntSetRanges::operator()</definition>
        <argsstring>(void) const </argsstring>
        <name>operator()</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test whether iterator is still at a range or done. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int.hh" line="289" column="1" bodyfile="/usr/include/gecode/int/int-set-1.hpp" bodystart="198" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1IntSetRanges_1a417a57803f096b0e7306259ccd06f548" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::IntSetRanges::operator++</definition>
        <argsstring>(void)</argsstring>
        <name>operator++</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Move iterator to next range (if possible) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int.hh" line="291" column="1" bodyfile="/usr/include/gecode/int/int-set-1.hpp" bodystart="194" bodyend="196"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Range access</header>
      <memberdef kind="function" id="classGecode_1_1IntSetRanges_1ab9a42074ca80b22599030677abb0e8ee" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::IntSetRanges::min</definition>
        <argsstring>(void) const </argsstring>
        <name>min</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return smallest value of range. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int.hh" line="297" column="1" bodyfile="/usr/include/gecode/int/int-set-1.hpp" bodystart="203" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1IntSetRanges_1a0a9f1e872eda566c6eaf2bc1aeed672b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::IntSetRanges::max</definition>
        <argsstring>(void) const </argsstring>
        <name>max</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return largest value of range. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int.hh" line="299" column="1" bodyfile="/usr/include/gecode/int/int-set-1.hpp" bodystart="207" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1IntSetRanges_1a5c94ce2f14f1d3bad830dee15f559644" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>forceinline unsigned int Gecode::IntSetRanges::width</definition>
        <argsstring>(void) const </argsstring>
        <name>width</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return width of range (distance between minimum and maximum) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int.hh" line="301" column="1" bodyfile="/usr/include/gecode/int/int-set-1.hpp" bodystart="211" bodyend="213"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classGecode_1_1IntSetRanges_1ad11f299570d610bcbdab5426d254bfe0" prot="private" static="no" mutable="no">
        <type>const IntSet::Range *</type>
        <definition>const IntSet::Range* Gecode::IntSetRanges::i</definition>
        <argsstring></argsstring>
        <name>i</name>
        <briefdescription>
<para>Current range. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int.hh" line="272" column="1" bodyfile="/usr/include/gecode/int.hh" bodystart="272" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1IntSetRanges_1afd8fa338ccba1314994839df1d37ab37" prot="private" static="no" mutable="no">
        <type>const IntSet::Range *</type>
        <definition>const IntSet::Range* Gecode::IntSetRanges::e</definition>
        <argsstring></argsstring>
        <name>e</name>
        <briefdescription>
<para>End range. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int.hh" line="274" column="1" bodyfile="/usr/include/gecode/int.hh" bodystart="274" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Range iterator for integer sets. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/usr/include/gecode/int.hh" line="269" column="1" bodyfile="/usr/include/gecode/int.hh" bodystart="269" bodyend="303"/>
    <listofallmembers>
      <member refid="classGecode_1_1IntSetRanges_1afd8fa338ccba1314994839df1d37ab37" prot="private" virt="non-virtual"><scope>Gecode::IntSetRanges</scope><name>e</name></member>
      <member refid="classGecode_1_1IntSetRanges_1ad11f299570d610bcbdab5426d254bfe0" prot="private" virt="non-virtual"><scope>Gecode::IntSetRanges</scope><name>i</name></member>
      <member refid="classGecode_1_1IntSetRanges_1a626d5c44272d44ea420b39e61e1e3929" prot="public" virt="non-virtual"><scope>Gecode::IntSetRanges</scope><name>init</name></member>
      <member refid="classGecode_1_1IntSetRanges_1aaa04f91c7ad98ba261fa29f9ee7f71d1" prot="public" virt="non-virtual"><scope>Gecode::IntSetRanges</scope><name>IntSetRanges</name></member>
      <member refid="classGecode_1_1IntSetRanges_1ac6e310ff6b38f543f75cc2d96a64af8c" prot="public" virt="non-virtual"><scope>Gecode::IntSetRanges</scope><name>IntSetRanges</name></member>
      <member refid="classGecode_1_1IntSetRanges_1a0a9f1e872eda566c6eaf2bc1aeed672b" prot="public" virt="non-virtual"><scope>Gecode::IntSetRanges</scope><name>max</name></member>
      <member refid="classGecode_1_1IntSetRanges_1ab9a42074ca80b22599030677abb0e8ee" prot="public" virt="non-virtual"><scope>Gecode::IntSetRanges</scope><name>min</name></member>
      <member refid="classGecode_1_1IntSetRanges_1a4660a3924fbc6d0207d11241ecdaeaa8" prot="public" virt="non-virtual"><scope>Gecode::IntSetRanges</scope><name>operator()</name></member>
      <member refid="classGecode_1_1IntSetRanges_1a417a57803f096b0e7306259ccd06f548" prot="public" virt="non-virtual"><scope>Gecode::IntSetRanges</scope><name>operator++</name></member>
      <member refid="classGecode_1_1IntSetRanges_1a5c94ce2f14f1d3bad830dee15f559644" prot="public" virt="non-virtual"><scope>Gecode::IntSetRanges</scope><name>width</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
