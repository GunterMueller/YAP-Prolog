<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classGecode_1_1Region" kind="class" prot="public">
    <compoundname>Gecode::Region</compoundname>
    <includes refid="region_8hpp" local="no">region.hpp</includes>
    <innerclass refid="classGecode_1_1Region_1_1HeapInfo" prot="private">Gecode::Region::HeapInfo</innerclass>
      <sectiondef kind="user-defined">
      <header>Typed allocation routines</header>
      <memberdef kind="function" id="classGecode_1_1Region_1a167cff2d16f08d890fff11f80e519233" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>T* Gecode::Region::alloc</definition>
        <argsstring>(long unsigned int n)</argsstring>
        <name>alloc</name>
        <param>
          <type>long unsigned int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Allocate block of <emphasis>n</emphasis> objects of type <emphasis>T</emphasis> from region. </para>        </briefdescription>
        <detaileddescription>
<para>Note that this function implements C++ semantics: the default constructor of <emphasis>T</emphasis> is run for all <emphasis>n</emphasis> objects. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/region.hpp" line="101" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Region_1a0d77b9e99348699d90f2b949e0c83146" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>T* Gecode::Region::alloc</definition>
        <argsstring>(long int n)</argsstring>
        <name>alloc</name>
        <param>
          <type>long int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Allocate block of <emphasis>n</emphasis> objects of type <emphasis>T</emphasis> from region. </para>        </briefdescription>
        <detaileddescription>
<para>Note that this function implements C++ semantics: the default constructor of <emphasis>T</emphasis> is run for all <emphasis>n</emphasis> objects. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/region.hpp" line="109" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Region_1a6ec9df85a9c4f8825e54b502d67569e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>T* Gecode::Region::alloc</definition>
        <argsstring>(unsigned int n)</argsstring>
        <name>alloc</name>
        <param>
          <type>unsigned int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Allocate block of <emphasis>n</emphasis> objects of type <emphasis>T</emphasis> from region. </para>        </briefdescription>
        <detaileddescription>
<para>Note that this function implements C++ semantics: the default constructor of <emphasis>T</emphasis> is run for all <emphasis>n</emphasis> objects. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/region.hpp" line="117" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Region_1afa74d407598097e0495f2e7b4d14f0c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>T* Gecode::Region::alloc</definition>
        <argsstring>(int n)</argsstring>
        <name>alloc</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Allocate block of <emphasis>n</emphasis> objects of type <emphasis>T</emphasis> from region. </para>        </briefdescription>
        <detaileddescription>
<para>Note that this function implements C++ semantics: the default constructor of <emphasis>T</emphasis> is run for all <emphasis>n</emphasis> objects. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/region.hpp" line="125" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Region_1ab6fb7233ea7822b457558d78d808a46c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Gecode::Region::free</definition>
        <argsstring>(T *b, long unsigned int n)</argsstring>
        <name>free</name>
        <param>
          <type>T *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>long unsigned int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Delete <emphasis>n</emphasis> objects allocated from the region starting at <emphasis>b</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>Note that this function implements C++ semantics: the destructor of <emphasis>T</emphasis> is run for all <emphasis>n</emphasis> objects.</para><para>Note that the memory is not freed, the only effect is running the destructors. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/region.hpp" line="136" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Region_1abae819dead433222e5f864fd7abb8975" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Gecode::Region::free</definition>
        <argsstring>(T *b, long int n)</argsstring>
        <name>free</name>
        <param>
          <type>T *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>long int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Delete <emphasis>n</emphasis> objects allocated from the region starting at <emphasis>b</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>Note that this function implements C++ semantics: the destructor of <emphasis>T</emphasis> is run for all <emphasis>n</emphasis> objects.</para><para>Note that the memory is not freed, the only effect is running the destructors. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/region.hpp" line="147" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Region_1a9f27757af80e7012e1e97373de240d16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Gecode::Region::free</definition>
        <argsstring>(T *b, unsigned int n)</argsstring>
        <name>free</name>
        <param>
          <type>T *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Delete <emphasis>n</emphasis> objects allocated from the region starting at <emphasis>b</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>Note that this function implements C++ semantics: the destructor of <emphasis>T</emphasis> is run for all <emphasis>n</emphasis> objects.</para><para>Note that the memory is not freed, the only effect is running the destructors. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/region.hpp" line="158" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Region_1a88df26e61176e72736ee0da0fa47f16f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Gecode::Region::free</definition>
        <argsstring>(T *b, int n)</argsstring>
        <name>free</name>
        <param>
          <type>T *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Delete <emphasis>n</emphasis> objects allocated from the region starting at <emphasis>b</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>Note that this function implements C++ semantics: the destructor of <emphasis>T</emphasis> is run for all <emphasis>n</emphasis> objects.</para><para>Note that the memory is not freed, the only effect is running the destructors. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/region.hpp" line="169" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Region_1a5d5cc4bc31c18c0bf3b34ac560c9597a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>T* Gecode::Region::realloc</definition>
        <argsstring>(T *b, long unsigned int n, long unsigned int m)</argsstring>
        <name>realloc</name>
        <param>
          <type>T *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>long unsigned int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>long unsigned int</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Reallocate block of <emphasis>n</emphasis> objects starting at <emphasis>b</emphasis> to <emphasis>m</emphasis> objects of type <emphasis>T</emphasis> from the region. </para>        </briefdescription>
        <detaileddescription>
<para>Note that this function implements C++ semantics: the copy constructor of <emphasis>T</emphasis> is run for all <formula id="315">$\min(n,m)$</formula> objects, the default constructor of <emphasis>T</emphasis> is run for all remaining <formula id="316">$\max(n,m)-\min(n,m)$</formula> objects, and the destrucor of <emphasis>T</emphasis> is run for all <emphasis>n</emphasis> objects in <emphasis>b</emphasis>.</para><para>Returns the address of the new block. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/region.hpp" line="182" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Region_1a6255cdbf288e71b11fe151d422bf6900" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>T* Gecode::Region::realloc</definition>
        <argsstring>(T *b, long int n, long int m)</argsstring>
        <name>realloc</name>
        <param>
          <type>T *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>long int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>long int</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Reallocate block of <emphasis>n</emphasis> objects starting at <emphasis>b</emphasis> to <emphasis>m</emphasis> objects of type <emphasis>T</emphasis> from the region. </para>        </briefdescription>
        <detaileddescription>
<para>Note that this function implements C++ semantics: the copy constructor of <emphasis>T</emphasis> is run for all <formula id="315">$\min(n,m)$</formula> objects, the default constructor of <emphasis>T</emphasis> is run for all remaining <formula id="316">$\max(n,m)-\min(n,m)$</formula> objects, and the destrucor of <emphasis>T</emphasis> is run for all <emphasis>n</emphasis> objects in <emphasis>b</emphasis>.</para><para>Returns the address of the new block. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/region.hpp" line="195" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Region_1a288fb2755a9830980c4588ae98d1f15c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>T* Gecode::Region::realloc</definition>
        <argsstring>(T *b, unsigned int n, unsigned int m)</argsstring>
        <name>realloc</name>
        <param>
          <type>T *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Reallocate block of <emphasis>n</emphasis> objects starting at <emphasis>b</emphasis> to <emphasis>m</emphasis> objects of type <emphasis>T</emphasis> from the region. </para>        </briefdescription>
        <detaileddescription>
<para>Note that this function implements C++ semantics: the copy constructor of <emphasis>T</emphasis> is run for all <formula id="315">$\min(n,m)$</formula> objects, the default constructor of <emphasis>T</emphasis> is run for all remaining <formula id="316">$\max(n,m)-\min(n,m)$</formula> objects, and the destrucor of <emphasis>T</emphasis> is run for all <emphasis>n</emphasis> objects in <emphasis>b</emphasis>.</para><para>Returns the address of the new block. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/region.hpp" line="208" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Region_1ae92d07c06657df6c0ca882cd1ff5f46c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>T* Gecode::Region::realloc</definition>
        <argsstring>(T *b, int n, int m)</argsstring>
        <name>realloc</name>
        <param>
          <type>T *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>int</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Reallocate block of <emphasis>n</emphasis> objects starting at <emphasis>b</emphasis> to <emphasis>m</emphasis> objects of type <emphasis>T</emphasis> from the region. </para>        </briefdescription>
        <detaileddescription>
<para>Note that this function implements C++ semantics: the copy constructor of <emphasis>T</emphasis> is run for all <formula id="315">$\min(n,m)$</formula> objects, the default constructor of <emphasis>T</emphasis> is run for all remaining <formula id="316">$\max(n,m)-\min(n,m)$</formula> objects, and the destrucor of <emphasis>T</emphasis> is run for all <emphasis>n</emphasis> objects in <emphasis>b</emphasis>.</para><para>Returns the address of the new block. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/region.hpp" line="221" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Raw allocation routines</header>
      <memberdef kind="function" id="classGecode_1_1Region_1a6c9123960b7c49dd2d6595ebfccfe7d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>forceinline void * Gecode::Region::ralloc</definition>
        <argsstring>(size_t s)</argsstring>
        <name>ralloc</name>
        <param>
          <type>size_t</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Allocate memory from region. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/region.hpp" line="226" column="1" bodyfile="/usr/include/gecode/kernel/region.hpp" bodystart="302" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Region_1a2424e98ed4b688708c091349c971fb4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Region::rfree</definition>
        <argsstring>(void *p, size_t s)</argsstring>
        <name>rfree</name>
        <param>
          <type>void *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Free memory previously allocated. </para>        </briefdescription>
        <detaileddescription>
<para>Note that the memory is only guaranteed to be freed after the region object itself gets deleted. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/region.hpp" line="233" column="1" bodyfile="/usr/include/gecode/kernel/region.hpp" bodystart="310" bodyend="310"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Construction routines</header>
      <memberdef kind="function" id="classGecode_1_1Region_1a3f59930c9fc1c3b9028c2a80b6b4962c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>T &amp;</type>
        <definition>T&amp; Gecode::Region::construct</definition>
        <argsstring>(void)</argsstring>
        <name>construct</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Constructs a single object of type <emphasis>T</emphasis> from region using the default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/region.hpp" line="241" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Region_1a1e72883d4fe6c46c77e492397cfbf408" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>typename A1</type>
          </param>
        </templateparamlist>
        <type>T &amp;</type>
        <definition>T&amp; Gecode::Region::construct</definition>
        <argsstring>(A1 const &amp;a1)</argsstring>
        <name>construct</name>
        <param>
          <type>A1 const &amp;</type>
          <declname>a1</declname>
        </param>
        <briefdescription>
<para>Constructs a single object of type <emphasis>T</emphasis> from region using a unary constructor. </para>        </briefdescription>
        <detaileddescription>
<para>The parameter is passed as a const reference. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/region.hpp" line="248" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Region_1a07b68d62f6d143be9e3312d15a029c0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>typename A1</type>
          </param>
          <param>
            <type>typename A2</type>
          </param>
        </templateparamlist>
        <type>T &amp;</type>
        <definition>T&amp; Gecode::Region::construct</definition>
        <argsstring>(A1 const &amp;a1, A2 const &amp;a2)</argsstring>
        <name>construct</name>
        <param>
          <type>A1 const &amp;</type>
          <declname>a1</declname>
        </param>
        <param>
          <type>A2 const &amp;</type>
          <declname>a2</declname>
        </param>
        <briefdescription>
<para>Constructs a single object of type <emphasis>T</emphasis> from region using a binary constructor. </para>        </briefdescription>
        <detaileddescription>
<para>The parameters are passed as const references. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/region.hpp" line="255" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Region_1a679373e435651de5f7e3f7318d5d20b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>typename A1</type>
          </param>
          <param>
            <type>typename A2</type>
          </param>
          <param>
            <type>typename A3</type>
          </param>
        </templateparamlist>
        <type>T &amp;</type>
        <definition>T&amp; Gecode::Region::construct</definition>
        <argsstring>(A1 const &amp;a1, A2 const &amp;a2, A3 const &amp;a3)</argsstring>
        <name>construct</name>
        <param>
          <type>A1 const &amp;</type>
          <declname>a1</declname>
        </param>
        <param>
          <type>A2 const &amp;</type>
          <declname>a2</declname>
        </param>
        <param>
          <type>A3 const &amp;</type>
          <declname>a3</declname>
        </param>
        <briefdescription>
<para>Constructs a single object of type <emphasis>T</emphasis> from region using a ternary constructor. </para>        </briefdescription>
        <detaileddescription>
<para>The parameters are passed as const references. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/region.hpp" line="262" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Region_1ae2bdcb9df6d6a887a45bf66b1cea019b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>typename A1</type>
          </param>
          <param>
            <type>typename A2</type>
          </param>
          <param>
            <type>typename A3</type>
          </param>
          <param>
            <type>typename A4</type>
          </param>
        </templateparamlist>
        <type>T &amp;</type>
        <definition>T&amp; Gecode::Region::construct</definition>
        <argsstring>(A1 const &amp;a1, A2 const &amp;a2, A3 const &amp;a3, A4 const &amp;a4)</argsstring>
        <name>construct</name>
        <param>
          <type>A1 const &amp;</type>
          <declname>a1</declname>
        </param>
        <param>
          <type>A2 const &amp;</type>
          <declname>a2</declname>
        </param>
        <param>
          <type>A3 const &amp;</type>
          <declname>a3</declname>
        </param>
        <param>
          <type>A4 const &amp;</type>
          <declname>a4</declname>
        </param>
        <briefdescription>
<para>Constructs a single object of type <emphasis>T</emphasis> from region using a quaternary constructor. </para>        </briefdescription>
        <detaileddescription>
<para>The parameters are passed as const references. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/region.hpp" line="269" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Region_1a9b325354d4d8b9b6219e37f9a3fefbe8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>typename A1</type>
          </param>
          <param>
            <type>typename A2</type>
          </param>
          <param>
            <type>typename A3</type>
          </param>
          <param>
            <type>typename A4</type>
          </param>
          <param>
            <type>typename A5</type>
          </param>
        </templateparamlist>
        <type>T &amp;</type>
        <definition>T&amp; Gecode::Region::construct</definition>
        <argsstring>(A1 const &amp;a1, A2 const &amp;a2, A3 const &amp;a3, A4 const &amp;a4, A5 const &amp;a5)</argsstring>
        <name>construct</name>
        <param>
          <type>A1 const &amp;</type>
          <declname>a1</declname>
        </param>
        <param>
          <type>A2 const &amp;</type>
          <declname>a2</declname>
        </param>
        <param>
          <type>A3 const &amp;</type>
          <declname>a3</declname>
        </param>
        <param>
          <type>A4 const &amp;</type>
          <declname>a4</declname>
        </param>
        <param>
          <type>A5 const &amp;</type>
          <declname>a5</declname>
        </param>
        <briefdescription>
<para>Constructs a single object of type <emphasis>T</emphasis> from region using a quinary constructor. </para>        </briefdescription>
        <detaileddescription>
<para>The parameters are passed as const references. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/region.hpp" line="276" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classGecode_1_1Region_1aa8b22e36fe77b4848ec776cb6ffd7470" prot="private" static="no" mutable="no">
        <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
        <definition>Space&amp; Gecode::Region::home</definition>
        <argsstring></argsstring>
        <name>home</name>
        <briefdescription>
<para>Location to space. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/region.hpp" line="64" column="1" bodyfile="/usr/include/gecode/kernel/region.hpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Region_1aebd91b8f6a23b9fe3004fd7a86d0c85a" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t Gecode::Region::free_reset</definition>
        <argsstring></argsstring>
        <name>free_reset</name>
        <briefdescription>
<para>Free memory to reset. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/region.hpp" line="66" column="1" bodyfile="/usr/include/gecode/kernel/region.hpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Region_1ad433ae3bd30295ad3f740235f576c96f" prot="private" static="no" mutable="no">
        <type>void *</type>
        <definition>void* Gecode::Region::hi</definition>
        <argsstring></argsstring>
        <name>hi</name>
        <briefdescription>
<para><ref refid="classGecode_1_1Heap" kindref="compound">Heap</ref> allocation information. </para>        </briefdescription>
        <detaileddescription>
<para>If NULL, no heap memory has been allocated. If the pointer is marked, it points to a single heap allocated block. Otherwise, it points to a HeapInfo data structure. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/region.hpp" line="84" column="1" bodyfile="/usr/include/gecode/kernel/region.hpp" bodystart="84" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classGecode_1_1Region_1a30a21dab0cd88f0a400fb3160dedef9b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GECODE_KERNEL_EXPORT void *</type>
        <definition>GECODE_KERNEL_EXPORT void* Gecode::Region::heap_alloc</definition>
        <argsstring>(size_t s)</argsstring>
        <name>heap_alloc</name>
        <param>
          <type>size_t</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Allocate memory from heap. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/region.hpp" line="86" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Region_1a4ad6d971c4bcac341ef38a175845f755" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GECODE_KERNEL_EXPORT void</type>
        <definition>GECODE_KERNEL_EXPORT void Gecode::Region::heap_free</definition>
        <argsstring>(void)</argsstring>
        <name>heap_free</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Free memory previously allocated from heap. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/region.hpp" line="88" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Region_1a2723248b1d3446e82985daf65ff8913a" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Gecode::Region::Region</definition>
        <argsstring>(const Region &amp;r)</argsstring>
        <name>Region</name>
        <param>
          <type>const <ref refid="classGecode_1_1Region" kindref="compound">Region</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>Copy constructor (disabled) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/region.hpp" line="286" column="1" bodyfile="/usr/include/gecode/kernel/region.hpp" bodystart="286" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Region_1a6d413310c0ee71a96c8fbfcc5a0294d5" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classGecode_1_1Region" kindref="compound">Region</ref> &amp;</type>
        <definition>const Region&amp; Gecode::Region::operator=</definition>
        <argsstring>(const Region &amp;)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classGecode_1_1Region" kindref="compound">Region</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Assignment operator (disabled) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/region.hpp" line="288" column="1" bodyfile="/usr/include/gecode/kernel/region.hpp" bodystart="288" bodyend="288"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classGecode_1_1Region_1aa6afe172fa28af9f452f34fd762cf481" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Region::Region</definition>
        <argsstring>(const Space &amp;home)</argsstring>
        <name>Region</name>
        <param>
          <type>const <ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <briefdescription>
<para>Initialize region from space. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/region.hpp" line="91" column="1" bodyfile="/usr/include/gecode/kernel/region.hpp" bodystart="298" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Region_1a02a16bb47c8799552d526d8fe8f66443" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Region::~Region</definition>
        <argsstring>(void)</argsstring>
        <name>~Region</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return memory. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/region.hpp" line="279" column="1" bodyfile="/usr/include/gecode/kernel/region.hpp" bodystart="313" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Region_1a39e95134a4c27a3a1ecf6b268105e435" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>forceinline T *</type>
        <definition>forceinline T* Gecode::Region::alloc</definition>
        <argsstring>(long unsigned int n)</argsstring>
        <name>alloc</name>
        <param>
          <type>long unsigned int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/region.hpp" line="326" column="1" bodyfile="/usr/include/gecode/kernel/region.hpp" bodystart="326" bodyend="331"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Region_1a3bf04359fe08d48a5f827d50919f6f23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>forceinline T *</type>
        <definition>forceinline T* Gecode::Region::alloc</definition>
        <argsstring>(long int n)</argsstring>
        <name>alloc</name>
        <param>
          <type>long int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/region.hpp" line="334" column="1" bodyfile="/usr/include/gecode/kernel/region.hpp" bodystart="334" bodyend="337"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Region_1a3451316f36f6b78db92076ca82888972" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>forceinline T *</type>
        <definition>forceinline T* Gecode::Region::alloc</definition>
        <argsstring>(unsigned int n)</argsstring>
        <name>alloc</name>
        <param>
          <type>unsigned int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/region.hpp" line="340" column="1" bodyfile="/usr/include/gecode/kernel/region.hpp" bodystart="340" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Region_1a2c51cb3e0f578f39227172be2d5ec742" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>forceinline T *</type>
        <definition>forceinline T* Gecode::Region::alloc</definition>
        <argsstring>(int n)</argsstring>
        <name>alloc</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/region.hpp" line="345" column="1" bodyfile="/usr/include/gecode/kernel/region.hpp" bodystart="345" bodyend="348"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Region_1a8830fa56265d1095b9b05b9a4e17d018" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>forceinline void</type>
        <definition>forceinline void Gecode::Region::free</definition>
        <argsstring>(T *b, long unsigned int n)</argsstring>
        <name>free</name>
        <param>
          <type>T *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>long unsigned int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/region.hpp" line="352" column="1" bodyfile="/usr/include/gecode/kernel/region.hpp" bodystart="352" bodyend="356"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Region_1ad9e852db4da7e689b38568a76cf78616" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>forceinline void</type>
        <definition>forceinline void Gecode::Region::free</definition>
        <argsstring>(T *b, long int n)</argsstring>
        <name>free</name>
        <param>
          <type>T *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>long int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/region.hpp" line="359" column="1" bodyfile="/usr/include/gecode/kernel/region.hpp" bodystart="359" bodyend="362"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Region_1ac3a5efd3af2910ebbce4cf03dade4bfd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>forceinline void</type>
        <definition>forceinline void Gecode::Region::free</definition>
        <argsstring>(T *b, unsigned int n)</argsstring>
        <name>free</name>
        <param>
          <type>T *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/region.hpp" line="365" column="1" bodyfile="/usr/include/gecode/kernel/region.hpp" bodystart="365" bodyend="367"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Region_1ab3c95e669245e8396ae393d709ce9cae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>forceinline void</type>
        <definition>forceinline void Gecode::Region::free</definition>
        <argsstring>(T *b, int n)</argsstring>
        <name>free</name>
        <param>
          <type>T *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/region.hpp" line="370" column="1" bodyfile="/usr/include/gecode/kernel/region.hpp" bodystart="370" bodyend="373"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Region_1aad0209c51dcee4353c2143555ce33e2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>forceinline T *</type>
        <definition>forceinline T* Gecode::Region::realloc</definition>
        <argsstring>(T *b, long unsigned int n, long unsigned int m)</argsstring>
        <name>realloc</name>
        <param>
          <type>T *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>long unsigned int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>long unsigned int</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/region.hpp" line="377" column="1" bodyfile="/usr/include/gecode/kernel/region.hpp" bodystart="377" bodyend="390"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Region_1ae1678458d7714ec9bf36f94d5cc9a8e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>forceinline T *</type>
        <definition>forceinline T* Gecode::Region::realloc</definition>
        <argsstring>(T *b, long int n, long int m)</argsstring>
        <name>realloc</name>
        <param>
          <type>T *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>long int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>long int</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/region.hpp" line="393" column="1" bodyfile="/usr/include/gecode/kernel/region.hpp" bodystart="393" bodyend="397"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Region_1aa23d378851d4a06a871f5941c36c43b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>forceinline T *</type>
        <definition>forceinline T* Gecode::Region::realloc</definition>
        <argsstring>(T *b, unsigned int n, unsigned int m)</argsstring>
        <name>realloc</name>
        <param>
          <type>T *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/region.hpp" line="400" column="1" bodyfile="/usr/include/gecode/kernel/region.hpp" bodystart="400" bodyend="403"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Region_1ad1aa7467e023d6a0c112371af377ae0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>forceinline T *</type>
        <definition>forceinline T* Gecode::Region::realloc</definition>
        <argsstring>(T *b, int n, int m)</argsstring>
        <name>realloc</name>
        <param>
          <type>T *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>int</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/region.hpp" line="406" column="1" bodyfile="/usr/include/gecode/kernel/region.hpp" bodystart="406" bodyend="410"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Region_1a4bdffe7cb2f3007d2332bfa42fe11920" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>forceinline T &amp;</type>
        <definition>forceinline T&amp; Gecode::Region::construct</definition>
        <argsstring>(void)</argsstring>
        <name>construct</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/region.hpp" line="418" column="1" bodyfile="/usr/include/gecode/kernel/region.hpp" bodystart="418" bodyend="420"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Region_1afed6d05c586e8cbf8933b6f09e7f00f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>typename A1</type>
          </param>
        </templateparamlist>
        <type>forceinline T &amp;</type>
        <definition>forceinline T&amp; Gecode::Region::construct</definition>
        <argsstring>(A1 const &amp;a1)</argsstring>
        <name>construct</name>
        <param>
          <type>A1 const &amp;</type>
          <declname>a1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/region.hpp" line="423" column="1" bodyfile="/usr/include/gecode/kernel/region.hpp" bodystart="423" bodyend="427"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Region_1a44357b9ee5c2e80e1152ddb3f6e8d18a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>typename A1</type>
          </param>
          <param>
            <type>typename A2</type>
          </param>
        </templateparamlist>
        <type>forceinline T &amp;</type>
        <definition>forceinline T&amp; Gecode::Region::construct</definition>
        <argsstring>(A1 const &amp;a1, A2 const &amp;a2)</argsstring>
        <name>construct</name>
        <param>
          <type>A1 const &amp;</type>
          <declname>a1</declname>
        </param>
        <param>
          <type>A2 const &amp;</type>
          <declname>a2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/region.hpp" line="430" column="1" bodyfile="/usr/include/gecode/kernel/region.hpp" bodystart="430" bodyend="434"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Region_1a2acef2ddd30a5aed196b030b0284a15f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>typename A1</type>
          </param>
          <param>
            <type>typename A2</type>
          </param>
          <param>
            <type>typename A3</type>
          </param>
        </templateparamlist>
        <type>forceinline T &amp;</type>
        <definition>forceinline T&amp; Gecode::Region::construct</definition>
        <argsstring>(A1 const &amp;a1, A2 const &amp;a2, A3 const &amp;a3)</argsstring>
        <name>construct</name>
        <param>
          <type>A1 const &amp;</type>
          <declname>a1</declname>
        </param>
        <param>
          <type>A2 const &amp;</type>
          <declname>a2</declname>
        </param>
        <param>
          <type>A3 const &amp;</type>
          <declname>a3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/region.hpp" line="437" column="1" bodyfile="/usr/include/gecode/kernel/region.hpp" bodystart="437" bodyend="441"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Region_1abe6f7639d632301b7b6645c4a764ea7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>typename A1</type>
          </param>
          <param>
            <type>typename A2</type>
          </param>
          <param>
            <type>typename A3</type>
          </param>
          <param>
            <type>typename A4</type>
          </param>
        </templateparamlist>
        <type>forceinline T &amp;</type>
        <definition>forceinline T&amp; Gecode::Region::construct</definition>
        <argsstring>(A1 const &amp;a1, A2 const &amp;a2, A3 const &amp;a3, A4 const &amp;a4)</argsstring>
        <name>construct</name>
        <param>
          <type>A1 const &amp;</type>
          <declname>a1</declname>
        </param>
        <param>
          <type>A2 const &amp;</type>
          <declname>a2</declname>
        </param>
        <param>
          <type>A3 const &amp;</type>
          <declname>a3</declname>
        </param>
        <param>
          <type>A4 const &amp;</type>
          <declname>a4</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/region.hpp" line="444" column="1" bodyfile="/usr/include/gecode/kernel/region.hpp" bodystart="444" bodyend="448"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Region_1a0b2050a4e8e4ead474058a57c0115ccb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>typename A1</type>
          </param>
          <param>
            <type>typename A2</type>
          </param>
          <param>
            <type>typename A3</type>
          </param>
          <param>
            <type>typename A4</type>
          </param>
          <param>
            <type>typename A5</type>
          </param>
        </templateparamlist>
        <type>forceinline T &amp;</type>
        <definition>forceinline T&amp; Gecode::Region::construct</definition>
        <argsstring>(A1 const &amp;a1, A2 const &amp;a2, A3 const &amp;a3, A4 const &amp;a4, A5 const &amp;a5)</argsstring>
        <name>construct</name>
        <param>
          <type>A1 const &amp;</type>
          <declname>a1</declname>
        </param>
        <param>
          <type>A2 const &amp;</type>
          <declname>a2</declname>
        </param>
        <param>
          <type>A3 const &amp;</type>
          <declname>a3</declname>
        </param>
        <param>
          <type>A4 const &amp;</type>
          <declname>a4</declname>
        </param>
        <param>
          <type>A5 const &amp;</type>
          <declname>a5</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/region.hpp" line="451" column="1" bodyfile="/usr/include/gecode/kernel/region.hpp" bodystart="451" bodyend="455"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classGecode_1_1Region_1a1598eb2895596e57a89da7a8677158c0" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void *</type>
        <definition>static void* Gecode::Region::operator new</definition>
        <argsstring>(size_t s)</argsstring>
        <name>operator new</name>
        <param>
          <type>size_t</type>
          <declname>s</declname>
        </param>
        <exceptions> throw ()</exceptions>
        <briefdescription>
<para>Allocate memory from heap (disabled) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/region.hpp" line="282" column="1" bodyfile="/usr/include/gecode/kernel/region.hpp" bodystart="282" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Region_1a0cf13317231c9a23600992d0db2fbde1" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Gecode::Region::operator delete</definition>
        <argsstring>(void *p)</argsstring>
        <name>operator delete</name>
        <param>
          <type>void *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Free memory allocated from heap (disabled) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/region.hpp" line="284" column="1" bodyfile="/usr/include/gecode/kernel/region.hpp" bodystart="284" bodyend="284"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Handle to region. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/usr/include/gecode/kernel/region.hpp" line="61" column="1" bodyfile="/usr/include/gecode/kernel/region.hpp" bodystart="61" bodyend="289"/>
    <listofallmembers>
      <member refid="classGecode_1_1Region_1a167cff2d16f08d890fff11f80e519233" prot="public" virt="non-virtual"><scope>Gecode::Region</scope><name>alloc</name></member>
      <member refid="classGecode_1_1Region_1a0d77b9e99348699d90f2b949e0c83146" prot="public" virt="non-virtual"><scope>Gecode::Region</scope><name>alloc</name></member>
      <member refid="classGecode_1_1Region_1a6ec9df85a9c4f8825e54b502d67569e9" prot="public" virt="non-virtual"><scope>Gecode::Region</scope><name>alloc</name></member>
      <member refid="classGecode_1_1Region_1afa74d407598097e0495f2e7b4d14f0c2" prot="public" virt="non-virtual"><scope>Gecode::Region</scope><name>alloc</name></member>
      <member refid="classGecode_1_1Region_1a39e95134a4c27a3a1ecf6b268105e435" prot="public" virt="non-virtual"><scope>Gecode::Region</scope><name>alloc</name></member>
      <member refid="classGecode_1_1Region_1a3bf04359fe08d48a5f827d50919f6f23" prot="public" virt="non-virtual"><scope>Gecode::Region</scope><name>alloc</name></member>
      <member refid="classGecode_1_1Region_1a3451316f36f6b78db92076ca82888972" prot="public" virt="non-virtual"><scope>Gecode::Region</scope><name>alloc</name></member>
      <member refid="classGecode_1_1Region_1a2c51cb3e0f578f39227172be2d5ec742" prot="public" virt="non-virtual"><scope>Gecode::Region</scope><name>alloc</name></member>
      <member refid="classGecode_1_1Region_1a3f59930c9fc1c3b9028c2a80b6b4962c" prot="public" virt="non-virtual"><scope>Gecode::Region</scope><name>construct</name></member>
      <member refid="classGecode_1_1Region_1a1e72883d4fe6c46c77e492397cfbf408" prot="public" virt="non-virtual"><scope>Gecode::Region</scope><name>construct</name></member>
      <member refid="classGecode_1_1Region_1a07b68d62f6d143be9e3312d15a029c0f" prot="public" virt="non-virtual"><scope>Gecode::Region</scope><name>construct</name></member>
      <member refid="classGecode_1_1Region_1a679373e435651de5f7e3f7318d5d20b7" prot="public" virt="non-virtual"><scope>Gecode::Region</scope><name>construct</name></member>
      <member refid="classGecode_1_1Region_1ae2bdcb9df6d6a887a45bf66b1cea019b" prot="public" virt="non-virtual"><scope>Gecode::Region</scope><name>construct</name></member>
      <member refid="classGecode_1_1Region_1a9b325354d4d8b9b6219e37f9a3fefbe8" prot="public" virt="non-virtual"><scope>Gecode::Region</scope><name>construct</name></member>
      <member refid="classGecode_1_1Region_1a4bdffe7cb2f3007d2332bfa42fe11920" prot="public" virt="non-virtual"><scope>Gecode::Region</scope><name>construct</name></member>
      <member refid="classGecode_1_1Region_1afed6d05c586e8cbf8933b6f09e7f00f4" prot="public" virt="non-virtual"><scope>Gecode::Region</scope><name>construct</name></member>
      <member refid="classGecode_1_1Region_1a44357b9ee5c2e80e1152ddb3f6e8d18a" prot="public" virt="non-virtual"><scope>Gecode::Region</scope><name>construct</name></member>
      <member refid="classGecode_1_1Region_1a2acef2ddd30a5aed196b030b0284a15f" prot="public" virt="non-virtual"><scope>Gecode::Region</scope><name>construct</name></member>
      <member refid="classGecode_1_1Region_1abe6f7639d632301b7b6645c4a764ea7a" prot="public" virt="non-virtual"><scope>Gecode::Region</scope><name>construct</name></member>
      <member refid="classGecode_1_1Region_1a0b2050a4e8e4ead474058a57c0115ccb" prot="public" virt="non-virtual"><scope>Gecode::Region</scope><name>construct</name></member>
      <member refid="classGecode_1_1Region_1ab6fb7233ea7822b457558d78d808a46c" prot="public" virt="non-virtual"><scope>Gecode::Region</scope><name>free</name></member>
      <member refid="classGecode_1_1Region_1abae819dead433222e5f864fd7abb8975" prot="public" virt="non-virtual"><scope>Gecode::Region</scope><name>free</name></member>
      <member refid="classGecode_1_1Region_1a9f27757af80e7012e1e97373de240d16" prot="public" virt="non-virtual"><scope>Gecode::Region</scope><name>free</name></member>
      <member refid="classGecode_1_1Region_1a88df26e61176e72736ee0da0fa47f16f" prot="public" virt="non-virtual"><scope>Gecode::Region</scope><name>free</name></member>
      <member refid="classGecode_1_1Region_1a8830fa56265d1095b9b05b9a4e17d018" prot="public" virt="non-virtual"><scope>Gecode::Region</scope><name>free</name></member>
      <member refid="classGecode_1_1Region_1ad9e852db4da7e689b38568a76cf78616" prot="public" virt="non-virtual"><scope>Gecode::Region</scope><name>free</name></member>
      <member refid="classGecode_1_1Region_1ac3a5efd3af2910ebbce4cf03dade4bfd" prot="public" virt="non-virtual"><scope>Gecode::Region</scope><name>free</name></member>
      <member refid="classGecode_1_1Region_1ab3c95e669245e8396ae393d709ce9cae" prot="public" virt="non-virtual"><scope>Gecode::Region</scope><name>free</name></member>
      <member refid="classGecode_1_1Region_1aebd91b8f6a23b9fe3004fd7a86d0c85a" prot="private" virt="non-virtual"><scope>Gecode::Region</scope><name>free_reset</name></member>
      <member refid="classGecode_1_1Region_1a30a21dab0cd88f0a400fb3160dedef9b" prot="private" virt="non-virtual"><scope>Gecode::Region</scope><name>heap_alloc</name></member>
      <member refid="classGecode_1_1Region_1a4ad6d971c4bcac341ef38a175845f755" prot="private" virt="non-virtual"><scope>Gecode::Region</scope><name>heap_free</name></member>
      <member refid="classGecode_1_1Region_1ad433ae3bd30295ad3f740235f576c96f" prot="private" virt="non-virtual"><scope>Gecode::Region</scope><name>hi</name></member>
      <member refid="classGecode_1_1Region_1aa8b22e36fe77b4848ec776cb6ffd7470" prot="private" virt="non-virtual"><scope>Gecode::Region</scope><name>home</name></member>
      <member refid="classGecode_1_1Region_1a0cf13317231c9a23600992d0db2fbde1" prot="private" virt="non-virtual"><scope>Gecode::Region</scope><name>operator delete</name></member>
      <member refid="classGecode_1_1Region_1a1598eb2895596e57a89da7a8677158c0" prot="private" virt="non-virtual"><scope>Gecode::Region</scope><name>operator new</name></member>
      <member refid="classGecode_1_1Region_1a6d413310c0ee71a96c8fbfcc5a0294d5" prot="private" virt="non-virtual"><scope>Gecode::Region</scope><name>operator=</name></member>
      <member refid="classGecode_1_1Region_1a6c9123960b7c49dd2d6595ebfccfe7d6" prot="public" virt="non-virtual"><scope>Gecode::Region</scope><name>ralloc</name></member>
      <member refid="classGecode_1_1Region_1a5d5cc4bc31c18c0bf3b34ac560c9597a" prot="public" virt="non-virtual"><scope>Gecode::Region</scope><name>realloc</name></member>
      <member refid="classGecode_1_1Region_1a6255cdbf288e71b11fe151d422bf6900" prot="public" virt="non-virtual"><scope>Gecode::Region</scope><name>realloc</name></member>
      <member refid="classGecode_1_1Region_1a288fb2755a9830980c4588ae98d1f15c" prot="public" virt="non-virtual"><scope>Gecode::Region</scope><name>realloc</name></member>
      <member refid="classGecode_1_1Region_1ae92d07c06657df6c0ca882cd1ff5f46c" prot="public" virt="non-virtual"><scope>Gecode::Region</scope><name>realloc</name></member>
      <member refid="classGecode_1_1Region_1aad0209c51dcee4353c2143555ce33e2c" prot="public" virt="non-virtual"><scope>Gecode::Region</scope><name>realloc</name></member>
      <member refid="classGecode_1_1Region_1ae1678458d7714ec9bf36f94d5cc9a8e6" prot="public" virt="non-virtual"><scope>Gecode::Region</scope><name>realloc</name></member>
      <member refid="classGecode_1_1Region_1aa23d378851d4a06a871f5941c36c43b5" prot="public" virt="non-virtual"><scope>Gecode::Region</scope><name>realloc</name></member>
      <member refid="classGecode_1_1Region_1ad1aa7467e023d6a0c112371af377ae0c" prot="public" virt="non-virtual"><scope>Gecode::Region</scope><name>realloc</name></member>
      <member refid="classGecode_1_1Region_1aa6afe172fa28af9f452f34fd762cf481" prot="public" virt="non-virtual"><scope>Gecode::Region</scope><name>Region</name></member>
      <member refid="classGecode_1_1Region_1a2723248b1d3446e82985daf65ff8913a" prot="private" virt="non-virtual"><scope>Gecode::Region</scope><name>Region</name></member>
      <member refid="classGecode_1_1Region_1a2424e98ed4b688708c091349c971fb4f" prot="public" virt="non-virtual"><scope>Gecode::Region</scope><name>rfree</name></member>
      <member refid="classGecode_1_1Region_1a02a16bb47c8799552d526d8fe8f66443" prot="public" virt="non-virtual"><scope>Gecode::Region</scope><name>~Region</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
