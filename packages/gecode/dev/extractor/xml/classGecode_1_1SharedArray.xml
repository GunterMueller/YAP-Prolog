<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classGecode_1_1SharedArray" kind="class" prot="public">
    <compoundname>Gecode::SharedArray</compoundname>
    <basecompoundref refid="classGecode_1_1SharedHandle" prot="public" virt="non-virtual">Gecode::SharedHandle</basecompoundref>
    <includes refid="shared-array_8hpp" local="no">shared-array.hpp</includes>
    <innerclass refid="classGecode_1_1SharedArray_1_1SAO" prot="protected">Gecode::SharedArray::SAO</innerclass>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Associated types</header>
      <memberdef kind="typedef" id="classGecode_1_1SharedArray_1aac12bed2969cf32d8e0ed57289d9e914" prot="public" static="no">
        <type>T</type>
        <definition>typedef T Gecode::SharedArray&lt; T &gt;::value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
<para>Type of the view stored in this array. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/shared-array.hpp" line="96" column="1" bodyfile="/usr/include/gecode/kernel/shared-array.hpp" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classGecode_1_1SharedArray_1ad258c6493caf764437df20296082b80d" prot="public" static="no">
        <type>T &amp;</type>
        <definition>typedef T&amp; Gecode::SharedArray&lt; T &gt;::reference</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
<para>Type of a reference to the value type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/shared-array.hpp" line="98" column="1" bodyfile="/usr/include/gecode/kernel/shared-array.hpp" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classGecode_1_1SharedArray_1ad042b3e6236e4b30932449c41cfd7370" prot="public" static="no">
        <type>const T &amp;</type>
        <definition>typedef const T&amp; Gecode::SharedArray&lt; T &gt;::const_reference</definition>
        <argsstring></argsstring>
        <name>const_reference</name>
        <briefdescription>
<para>Type of a constant reference to the value type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/shared-array.hpp" line="100" column="1" bodyfile="/usr/include/gecode/kernel/shared-array.hpp" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classGecode_1_1SharedArray_1a8755a7298a7c1b6c60718e94156192f3" prot="public" static="no">
        <type>T *</type>
        <definition>typedef T* Gecode::SharedArray&lt; T &gt;::pointer</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <briefdescription>
<para>Type of a pointer to the value type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/shared-array.hpp" line="102" column="1" bodyfile="/usr/include/gecode/kernel/shared-array.hpp" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classGecode_1_1SharedArray_1aa5547278829bad6f85a94ec04a907906" prot="public" static="no">
        <type>const T *</type>
        <definition>typedef const T* Gecode::SharedArray&lt; T &gt;::const_pointer</definition>
        <argsstring></argsstring>
        <name>const_pointer</name>
        <briefdescription>
<para>Type of a read-only pointer to the value type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/shared-array.hpp" line="104" column="1" bodyfile="/usr/include/gecode/kernel/shared-array.hpp" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classGecode_1_1SharedArray_1acb07df441003a435392ced5f74405333" prot="public" static="no">
        <type>T *</type>
        <definition>typedef T* Gecode::SharedArray&lt; T &gt;::iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
<para>Type of the iterator used to iterate through this array&apos;s elements. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/shared-array.hpp" line="106" column="1" bodyfile="/usr/include/gecode/kernel/shared-array.hpp" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classGecode_1_1SharedArray_1aa55558b221f6ad8d3c25e2bc27630290" prot="public" static="no">
        <type>const T *</type>
        <definition>typedef const T* Gecode::SharedArray&lt; T &gt;::const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
<para>Type of the iterator used to iterate read-only through this array&apos;s elements. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/shared-array.hpp" line="108" column="1" bodyfile="/usr/include/gecode/kernel/shared-array.hpp" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classGecode_1_1SharedArray_1aa83be04e6c24d8f05bff0d6df41469a1" prot="public" static="no">
        <type>std::reverse_iterator&lt; T * &gt;</type>
        <definition>typedef std::reverse_iterator&lt;T*&gt; Gecode::SharedArray&lt; T &gt;::reverse_iterator</definition>
        <argsstring></argsstring>
        <name>reverse_iterator</name>
        <briefdescription>
<para>Type of the iterator used to iterate backwards through this array&apos;s elements. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/shared-array.hpp" line="110" column="1" bodyfile="/usr/include/gecode/kernel/shared-array.hpp" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classGecode_1_1SharedArray_1a2f59c31a8429ff8ddf7d3a2ff69bdb11" prot="public" static="no">
        <type>std::reverse_iterator&lt; const T * &gt;</type>
        <definition>typedef std::reverse_iterator&lt;const T*&gt; Gecode::SharedArray&lt; T &gt;::const_reverse_iterator</definition>
        <argsstring></argsstring>
        <name>const_reverse_iterator</name>
        <briefdescription>
<para>Type of the iterator used to iterate backwards and read-only through this array&apos;s elements. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/shared-array.hpp" line="112" column="1" bodyfile="/usr/include/gecode/kernel/shared-array.hpp" bodystart="112" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Array iteration</header>
      <memberdef kind="function" id="classGecode_1_1SharedArray_1a1ba079d2b277896fc402041d68a75771" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGecode_1_1SharedArray_1acb07df441003a435392ced5f74405333" kindref="member">iterator</ref></type>
        <definition>forceinline SharedArray&lt; T &gt;::iterator Gecode::SharedArray&lt; T &gt;::begin</definition>
        <argsstring>(void)</argsstring>
        <name>begin</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return an iterator at the beginning of the array. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/shared-array.hpp" line="149" column="1" bodyfile="/usr/include/gecode/kernel/shared-array.hpp" bodystart="305" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1SharedArray_1ad739f0ffa0206ecae7ba19f76aa89e70" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGecode_1_1SharedArray_1aa55558b221f6ad8d3c25e2bc27630290" kindref="member">const_iterator</ref></type>
        <definition>forceinline SharedArray&lt; T &gt;::const_iterator Gecode::SharedArray&lt; T &gt;::begin</definition>
        <argsstring>(void) const </argsstring>
        <name>begin</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return a read-only iterator at the beginning of the array. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/shared-array.hpp" line="151" column="1" bodyfile="/usr/include/gecode/kernel/shared-array.hpp" bodystart="312" bodyend="315"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1SharedArray_1a57cd70ebf6f9141003c3995a81bacc14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGecode_1_1SharedArray_1acb07df441003a435392ced5f74405333" kindref="member">iterator</ref></type>
        <definition>forceinline SharedArray&lt; T &gt;::iterator Gecode::SharedArray&lt; T &gt;::end</definition>
        <argsstring>(void)</argsstring>
        <name>end</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return an iterator past the end of the array. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/shared-array.hpp" line="153" column="1" bodyfile="/usr/include/gecode/kernel/shared-array.hpp" bodystart="319" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1SharedArray_1a3a5210ef16ce81932e2118d6ccd15c4c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGecode_1_1SharedArray_1aa55558b221f6ad8d3c25e2bc27630290" kindref="member">const_iterator</ref></type>
        <definition>forceinline SharedArray&lt; T &gt;::const_iterator Gecode::SharedArray&lt; T &gt;::end</definition>
        <argsstring>(void) const </argsstring>
        <name>end</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return a read-only iterator past the end of the array. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/shared-array.hpp" line="155" column="1" bodyfile="/usr/include/gecode/kernel/shared-array.hpp" bodystart="326" bodyend="329"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1SharedArray_1a303206dea5932a776a2a233830491d0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGecode_1_1SharedArray_1aa83be04e6c24d8f05bff0d6df41469a1" kindref="member">reverse_iterator</ref></type>
        <definition>forceinline SharedArray&lt; T &gt;::reverse_iterator Gecode::SharedArray&lt; T &gt;::rbegin</definition>
        <argsstring>(void)</argsstring>
        <name>rbegin</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return a reverse iterator at the end of the array. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/shared-array.hpp" line="157" column="1" bodyfile="/usr/include/gecode/kernel/shared-array.hpp" bodystart="333" bodyend="336"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1SharedArray_1af6ef8e634c8bbce1774a9005e0fa2493" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGecode_1_1SharedArray_1a2f59c31a8429ff8ddf7d3a2ff69bdb11" kindref="member">const_reverse_iterator</ref></type>
        <definition>forceinline SharedArray&lt; T &gt;::const_reverse_iterator Gecode::SharedArray&lt; T &gt;::rbegin</definition>
        <argsstring>(void) const </argsstring>
        <name>rbegin</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return a reverse and read-only iterator at the end of the array. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/shared-array.hpp" line="159" column="1" bodyfile="/usr/include/gecode/kernel/shared-array.hpp" bodystart="340" bodyend="343"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1SharedArray_1acfb7806d0ee65a2818e82ed8d0a058b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGecode_1_1SharedArray_1aa83be04e6c24d8f05bff0d6df41469a1" kindref="member">reverse_iterator</ref></type>
        <definition>forceinline SharedArray&lt; T &gt;::reverse_iterator Gecode::SharedArray&lt; T &gt;::rend</definition>
        <argsstring>(void)</argsstring>
        <name>rend</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return a reverse iterator past the beginning of the array. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/shared-array.hpp" line="161" column="1" bodyfile="/usr/include/gecode/kernel/shared-array.hpp" bodystart="347" bodyend="350"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1SharedArray_1a44ba9ea6af6b738d48976a6cb34a4626" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGecode_1_1SharedArray_1a2f59c31a8429ff8ddf7d3a2ff69bdb11" kindref="member">const_reverse_iterator</ref></type>
        <definition>forceinline SharedArray&lt; T &gt;::const_reverse_iterator Gecode::SharedArray&lt; T &gt;::rend</definition>
        <argsstring>(void) const </argsstring>
        <name>rend</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return a reverse and read-only iterator past the beginning of the array. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/shared-array.hpp" line="163" column="1" bodyfile="/usr/include/gecode/kernel/shared-array.hpp" bodystart="354" bodyend="357"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classGecode_1_1SharedArray_1aa700d7bf3a0c9c956d83fdd03ad56b73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::SharedArray&lt; T &gt;::SharedArray</definition>
        <argsstring>(void)</argsstring>
        <name>SharedArray</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Construct as not yet intialized. </para>        </briefdescription>
        <detaileddescription>
<para>The only member functions that can be used on a constructed but not yet initialized shared array is init and the assignment operator . </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/shared-array.hpp" line="122" column="1" bodyfile="/usr/include/gecode/kernel/shared-array.hpp" bodystart="255" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1SharedArray_1a2d68657f7e3a94bd285ce60221851b93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::SharedArray&lt; T &gt;::SharedArray</definition>
        <argsstring>(int n)</argsstring>
        <name>SharedArray</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Initialize as array with <emphasis>n</emphasis> elements. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/shared-array.hpp" line="124" column="1" bodyfile="/usr/include/gecode/kernel/shared-array.hpp" bodystart="259" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1SharedArray_1a1b8b0151b8a1dfbae0d82886d7ca03d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::SharedArray&lt; T &gt;::init</definition>
        <argsstring>(int n)</argsstring>
        <name>init</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Initialize as array with <emphasis>n</emphasis> elements. </para>        </briefdescription>
        <detaileddescription>
<para>This member function can only be used once and only if the shared array has been constructed with the default constructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/shared-array.hpp" line="132" column="1" bodyfile="/usr/include/gecode/kernel/shared-array.hpp" bodystart="269" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1SharedArray_1aacecac1e02b2c79470e44c56b910a694" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::SharedArray&lt; T &gt;::SharedArray</definition>
        <argsstring>(const SharedArray &amp;a)</argsstring>
        <name>SharedArray</name>
        <param>
          <type>const <ref refid="classGecode_1_1SharedArray" kindref="compound">SharedArray</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>Initialize from shared array <emphasis>a</emphasis> (share elements) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/shared-array.hpp" line="134" column="1" bodyfile="/usr/include/gecode/kernel/shared-array.hpp" bodystart="264" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1SharedArray_1a75145d217610074e00fe4c4c54117ac6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::SharedArray&lt; T &gt;::SharedArray</definition>
        <argsstring>(const ArgArrayBase&lt; T &gt; &amp;a)</argsstring>
        <name>SharedArray</name>
        <param>
          <type>const <ref refid="classGecode_1_1ArgArrayBase" kindref="compound">ArgArrayBase</ref>&lt; T &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>Initialize from argument array <emphasis>a</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/shared-array.hpp" line="136" column="1" bodyfile="/usr/include/gecode/kernel/shared-array.hpp" bodystart="290" bodyend="294"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1SharedArray_1a4018659f8588a87bd9a98fd2f1c3eb19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T &amp;</type>
        <definition>forceinline T &amp; Gecode::SharedArray&lt; T &gt;::operator[]</definition>
        <argsstring>(int i)</argsstring>
        <name>operator[]</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Access element at position <emphasis>i</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/shared-array.hpp" line="139" column="1" bodyfile="/usr/include/gecode/kernel/shared-array.hpp" bodystart="276" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1SharedArray_1a6052900446ad65db093b54671b9244cb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const T &amp;</type>
        <definition>forceinline const T &amp; Gecode::SharedArray&lt; T &gt;::operator[]</definition>
        <argsstring>(int i) const </argsstring>
        <name>operator[]</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Access element at position <emphasis>i</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/shared-array.hpp" line="141" column="1" bodyfile="/usr/include/gecode/kernel/shared-array.hpp" bodystart="283" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1SharedArray_1a6d8d56e55461f215a8854c7e91efdab6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::SharedArray&lt; T &gt;::size</definition>
        <argsstring>(void) const </argsstring>
        <name>size</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return number of elements. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/shared-array.hpp" line="144" column="1" bodyfile="/usr/include/gecode/kernel/shared-array.hpp" bodystart="298" bodyend="301"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="related">
      <memberdef kind="function" id="classGecode_1_1SharedArray_1af7ee8badc413133e81953192f08348c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Char</type>
          </param>
          <param>
            <type>class Traits</type>
          </param>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>std::basic_ostream&lt; Char, Traits &gt; &amp;</type>
        <definition>std::basic_ostream&lt; Char, Traits &gt; &amp; operator&lt;&lt;</definition>
        <argsstring>(std::basic_ostream&lt; Char, Traits &gt; &amp;os, const SharedArray&lt; T &gt; &amp;x)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::basic_ostream&lt; Char, Traits &gt; &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1SharedArray" kindref="compound">SharedArray</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Print array elements enclosed in curly brackets. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/kernel/shared-array.hpp" line="59" column="1" bodyfile="/usr/include/gecode/kernel/shared-array.hpp" bodystart="361" bodyend="373"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Shared array with arbitrary number of elements. </para>    </briefdescription>
    <detaileddescription>
<para>Sharing is implemented by reference counting: the same elements are shared among several objects. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="6473">
        <label>Gecode::SharedArray&lt; T &gt;</label>
        <link refid="classGecode_1_1SharedArray"/>
        <childnode refid="6474" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6474">
        <label>Gecode::SharedHandle</label>
        <link refid="classGecode_1_1SharedHandle"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6475">
        <label>Gecode::SharedArray&lt; T &gt;</label>
        <link refid="classGecode_1_1SharedArray"/>
        <childnode refid="6476" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6476">
        <label>Gecode::SharedHandle</label>
        <link refid="classGecode_1_1SharedHandle"/>
      </node>
    </collaborationgraph>
    <location file="/usr/include/gecode/kernel/shared-array.hpp" line="58" column="1" bodyfile="/usr/include/gecode/kernel/shared-array.hpp" bodystart="58" bodyend="165"/>
    <listofallmembers>
      <member refid="classGecode_1_1SharedArray_1a1ba079d2b277896fc402041d68a75771" prot="public" virt="non-virtual"><scope>Gecode::SharedArray</scope><name>begin</name></member>
      <member refid="classGecode_1_1SharedArray_1ad739f0ffa0206ecae7ba19f76aa89e70" prot="public" virt="non-virtual"><scope>Gecode::SharedArray</scope><name>begin</name></member>
      <member refid="classGecode_1_1SharedArray_1aa55558b221f6ad8d3c25e2bc27630290" prot="public" virt="non-virtual"><scope>Gecode::SharedArray</scope><name>const_iterator</name></member>
      <member refid="classGecode_1_1SharedArray_1aa5547278829bad6f85a94ec04a907906" prot="public" virt="non-virtual"><scope>Gecode::SharedArray</scope><name>const_pointer</name></member>
      <member refid="classGecode_1_1SharedArray_1ad042b3e6236e4b30932449c41cfd7370" prot="public" virt="non-virtual"><scope>Gecode::SharedArray</scope><name>const_reference</name></member>
      <member refid="classGecode_1_1SharedArray_1a2f59c31a8429ff8ddf7d3a2ff69bdb11" prot="public" virt="non-virtual"><scope>Gecode::SharedArray</scope><name>const_reverse_iterator</name></member>
      <member refid="classGecode_1_1SharedArray_1a57cd70ebf6f9141003c3995a81bacc14" prot="public" virt="non-virtual"><scope>Gecode::SharedArray</scope><name>end</name></member>
      <member refid="classGecode_1_1SharedArray_1a3a5210ef16ce81932e2118d6ccd15c4c" prot="public" virt="non-virtual"><scope>Gecode::SharedArray</scope><name>end</name></member>
      <member refid="classGecode_1_1SharedArray_1a1b8b0151b8a1dfbae0d82886d7ca03d8" prot="public" virt="non-virtual"><scope>Gecode::SharedArray</scope><name>init</name></member>
      <member refid="classGecode_1_1SharedArray_1acb07df441003a435392ced5f74405333" prot="public" virt="non-virtual"><scope>Gecode::SharedArray</scope><name>iterator</name></member>
      <member refid="classGecode_1_1SharedHandle_1a703f11794c6cac8c22bfc4a4136eb4f8" prot="protected" virt="non-virtual"><scope>Gecode::SharedArray</scope><name>object</name></member>
      <member refid="classGecode_1_1SharedHandle_1a688e41d609c30fe5517ca35cf908ddee" prot="protected" virt="non-virtual"><scope>Gecode::SharedArray</scope><name>object</name></member>
      <member refid="classGecode_1_1SharedArray_1af7ee8badc413133e81953192f08348c1" prot="public" virt="non-virtual"><scope>Gecode::SharedArray</scope><name>operator&lt;&lt;</name></member>
      <member refid="classGecode_1_1SharedHandle_1ae484ef9621e41e100aa778b8c908f65e" prot="public" virt="non-virtual"><scope>Gecode::SharedArray</scope><name>operator=</name></member>
      <member refid="classGecode_1_1SharedArray_1a4018659f8588a87bd9a98fd2f1c3eb19" prot="public" virt="non-virtual"><scope>Gecode::SharedArray</scope><name>operator[]</name></member>
      <member refid="classGecode_1_1SharedArray_1a6052900446ad65db093b54671b9244cb" prot="public" virt="non-virtual"><scope>Gecode::SharedArray</scope><name>operator[]</name></member>
      <member refid="classGecode_1_1SharedArray_1a8755a7298a7c1b6c60718e94156192f3" prot="public" virt="non-virtual"><scope>Gecode::SharedArray</scope><name>pointer</name></member>
      <member refid="classGecode_1_1SharedArray_1a303206dea5932a776a2a233830491d0c" prot="public" virt="non-virtual"><scope>Gecode::SharedArray</scope><name>rbegin</name></member>
      <member refid="classGecode_1_1SharedArray_1af6ef8e634c8bbce1774a9005e0fa2493" prot="public" virt="non-virtual"><scope>Gecode::SharedArray</scope><name>rbegin</name></member>
      <member refid="classGecode_1_1SharedArray_1ad258c6493caf764437df20296082b80d" prot="public" virt="non-virtual"><scope>Gecode::SharedArray</scope><name>reference</name></member>
      <member refid="classGecode_1_1SharedArray_1acfb7806d0ee65a2818e82ed8d0a058b5" prot="public" virt="non-virtual"><scope>Gecode::SharedArray</scope><name>rend</name></member>
      <member refid="classGecode_1_1SharedArray_1a44ba9ea6af6b738d48976a6cb34a4626" prot="public" virt="non-virtual"><scope>Gecode::SharedArray</scope><name>rend</name></member>
      <member refid="classGecode_1_1SharedArray_1aa83be04e6c24d8f05bff0d6df41469a1" prot="public" virt="non-virtual"><scope>Gecode::SharedArray</scope><name>reverse_iterator</name></member>
      <member refid="classGecode_1_1SharedArray_1aa700d7bf3a0c9c956d83fdd03ad56b73" prot="public" virt="non-virtual"><scope>Gecode::SharedArray</scope><name>SharedArray</name></member>
      <member refid="classGecode_1_1SharedArray_1a2d68657f7e3a94bd285ce60221851b93" prot="public" virt="non-virtual"><scope>Gecode::SharedArray</scope><name>SharedArray</name></member>
      <member refid="classGecode_1_1SharedArray_1aacecac1e02b2c79470e44c56b910a694" prot="public" virt="non-virtual"><scope>Gecode::SharedArray</scope><name>SharedArray</name></member>
      <member refid="classGecode_1_1SharedArray_1a75145d217610074e00fe4c4c54117ac6" prot="public" virt="non-virtual"><scope>Gecode::SharedArray</scope><name>SharedArray</name></member>
      <member refid="classGecode_1_1SharedHandle_1a421b3931301cdbd047737c7eb920097c" prot="public" virt="non-virtual"><scope>Gecode::SharedArray</scope><name>SharedHandle</name></member>
      <member refid="classGecode_1_1SharedHandle_1a7af0bf287aedc0181643f91ee7f94b92" prot="public" virt="non-virtual"><scope>Gecode::SharedArray</scope><name>SharedHandle</name></member>
      <member refid="classGecode_1_1SharedHandle_1aad7da499195487bdf3085d61ed83d004" prot="public" virt="non-virtual"><scope>Gecode::SharedArray</scope><name>SharedHandle</name></member>
      <member refid="classGecode_1_1SharedArray_1a6d8d56e55461f215a8854c7e91efdab6" prot="public" virt="non-virtual"><scope>Gecode::SharedArray</scope><name>size</name></member>
      <member refid="classGecode_1_1SharedHandle_1afeb40b81ba09fed2539490f1035788f8" prot="public" virt="non-virtual"><scope>Gecode::SharedArray</scope><name>update</name></member>
      <member refid="classGecode_1_1SharedArray_1aac12bed2969cf32d8e0ed57289d9e914" prot="public" virt="non-virtual"><scope>Gecode::SharedArray</scope><name>value_type</name></member>
      <member refid="classGecode_1_1SharedHandle_1abdf052ec870b883c26b79538296819f8" prot="public" virt="non-virtual"><scope>Gecode::SharedArray</scope><name>~SharedHandle</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
