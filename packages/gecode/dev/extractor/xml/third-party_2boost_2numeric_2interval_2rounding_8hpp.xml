<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="third-party_2boost_2numeric_2interval_2rounding_8hpp" kind="file">
    <compoundname>rounding.hpp</compoundname>
    <includedby refid="hw__rounding_8hpp" local="no">/usr/include/gecode/third-party/boost/numeric/interval/hw_rounding.hpp</includedby>
    <includedby refid="rounded__arith_8hpp" local="no">/usr/include/gecode/third-party/boost/numeric/interval/rounded_arith.hpp</includedby>
    <includedby refid="rounded__transc_8hpp" local="no">/usr/include/gecode/third-party/boost/numeric/interval/rounded_transc.hpp</includedby>
    <includedby refid="transc_8hpp" local="no">/usr/include/gecode/third-party/boost/numeric/interval/transc.hpp</includedby>
    <invincdepgraph>
      <node id="5502">
        <label>/usr/include/gecode/third-party/boost/numeric/interval/rounded_transc.hpp</label>
        <link refid="rounded__transc_8hpp_source"/>
        <childnode refid="5491" relation="include">
        </childnode>
      </node>
      <node id="5492">
        <label>/usr/include/gecode/float.hh</label>
        <link refid="float_8hh_source"/>
        <childnode refid="5493" relation="include">
        </childnode>
        <childnode refid="5494" relation="include">
        </childnode>
        <childnode refid="5495" relation="include">
        </childnode>
        <childnode refid="5496" relation="include">
        </childnode>
      </node>
      <node id="5489">
        <label>/usr/include/gecode/third-party/boost/numeric/interval/rounding.hpp</label>
        <link refid="third-party/boost/numeric/interval/rounding.hpp"/>
        <childnode refid="5490" relation="include">
        </childnode>
        <childnode refid="5497" relation="include">
        </childnode>
        <childnode refid="5502" relation="include">
        </childnode>
        <childnode refid="5501" relation="include">
        </childnode>
      </node>
      <node id="5500">
        <label>/usr/include/gecode/third-party/boost/numeric/interval/arith2.hpp</label>
        <link refid="arith2_8hpp_source"/>
        <childnode refid="5501" relation="include">
        </childnode>
        <childnode refid="5491" relation="include">
        </childnode>
      </node>
      <node id="5491">
        <label>/usr/include/gecode/third-party/boost/numeric/interval.hpp</label>
        <link refid="interval_8hpp_source"/>
        <childnode refid="5492" relation="include">
        </childnode>
      </node>
      <node id="5496">
        <label>/usr/include/gecode/float/rel.hh</label>
        <link refid="float_2rel_8hh_source"/>
        <childnode refid="5493" relation="include">
        </childnode>
      </node>
      <node id="5493">
        <label>/usr/include/gecode/float/arithmetic.hh</label>
        <link refid="float_2arithmetic_8hh_source"/>
      </node>
      <node id="5499">
        <label>/usr/include/gecode/third-party/boost/numeric/interval/arith.hpp</label>
        <link refid="arith_8hpp_source"/>
        <childnode refid="5500" relation="include">
        </childnode>
        <childnode refid="5501" relation="include">
        </childnode>
        <childnode refid="5491" relation="include">
        </childnode>
      </node>
      <node id="5490">
        <label>/usr/include/gecode/third-party/boost/numeric/interval/hw_rounding.hpp</label>
        <link refid="hw__rounding_8hpp_source"/>
        <childnode refid="5491" relation="include">
        </childnode>
      </node>
      <node id="5495">
        <label>/usr/include/gecode/float/linear.hh</label>
        <link refid="float_2linear_8hh_source"/>
      </node>
      <node id="5494">
        <label>/usr/include/gecode/float/branch.hh</label>
        <link refid="float_2branch_8hh_source"/>
      </node>
      <node id="5501">
        <label>/usr/include/gecode/third-party/boost/numeric/interval/transc.hpp</label>
        <link refid="transc_8hpp_source"/>
        <childnode refid="5491" relation="include">
        </childnode>
      </node>
      <node id="5498">
        <label>/usr/include/gecode/third-party/boost/numeric/interval/detail/division.hpp</label>
        <link refid="division_8hpp_source"/>
        <childnode refid="5499" relation="include">
        </childnode>
        <childnode refid="5500" relation="include">
        </childnode>
      </node>
      <node id="5497">
        <label>/usr/include/gecode/third-party/boost/numeric/interval/rounded_arith.hpp</label>
        <link refid="rounded__arith_8hpp_source"/>
        <childnode refid="5498" relation="include">
        </childnode>
        <childnode refid="5490" relation="include">
        </childnode>
        <childnode refid="5491" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structboost_1_1numeric_1_1interval__lib_1_1rounding__control" prot="public">boost::numeric::interval_lib::rounding_control</innerclass>
    <innerclass refid="structboost_1_1numeric_1_1interval__lib_1_1rounded__arith__exact" prot="public">boost::numeric::interval_lib::rounded_arith_exact</innerclass>
    <innerclass refid="structboost_1_1numeric_1_1interval__lib_1_1rounded__arith__std" prot="public">boost::numeric::interval_lib::rounded_arith_std</innerclass>
    <innerclass refid="structboost_1_1numeric_1_1interval__lib_1_1rounded__arith__opp" prot="public">boost::numeric::interval_lib::rounded_arith_opp</innerclass>
    <innerclass refid="structboost_1_1numeric_1_1interval__lib_1_1rounded__transc__dummy" prot="public">boost::numeric::interval_lib::rounded_transc_dummy</innerclass>
    <innerclass refid="structboost_1_1numeric_1_1interval__lib_1_1rounded__transc__exact" prot="public">boost::numeric::interval_lib::rounded_transc_exact</innerclass>
    <innerclass refid="structboost_1_1numeric_1_1interval__lib_1_1rounded__transc__std" prot="public">boost::numeric::interval_lib::rounded_transc_std</innerclass>
    <innerclass refid="structboost_1_1numeric_1_1interval__lib_1_1rounded__transc__opp" prot="public">boost::numeric::interval_lib::rounded_transc_opp</innerclass>
    <innerclass refid="structboost_1_1numeric_1_1interval__lib_1_1detail_1_1save__state__unprotected" prot="public">boost::numeric::interval_lib::detail::save_state_unprotected</innerclass>
    <innerclass refid="structboost_1_1numeric_1_1interval__lib_1_1save__state" prot="public">boost::numeric::interval_lib::save_state</innerclass>
    <innerclass refid="structboost_1_1numeric_1_1interval__lib_1_1save__state__nothing" prot="public">boost::numeric::interval_lib::save_state_nothing</innerclass>
    <innerclass refid="structboost_1_1numeric_1_1interval__lib_1_1rounded__math" prot="public">boost::numeric::interval_lib::rounded_math</innerclass>
    <innernamespace refid="namespaceboost">boost</innernamespace>
    <innernamespace refid="namespaceboost_1_1numeric">boost::numeric</innernamespace>
    <innernamespace refid="namespaceboost_1_1numeric_1_1interval__lib">boost::numeric::interval_lib</innernamespace>
    <innernamespace refid="namespaceboost_1_1numeric_1_1interval__lib_1_1detail">boost::numeric::interval_lib::detail</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>Boost<sp/>interval/rounding.hpp<sp/>template<sp/>implementation<sp/>file</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2002-2003<sp/>Hervé<sp/>Brönnimann,<sp/>Guillaume<sp/>Melquiond,<sp/>Sylvain<sp/>Pion</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Distributed<sp/>under<sp/>the<sp/>Boost<sp/>Software<sp/>License,<sp/>Version<sp/>1.0.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>(See<sp/>accompanying<sp/>file<sp/>LICENSE_1_0.txt<sp/>or</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>copy<sp/>at<sp/>http://www.boost.org/LICENSE_1_0.txt)</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>BOOST_NUMERIC_INTERVAL_ROUNDING_HPP</highlight></codeline>
<codeline lineno="11"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>BOOST_NUMERIC_INTERVAL_ROUNDING_HPP</highlight></codeline>
<codeline lineno="12"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">boost<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">numeric<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">interval_lib<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>Default<sp/>rounding_control<sp/>class<sp/>(does<sp/>nothing)</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="22" refid="structboost_1_1numeric_1_1interval__lib_1_1rounding__control" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structboost_1_1numeric_1_1interval__lib_1_1rounding__control" kindref="compound">rounding_control</ref></highlight></codeline>
<codeline lineno="23"><highlight class="normal">{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rounding_mode;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>get_rounding_mode(rounding_mode&amp;)<sp/>{}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_rounding_mode(rounding_mode)<sp/><sp/>{}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>upward()<sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>downward()<sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>to_nearest()<sp/>{}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>to_int(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x;<sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>force_rounding(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>x)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x;<sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal">};</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/>A<sp/>few<sp/>rounding<sp/>control<sp/>classes<sp/>(exact/std/opp:<sp/>see<sp/>documentation)</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/><sp/><sp/>rounded_arith_*<sp/>control<sp/>the<sp/>rounding<sp/>of<sp/>the<sp/>arithmetic<sp/>operators</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/><sp/><sp/>rounded_transc_*<sp/>control<sp/>the<sp/>rounding<sp/>of<sp/>the<sp/>transcendental<sp/>functions</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Rounding<sp/>=<sp/>rounding_control&lt;T&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structboost_1_1numeric_1_1interval__lib_1_1rounded__arith__exact" kindref="compound">rounded_arith_exact</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Rounding<sp/>=<sp/>rounding_control&lt;T&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structboost_1_1numeric_1_1interval__lib_1_1rounded__arith__std" kindref="compound">rounded_arith_std</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Rounding<sp/>=<sp/>rounding_control&lt;T&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structboost_1_1numeric_1_1interval__lib_1_1rounded__arith__opp" kindref="compound">rounded_arith_opp</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Rounding&gt;</highlight></codeline>
<codeline lineno="50" refid="structboost_1_1numeric_1_1interval__lib_1_1rounded__transc__dummy" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structboost_1_1numeric_1_1interval__lib_1_1rounded__transc__dummy" kindref="compound">rounded_transc_dummy</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Rounding<sp/>=<sp/>rounded_arith_exact&lt;T&gt;<sp/>&gt;<sp/></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structboost_1_1numeric_1_1interval__lib_1_1rounded__transc__exact" kindref="compound">rounded_transc_exact</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Rounding<sp/>=<sp/>rounded_arith_std&lt;T&gt;<sp/>&gt;<sp/></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structboost_1_1numeric_1_1interval__lib_1_1rounded__transc__std" kindref="compound">rounded_transc_std</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Rounding<sp/>=<sp/>rounded_arith_opp&lt;T&gt;<sp/>&gt;<sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structboost_1_1numeric_1_1interval__lib_1_1rounded__transc__opp" kindref="compound">rounded_transc_opp</ref>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*<sp/>State-saving<sp/>classes:<sp/>allow<sp/>to<sp/>set<sp/>and<sp/>reset<sp/>rounding<sp/>control</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Rounding&gt;</highlight></codeline>
<codeline lineno="68" refid="structboost_1_1numeric_1_1interval__lib_1_1detail_1_1save__state__unprotected" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structboost_1_1numeric_1_1interval__lib_1_1detail_1_1save__state__unprotected" kindref="compound">save_state_unprotected</ref>:<sp/>Rounding</highlight></codeline>
<codeline lineno="69"><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structboost_1_1numeric_1_1interval__lib_1_1detail_1_1save__state__unprotected" kindref="compound">save_state_unprotected&lt;Rounding&gt;</ref><sp/><ref refid="structboost_1_1numeric_1_1interval__lib_1_1detail_1_1save__state__unprotected" kindref="compound">unprotected_rounding</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal">};</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>detail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Rounding&gt;</highlight></codeline>
<codeline lineno="76" refid="structboost_1_1numeric_1_1interval__lib_1_1save__state" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structboost_1_1numeric_1_1interval__lib_1_1save__state" kindref="compound">save_state</ref>:<sp/>Rounding</highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Rounding::rounding_mode<sp/>mode;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><ref refid="structboost_1_1numeric_1_1interval__lib_1_1save__state" kindref="compound">save_state</ref>()<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;get_rounding_mode(mode);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;init();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>~<ref refid="structboost_1_1numeric_1_1interval__lib_1_1save__state" kindref="compound">save_state</ref>()<sp/>{<sp/>this-&gt;set_rounding_mode(mode);<sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structboost_1_1numeric_1_1interval__lib_1_1detail_1_1save__state__unprotected" kindref="compound">detail::save_state_unprotected&lt;Rounding&gt;</ref><sp/><ref refid="structboost_1_1numeric_1_1interval__lib_1_1detail_1_1save__state__unprotected" kindref="compound">unprotected_rounding</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal">};</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Rounding&gt;</highlight></codeline>
<codeline lineno="88" refid="structboost_1_1numeric_1_1interval__lib_1_1save__state__nothing" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structboost_1_1numeric_1_1interval__lib_1_1save__state__nothing" kindref="compound">save_state_nothing</ref>:<sp/>Rounding</highlight></codeline>
<codeline lineno="89"><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structboost_1_1numeric_1_1interval__lib_1_1save__state__nothing" kindref="compound">save_state_nothing&lt;Rounding&gt;</ref><sp/><ref refid="structboost_1_1numeric_1_1interval__lib_1_1save__state__nothing" kindref="compound">unprotected_rounding</ref>;</highlight></codeline>
<codeline lineno="91"><highlight class="normal">};</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structboost_1_1numeric_1_1interval__lib_1_1rounded__math" kindref="compound">rounded_math</ref>:<sp/><ref refid="structboost_1_1numeric_1_1interval__lib_1_1save__state__nothing" kindref="compound">save_state_nothing</ref>&lt;rounded_arith_exact&lt;T&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="95"><highlight class="normal">{};</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>interval_lib</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>numeric</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>boost</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>BOOST_NUMERIC_INTERVAL_ROUNDING_HPP</highlight></codeline>
    </programlisting>
    <location file="/usr/include/gecode/third-party/boost/numeric/interval/rounding.hpp"/>
  </compounddef>
</doxygen>
