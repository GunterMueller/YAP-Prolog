<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classGecode_1_1Int_1_1SupportValues_1_1Unsupported" kind="class" prot="private">
    <compoundname>Gecode::Int::SupportValues::Unsupported</compoundname>
      <sectiondef kind="user-defined">
      <header>Constructors and initialization</header>
      <memberdef kind="function" id="classGecode_1_1Int_1_1SupportValues_1_1Unsupported_1ae0c24c41e8e49fa233c143dbe9e4dad3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Int::SupportValues&lt; View, A &gt;::Unsupported::Unsupported</definition>
        <argsstring>(SupportValues &amp;sv0)</argsstring>
        <name>Unsupported</name>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1SupportValues" kindref="compound">SupportValues</ref> &amp;</type>
          <declname>sv0</declname>
        </param>
        <briefdescription>
<para>Initialize with values from <emphasis>sv</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/support-values.hh" line="77" column="1" bodyfile="/usr/include/gecode/int/support-values.hpp" bodystart="154" bodyend="157"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Iteration control</header>
      <memberdef kind="function" id="classGecode_1_1Int_1_1SupportValues_1_1Unsupported_1add973fe38648ed882b70c40e3a123b1d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::Int::SupportValues&lt; View, A &gt;::Unsupported::operator()</definition>
        <argsstring>(void) const </argsstring>
        <name>operator()</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test whether iterator is still at a value or done. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/support-values.hh" line="83" column="1" bodyfile="/usr/include/gecode/int/support-values.hpp" bodystart="167" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1SupportValues_1_1Unsupported_1a3a1957c8151101eb74d14aec893f1160" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Int::SupportValues&lt; View, A &gt;::Unsupported::operator++</definition>
        <argsstring>(void)</argsstring>
        <name>operator++</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Move iterator to next value (if possible) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/support-values.hh" line="85" column="1" bodyfile="/usr/include/gecode/int/support-values.hpp" bodystart="161" bodyend="163"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Value access</header>
      <memberdef kind="function" id="classGecode_1_1Int_1_1SupportValues_1_1Unsupported_1a2d23feeed30d396387142ee707643cf0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Int::SupportValues&lt; View, A &gt;::Unsupported::val</definition>
        <argsstring>(void) const </argsstring>
        <name>val</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return current value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/support-values.hh" line="91" column="1" bodyfile="/usr/include/gecode/int/support-values.hpp" bodystart="173" bodyend="175"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classGecode_1_1Int_1_1SupportValues_1_1Unsupported_1a4a855e40264a62ed7739c0afd36c5ae9" prot="private" static="no" mutable="no">
        <type>RangePos *</type>
        <definition>RangePos* Gecode::Int::SupportValues&lt; View, A &gt;::Unsupported::rp</definition>
        <argsstring></argsstring>
        <name>rp</name>
        <briefdescription>
<para>Current range. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/support-values.hh" line="66" column="1" bodyfile="/usr/include/gecode/int/support-values.hh" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Int_1_1SupportValues_1_1Unsupported_1afd3aa5875ff0ebb278176bfb11544fb7" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int Gecode::Int::SupportValues&lt; View, A &gt;::Unsupported::p</definition>
        <argsstring></argsstring>
        <name>p</name>
        <briefdescription>
<para>Current position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/support-values.hh" line="68" column="1" bodyfile="/usr/include/gecode/int/support-values.hh" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Int_1_1SupportValues_1_1Unsupported_1a15f56432f7af192fcc1218104d55bdef" prot="private" static="no" mutable="no">
        <type><ref refid="classGecode_1_1Int_1_1SupportValues" kindref="compound">SupportValues</ref> &amp;</type>
        <definition>SupportValues&amp; Gecode::Int::SupportValues&lt; View, A &gt;::Unsupported::sv</definition>
        <argsstring></argsstring>
        <name>sv</name>
        <briefdescription>
<para>Access to other information. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/support-values.hh" line="70" column="1" bodyfile="/usr/include/gecode/int/support-values.hh" bodystart="70" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classGecode_1_1Int_1_1SupportValues_1_1Unsupported_1a09c20edbf3f593e95eda2a60a63eac36" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Int::SupportValues&lt; View, A &gt;::Unsupported::find</definition>
        <argsstring>(void)</argsstring>
        <name>find</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Find next unsupported value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/support-values.hh" line="72" column="1" bodyfile="/usr/include/gecode/int/support-values.hpp" bodystart="143" bodyend="150"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Value iterator for unsupported values. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/usr/include/gecode/int/support-values.hh" line="63" column="1" bodyfile="/usr/include/gecode/int/support-values.hh" bodystart="63" bodyend="93"/>
    <listofallmembers>
      <member refid="classGecode_1_1Int_1_1SupportValues_1_1Unsupported_1a09c20edbf3f593e95eda2a60a63eac36" prot="private" virt="non-virtual"><scope>Gecode::Int::SupportValues::Unsupported</scope><name>find</name></member>
      <member refid="classGecode_1_1Int_1_1SupportValues_1_1Unsupported_1add973fe38648ed882b70c40e3a123b1d" prot="public" virt="non-virtual"><scope>Gecode::Int::SupportValues::Unsupported</scope><name>operator()</name></member>
      <member refid="classGecode_1_1Int_1_1SupportValues_1_1Unsupported_1a3a1957c8151101eb74d14aec893f1160" prot="public" virt="non-virtual"><scope>Gecode::Int::SupportValues::Unsupported</scope><name>operator++</name></member>
      <member refid="classGecode_1_1Int_1_1SupportValues_1_1Unsupported_1afd3aa5875ff0ebb278176bfb11544fb7" prot="private" virt="non-virtual"><scope>Gecode::Int::SupportValues::Unsupported</scope><name>p</name></member>
      <member refid="classGecode_1_1Int_1_1SupportValues_1_1Unsupported_1a4a855e40264a62ed7739c0afd36c5ae9" prot="private" virt="non-virtual"><scope>Gecode::Int::SupportValues::Unsupported</scope><name>rp</name></member>
      <member refid="classGecode_1_1Int_1_1SupportValues_1_1Unsupported_1a15f56432f7af192fcc1218104d55bdef" prot="private" virt="non-virtual"><scope>Gecode::Int::SupportValues::Unsupported</scope><name>sv</name></member>
      <member refid="classGecode_1_1Int_1_1SupportValues_1_1Unsupported_1ae0c24c41e8e49fa233c143dbe9e4dad3" prot="public" virt="non-virtual"><scope>Gecode::Int::SupportValues::Unsupported</scope><name>Unsupported</name></member>
      <member refid="classGecode_1_1Int_1_1SupportValues_1_1Unsupported_1a2d23feeed30d396387142ee707643cf0" prot="public" virt="non-virtual"><scope>Gecode::Int::SupportValues::Unsupported</scope><name>val</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
