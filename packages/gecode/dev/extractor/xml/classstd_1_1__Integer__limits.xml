<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classstd_1_1__Integer__limits" kind="class" prot="public">
    <compoundname>std::_Integer_limits</compoundname>
    <basecompoundref refid="classstd_1_1__Numeric__limits__base" prot="public" virt="non-virtual">std::_Numeric_limits_base&lt; _Int &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>_Int</declname>
        <defname>_Int</defname>
      </param>
      <param>
        <type>_Int</type>
        <declname>__imin</declname>
        <defname>__imin</defname>
      </param>
      <param>
        <type>_Int</type>
        <declname>__imax</declname>
        <defname>__imax</defname>
      </param>
      <param>
        <type>int</type>
        <declname>__idigits</declname>
        <defname>__idigits</defname>
        <defval>-1</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classstd_1_1__Integer__limits_1ae382fa0fdb905e1e0e17a89b388e1620" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>std::_Integer_limits&lt; _Int, __imin, __imax, __idigits &gt;::BOOST_STL_DECLARE_LIMITS_MEMBER</definition>
        <argsstring>(bool, is_specialized, true)</argsstring>
        <name>BOOST_STL_DECLARE_LIMITS_MEMBER</name>
        <param>
          <type>bool</type>
        </param>
        <param>
          <type>is_specialized</type>
        </param>
        <param>
          <type>true</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/detail/limits.hpp" line="151" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstd_1_1__Integer__limits_1aba8739cf017aea1d9a3bbc0b41b7cb22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>std::_Integer_limits&lt; _Int, __imin, __imax, __idigits &gt;::BOOST_STL_DECLARE_LIMITS_MEMBER</definition>
        <argsstring>(int, digits,(__idigits&lt; 0)?(int)(sizeof(_Int)*CHAR_BIT)-(__imin==0?0:1):__idigits)</argsstring>
        <name>BOOST_STL_DECLARE_LIMITS_MEMBER</name>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>digits</type>
        </param>
        <param>
          <type>(__idigits&lt; 0)?(int)(sizeof(_Int)*CHAR_BIT)-(__imin==0?0:1):__idigits</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/detail/limits.hpp" line="156" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstd_1_1__Integer__limits_1a9313f1c597ee95de5f268fe80585d0ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>std::_Integer_limits&lt; _Int, __imin, __imax, __idigits &gt;::BOOST_STL_DECLARE_LIMITS_MEMBER</definition>
        <argsstring>(int, digits10,(digits *301)/1000)</argsstring>
        <name>BOOST_STL_DECLARE_LIMITS_MEMBER</name>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>digits10</type>
        </param>
        <param>
          <type>(digits *301)/</type>
          <declname>1000</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/detail/limits.hpp" line="161" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstd_1_1__Integer__limits_1aab3547c0185f43cbb17d7f0866ea3a81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>std::_Integer_limits&lt; _Int, __imin, __imax, __idigits &gt;::BOOST_STL_DECLARE_LIMITS_MEMBER</definition>
        <argsstring>(bool, is_signed, __imin!=0)</argsstring>
        <name>BOOST_STL_DECLARE_LIMITS_MEMBER</name>
        <param>
          <type>bool</type>
        </param>
        <param>
          <type>is_signed</type>
        </param>
        <param>
          <type>__imin!</type>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/detail/limits.hpp" line="164" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstd_1_1__Integer__limits_1aa027bab2eae66c468430979fd09c0766" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>std::_Integer_limits&lt; _Int, __imin, __imax, __idigits &gt;::BOOST_STL_DECLARE_LIMITS_MEMBER</definition>
        <argsstring>(bool, is_integer, true)</argsstring>
        <name>BOOST_STL_DECLARE_LIMITS_MEMBER</name>
        <param>
          <type>bool</type>
        </param>
        <param>
          <type>is_integer</type>
        </param>
        <param>
          <type>true</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/detail/limits.hpp" line="165" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstd_1_1__Integer__limits_1a54c72f19ef85d59473ec852b8691b96c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>std::_Integer_limits&lt; _Int, __imin, __imax, __idigits &gt;::BOOST_STL_DECLARE_LIMITS_MEMBER</definition>
        <argsstring>(bool, is_exact, true)</argsstring>
        <name>BOOST_STL_DECLARE_LIMITS_MEMBER</name>
        <param>
          <type>bool</type>
        </param>
        <param>
          <type>is_exact</type>
        </param>
        <param>
          <type>true</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/detail/limits.hpp" line="166" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstd_1_1__Integer__limits_1a6919347dea3eec1dbbad91ebd21e32b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>std::_Integer_limits&lt; _Int, __imin, __imax, __idigits &gt;::BOOST_STL_DECLARE_LIMITS_MEMBER</definition>
        <argsstring>(int, radix, 2)</argsstring>
        <name>BOOST_STL_DECLARE_LIMITS_MEMBER</name>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>radix</type>
        </param>
        <param>
          <type>2</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/detail/limits.hpp" line="167" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstd_1_1__Integer__limits_1a094f33b707604c1fe28a53b84fecef3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>std::_Integer_limits&lt; _Int, __imin, __imax, __idigits &gt;::BOOST_STL_DECLARE_LIMITS_MEMBER</definition>
        <argsstring>(bool, is_bounded, true)</argsstring>
        <name>BOOST_STL_DECLARE_LIMITS_MEMBER</name>
        <param>
          <type>bool</type>
        </param>
        <param>
          <type>is_bounded</type>
        </param>
        <param>
          <type>true</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/detail/limits.hpp" line="169" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstd_1_1__Integer__limits_1a1131fdd3017efd64e8cd3feaa378493f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>std::_Integer_limits&lt; _Int, __imin, __imax, __idigits &gt;::BOOST_STL_DECLARE_LIMITS_MEMBER</definition>
        <argsstring>(bool, is_modulo, true)</argsstring>
        <name>BOOST_STL_DECLARE_LIMITS_MEMBER</name>
        <param>
          <type>bool</type>
        </param>
        <param>
          <type>is_modulo</type>
        </param>
        <param>
          <type>true</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/detail/limits.hpp" line="170" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classstd_1_1__Integer__limits_1a991221b1038ce1fe4918deabbaffcfe6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>_Int min</type>
        <definition>static _Int min std::_Integer_limits&lt; _Int, __imin, __imax, __idigits &gt;::BOOST_PREVENT_MACRO_SUBSTITUTION</definition>
        <argsstring>()</argsstring>
        <name>BOOST_PREVENT_MACRO_SUBSTITUTION</name>
        <exceptions> throw ()</exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/detail/limits.hpp" line="153" column="1" bodyfile="/usr/include/gecode/third-party/boost/detail/limits.hpp" bodystart="153" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="classstd_1_1__Integer__limits_1a8e3c39ab877e11dff6d70a66c251aed8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>_Int max</type>
        <definition>static _Int max std::_Integer_limits&lt; _Int, __imin, __imax, __idigits &gt;::BOOST_PREVENT_MACRO_SUBSTITUTION</definition>
        <argsstring>()</argsstring>
        <name>BOOST_PREVENT_MACRO_SUBSTITUTION</name>
        <exceptions> throw ()</exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/detail/limits.hpp" line="154" column="1" bodyfile="/usr/include/gecode/third-party/boost/detail/limits.hpp" bodystart="154" bodyend="154"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="6">
        <label>std::_Integer_limits&lt; _Int, __imin, __imax, __idigits &gt;</label>
        <link refid="classstd_1_1__Integer__limits"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>std::_Numeric_limits_base&lt; _Int &gt;</label>
        <link refid="classstd_1_1__Numeric__limits__base"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="8">
        <label>std::_Integer_limits&lt; _Int, __imin, __imax, __idigits &gt;</label>
        <link refid="classstd_1_1__Integer__limits"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>std::_Numeric_limits_base&lt; _Int &gt;</label>
        <link refid="classstd_1_1__Numeric__limits__base"/>
      </node>
    </collaborationgraph>
    <location file="/usr/include/gecode/third-party/boost/detail/limits.hpp" line="149" column="1" bodyfile="/usr/include/gecode/third-party/boost/detail/limits.hpp" bodystart="148" bodyend="171"/>
    <listofallmembers>
      <member refid="classstd_1_1__Integer__limits_1a991221b1038ce1fe4918deabbaffcfe6" prot="public" virt="non-virtual"><scope>std::_Integer_limits</scope><name>BOOST_PREVENT_MACRO_SUBSTITUTION</name></member>
      <member refid="classstd_1_1__Integer__limits_1a8e3c39ab877e11dff6d70a66c251aed8" prot="public" virt="non-virtual"><scope>std::_Integer_limits</scope><name>BOOST_PREVENT_MACRO_SUBSTITUTION</name></member>
      <member refid="classstd_1_1__Integer__limits_1ae382fa0fdb905e1e0e17a89b388e1620" prot="public" virt="non-virtual"><scope>std::_Integer_limits</scope><name>BOOST_STL_DECLARE_LIMITS_MEMBER</name></member>
      <member refid="classstd_1_1__Integer__limits_1aba8739cf017aea1d9a3bbc0b41b7cb22" prot="public" virt="non-virtual"><scope>std::_Integer_limits</scope><name>BOOST_STL_DECLARE_LIMITS_MEMBER</name></member>
      <member refid="classstd_1_1__Integer__limits_1a9313f1c597ee95de5f268fe80585d0ec" prot="public" virt="non-virtual"><scope>std::_Integer_limits</scope><name>BOOST_STL_DECLARE_LIMITS_MEMBER</name></member>
      <member refid="classstd_1_1__Integer__limits_1aab3547c0185f43cbb17d7f0866ea3a81" prot="public" virt="non-virtual"><scope>std::_Integer_limits</scope><name>BOOST_STL_DECLARE_LIMITS_MEMBER</name></member>
      <member refid="classstd_1_1__Integer__limits_1aa027bab2eae66c468430979fd09c0766" prot="public" virt="non-virtual"><scope>std::_Integer_limits</scope><name>BOOST_STL_DECLARE_LIMITS_MEMBER</name></member>
      <member refid="classstd_1_1__Integer__limits_1a54c72f19ef85d59473ec852b8691b96c" prot="public" virt="non-virtual"><scope>std::_Integer_limits</scope><name>BOOST_STL_DECLARE_LIMITS_MEMBER</name></member>
      <member refid="classstd_1_1__Integer__limits_1a6919347dea3eec1dbbad91ebd21e32b1" prot="public" virt="non-virtual"><scope>std::_Integer_limits</scope><name>BOOST_STL_DECLARE_LIMITS_MEMBER</name></member>
      <member refid="classstd_1_1__Integer__limits_1a094f33b707604c1fe28a53b84fecef3b" prot="public" virt="non-virtual"><scope>std::_Integer_limits</scope><name>BOOST_STL_DECLARE_LIMITS_MEMBER</name></member>
      <member refid="classstd_1_1__Integer__limits_1a1131fdd3017efd64e8cd3feaa378493f" prot="public" virt="non-virtual"><scope>std::_Integer_limits</scope><name>BOOST_STL_DECLARE_LIMITS_MEMBER</name></member>
      <member refid="classstd_1_1__Numeric__limits__base_1a92885af216494bb7e83ed72ffb8a58f1" prot="public" virt="non-virtual" ambiguityscope="_Numeric_limits_base&lt; _Int &gt;::"><scope>std::_Integer_limits</scope><name>BOOST_STL_DECLARE_LIMITS_MEMBER</name></member>
      <member refid="classstd_1_1__Numeric__limits__base_1a1df31f3aca7a2ea518cd40801dcb8643" prot="public" virt="non-virtual" ambiguityscope="_Numeric_limits_base&lt; _Int &gt;::"><scope>std::_Integer_limits</scope><name>BOOST_STL_DECLARE_LIMITS_MEMBER</name></member>
      <member refid="classstd_1_1__Numeric__limits__base_1ae87c09c3e33548032b22bb348d41968f" prot="public" virt="non-virtual" ambiguityscope="_Numeric_limits_base&lt; _Int &gt;::"><scope>std::_Integer_limits</scope><name>BOOST_STL_DECLARE_LIMITS_MEMBER</name></member>
      <member refid="classstd_1_1__Numeric__limits__base_1a3f2b0710dffb2ebb8bb63c05322c46d8" prot="public" virt="non-virtual" ambiguityscope="_Numeric_limits_base&lt; _Int &gt;::"><scope>std::_Integer_limits</scope><name>BOOST_STL_DECLARE_LIMITS_MEMBER</name></member>
      <member refid="classstd_1_1__Numeric__limits__base_1a7a9cfff8416c12d36273c38e2df364e7" prot="public" virt="non-virtual" ambiguityscope="_Numeric_limits_base&lt; _Int &gt;::"><scope>std::_Integer_limits</scope><name>BOOST_STL_DECLARE_LIMITS_MEMBER</name></member>
      <member refid="classstd_1_1__Numeric__limits__base_1af4d8590c373de7fb0aa9c4b8942492e8" prot="public" virt="non-virtual" ambiguityscope="_Numeric_limits_base&lt; _Int &gt;::"><scope>std::_Integer_limits</scope><name>BOOST_STL_DECLARE_LIMITS_MEMBER</name></member>
      <member refid="classstd_1_1__Numeric__limits__base_1a65d7aecef991ef9c1b8da8714c86b630" prot="public" virt="non-virtual" ambiguityscope="_Numeric_limits_base&lt; _Int &gt;::"><scope>std::_Integer_limits</scope><name>BOOST_STL_DECLARE_LIMITS_MEMBER</name></member>
      <member refid="classstd_1_1__Numeric__limits__base_1a0195017df59befb8cf72fd0f7b17f261" prot="public" virt="non-virtual" ambiguityscope="_Numeric_limits_base&lt; _Int &gt;::"><scope>std::_Integer_limits</scope><name>BOOST_STL_DECLARE_LIMITS_MEMBER</name></member>
      <member refid="classstd_1_1__Numeric__limits__base_1ab17cb4d2511ab89fbf6e275ec4f42100" prot="public" virt="non-virtual" ambiguityscope="_Numeric_limits_base&lt; _Int &gt;::"><scope>std::_Integer_limits</scope><name>BOOST_STL_DECLARE_LIMITS_MEMBER</name></member>
      <member refid="classstd_1_1__Numeric__limits__base_1a83907946e96154dfc67a33e0c2c0594e" prot="public" virt="non-virtual" ambiguityscope="_Numeric_limits_base&lt; _Int &gt;::"><scope>std::_Integer_limits</scope><name>BOOST_STL_DECLARE_LIMITS_MEMBER</name></member>
      <member refid="classstd_1_1__Numeric__limits__base_1a99994f5f692125a8c8cf4becc2206e4d" prot="public" virt="non-virtual" ambiguityscope="_Numeric_limits_base&lt; _Int &gt;::"><scope>std::_Integer_limits</scope><name>BOOST_STL_DECLARE_LIMITS_MEMBER</name></member>
      <member refid="classstd_1_1__Numeric__limits__base_1abf1a7c1a816b0b2c614a81d97d1a14b2" prot="public" virt="non-virtual" ambiguityscope="_Numeric_limits_base&lt; _Int &gt;::"><scope>std::_Integer_limits</scope><name>BOOST_STL_DECLARE_LIMITS_MEMBER</name></member>
      <member refid="classstd_1_1__Numeric__limits__base_1a53582c7d49904a66f33b3683fd921ce7" prot="public" virt="non-virtual" ambiguityscope="_Numeric_limits_base&lt; _Int &gt;::"><scope>std::_Integer_limits</scope><name>BOOST_STL_DECLARE_LIMITS_MEMBER</name></member>
      <member refid="classstd_1_1__Numeric__limits__base_1a8e0c26e0b26be02d4fe363679835f71a" prot="public" virt="non-virtual" ambiguityscope="_Numeric_limits_base&lt; _Int &gt;::"><scope>std::_Integer_limits</scope><name>BOOST_STL_DECLARE_LIMITS_MEMBER</name></member>
      <member refid="classstd_1_1__Numeric__limits__base_1a6e4ea2607b411752b81b760163435b94" prot="public" virt="non-virtual" ambiguityscope="_Numeric_limits_base&lt; _Int &gt;::"><scope>std::_Integer_limits</scope><name>BOOST_STL_DECLARE_LIMITS_MEMBER</name></member>
      <member refid="classstd_1_1__Numeric__limits__base_1ac2325a0494d5c782db3fda27235fb4c8" prot="public" virt="non-virtual" ambiguityscope="_Numeric_limits_base&lt; _Int &gt;::"><scope>std::_Integer_limits</scope><name>BOOST_STL_DECLARE_LIMITS_MEMBER</name></member>
      <member refid="classstd_1_1__Numeric__limits__base_1af80f417158dce1f41d9e31b87be584ed" prot="public" virt="non-virtual" ambiguityscope="_Numeric_limits_base&lt; _Int &gt;::"><scope>std::_Integer_limits</scope><name>BOOST_STL_DECLARE_LIMITS_MEMBER</name></member>
      <member refid="classstd_1_1__Numeric__limits__base_1a12f9be99a6f55600140e3c26eb0551e0" prot="public" virt="non-virtual" ambiguityscope="_Numeric_limits_base&lt; _Int &gt;::"><scope>std::_Integer_limits</scope><name>BOOST_STL_DECLARE_LIMITS_MEMBER</name></member>
      <member refid="classstd_1_1__Numeric__limits__base_1a7f7962ae6ec91abd098427cda354044c" prot="public" virt="non-virtual" ambiguityscope="_Numeric_limits_base&lt; _Int &gt;::"><scope>std::_Integer_limits</scope><name>BOOST_STL_DECLARE_LIMITS_MEMBER</name></member>
      <member refid="classstd_1_1__Numeric__limits__base_1a7b9cedb68517ac753bffad58aea34ea1" prot="public" virt="non-virtual" ambiguityscope="_Numeric_limits_base&lt; _Int &gt;::"><scope>std::_Integer_limits</scope><name>BOOST_STL_DECLARE_LIMITS_MEMBER</name></member>
      <member refid="classstd_1_1__Numeric__limits__base_1aa45e030ba90ee409290a2ca23f5c09c9" prot="public" virt="non-virtual" ambiguityscope="_Numeric_limits_base&lt; _Int &gt;::"><scope>std::_Integer_limits</scope><name>BOOST_STL_DECLARE_LIMITS_MEMBER</name></member>
      <member refid="classstd_1_1__Numeric__limits__base_1aabd4fc221cb692f9a744422cb0a48573" prot="public" virt="non-virtual" ambiguityscope="_Numeric_limits_base&lt; _Int &gt;::"><scope>std::_Integer_limits</scope><name>BOOST_STL_DECLARE_LIMITS_MEMBER</name></member>
      <member refid="classstd_1_1__Numeric__limits__base_1afec77458f2f3bffbb0f24a894a9fbe0f" prot="public" virt="non-virtual"><scope>std::_Integer_limits</scope><name>denorm_min</name></member>
      <member refid="classstd_1_1__Numeric__limits__base_1adc774e3cc9199aa0fa8eb98b0ad6dcef" prot="public" virt="non-virtual"><scope>std::_Integer_limits</scope><name>epsilon</name></member>
      <member refid="classstd_1_1__Numeric__limits__base_1a035973c7cce68e4bad5a2c2882546f4c" prot="public" virt="non-virtual"><scope>std::_Integer_limits</scope><name>infinity</name></member>
      <member refid="classstd_1_1__Numeric__limits__base_1a25bf58ef63712e606dbfcf40155d1bad" prot="public" virt="non-virtual"><scope>std::_Integer_limits</scope><name>quiet_NaN</name></member>
      <member refid="classstd_1_1__Numeric__limits__base_1a3b72a9102d2cb852830c078e326d2eee" prot="public" virt="non-virtual"><scope>std::_Integer_limits</scope><name>round_error</name></member>
      <member refid="classstd_1_1__Numeric__limits__base_1ad9aa32c86c29c1b4c0bc16ffc0e1261b" prot="public" virt="non-virtual"><scope>std::_Integer_limits</scope><name>signaling_NaN</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
