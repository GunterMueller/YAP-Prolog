<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classGecode_1_1LinIntExpr" kind="class" prot="public">
    <compoundname>Gecode::LinIntExpr</compoundname>
    <includes refid="minimodel_8hh" local="no">minimodel.hh</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classGecode_1_1LinIntExpr_1a005b44a7c9ca924b2e612494d08dc802" prot="public" static="no">
        <name>NodeType</name>
        <enumvalue id="classGecode_1_1LinIntExpr_1a005b44a7c9ca924b2e612494d08dc802a01b499b96035ce6515a6e4ccb08f6acd" prot="public">
          <name>NT_CONST</name>
          <briefdescription>
<para>Integer constant. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classGecode_1_1LinIntExpr_1a005b44a7c9ca924b2e612494d08dc802afd47ca8cf18a3a0c718754dd02350939" prot="public">
          <name>NT_VAR_INT</name>
          <briefdescription>
<para>Linear term with integer variable. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classGecode_1_1LinIntExpr_1a005b44a7c9ca924b2e612494d08dc802a5cfe6e44e4e527be17141f0d2938f8d0" prot="public">
          <name>NT_VAR_BOOL</name>
          <briefdescription>
<para>Linear term with Boolean variable. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classGecode_1_1LinIntExpr_1a005b44a7c9ca924b2e612494d08dc802af7b8c803e9377564483ae368742753f5" prot="public">
          <name>NT_NONLIN</name>
          <briefdescription>
<para>Non-linear expression. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classGecode_1_1LinIntExpr_1a005b44a7c9ca924b2e612494d08dc802a50fc1a2b7a3c1548eda3feef48fc9f2a" prot="public">
          <name>NT_SUM_INT</name>
          <briefdescription>
<para>Sum of integer variables. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classGecode_1_1LinIntExpr_1a005b44a7c9ca924b2e612494d08dc802a1b4aaf00138581df0327f96baba4bfd0" prot="public">
          <name>NT_SUM_BOOL</name>
          <briefdescription>
<para>Sum of Boolean variables. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classGecode_1_1LinIntExpr_1a005b44a7c9ca924b2e612494d08dc802a39dcb13ca422f72be5aaad559e63e7fd" prot="public">
          <name>NT_ADD</name>
          <briefdescription>
<para>Addition of linear terms. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classGecode_1_1LinIntExpr_1a005b44a7c9ca924b2e612494d08dc802a1429b9c933a6b76432a6808275a86eff" prot="public">
          <name>NT_SUB</name>
          <briefdescription>
<para>Subtraction of linear terms. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classGecode_1_1LinIntExpr_1a005b44a7c9ca924b2e612494d08dc802a9a4353f4522b804d614fe575c1001356" prot="public">
          <name>NT_MUL</name>
          <briefdescription>
<para>Multiplication by coefficient. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Type of linear expression. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/minimodel.hh" line="148" column="1" bodyfile="/usr/include/gecode/minimodel.hh" bodystart="148" bodyend="158"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classGecode_1_1LinIntExpr_1adf5b537396ded214468cde535cf19a86" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class LinIntRel</definition>
        <argsstring></argsstring>
        <name>LinIntRel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/minimodel.hh" line="139" column="1" bodyfile="/usr/include/gecode/minimodel.hh" bodystart="139" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classGecode_1_1LinIntExpr_1a03b65c443892dacad0914b71f1ed8fa3" prot="private" static="no" mutable="no">
        <type>Node *</type>
        <definition>Node* Gecode::LinIntExpr::n</definition>
        <argsstring></argsstring>
        <name>n</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/minimodel.hh" line="162" column="1" bodyfile="/usr/include/gecode/minimodel.hh" bodystart="161" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classGecode_1_1LinIntExpr_1a0a5f5ac099bbec56a2393cb02a21fd3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GECODE_MINIMODEL_EXPORT</type>
        <definition>GECODE_MINIMODEL_EXPORT Gecode::LinIntExpr::LinIntExpr</definition>
        <argsstring>(void)</argsstring>
        <name>LinIntExpr</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/minimodel.hh" line="166" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1LinIntExpr_1a659bc78c401d7f1e51d0000cf3e81e00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GECODE_MINIMODEL_EXPORT</type>
        <definition>GECODE_MINIMODEL_EXPORT Gecode::LinIntExpr::LinIntExpr</definition>
        <argsstring>(int c)</argsstring>
        <name>LinIntExpr</name>
        <param>
          <type>int</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Create expression for constant <emphasis>c</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/minimodel.hh" line="169" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1LinIntExpr_1add01a9f1ed8d9c61579497a6e6227317" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GECODE_MINIMODEL_EXPORT</type>
        <definition>GECODE_MINIMODEL_EXPORT Gecode::LinIntExpr::LinIntExpr</definition>
        <argsstring>(const IntVar &amp;x, int a=1)</argsstring>
        <name>LinIntExpr</name>
        <param>
          <type>const <ref refid="classGecode_1_1IntVar" kindref="compound">IntVar</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>a</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>Create expression. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/minimodel.hh" line="172" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1LinIntExpr_1a30fb0147d378420fd06f2582e10e406e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GECODE_MINIMODEL_EXPORT</type>
        <definition>GECODE_MINIMODEL_EXPORT Gecode::LinIntExpr::LinIntExpr</definition>
        <argsstring>(const BoolVar &amp;x, int a=1)</argsstring>
        <name>LinIntExpr</name>
        <param>
          <type>const <ref refid="classGecode_1_1BoolVar" kindref="compound">BoolVar</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>a</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>Create expression. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/minimodel.hh" line="175" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1LinIntExpr_1ae5f7434079ed5f9f80ef84f9d8f7c88a" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type>GECODE_MINIMODEL_EXPORT</type>
        <definition>GECODE_MINIMODEL_EXPORT Gecode::LinIntExpr::LinIntExpr</definition>
        <argsstring>(const IntVarArgs &amp;x)</argsstring>
        <name>LinIntExpr</name>
        <param>
          <type>const <ref refid="classGecode_1_1IntVarArgs" kindref="compound">IntVarArgs</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Create sum expression. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/minimodel.hh" line="178" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1LinIntExpr_1a094b97279a064b4959ce82f464253fb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GECODE_MINIMODEL_EXPORT</type>
        <definition>GECODE_MINIMODEL_EXPORT Gecode::LinIntExpr::LinIntExpr</definition>
        <argsstring>(const IntArgs &amp;a, const IntVarArgs &amp;x)</argsstring>
        <name>LinIntExpr</name>
        <param>
          <type>const <ref refid="classGecode_1_1IntArgs" kindref="compound">IntArgs</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1IntVarArgs" kindref="compound">IntVarArgs</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Create sum expression. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/minimodel.hh" line="181" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1LinIntExpr_1a9828b464d2d196b0e9c16fca09c99771" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type>GECODE_MINIMODEL_EXPORT</type>
        <definition>GECODE_MINIMODEL_EXPORT Gecode::LinIntExpr::LinIntExpr</definition>
        <argsstring>(const BoolVarArgs &amp;x)</argsstring>
        <name>LinIntExpr</name>
        <param>
          <type>const <ref refid="classGecode_1_1BoolVarArgs" kindref="compound">BoolVarArgs</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Create sum expression. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/minimodel.hh" line="184" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1LinIntExpr_1a5f26bba1de2f22b035b8d2f092cd84ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GECODE_MINIMODEL_EXPORT</type>
        <definition>GECODE_MINIMODEL_EXPORT Gecode::LinIntExpr::LinIntExpr</definition>
        <argsstring>(const IntArgs &amp;a, const BoolVarArgs &amp;x)</argsstring>
        <name>LinIntExpr</name>
        <param>
          <type>const <ref refid="classGecode_1_1IntArgs" kindref="compound">IntArgs</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1BoolVarArgs" kindref="compound">BoolVarArgs</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Create sum expression. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/minimodel.hh" line="187" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1LinIntExpr_1a8fafd085272d5e66a9802355302ab7a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GECODE_MINIMODEL_EXPORT</type>
        <definition>GECODE_MINIMODEL_EXPORT Gecode::LinIntExpr::LinIntExpr</definition>
        <argsstring>(const LinIntExpr &amp;e)</argsstring>
        <name>LinIntExpr</name>
        <param>
          <type>const <ref refid="classGecode_1_1LinIntExpr" kindref="compound">LinIntExpr</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/minimodel.hh" line="190" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1LinIntExpr_1a448153c1c208a29491632434b4581de4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GECODE_MINIMODEL_EXPORT</type>
        <definition>GECODE_MINIMODEL_EXPORT Gecode::LinIntExpr::LinIntExpr</definition>
        <argsstring>(const LinIntExpr &amp;e0, NodeType t, const LinIntExpr &amp;e1)</argsstring>
        <name>LinIntExpr</name>
        <param>
          <type>const <ref refid="classGecode_1_1LinIntExpr" kindref="compound">LinIntExpr</ref> &amp;</type>
          <declname>e0</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1LinIntExpr_1a005b44a7c9ca924b2e612494d08dc802" kindref="member">NodeType</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1LinIntExpr" kindref="compound">LinIntExpr</ref> &amp;</type>
          <declname>e1</declname>
        </param>
        <briefdescription>
<para>Create expression for type and subexpressions. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/minimodel.hh" line="193" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1LinIntExpr_1a5a7498492241239a51f75415fa83ecd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GECODE_MINIMODEL_EXPORT</type>
        <definition>GECODE_MINIMODEL_EXPORT Gecode::LinIntExpr::LinIntExpr</definition>
        <argsstring>(const LinIntExpr &amp;e0, NodeType t, int c)</argsstring>
        <name>LinIntExpr</name>
        <param>
          <type>const <ref refid="classGecode_1_1LinIntExpr" kindref="compound">LinIntExpr</ref> &amp;</type>
          <declname>e0</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1LinIntExpr_1a005b44a7c9ca924b2e612494d08dc802" kindref="member">NodeType</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type>int</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Create expression for type and subexpression. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/minimodel.hh" line="196" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1LinIntExpr_1ad391c3c9d27c18877a9af0a1dde11a2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GECODE_MINIMODEL_EXPORT</type>
        <definition>GECODE_MINIMODEL_EXPORT Gecode::LinIntExpr::LinIntExpr</definition>
        <argsstring>(int a, const LinIntExpr &amp;e)</argsstring>
        <name>LinIntExpr</name>
        <param>
          <type>int</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1LinIntExpr" kindref="compound">LinIntExpr</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Create expression for multiplication. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/minimodel.hh" line="199" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1LinIntExpr_1a8354090684b578feea79688ab4687f15" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type>GECODE_MINIMODEL_EXPORT</type>
        <definition>GECODE_MINIMODEL_EXPORT Gecode::LinIntExpr::LinIntExpr</definition>
        <argsstring>(NonLinIntExpr *e)</argsstring>
        <name>LinIntExpr</name>
        <param>
          <type><ref refid="classGecode_1_1NonLinIntExpr" kindref="compound">NonLinIntExpr</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Create non-linear expression. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/minimodel.hh" line="202" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1LinIntExpr_1ad3398eae42cfe4cfb2b953d5242a9b95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GECODE_MINIMODEL_EXPORT const <ref refid="classGecode_1_1LinIntExpr" kindref="compound">LinIntExpr</ref> &amp;</type>
        <definition>GECODE_MINIMODEL_EXPORT const LinIntExpr&amp; Gecode::LinIntExpr::operator=</definition>
        <argsstring>(const LinIntExpr &amp;e)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classGecode_1_1LinIntExpr" kindref="compound">LinIntExpr</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Assignment operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/minimodel.hh" line="205" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1LinIntExpr_1a12e27af6b290ac2c93934e88c0280e20" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>GECODE_MINIMODEL_EXPORT void</type>
        <definition>GECODE_MINIMODEL_EXPORT void Gecode::LinIntExpr::post</definition>
        <argsstring>(Home home, IntRelType irt, IntConLevel icl) const </argsstring>
        <name>post</name>
        <param>
          <type><ref refid="classGecode_1_1Home" kindref="compound">Home</ref></type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="namespaceGecode_1a2a4b3317737fd8ffb4dfdf43d1bb87aa" kindref="member">IntRelType</ref></type>
          <declname>irt</declname>
        </param>
        <param>
          <type><ref refid="namespaceGecode_1a22c1363cbf5a7e6fa6c250ae813247ad" kindref="member">IntConLevel</ref></type>
          <declname>icl</declname>
        </param>
        <briefdescription>
<para>Post propagator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/minimodel.hh" line="208" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1LinIntExpr_1addc1026f15c9185496a27dd298b92d9a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>GECODE_MINIMODEL_EXPORT void</type>
        <definition>GECODE_MINIMODEL_EXPORT void Gecode::LinIntExpr::post</definition>
        <argsstring>(Home home, IntRelType irt, const BoolVar &amp;b, IntConLevel icl) const </argsstring>
        <name>post</name>
        <param>
          <type><ref refid="classGecode_1_1Home" kindref="compound">Home</ref></type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="namespaceGecode_1a2a4b3317737fd8ffb4dfdf43d1bb87aa" kindref="member">IntRelType</ref></type>
          <declname>irt</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1BoolVar" kindref="compound">BoolVar</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type><ref refid="namespaceGecode_1a22c1363cbf5a7e6fa6c250ae813247ad" kindref="member">IntConLevel</ref></type>
          <declname>icl</declname>
        </param>
        <briefdescription>
<para>Post reified propagator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/minimodel.hh" line="211" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1LinIntExpr_1a2ddda2513abd3ac73c9ca3f547fd97f8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>GECODE_MINIMODEL_EXPORT <ref refid="classGecode_1_1IntVar" kindref="compound">IntVar</ref></type>
        <definition>GECODE_MINIMODEL_EXPORT IntVar Gecode::LinIntExpr::post</definition>
        <argsstring>(Home home, IntConLevel icl) const </argsstring>
        <name>post</name>
        <param>
          <type><ref refid="classGecode_1_1Home" kindref="compound">Home</ref></type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="namespaceGecode_1a22c1363cbf5a7e6fa6c250ae813247ad" kindref="member">IntConLevel</ref></type>
          <declname>icl</declname>
        </param>
        <briefdescription>
<para>Post propagator and return variable for value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/minimodel.hh" line="215" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1LinIntExpr_1a108cb3da450bbe14d7c9814529f50241" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>GECODE_MINIMODEL_EXPORT <ref refid="classGecode_1_1NonLinIntExpr" kindref="compound">NonLinIntExpr</ref> *</type>
        <definition>GECODE_MINIMODEL_EXPORT NonLinIntExpr* Gecode::LinIntExpr::nle</definition>
        <argsstring>(void) const </argsstring>
        <name>nle</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return non-linear expression inside, or NULL if not non-linear. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/minimodel.hh" line="218" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1LinIntExpr_1a1dacf5d49d56b4455a5c07fd4ba9b6bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GECODE_MINIMODEL_EXPORT</type>
        <definition>GECODE_MINIMODEL_EXPORT Gecode::LinIntExpr::~LinIntExpr</definition>
        <argsstring>(void)</argsstring>
        <name>~LinIntExpr</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Destructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/minimodel.hh" line="221" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Linear expressions over integer variables. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/usr/include/gecode/minimodel.hh" line="138" column="1" bodyfile="/usr/include/gecode/minimodel.hh" bodystart="138" bodyend="222"/>
    <listofallmembers>
      <member refid="classGecode_1_1LinIntExpr_1a0a5f5ac099bbec56a2393cb02a21fd3e" prot="public" virt="non-virtual"><scope>Gecode::LinIntExpr</scope><name>LinIntExpr</name></member>
      <member refid="classGecode_1_1LinIntExpr_1a659bc78c401d7f1e51d0000cf3e81e00" prot="public" virt="non-virtual"><scope>Gecode::LinIntExpr</scope><name>LinIntExpr</name></member>
      <member refid="classGecode_1_1LinIntExpr_1add01a9f1ed8d9c61579497a6e6227317" prot="public" virt="non-virtual"><scope>Gecode::LinIntExpr</scope><name>LinIntExpr</name></member>
      <member refid="classGecode_1_1LinIntExpr_1a30fb0147d378420fd06f2582e10e406e" prot="public" virt="non-virtual"><scope>Gecode::LinIntExpr</scope><name>LinIntExpr</name></member>
      <member refid="classGecode_1_1LinIntExpr_1ae5f7434079ed5f9f80ef84f9d8f7c88a" prot="public" virt="non-virtual"><scope>Gecode::LinIntExpr</scope><name>LinIntExpr</name></member>
      <member refid="classGecode_1_1LinIntExpr_1a094b97279a064b4959ce82f464253fb9" prot="public" virt="non-virtual"><scope>Gecode::LinIntExpr</scope><name>LinIntExpr</name></member>
      <member refid="classGecode_1_1LinIntExpr_1a9828b464d2d196b0e9c16fca09c99771" prot="public" virt="non-virtual"><scope>Gecode::LinIntExpr</scope><name>LinIntExpr</name></member>
      <member refid="classGecode_1_1LinIntExpr_1a5f26bba1de2f22b035b8d2f092cd84ca" prot="public" virt="non-virtual"><scope>Gecode::LinIntExpr</scope><name>LinIntExpr</name></member>
      <member refid="classGecode_1_1LinIntExpr_1a8fafd085272d5e66a9802355302ab7a0" prot="public" virt="non-virtual"><scope>Gecode::LinIntExpr</scope><name>LinIntExpr</name></member>
      <member refid="classGecode_1_1LinIntExpr_1a448153c1c208a29491632434b4581de4" prot="public" virt="non-virtual"><scope>Gecode::LinIntExpr</scope><name>LinIntExpr</name></member>
      <member refid="classGecode_1_1LinIntExpr_1a5a7498492241239a51f75415fa83ecd4" prot="public" virt="non-virtual"><scope>Gecode::LinIntExpr</scope><name>LinIntExpr</name></member>
      <member refid="classGecode_1_1LinIntExpr_1ad391c3c9d27c18877a9af0a1dde11a2e" prot="public" virt="non-virtual"><scope>Gecode::LinIntExpr</scope><name>LinIntExpr</name></member>
      <member refid="classGecode_1_1LinIntExpr_1a8354090684b578feea79688ab4687f15" prot="public" virt="non-virtual"><scope>Gecode::LinIntExpr</scope><name>LinIntExpr</name></member>
      <member refid="classGecode_1_1LinIntExpr_1adf5b537396ded214468cde535cf19a86" prot="private" virt="non-virtual"><scope>Gecode::LinIntExpr</scope><name>LinIntRel</name></member>
      <member refid="classGecode_1_1LinIntExpr_1a03b65c443892dacad0914b71f1ed8fa3" prot="private" virt="non-virtual"><scope>Gecode::LinIntExpr</scope><name>n</name></member>
      <member refid="classGecode_1_1LinIntExpr_1a108cb3da450bbe14d7c9814529f50241" prot="public" virt="non-virtual"><scope>Gecode::LinIntExpr</scope><name>nle</name></member>
      <member refid="classGecode_1_1LinIntExpr_1a005b44a7c9ca924b2e612494d08dc802" prot="public" virt="non-virtual"><scope>Gecode::LinIntExpr</scope><name>NodeType</name></member>
      <member refid="classGecode_1_1LinIntExpr_1a005b44a7c9ca924b2e612494d08dc802a39dcb13ca422f72be5aaad559e63e7fd" prot="public" virt="non-virtual"><scope>Gecode::LinIntExpr</scope><name>NT_ADD</name></member>
      <member refid="classGecode_1_1LinIntExpr_1a005b44a7c9ca924b2e612494d08dc802a01b499b96035ce6515a6e4ccb08f6acd" prot="public" virt="non-virtual"><scope>Gecode::LinIntExpr</scope><name>NT_CONST</name></member>
      <member refid="classGecode_1_1LinIntExpr_1a005b44a7c9ca924b2e612494d08dc802a9a4353f4522b804d614fe575c1001356" prot="public" virt="non-virtual"><scope>Gecode::LinIntExpr</scope><name>NT_MUL</name></member>
      <member refid="classGecode_1_1LinIntExpr_1a005b44a7c9ca924b2e612494d08dc802af7b8c803e9377564483ae368742753f5" prot="public" virt="non-virtual"><scope>Gecode::LinIntExpr</scope><name>NT_NONLIN</name></member>
      <member refid="classGecode_1_1LinIntExpr_1a005b44a7c9ca924b2e612494d08dc802a1429b9c933a6b76432a6808275a86eff" prot="public" virt="non-virtual"><scope>Gecode::LinIntExpr</scope><name>NT_SUB</name></member>
      <member refid="classGecode_1_1LinIntExpr_1a005b44a7c9ca924b2e612494d08dc802a1b4aaf00138581df0327f96baba4bfd0" prot="public" virt="non-virtual"><scope>Gecode::LinIntExpr</scope><name>NT_SUM_BOOL</name></member>
      <member refid="classGecode_1_1LinIntExpr_1a005b44a7c9ca924b2e612494d08dc802a50fc1a2b7a3c1548eda3feef48fc9f2a" prot="public" virt="non-virtual"><scope>Gecode::LinIntExpr</scope><name>NT_SUM_INT</name></member>
      <member refid="classGecode_1_1LinIntExpr_1a005b44a7c9ca924b2e612494d08dc802a5cfe6e44e4e527be17141f0d2938f8d0" prot="public" virt="non-virtual"><scope>Gecode::LinIntExpr</scope><name>NT_VAR_BOOL</name></member>
      <member refid="classGecode_1_1LinIntExpr_1a005b44a7c9ca924b2e612494d08dc802afd47ca8cf18a3a0c718754dd02350939" prot="public" virt="non-virtual"><scope>Gecode::LinIntExpr</scope><name>NT_VAR_INT</name></member>
      <member refid="classGecode_1_1LinIntExpr_1ad3398eae42cfe4cfb2b953d5242a9b95" prot="public" virt="non-virtual"><scope>Gecode::LinIntExpr</scope><name>operator=</name></member>
      <member refid="classGecode_1_1LinIntExpr_1a12e27af6b290ac2c93934e88c0280e20" prot="public" virt="non-virtual"><scope>Gecode::LinIntExpr</scope><name>post</name></member>
      <member refid="classGecode_1_1LinIntExpr_1addc1026f15c9185496a27dd298b92d9a" prot="public" virt="non-virtual"><scope>Gecode::LinIntExpr</scope><name>post</name></member>
      <member refid="classGecode_1_1LinIntExpr_1a2ddda2513abd3ac73c9ca3f547fd97f8" prot="public" virt="non-virtual"><scope>Gecode::LinIntExpr</scope><name>post</name></member>
      <member refid="classGecode_1_1LinIntExpr_1a1dacf5d49d56b4455a5c07fd4ba9b6bf" prot="public" virt="non-virtual"><scope>Gecode::LinIntExpr</scope><name>~LinIntExpr</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
