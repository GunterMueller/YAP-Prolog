<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classstd_1_1__Numeric__limits__base" kind="class" prot="public">
    <compoundname>std::_Numeric_limits_base</compoundname>
    <derivedcompoundref refid="classstd_1_1__Floating__limits" prot="public" virt="non-virtual">std::_Floating_limits&lt; __number, __Digits, __Digits10, __MinExp, __MaxExp, __MinExp10, __MaxExp10, __InfinityWord, __QNaNWord, __SNaNWord, __IsIEC559, __RoundStyle &gt;</derivedcompoundref>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>__number</declname>
        <defname>__number</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classstd_1_1__Numeric__limits__base_1a92885af216494bb7e83ed72ffb8a58f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>std::_Numeric_limits_base&lt; __number &gt;::BOOST_STL_DECLARE_LIMITS_MEMBER</definition>
        <argsstring>(bool, is_specialized, false)</argsstring>
        <name>BOOST_STL_DECLARE_LIMITS_MEMBER</name>
        <param>
          <type>bool</type>
        </param>
        <param>
          <type>is_specialized</type>
        </param>
        <param>
          <type>false</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/detail/limits.hpp" line="96" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstd_1_1__Numeric__limits__base_1a1df31f3aca7a2ea518cd40801dcb8643" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>std::_Numeric_limits_base&lt; __number &gt;::BOOST_STL_DECLARE_LIMITS_MEMBER</definition>
        <argsstring>(int, digits, 0)</argsstring>
        <name>BOOST_STL_DECLARE_LIMITS_MEMBER</name>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>digits</type>
        </param>
        <param>
          <type>0</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/detail/limits.hpp" line="101" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstd_1_1__Numeric__limits__base_1ae87c09c3e33548032b22bb348d41968f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>std::_Numeric_limits_base&lt; __number &gt;::BOOST_STL_DECLARE_LIMITS_MEMBER</definition>
        <argsstring>(int, digits10, 0)</argsstring>
        <name>BOOST_STL_DECLARE_LIMITS_MEMBER</name>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>digits10</type>
        </param>
        <param>
          <type>0</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/detail/limits.hpp" line="102" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstd_1_1__Numeric__limits__base_1a3f2b0710dffb2ebb8bb63c05322c46d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>std::_Numeric_limits_base&lt; __number &gt;::BOOST_STL_DECLARE_LIMITS_MEMBER</definition>
        <argsstring>(bool, is_signed, false)</argsstring>
        <name>BOOST_STL_DECLARE_LIMITS_MEMBER</name>
        <param>
          <type>bool</type>
        </param>
        <param>
          <type>is_signed</type>
        </param>
        <param>
          <type>false</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/detail/limits.hpp" line="104" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstd_1_1__Numeric__limits__base_1a7a9cfff8416c12d36273c38e2df364e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>std::_Numeric_limits_base&lt; __number &gt;::BOOST_STL_DECLARE_LIMITS_MEMBER</definition>
        <argsstring>(bool, is_integer, false)</argsstring>
        <name>BOOST_STL_DECLARE_LIMITS_MEMBER</name>
        <param>
          <type>bool</type>
        </param>
        <param>
          <type>is_integer</type>
        </param>
        <param>
          <type>false</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/detail/limits.hpp" line="105" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstd_1_1__Numeric__limits__base_1af4d8590c373de7fb0aa9c4b8942492e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>std::_Numeric_limits_base&lt; __number &gt;::BOOST_STL_DECLARE_LIMITS_MEMBER</definition>
        <argsstring>(bool, is_exact, false)</argsstring>
        <name>BOOST_STL_DECLARE_LIMITS_MEMBER</name>
        <param>
          <type>bool</type>
        </param>
        <param>
          <type>is_exact</type>
        </param>
        <param>
          <type>false</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/detail/limits.hpp" line="106" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstd_1_1__Numeric__limits__base_1a65d7aecef991ef9c1b8da8714c86b630" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>std::_Numeric_limits_base&lt; __number &gt;::BOOST_STL_DECLARE_LIMITS_MEMBER</definition>
        <argsstring>(int, radix, 0)</argsstring>
        <name>BOOST_STL_DECLARE_LIMITS_MEMBER</name>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>radix</type>
        </param>
        <param>
          <type>0</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/detail/limits.hpp" line="108" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstd_1_1__Numeric__limits__base_1a0195017df59befb8cf72fd0f7b17f261" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>std::_Numeric_limits_base&lt; __number &gt;::BOOST_STL_DECLARE_LIMITS_MEMBER</definition>
        <argsstring>(int, min_exponent, 0)</argsstring>
        <name>BOOST_STL_DECLARE_LIMITS_MEMBER</name>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>min_exponent</type>
        </param>
        <param>
          <type>0</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/detail/limits.hpp" line="113" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstd_1_1__Numeric__limits__base_1ab17cb4d2511ab89fbf6e275ec4f42100" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>std::_Numeric_limits_base&lt; __number &gt;::BOOST_STL_DECLARE_LIMITS_MEMBER</definition>
        <argsstring>(int, min_exponent10, 0)</argsstring>
        <name>BOOST_STL_DECLARE_LIMITS_MEMBER</name>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>min_exponent10</type>
        </param>
        <param>
          <type>0</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/detail/limits.hpp" line="114" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstd_1_1__Numeric__limits__base_1a83907946e96154dfc67a33e0c2c0594e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>std::_Numeric_limits_base&lt; __number &gt;::BOOST_STL_DECLARE_LIMITS_MEMBER</definition>
        <argsstring>(int, max_exponent, 0)</argsstring>
        <name>BOOST_STL_DECLARE_LIMITS_MEMBER</name>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>max_exponent</type>
        </param>
        <param>
          <type>0</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/detail/limits.hpp" line="115" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstd_1_1__Numeric__limits__base_1a99994f5f692125a8c8cf4becc2206e4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>std::_Numeric_limits_base&lt; __number &gt;::BOOST_STL_DECLARE_LIMITS_MEMBER</definition>
        <argsstring>(int, max_exponent10, 0)</argsstring>
        <name>BOOST_STL_DECLARE_LIMITS_MEMBER</name>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>max_exponent10</type>
        </param>
        <param>
          <type>0</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/detail/limits.hpp" line="116" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstd_1_1__Numeric__limits__base_1abf1a7c1a816b0b2c614a81d97d1a14b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>std::_Numeric_limits_base&lt; __number &gt;::BOOST_STL_DECLARE_LIMITS_MEMBER</definition>
        <argsstring>(bool, has_infinity, false)</argsstring>
        <name>BOOST_STL_DECLARE_LIMITS_MEMBER</name>
        <param>
          <type>bool</type>
        </param>
        <param>
          <type>has_infinity</type>
        </param>
        <param>
          <type>false</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/detail/limits.hpp" line="118" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstd_1_1__Numeric__limits__base_1a53582c7d49904a66f33b3683fd921ce7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>std::_Numeric_limits_base&lt; __number &gt;::BOOST_STL_DECLARE_LIMITS_MEMBER</definition>
        <argsstring>(bool, has_quiet_NaN, false)</argsstring>
        <name>BOOST_STL_DECLARE_LIMITS_MEMBER</name>
        <param>
          <type>bool</type>
        </param>
        <param>
          <type>has_quiet_NaN</type>
        </param>
        <param>
          <type>false</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/detail/limits.hpp" line="119" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstd_1_1__Numeric__limits__base_1a8e0c26e0b26be02d4fe363679835f71a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>std::_Numeric_limits_base&lt; __number &gt;::BOOST_STL_DECLARE_LIMITS_MEMBER</definition>
        <argsstring>(bool, has_signaling_NaN, false)</argsstring>
        <name>BOOST_STL_DECLARE_LIMITS_MEMBER</name>
        <param>
          <type>bool</type>
        </param>
        <param>
          <type>has_signaling_NaN</type>
        </param>
        <param>
          <type>false</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/detail/limits.hpp" line="120" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstd_1_1__Numeric__limits__base_1a6e4ea2607b411752b81b760163435b94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>std::_Numeric_limits_base&lt; __number &gt;::BOOST_STL_DECLARE_LIMITS_MEMBER</definition>
        <argsstring>(float_denorm_style, has_denorm, denorm_absent)</argsstring>
        <name>BOOST_STL_DECLARE_LIMITS_MEMBER</name>
        <param>
          <type>float_denorm_style</type>
        </param>
        <param>
          <type>has_denorm</type>
        </param>
        <param>
          <type>denorm_absent</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/detail/limits.hpp" line="121" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstd_1_1__Numeric__limits__base_1ac2325a0494d5c782db3fda27235fb4c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>std::_Numeric_limits_base&lt; __number &gt;::BOOST_STL_DECLARE_LIMITS_MEMBER</definition>
        <argsstring>(bool, has_denorm_loss, false)</argsstring>
        <name>BOOST_STL_DECLARE_LIMITS_MEMBER</name>
        <param>
          <type>bool</type>
        </param>
        <param>
          <type>has_denorm_loss</type>
        </param>
        <param>
          <type>false</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/detail/limits.hpp" line="124" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstd_1_1__Numeric__limits__base_1af80f417158dce1f41d9e31b87be584ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>std::_Numeric_limits_base&lt; __number &gt;::BOOST_STL_DECLARE_LIMITS_MEMBER</definition>
        <argsstring>(bool, is_iec559, false)</argsstring>
        <name>BOOST_STL_DECLARE_LIMITS_MEMBER</name>
        <param>
          <type>bool</type>
        </param>
        <param>
          <type>is_iec559</type>
        </param>
        <param>
          <type>false</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/detail/limits.hpp" line="131" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstd_1_1__Numeric__limits__base_1a12f9be99a6f55600140e3c26eb0551e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>std::_Numeric_limits_base&lt; __number &gt;::BOOST_STL_DECLARE_LIMITS_MEMBER</definition>
        <argsstring>(bool, is_bounded, false)</argsstring>
        <name>BOOST_STL_DECLARE_LIMITS_MEMBER</name>
        <param>
          <type>bool</type>
        </param>
        <param>
          <type>is_bounded</type>
        </param>
        <param>
          <type>false</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/detail/limits.hpp" line="132" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstd_1_1__Numeric__limits__base_1a7f7962ae6ec91abd098427cda354044c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>std::_Numeric_limits_base&lt; __number &gt;::BOOST_STL_DECLARE_LIMITS_MEMBER</definition>
        <argsstring>(bool, is_modulo, false)</argsstring>
        <name>BOOST_STL_DECLARE_LIMITS_MEMBER</name>
        <param>
          <type>bool</type>
        </param>
        <param>
          <type>is_modulo</type>
        </param>
        <param>
          <type>false</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/detail/limits.hpp" line="133" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstd_1_1__Numeric__limits__base_1a7b9cedb68517ac753bffad58aea34ea1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>std::_Numeric_limits_base&lt; __number &gt;::BOOST_STL_DECLARE_LIMITS_MEMBER</definition>
        <argsstring>(bool, traps, false)</argsstring>
        <name>BOOST_STL_DECLARE_LIMITS_MEMBER</name>
        <param>
          <type>bool</type>
        </param>
        <param>
          <type>traps</type>
        </param>
        <param>
          <type>false</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/detail/limits.hpp" line="135" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstd_1_1__Numeric__limits__base_1aa45e030ba90ee409290a2ca23f5c09c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>std::_Numeric_limits_base&lt; __number &gt;::BOOST_STL_DECLARE_LIMITS_MEMBER</definition>
        <argsstring>(bool, tinyness_before, false)</argsstring>
        <name>BOOST_STL_DECLARE_LIMITS_MEMBER</name>
        <param>
          <type>bool</type>
        </param>
        <param>
          <type>tinyness_before</type>
        </param>
        <param>
          <type>false</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/detail/limits.hpp" line="136" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classstd_1_1__Numeric__limits__base_1aabd4fc221cb692f9a744422cb0a48573" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>std::_Numeric_limits_base&lt; __number &gt;::BOOST_STL_DECLARE_LIMITS_MEMBER</definition>
        <argsstring>(float_round_style, round_style, round_toward_zero)</argsstring>
        <name>BOOST_STL_DECLARE_LIMITS_MEMBER</name>
        <param>
          <type>float_round_style</type>
        </param>
        <param>
          <type>round_style</type>
        </param>
        <param>
          <type>round_toward_zero</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/detail/limits.hpp" line="137" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classstd_1_1__Numeric__limits__base_1ad6b2066c0c08c7e80212eeccac0e4c44" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__number min</type>
        <definition>static __number min std::_Numeric_limits_base&lt; __number &gt;::BOOST_PREVENT_MACRO_SUBSTITUTION</definition>
        <argsstring>()</argsstring>
        <name>BOOST_PREVENT_MACRO_SUBSTITUTION</name>
        <exceptions> throw ()</exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/detail/limits.hpp" line="98" column="1" bodyfile="/usr/include/gecode/third-party/boost/detail/limits.hpp" bodystart="98" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classstd_1_1__Numeric__limits__base_1a2114e4b843fae938ff740a0d9d34f06f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__number max</type>
        <definition>static __number max std::_Numeric_limits_base&lt; __number &gt;::BOOST_PREVENT_MACRO_SUBSTITUTION</definition>
        <argsstring>()</argsstring>
        <name>BOOST_PREVENT_MACRO_SUBSTITUTION</name>
        <exceptions> throw ()</exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/detail/limits.hpp" line="99" column="1" bodyfile="/usr/include/gecode/third-party/boost/detail/limits.hpp" bodystart="99" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classstd_1_1__Numeric__limits__base_1adc774e3cc9199aa0fa8eb98b0ad6dcef" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__number</type>
        <definition>static __number std::_Numeric_limits_base&lt; __number &gt;::epsilon</definition>
        <argsstring>()</argsstring>
        <name>epsilon</name>
        <exceptions> throw ()</exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/detail/limits.hpp" line="110" column="1" bodyfile="/usr/include/gecode/third-party/boost/detail/limits.hpp" bodystart="110" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="classstd_1_1__Numeric__limits__base_1a3b72a9102d2cb852830c078e326d2eee" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__number</type>
        <definition>static __number std::_Numeric_limits_base&lt; __number &gt;::round_error</definition>
        <argsstring>()</argsstring>
        <name>round_error</name>
        <exceptions> throw ()</exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/detail/limits.hpp" line="111" column="1" bodyfile="/usr/include/gecode/third-party/boost/detail/limits.hpp" bodystart="111" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="classstd_1_1__Numeric__limits__base_1a035973c7cce68e4bad5a2c2882546f4c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__number</type>
        <definition>static __number std::_Numeric_limits_base&lt; __number &gt;::infinity</definition>
        <argsstring>()</argsstring>
        <name>infinity</name>
        <exceptions> throw ()</exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/detail/limits.hpp" line="126" column="1" bodyfile="/usr/include/gecode/third-party/boost/detail/limits.hpp" bodystart="126" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="classstd_1_1__Numeric__limits__base_1a25bf58ef63712e606dbfcf40155d1bad" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__number</type>
        <definition>static __number std::_Numeric_limits_base&lt; __number &gt;::quiet_NaN</definition>
        <argsstring>()</argsstring>
        <name>quiet_NaN</name>
        <exceptions> throw ()</exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/detail/limits.hpp" line="127" column="1" bodyfile="/usr/include/gecode/third-party/boost/detail/limits.hpp" bodystart="127" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="classstd_1_1__Numeric__limits__base_1ad9aa32c86c29c1b4c0bc16ffc0e1261b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__number</type>
        <definition>static __number std::_Numeric_limits_base&lt; __number &gt;::signaling_NaN</definition>
        <argsstring>()</argsstring>
        <name>signaling_NaN</name>
        <exceptions> throw ()</exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/detail/limits.hpp" line="128" column="1" bodyfile="/usr/include/gecode/third-party/boost/detail/limits.hpp" bodystart="128" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classstd_1_1__Numeric__limits__base_1afec77458f2f3bffbb0f24a894a9fbe0f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__number</type>
        <definition>static __number std::_Numeric_limits_base&lt; __number &gt;::denorm_min</definition>
        <argsstring>()</argsstring>
        <name>denorm_min</name>
        <exceptions> throw ()</exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/detail/limits.hpp" line="129" column="1" bodyfile="/usr/include/gecode/third-party/boost/detail/limits.hpp" bodystart="129" bodyend="129"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="10">
        <label>std::_Numeric_limits_base&lt; __number &gt;</label>
        <link refid="classstd_1_1__Numeric__limits__base"/>
      </node>
      <node id="11">
        <label>std::_Floating_limits&lt; __number &gt;</label>
        <link refid="classstd_1_1__Floating__limits"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/usr/include/gecode/third-party/boost/detail/limits.hpp" line="94" column="1" bodyfile="/usr/include/gecode/third-party/boost/detail/limits.hpp" bodystart="94" bodyend="140"/>
    <listofallmembers>
      <member refid="classstd_1_1__Numeric__limits__base_1ad6b2066c0c08c7e80212eeccac0e4c44" prot="public" virt="non-virtual"><scope>std::_Numeric_limits_base</scope><name>BOOST_PREVENT_MACRO_SUBSTITUTION</name></member>
      <member refid="classstd_1_1__Numeric__limits__base_1a2114e4b843fae938ff740a0d9d34f06f" prot="public" virt="non-virtual"><scope>std::_Numeric_limits_base</scope><name>BOOST_PREVENT_MACRO_SUBSTITUTION</name></member>
      <member refid="classstd_1_1__Numeric__limits__base_1a92885af216494bb7e83ed72ffb8a58f1" prot="public" virt="non-virtual"><scope>std::_Numeric_limits_base</scope><name>BOOST_STL_DECLARE_LIMITS_MEMBER</name></member>
      <member refid="classstd_1_1__Numeric__limits__base_1a1df31f3aca7a2ea518cd40801dcb8643" prot="public" virt="non-virtual"><scope>std::_Numeric_limits_base</scope><name>BOOST_STL_DECLARE_LIMITS_MEMBER</name></member>
      <member refid="classstd_1_1__Numeric__limits__base_1ae87c09c3e33548032b22bb348d41968f" prot="public" virt="non-virtual"><scope>std::_Numeric_limits_base</scope><name>BOOST_STL_DECLARE_LIMITS_MEMBER</name></member>
      <member refid="classstd_1_1__Numeric__limits__base_1a3f2b0710dffb2ebb8bb63c05322c46d8" prot="public" virt="non-virtual"><scope>std::_Numeric_limits_base</scope><name>BOOST_STL_DECLARE_LIMITS_MEMBER</name></member>
      <member refid="classstd_1_1__Numeric__limits__base_1a7a9cfff8416c12d36273c38e2df364e7" prot="public" virt="non-virtual"><scope>std::_Numeric_limits_base</scope><name>BOOST_STL_DECLARE_LIMITS_MEMBER</name></member>
      <member refid="classstd_1_1__Numeric__limits__base_1af4d8590c373de7fb0aa9c4b8942492e8" prot="public" virt="non-virtual"><scope>std::_Numeric_limits_base</scope><name>BOOST_STL_DECLARE_LIMITS_MEMBER</name></member>
      <member refid="classstd_1_1__Numeric__limits__base_1a65d7aecef991ef9c1b8da8714c86b630" prot="public" virt="non-virtual"><scope>std::_Numeric_limits_base</scope><name>BOOST_STL_DECLARE_LIMITS_MEMBER</name></member>
      <member refid="classstd_1_1__Numeric__limits__base_1a0195017df59befb8cf72fd0f7b17f261" prot="public" virt="non-virtual"><scope>std::_Numeric_limits_base</scope><name>BOOST_STL_DECLARE_LIMITS_MEMBER</name></member>
      <member refid="classstd_1_1__Numeric__limits__base_1ab17cb4d2511ab89fbf6e275ec4f42100" prot="public" virt="non-virtual"><scope>std::_Numeric_limits_base</scope><name>BOOST_STL_DECLARE_LIMITS_MEMBER</name></member>
      <member refid="classstd_1_1__Numeric__limits__base_1a83907946e96154dfc67a33e0c2c0594e" prot="public" virt="non-virtual"><scope>std::_Numeric_limits_base</scope><name>BOOST_STL_DECLARE_LIMITS_MEMBER</name></member>
      <member refid="classstd_1_1__Numeric__limits__base_1a99994f5f692125a8c8cf4becc2206e4d" prot="public" virt="non-virtual"><scope>std::_Numeric_limits_base</scope><name>BOOST_STL_DECLARE_LIMITS_MEMBER</name></member>
      <member refid="classstd_1_1__Numeric__limits__base_1abf1a7c1a816b0b2c614a81d97d1a14b2" prot="public" virt="non-virtual"><scope>std::_Numeric_limits_base</scope><name>BOOST_STL_DECLARE_LIMITS_MEMBER</name></member>
      <member refid="classstd_1_1__Numeric__limits__base_1a53582c7d49904a66f33b3683fd921ce7" prot="public" virt="non-virtual"><scope>std::_Numeric_limits_base</scope><name>BOOST_STL_DECLARE_LIMITS_MEMBER</name></member>
      <member refid="classstd_1_1__Numeric__limits__base_1a8e0c26e0b26be02d4fe363679835f71a" prot="public" virt="non-virtual"><scope>std::_Numeric_limits_base</scope><name>BOOST_STL_DECLARE_LIMITS_MEMBER</name></member>
      <member refid="classstd_1_1__Numeric__limits__base_1a6e4ea2607b411752b81b760163435b94" prot="public" virt="non-virtual"><scope>std::_Numeric_limits_base</scope><name>BOOST_STL_DECLARE_LIMITS_MEMBER</name></member>
      <member refid="classstd_1_1__Numeric__limits__base_1ac2325a0494d5c782db3fda27235fb4c8" prot="public" virt="non-virtual"><scope>std::_Numeric_limits_base</scope><name>BOOST_STL_DECLARE_LIMITS_MEMBER</name></member>
      <member refid="classstd_1_1__Numeric__limits__base_1af80f417158dce1f41d9e31b87be584ed" prot="public" virt="non-virtual"><scope>std::_Numeric_limits_base</scope><name>BOOST_STL_DECLARE_LIMITS_MEMBER</name></member>
      <member refid="classstd_1_1__Numeric__limits__base_1a12f9be99a6f55600140e3c26eb0551e0" prot="public" virt="non-virtual"><scope>std::_Numeric_limits_base</scope><name>BOOST_STL_DECLARE_LIMITS_MEMBER</name></member>
      <member refid="classstd_1_1__Numeric__limits__base_1a7f7962ae6ec91abd098427cda354044c" prot="public" virt="non-virtual"><scope>std::_Numeric_limits_base</scope><name>BOOST_STL_DECLARE_LIMITS_MEMBER</name></member>
      <member refid="classstd_1_1__Numeric__limits__base_1a7b9cedb68517ac753bffad58aea34ea1" prot="public" virt="non-virtual"><scope>std::_Numeric_limits_base</scope><name>BOOST_STL_DECLARE_LIMITS_MEMBER</name></member>
      <member refid="classstd_1_1__Numeric__limits__base_1aa45e030ba90ee409290a2ca23f5c09c9" prot="public" virt="non-virtual"><scope>std::_Numeric_limits_base</scope><name>BOOST_STL_DECLARE_LIMITS_MEMBER</name></member>
      <member refid="classstd_1_1__Numeric__limits__base_1aabd4fc221cb692f9a744422cb0a48573" prot="public" virt="non-virtual"><scope>std::_Numeric_limits_base</scope><name>BOOST_STL_DECLARE_LIMITS_MEMBER</name></member>
      <member refid="classstd_1_1__Numeric__limits__base_1afec77458f2f3bffbb0f24a894a9fbe0f" prot="public" virt="non-virtual"><scope>std::_Numeric_limits_base</scope><name>denorm_min</name></member>
      <member refid="classstd_1_1__Numeric__limits__base_1adc774e3cc9199aa0fa8eb98b0ad6dcef" prot="public" virt="non-virtual"><scope>std::_Numeric_limits_base</scope><name>epsilon</name></member>
      <member refid="classstd_1_1__Numeric__limits__base_1a035973c7cce68e4bad5a2c2882546f4c" prot="public" virt="non-virtual"><scope>std::_Numeric_limits_base</scope><name>infinity</name></member>
      <member refid="classstd_1_1__Numeric__limits__base_1a25bf58ef63712e606dbfcf40155d1bad" prot="public" virt="non-virtual"><scope>std::_Numeric_limits_base</scope><name>quiet_NaN</name></member>
      <member refid="classstd_1_1__Numeric__limits__base_1a3b72a9102d2cb852830c078e326d2eee" prot="public" virt="non-virtual"><scope>std::_Numeric_limits_base</scope><name>round_error</name></member>
      <member refid="classstd_1_1__Numeric__limits__base_1ad9aa32c86c29c1b4c0bc16ffc0e1261b" prot="public" virt="non-virtual"><scope>std::_Numeric_limits_base</scope><name>signaling_NaN</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
