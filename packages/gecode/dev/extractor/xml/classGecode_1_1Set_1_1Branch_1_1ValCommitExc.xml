<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classGecode_1_1Set_1_1Branch_1_1ValCommitExc" kind="class" prot="public">
    <compoundname>Gecode::Set::Branch::ValCommitExc</compoundname>
    <basecompoundref refid="classGecode_1_1ValCommit" prot="public" virt="non-virtual">Gecode::ValCommit&lt; SetView, int &gt;</basecompoundref>
    <includes refid="set_2branch_8hh" local="no">branch.hh</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classGecode_1_1Set_1_1Branch_1_1ValCommitExc_1a2b0a1c8f1b854a6ea064a2e6be413c95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Set::Branch::ValCommitExc::ValCommitExc</definition>
        <argsstring>(Space &amp;home, const ValBranch &amp;vb)</argsstring>
        <name>ValCommitExc</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1ValBranch" kindref="compound">ValBranch</ref> &amp;</type>
          <declname>vb</declname>
        </param>
        <briefdescription>
<para>Constructor for initialization. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/branch.hh" line="365" column="1" bodyfile="/usr/include/gecode/set/branch/val-commit.hpp" bodystart="71" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1Branch_1_1ValCommitExc_1a7ff001bf6287398713c13b19b0231e63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Set::Branch::ValCommitExc::ValCommitExc</definition>
        <argsstring>(Space &amp;home, bool shared, ValCommitExc &amp;vc)</argsstring>
        <name>ValCommitExc</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>shared</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Set_1_1Branch_1_1ValCommitExc" kindref="compound">ValCommitExc</ref> &amp;</type>
          <declname>vc</declname>
        </param>
        <briefdescription>
<para>Constructor for cloning. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/branch.hh" line="367" column="1" bodyfile="/usr/include/gecode/set/branch/val-commit.hpp" bodystart="74" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1Branch_1_1ValCommitExc_1a700c6bfbcc8952c4f67bb6616c386783" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Set::Branch::ValCommitExc::commit</definition>
        <argsstring>(Space &amp;home, unsigned int a, SetView x, int i, int n)</argsstring>
        <name>commit</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Set_1_1SetView" kindref="compound">SetView</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Commit view <emphasis>x</emphasis> at position <emphasis>i</emphasis> to value <emphasis>n</emphasis> for alternative <emphasis>a</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/branch.hh" line="369" column="1" bodyfile="/usr/include/gecode/set/branch/val-commit.hpp" bodystart="77" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1Branch_1_1ValCommitExc_1a164453581dcdb27d5d9b744b43f53126" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGecode_1_1NGL" kindref="compound">NGL</ref> *</type>
        <definition>forceinline NGL * Gecode::Set::Branch::ValCommitExc::ngl</definition>
        <argsstring>(Space &amp;home, unsigned int a, View x, int n) const </argsstring>
        <name>ngl</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ValCommit_1ac14c515eb7d66bdcba521e13eb0db0da" kindref="member">View</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Create no-good literal for alternative <emphasis>a</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/branch.hh" line="371" column="1" bodyfile="/usr/include/gecode/set/branch/val-commit.hpp" bodystart="81" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1Branch_1_1ValCommitExc_1a3ed83a04739eb03dbff6ef29de7aec7a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Set::Branch::ValCommitExc::print</definition>
        <argsstring>(const Space &amp;home, unsigned int a, SetView x, int i, int n, std::ostream &amp;o) const </argsstring>
        <name>print</name>
        <param>
          <type>const <ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Set_1_1SetView" kindref="compound">SetView</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>std::ostream &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
<para>Print on <emphasis>o</emphasis> the alternative <emphasis>with</emphasis> view <emphasis>x</emphasis> at position <emphasis>i</emphasis> and value <emphasis>n</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/branch.hh" line="373" column="1" bodyfile="/usr/include/gecode/set/branch/val-commit.hpp" bodystart="88" bodyend="92"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Value commit class for exclusion. </para>    </briefdescription>
    <detaileddescription>
<para>Requires<programlisting><codeline><highlight class="preprocessor">#include<sp/>&lt;gecode/set/branch.hh&gt;</highlight><highlight class="normal"><sp/></highlight></codeline>
</programlisting> </para>    </detaileddescription>
    <inheritancegraph>
      <node id="7401">
        <label>Gecode::Set::Branch::ValCommitExc</label>
        <link refid="classGecode_1_1Set_1_1Branch_1_1ValCommitExc"/>
        <childnode refid="7402" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7402">
        <label>Gecode::ValCommit&lt; SetView, int &gt;</label>
        <link refid="classGecode_1_1ValCommit"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="7403">
        <label>Gecode::Set::Branch::ValCommitExc</label>
        <link refid="classGecode_1_1Set_1_1Branch_1_1ValCommitExc"/>
        <childnode refid="7404" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7404">
        <label>Gecode::ValCommit&lt; SetView, int &gt;</label>
        <link refid="classGecode_1_1ValCommit"/>
      </node>
    </collaborationgraph>
    <location file="/usr/include/gecode/set/branch.hh" line="362" column="1" bodyfile="/usr/include/gecode/set/branch.hh" bodystart="362" bodyend="375"/>
    <listofallmembers>
      <member refid="classGecode_1_1Set_1_1Branch_1_1ValCommitExc_1a700c6bfbcc8952c4f67bb6616c386783" prot="public" virt="non-virtual"><scope>Gecode::Set::Branch::ValCommitExc</scope><name>commit</name></member>
      <member refid="classGecode_1_1ValCommit_1a99b526c56e60c02474ce7400a087d5a5" prot="public" virt="non-virtual"><scope>Gecode::Set::Branch::ValCommitExc</scope><name>dispose</name></member>
      <member refid="classGecode_1_1Set_1_1Branch_1_1ValCommitExc_1a164453581dcdb27d5d9b744b43f53126" prot="public" virt="non-virtual"><scope>Gecode::Set::Branch::ValCommitExc</scope><name>ngl</name></member>
      <member refid="classGecode_1_1ValCommit_1a27594fca7c49155fdd66218963b28cfe" prot="public" virt="non-virtual"><scope>Gecode::Set::Branch::ValCommitExc</scope><name>notice</name></member>
      <member refid="classGecode_1_1Set_1_1Branch_1_1ValCommitExc_1a3ed83a04739eb03dbff6ef29de7aec7a" prot="public" virt="non-virtual"><scope>Gecode::Set::Branch::ValCommitExc</scope><name>print</name></member>
      <member refid="classGecode_1_1ValCommit_1abca8d62ca4173efc87a20f442c11e25e" prot="public" virt="non-virtual"><scope>Gecode::Set::Branch::ValCommitExc</scope><name>Val</name></member>
      <member refid="classGecode_1_1ValCommit_1a920a0cd48c53c6e33ad4458313ae01b6" prot="public" virt="non-virtual"><scope>Gecode::Set::Branch::ValCommitExc</scope><name>ValCommit</name></member>
      <member refid="classGecode_1_1ValCommit_1a7cef4dd276cd789ff71e1ac479e78b2e" prot="public" virt="non-virtual"><scope>Gecode::Set::Branch::ValCommitExc</scope><name>ValCommit</name></member>
      <member refid="classGecode_1_1Set_1_1Branch_1_1ValCommitExc_1a2b0a1c8f1b854a6ea064a2e6be413c95" prot="public" virt="non-virtual"><scope>Gecode::Set::Branch::ValCommitExc</scope><name>ValCommitExc</name></member>
      <member refid="classGecode_1_1Set_1_1Branch_1_1ValCommitExc_1a7ff001bf6287398713c13b19b0231e63" prot="public" virt="non-virtual"><scope>Gecode::Set::Branch::ValCommitExc</scope><name>ValCommitExc</name></member>
      <member refid="classGecode_1_1ValCommit_1ac14c515eb7d66bdcba521e13eb0db0da" prot="public" virt="non-virtual"><scope>Gecode::Set::Branch::ValCommitExc</scope><name>View</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
