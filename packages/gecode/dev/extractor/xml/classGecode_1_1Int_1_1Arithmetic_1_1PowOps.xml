<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classGecode_1_1Int_1_1Arithmetic_1_1PowOps" kind="class" prot="public">
    <compoundname>Gecode::Int::Arithmetic::PowOps</compoundname>
    <includes refid="int_2arithmetic_8hh" local="no">arithmetic.hh</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classGecode_1_1Int_1_1Arithmetic_1_1PowOps_1aaa5aab930b1ee7394a47ae850515be00" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int Gecode::Int::Arithmetic::PowOps::n</definition>
        <argsstring></argsstring>
        <name>n</name>
        <briefdescription>
<para>The exponent and root index. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/arithmetic.hh" line="287" column="1" bodyfile="/usr/include/gecode/int/arithmetic.hh" bodystart="287" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="classGecode_1_1Int_1_1Arithmetic_1_1PowOps_1a1a7f264fcd6b48ec8b1ca808ad5c6445" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::Int::Arithmetic::PowOps::even</definition>
        <argsstring>(int m)</argsstring>
        <name>even</name>
        <param>
          <type>int</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Return whether <emphasis>m</emphasis> is even. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/arithmetic.hh" line="289" column="1" bodyfile="/usr/include/gecode/int/arithmetic/pow-ops.hpp" bodystart="44" bodyend="46"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classGecode_1_1Int_1_1Arithmetic_1_1PowOps_1a10d3dd427ae3806d845f65a74b8f91e7" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::Int::Arithmetic::PowOps::powgr</definition>
        <argsstring>(long long int r, int x) const </argsstring>
        <name>powgr</name>
        <param>
          <type>long long int</type>
          <declname>r</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Test whether <formula id="92">$r^n&gt;x$</formula>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/arithmetic.hh" line="291" column="1" bodyfile="/usr/include/gecode/int/arithmetic/pow-ops.hpp" bodystart="98" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Arithmetic_1_1PowOps_1a4287ba14a9cd271719f33e27dc1316c6" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::Int::Arithmetic::PowOps::powle</definition>
        <argsstring>(long long int r, int x) const </argsstring>
        <name>powle</name>
        <param>
          <type>long long int</type>
          <declname>r</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Test whether <formula id="93">$r^n&lt;x$</formula>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/arithmetic.hh" line="293" column="1" bodyfile="/usr/include/gecode/int/arithmetic/pow-ops.hpp" bodystart="136" bodyend="154"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classGecode_1_1Int_1_1Arithmetic_1_1PowOps_1aae1f4df8963b9915d1db34dc0cede983" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Int::Arithmetic::PowOps::PowOps</definition>
        <argsstring>(int n)</argsstring>
        <name>PowOps</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Initialize with exponent <emphasis>n</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/arithmetic.hh" line="296" column="1" bodyfile="/usr/include/gecode/int/arithmetic/pow-ops.hpp" bodystart="41" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Arithmetic_1_1PowOps_1a19097d03808e6e5c04c865327e8698bf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::Int::Arithmetic::PowOps::even</definition>
        <argsstring>(void) const </argsstring>
        <name>even</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return whether exponent is even. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/arithmetic.hh" line="298" column="1" bodyfile="/usr/include/gecode/int/arithmetic/pow-ops.hpp" bodystart="49" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Arithmetic_1_1PowOps_1a93f6bf0b5e1af3c505613587d1f06882" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Int::Arithmetic::PowOps::exp</definition>
        <argsstring>(void) const </argsstring>
        <name>exp</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return exponent. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/arithmetic.hh" line="300" column="1" bodyfile="/usr/include/gecode/int/arithmetic/pow-ops.hpp" bodystart="54" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Arithmetic_1_1PowOps_1a52f323bd30e8750ddb9c69a2dcd311e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Int::Arithmetic::PowOps::exp</definition>
        <argsstring>(int m)</argsstring>
        <name>exp</name>
        <param>
          <type>int</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para><ref refid="namespaceGecode_1_1Set" kindref="compound">Set</ref> exponent to <emphasis>m</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/arithmetic.hh" line="302" column="1" bodyfile="/usr/include/gecode/int/arithmetic/pow-ops.hpp" bodystart="59" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Arithmetic_1_1PowOps_1ad96a6082ce46544e85d603307ae5486b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class IntType</type>
          </param>
        </templateparamlist>
        <type>IntType</type>
        <definition>IntType Gecode::Int::Arithmetic::PowOps::pow</definition>
        <argsstring>(IntType x) const </argsstring>
        <name>pow</name>
        <param>
          <type>IntType</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Return <formula id="94">$x^n$</formula> where <formula id="90">$n&gt;0$</formula>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/arithmetic.hh" line="305" column="1" bodyfile="/usr/include/gecode/int/arithmetic/pow-ops.hpp" bodystart="65" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Arithmetic_1_1PowOps_1a14c808c4c9cfb84065e0c168ac527747" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Gecode::Int::Arithmetic::PowOps::tpow</definition>
        <argsstring>(int x) const </argsstring>
        <name>tpow</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Return <formula id="94">$x^n$</formula> where <formula id="90">$n&gt;0$</formula> truncated to integer limits. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/arithmetic.hh" line="307" column="1" bodyfile="/usr/include/gecode/int/arithmetic/pow-ops.hpp" bodystart="79" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Arithmetic_1_1PowOps_1abf38c1311fe45f93edc2d42e2e8f737e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Gecode::Int::Arithmetic::PowOps::fnroot</definition>
        <argsstring>(int x) const </argsstring>
        <name>fnroot</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Return <formula id="95">$\lfloor \sqrt[n]{x}\rfloor$</formula> where <emphasis>x</emphasis> must be non-negative and <formula id="90">$n&gt;0$</formula>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/arithmetic.hh" line="309" column="1" bodyfile="/usr/include/gecode/int/arithmetic/pow-ops.hpp" bodystart="119" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Arithmetic_1_1PowOps_1a4569b785e4061e1a79370a9d84fba1a4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Gecode::Int::Arithmetic::PowOps::cnroot</definition>
        <argsstring>(int x) const </argsstring>
        <name>cnroot</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Return <formula id="96">$\lceil \sqrt[n]{x}\rceil$</formula> where <emphasis>x</emphasis> must be non-negative and <formula id="90">$n&gt;0$</formula>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/arithmetic.hh" line="311" column="1" bodyfile="/usr/include/gecode/int/arithmetic/pow-ops.hpp" bodystart="157" bodyend="171"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Operations for power and nroot propagators. </para>    </briefdescription>
    <detaileddescription>
<para>Requires<programlisting><codeline><highlight class="preprocessor">#include<sp/>&lt;gecode/int/arithmetic.hh&gt;</highlight><highlight class="normal"><sp/></highlight></codeline>
</programlisting> </para>    </detaileddescription>
    <location file="/usr/include/gecode/int/arithmetic.hh" line="284" column="1" bodyfile="/usr/include/gecode/int/arithmetic.hh" bodystart="284" bodyend="312"/>
    <listofallmembers>
      <member refid="classGecode_1_1Int_1_1Arithmetic_1_1PowOps_1a4569b785e4061e1a79370a9d84fba1a4" prot="public" virt="non-virtual"><scope>Gecode::Int::Arithmetic::PowOps</scope><name>cnroot</name></member>
      <member refid="classGecode_1_1Int_1_1Arithmetic_1_1PowOps_1a1a7f264fcd6b48ec8b1ca808ad5c6445" prot="protected" virt="non-virtual"><scope>Gecode::Int::Arithmetic::PowOps</scope><name>even</name></member>
      <member refid="classGecode_1_1Int_1_1Arithmetic_1_1PowOps_1a19097d03808e6e5c04c865327e8698bf" prot="public" virt="non-virtual"><scope>Gecode::Int::Arithmetic::PowOps</scope><name>even</name></member>
      <member refid="classGecode_1_1Int_1_1Arithmetic_1_1PowOps_1a93f6bf0b5e1af3c505613587d1f06882" prot="public" virt="non-virtual"><scope>Gecode::Int::Arithmetic::PowOps</scope><name>exp</name></member>
      <member refid="classGecode_1_1Int_1_1Arithmetic_1_1PowOps_1a52f323bd30e8750ddb9c69a2dcd311e7" prot="public" virt="non-virtual"><scope>Gecode::Int::Arithmetic::PowOps</scope><name>exp</name></member>
      <member refid="classGecode_1_1Int_1_1Arithmetic_1_1PowOps_1abf38c1311fe45f93edc2d42e2e8f737e" prot="public" virt="non-virtual"><scope>Gecode::Int::Arithmetic::PowOps</scope><name>fnroot</name></member>
      <member refid="classGecode_1_1Int_1_1Arithmetic_1_1PowOps_1aaa5aab930b1ee7394a47ae850515be00" prot="protected" virt="non-virtual"><scope>Gecode::Int::Arithmetic::PowOps</scope><name>n</name></member>
      <member refid="classGecode_1_1Int_1_1Arithmetic_1_1PowOps_1ad96a6082ce46544e85d603307ae5486b" prot="public" virt="non-virtual"><scope>Gecode::Int::Arithmetic::PowOps</scope><name>pow</name></member>
      <member refid="classGecode_1_1Int_1_1Arithmetic_1_1PowOps_1a10d3dd427ae3806d845f65a74b8f91e7" prot="protected" virt="non-virtual"><scope>Gecode::Int::Arithmetic::PowOps</scope><name>powgr</name></member>
      <member refid="classGecode_1_1Int_1_1Arithmetic_1_1PowOps_1a4287ba14a9cd271719f33e27dc1316c6" prot="protected" virt="non-virtual"><scope>Gecode::Int::Arithmetic::PowOps</scope><name>powle</name></member>
      <member refid="classGecode_1_1Int_1_1Arithmetic_1_1PowOps_1aae1f4df8963b9915d1db34dc0cede983" prot="public" virt="non-virtual"><scope>Gecode::Int::Arithmetic::PowOps</scope><name>PowOps</name></member>
      <member refid="classGecode_1_1Int_1_1Arithmetic_1_1PowOps_1a14c808c4c9cfb84065e0c168ac527747" prot="public" virt="non-virtual"><scope>Gecode::Int::Arithmetic::PowOps</scope><name>tpow</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
