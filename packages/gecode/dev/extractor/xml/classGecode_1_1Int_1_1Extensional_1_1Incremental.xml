<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classGecode_1_1Int_1_1Extensional_1_1Incremental" kind="class" prot="public">
    <compoundname>Gecode::Int::Extensional::Incremental</compoundname>
    <basecompoundref refid="classGecode_1_1Int_1_1Extensional_1_1Base" prot="public" virt="non-virtual">Gecode::Int::Extensional::Base&lt; View, false &gt;</basecompoundref>
    <includes refid="extensional_8hh" local="no">extensional.hh</includes>
    <innerclass refid="classGecode_1_1Int_1_1Extensional_1_1Incremental_1_1SupportAdvisor" prot="private">Gecode::Int::Extensional::Incremental::SupportAdvisor</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1Extensional_1_1Incremental_1_1SupportEntry" prot="protected">Gecode::Int::Extensional::Incremental::SupportEntry</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1Extensional_1_1Incremental_1_1Work" prot="protected">Gecode::Int::Extensional::Incremental::Work</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1Extensional_1_1Incremental_1_1WorkEntry" prot="protected">Gecode::Int::Extensional::Incremental::WorkEntry</innerclass>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>View</declname>
        <defname>View</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classGecode_1_1Int_1_1Extensional_1_1Incremental_1a443c5a657388fbbdda4e05082155147d" prot="protected" static="no" mutable="no">
        <type><ref refid="classGecode_1_1Int_1_1Extensional_1_1Incremental_1_1Work" kindref="compound">Work</ref></type>
        <definition>Work Gecode::Int::Extensional::Incremental&lt; View &gt;::w_support</definition>
        <argsstring></argsstring>
        <name>w_support</name>
        <briefdescription>
<para><ref refid="classGecode_1_1Int_1_1Extensional_1_1Incremental_1_1Work" kindref="compound">Work</ref> for finding support. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/extensional.hh" line="440" column="1" bodyfile="/usr/include/gecode/int/extensional.hh" bodystart="440" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Int_1_1Extensional_1_1Incremental_1a1031bf2e9793700eece72b4ded84c6eb" prot="protected" static="no" mutable="no">
        <type><ref refid="classGecode_1_1Int_1_1Extensional_1_1Incremental_1_1Work" kindref="compound">Work</ref></type>
        <definition>Work Gecode::Int::Extensional::Incremental&lt; View &gt;::w_remove</definition>
        <argsstring></argsstring>
        <name>w_remove</name>
        <briefdescription>
<para><ref refid="classGecode_1_1Int_1_1Extensional_1_1Incremental_1_1Work" kindref="compound">Work</ref> for removing values. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/extensional.hh" line="442" column="1" bodyfile="/usr/include/gecode/int/extensional.hh" bodystart="442" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Int_1_1Extensional_1_1Incremental_1a3076f12f040f6d6c4dd32d3aa112781b" prot="protected" static="no" mutable="no">
        <type><ref refid="classGecode_1_1Int_1_1Extensional_1_1Incremental_1_1SupportEntry" kindref="compound">SupportEntry</ref> **</type>
        <definition>SupportEntry** Gecode::Int::Extensional::Incremental&lt; View &gt;::support_data</definition>
        <argsstring></argsstring>
        <name>support_data</name>
        <briefdescription>
<para>Support information. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/extensional.hh" line="445" column="1" bodyfile="/usr/include/gecode/int/extensional.hh" bodystart="445" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Int_1_1Extensional_1_1Incremental_1add8ead0b0a7567246fb1c5c364516bdd" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int Gecode::Int::Extensional::Incremental&lt; View &gt;::unassigned</definition>
        <argsstring></argsstring>
        <name>unassigned</name>
        <briefdescription>
<para>Number of unassigned views. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/extensional.hh" line="447" column="1" bodyfile="/usr/include/gecode/int/extensional.hh" bodystart="447" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classGecode_1_1Int_1_1Extensional_1_1Incremental_1aa13f4fbbed14fd4f223d45b42144680d" prot="private" static="no" mutable="no">
        <type><ref refid="classGecode_1_1Council" kindref="compound">Council</ref>&lt; SupportAdvisor &gt;</type>
        <definition>Council&lt;SupportAdvisor&gt; Gecode::Int::Extensional::Incremental&lt; View &gt;::ac</definition>
        <argsstring></argsstring>
        <name>ac</name>
        <briefdescription>
<para>The advisor council. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/extensional.hh" line="494" column="1" bodyfile="/usr/include/gecode/int/extensional.hh" bodystart="494" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classGecode_1_1Int_1_1Extensional_1_1Incremental_1a64efe6cb0d0ec80b61526b81c19eae15" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Int::Extensional::Incremental&lt; View &gt;::Incremental</definition>
        <argsstring>(Space &amp;home, bool share, Incremental&lt; View &gt; &amp;p)</argsstring>
        <name>Incremental</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>share</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1Extensional_1_1Incremental" kindref="compound">Incremental</ref>&lt; View &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Constructor for cloning <emphasis>p</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/extensional.hh" line="450" column="1" bodyfile="/usr/include/gecode/int/extensional/incremental.hpp" bodystart="319" bodyend="339"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Extensional_1_1Incremental_1a3d83bcf08f0acaabf52ab21e3e6a3135" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Int::Extensional::Incremental&lt; View &gt;::Incremental</definition>
        <argsstring>(Home home, ViewArray&lt; View &gt; &amp;x, const TupleSet &amp;t)</argsstring>
        <name>Incremental</name>
        <param>
          <type><ref refid="classGecode_1_1Home" kindref="compound">Home</ref></type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; View &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1TupleSet" kindref="compound">TupleSet</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Constructor for posting. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/extensional.hh" line="452" column="1" bodyfile="/usr/include/gecode/int/extensional/incremental.hpp" bodystart="276" bodyend="303"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Extensional_1_1Incremental_1a4fad12ad02a0cb1e1dcf31f4297567c4" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Int::Extensional::Incremental&lt; View &gt;::init_support</definition>
        <argsstring>(Space &amp;home)</argsstring>
        <name>init_support</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <briefdescription>
<para>Initialize support. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/extensional.hh" line="454" column="1" bodyfile="/usr/include/gecode/int/extensional/incremental.hpp" bodystart="209" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Extensional_1_1Incremental_1a383768566d50717420c06d0910da7ec5" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Int::Extensional::Incremental&lt; View &gt;::find_support</definition>
        <argsstring>(Space &amp;home, Domain dom, int i, int n)</argsstring>
        <name>find_support</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Support_1_1BitSetBase" kindref="compound">Domain</ref></type>
          <declname>dom</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Find a next support for view at position <emphasis>i</emphasis> and value <emphasis>n</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/extensional.hh" line="456" column="1" bodyfile="/usr/include/gecode/int/extensional/incremental.hpp" bodystart="228" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Extensional_1_1Incremental_1a3e0b56bcec511c32dbe207cf61070ce7" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Int::Extensional::Incremental&lt; View &gt;::add_support</definition>
        <argsstring>(Space &amp;home, Tuple l)</argsstring>
        <name>add_support</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>Tuple</type>
          <declname>l</declname>
        </param>
        <briefdescription>
<para>Add support. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/extensional.hh" line="458" column="1" bodyfile="/usr/include/gecode/int/extensional/incremental.hpp" bodystart="219" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Extensional_1_1Incremental_1a090c4c19f40b54bc308197ff7c95f329" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Int::Extensional::Incremental&lt; View &gt;::remove_support</definition>
        <argsstring>(Space &amp;home, Tuple l, int i, int n)</argsstring>
        <name>remove_support</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>Tuple</type>
          <declname>l</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Remove support for view at position <emphasis>i</emphasis> and value <emphasis>n</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/extensional.hh" line="460" column="1" bodyfile="/usr/include/gecode/int/extensional/incremental.hpp" bodystart="244" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Extensional_1_1Incremental_1aeeb8423b5d27fe84391765858f5887dd" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGecode_1_1Int_1_1Extensional_1_1Incremental_1_1SupportEntry" kindref="compound">SupportEntry</ref> *</type>
        <definition>forceinline Incremental&lt; View &gt;::SupportEntry * Gecode::Int::Extensional::Incremental&lt; View &gt;::support</definition>
        <argsstring>(int i, int n)</argsstring>
        <name>support</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Creat support entry for view at position <emphasis>i</emphasis> and value <emphasis>n</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/extensional.hh" line="462" column="1" bodyfile="/usr/include/gecode/int/extensional/incremental.hpp" bodystart="203" bodyend="205"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classGecode_1_1Int_1_1Extensional_1_1Incremental_1a43a5e270dbcbc267bc8db609e3ba88eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>ExecStatus Gecode::Int::Extensional::Incremental&lt; View &gt;::propagate</definition>
        <argsstring>(Space &amp;home, const ModEventDelta &amp;med)</argsstring>
        <name>propagate</name>
        <reimplements refid="classGecode_1_1Propagator_1ad2dc98c1345222892592339948c6cde1">propagate</reimplements>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceGecode_1a129e41c1d037528010d7b6706495a560" kindref="member">ModEventDelta</ref> &amp;</type>
          <declname>med</declname>
        </param>
        <briefdescription>
<para>Perform propagation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/extensional.hh" line="465" column="1" bodyfile="/usr/include/gecode/int/extensional/incremental.hpp" bodystart="377" bodyend="409"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Extensional_1_1Incremental_1ae8dfb674d356c77e9ead87c025549917" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classGecode_1_1PropCost" kindref="compound">PropCost</ref></type>
        <definition>PropCost Gecode::Int::Extensional::Incremental&lt; View &gt;::cost</definition>
        <argsstring>(const Space &amp;home, const ModEventDelta &amp;med) const </argsstring>
        <name>cost</name>
        <reimplements refid="classGecode_1_1Int_1_1Extensional_1_1Base_1a2b516241a1082fc08fb4e75933e41a50">cost</reimplements>
        <param>
          <type>const <ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceGecode_1a129e41c1d037528010d7b6706495a560" kindref="member">ModEventDelta</ref> &amp;</type>
          <declname>med</declname>
        </param>
        <briefdescription>
<para>Cost function. </para>        </briefdescription>
        <detaileddescription>
<para>If in stage for naive value propagation, the cost is high quadratic. Otherwise it is high cubic. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/extensional.hh" line="472" column="1" bodyfile="/usr/include/gecode/int/extensional/incremental.hpp" bodystart="343" bodyend="348"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Extensional_1_1Incremental_1ab2c5ff3dd290340115bcb7884cabf409" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classGecode_1_1Actor" kindref="compound">Actor</ref> *</type>
        <definition>Actor * Gecode::Int::Extensional::Incremental&lt; View &gt;::copy</definition>
        <argsstring>(Space &amp;home, bool share)</argsstring>
        <name>copy</name>
        <reimplements refid="classGecode_1_1Actor_1a67b240e2810720846c3632c94cc9c99d">copy</reimplements>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>share</declname>
        </param>
        <briefdescription>
<para>Copy propagator during cloning. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/extensional.hh" line="474" column="1" bodyfile="/usr/include/gecode/int/extensional/incremental.hpp" bodystart="352" bodyend="354"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Extensional_1_1Incremental_1a587abf35813e9829f9ab2b1f5b24c30c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>size_t</type>
        <definition>forceinline size_t Gecode::Int::Extensional::Incremental&lt; View &gt;::dispose</definition>
        <argsstring>(Space &amp;home)</argsstring>
        <name>dispose</name>
        <reimplements refid="classGecode_1_1Int_1_1Extensional_1_1Base_1a776d9a59a0594b1a5d9dbd5f985464ad">dispose</reimplements>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <briefdescription>
<para>Delete propagator and return its size. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/extensional.hh" line="478" column="1" bodyfile="/usr/include/gecode/int/extensional/incremental.hpp" bodystart="358" bodyend="373"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Extensional_1_1Incremental_1a518ee7b33a3423e2b4c7c5c55a8886ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>ExecStatus Gecode::Int::Extensional::Incremental&lt; View &gt;::advise</definition>
        <argsstring>(Space &amp;home, Advisor &amp;a, const Delta &amp;d)</argsstring>
        <name>advise</name>
        <reimplements refid="classGecode_1_1Propagator_1a55629f061a0fd8ecb2a4c41aa1568e28">advise</reimplements>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Advisor" kindref="compound">Advisor</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1Delta" kindref="compound">Delta</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Give advice to propagator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/extensional.hh" line="497" column="1" bodyfile="/usr/include/gecode/int/extensional/incremental.hpp" bodystart="414" bodyend="449"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classGecode_1_1Int_1_1Extensional_1_1Incremental_1a7dee12c0eccf11850814404e9da885a3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>forceinline ExecStatus Gecode::Int::Extensional::Incremental&lt; View &gt;::post</definition>
        <argsstring>(Home home, ViewArray&lt; View &gt; &amp;x, const TupleSet &amp;t)</argsstring>
        <name>post</name>
        <param>
          <type><ref refid="classGecode_1_1Home" kindref="compound">Home</ref></type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; View &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1TupleSet" kindref="compound">TupleSet</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Post propagator for views <emphasis>x</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/extensional.hh" line="476" column="1" bodyfile="/usr/include/gecode/int/extensional/incremental.hpp" bodystart="307" bodyend="315"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Domain consistent extensional propagator. </para>    </briefdescription>
    <detaileddescription>
<para>This propagator implements an incremental propagation algorithm where supports are maintained explicitly.</para><para>Requires<programlisting><codeline><highlight class="preprocessor">#include<sp/>&lt;gecode/int/extensional.hh&gt;</highlight><highlight class="normal"><sp/></highlight></codeline>
</programlisting> </para>    </detaileddescription>
    <inheritancegraph>
      <node id="2776">
        <label>Gecode::Int::Extensional::Incremental&lt; View &gt;</label>
        <link refid="classGecode_1_1Int_1_1Extensional_1_1Incremental"/>
        <childnode refid="2777" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2777">
        <label>Gecode::Int::Extensional::Base&lt; View, false &gt;</label>
        <link refid="classGecode_1_1Int_1_1Extensional_1_1Base"/>
        <childnode refid="2778" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2778">
        <label>Gecode::Propagator</label>
        <link refid="classGecode_1_1Propagator"/>
        <childnode refid="2779" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2779">
        <label>Gecode::Actor</label>
        <link refid="classGecode_1_1Actor"/>
        <childnode refid="2780" relation="private-inheritance">
        </childnode>
      </node>
      <node id="2780">
        <label>Gecode::ActorLink</label>
        <link refid="classGecode_1_1ActorLink"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2781">
        <label>Gecode::Int::Extensional::Incremental&lt; View &gt;</label>
        <link refid="classGecode_1_1Int_1_1Extensional_1_1Incremental"/>
        <childnode refid="2782" relation="public-inheritance">
        </childnode>
        <childnode refid="2788" relation="usage">
          <edgelabel>support_data</edgelabel>
        </childnode>
        <childnode refid="2790" relation="usage">
          <edgelabel>w_support</edgelabel>
          <edgelabel>w_remove</edgelabel>
        </childnode>
      </node>
      <node id="2790">
        <label>Gecode::Int::Extensional::Incremental&lt; View &gt;::Work</label>
        <link refid="classGecode_1_1Int_1_1Extensional_1_1Incremental_1_1Work"/>
      </node>
      <node id="2787">
        <label>Gecode::SharedHandle</label>
        <link refid="classGecode_1_1SharedHandle"/>
      </node>
      <node id="2786">
        <label>Gecode::TupleSet</label>
        <link refid="classGecode_1_1TupleSet"/>
        <childnode refid="2787" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2782">
        <label>Gecode::Int::Extensional::Base&lt; View, false &gt;</label>
        <link refid="classGecode_1_1Int_1_1Extensional_1_1Base"/>
        <childnode refid="2783" relation="public-inheritance">
        </childnode>
        <childnode refid="2786" relation="usage">
          <edgelabel>tupleSet</edgelabel>
        </childnode>
      </node>
      <node id="2783">
        <label>Gecode::Propagator</label>
        <link refid="classGecode_1_1Propagator"/>
        <childnode refid="2784" relation="public-inheritance">
        </childnode>
        <childnode refid="2785" relation="usage">
          <edgelabel>advisors</edgelabel>
        </childnode>
      </node>
      <node id="2788">
        <label>Gecode::Int::Extensional::Incremental&lt; View &gt;::SupportEntry</label>
        <link refid="classGecode_1_1Int_1_1Extensional_1_1Incremental_1_1SupportEntry"/>
        <childnode refid="2789" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2784">
        <label>Gecode::Actor</label>
        <link refid="classGecode_1_1Actor"/>
        <childnode refid="2785" relation="private-inheritance">
        </childnode>
      </node>
      <node id="2785">
        <label>Gecode::ActorLink</label>
        <link refid="classGecode_1_1ActorLink"/>
      </node>
      <node id="2789">
        <label>Gecode::FreeList</label>
        <link refid="classGecode_1_1FreeList"/>
        <childnode refid="2789" relation="usage">
          <edgelabel>_next</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/usr/include/gecode/int/extensional.hh" line="343" column="1" bodyfile="/usr/include/gecode/int/extensional.hh" bodystart="343" bodyend="498"/>
    <listofallmembers>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1Incremental_1aa13f4fbbed14fd4f223d45b42144680d" prot="private" virt="non-virtual"><scope>Gecode::Int::Extensional::Incremental</scope><name>ac</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1Incremental_1a3e0b56bcec511c32dbe207cf61070ce7" prot="protected" virt="non-virtual"><scope>Gecode::Int::Extensional::Incremental</scope><name>add_support</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1Incremental_1a518ee7b33a3423e2b4c7c5c55a8886ff" prot="public" virt="virtual"><scope>Gecode::Int::Extensional::Incremental</scope><name>advise</name></member>
      <member refid="classGecode_1_1Propagator_1afee33d8aed2bc9debee126f17b5015cf" prot="public" virt="non-virtual"><scope>Gecode::Int::Extensional::Incremental</scope><name>advisors</name></member>
      <member refid="classGecode_1_1Propagator_1a593de773d2204f47ea365a99df2f75d0" prot="public" virt="non-virtual"><scope>Gecode::Int::Extensional::Incremental</scope><name>afc</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1Base_1a393c6e6d272599e0655a75da69d69802" prot="protected" virt="non-virtual"><scope>Gecode::Int::Extensional::Incremental</scope><name>Base</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1Base_1ad16b2004dc17d050f0b5015e324210b5" prot="protected" virt="non-virtual"><scope>Gecode::Int::Extensional::Incremental</scope><name>Base</name></member>
      <member refid="classGecode_1_1ActorLink_1a8427f41a27a72b52ceb52d0fdad21063" prot="public" virt="non-virtual" ambiguityscope="Gecode::ActorLink::"><scope>Gecode::Int::Extensional::Incremental</scope><name>cast</name></member>
      <member refid="classGecode_1_1ActorLink_1a464526456db41981f82a1193a8b4e569" prot="public" virt="non-virtual" ambiguityscope="Gecode::ActorLink::"><scope>Gecode::Int::Extensional::Incremental</scope><name>cast</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1Incremental_1ab2c5ff3dd290340115bcb7884cabf409" prot="public" virt="virtual"><scope>Gecode::Int::Extensional::Incremental</scope><name>copy</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1Incremental_1ae8dfb674d356c77e9ead87c025549917" prot="public" virt="virtual"><scope>Gecode::Int::Extensional::Incremental</scope><name>cost</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1Incremental_1a587abf35813e9829f9ab2b1f5b24c30c" prot="public" virt="virtual"><scope>Gecode::Int::Extensional::Incremental</scope><name>dispose</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1Incremental_1a383768566d50717420c06d0910da7ec5" prot="protected" virt="non-virtual"><scope>Gecode::Int::Extensional::Incremental</scope><name>find_support</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1Base_1a10593312be6b1492cf57331dfa888b63" prot="protected" virt="non-virtual" ambiguityscope="Base&lt; View, false &gt;::"><scope>Gecode::Int::Extensional::Incremental</scope><name>find_support</name></member>
      <member refid="classGecode_1_1Propagator_1a3b286c7aec9843b60a531b495015b5f7" prot="protected" virt="non-virtual"><scope>Gecode::Int::Extensional::Incremental</scope><name>fwd</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1Incremental_1a64efe6cb0d0ec80b61526b81c19eae15" prot="protected" virt="non-virtual"><scope>Gecode::Int::Extensional::Incremental</scope><name>Incremental</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1Incremental_1a3d83bcf08f0acaabf52ab21e3e6a3135" prot="protected" virt="non-virtual"><scope>Gecode::Int::Extensional::Incremental</scope><name>Incremental</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1Base_1ac404e77cc7b925b9a1040515d6df63db" prot="protected" virt="non-virtual"><scope>Gecode::Int::Extensional::Incremental</scope><name>init_dom</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1Base_1aacf08d8a2f61b62b42aba16309ce655c" prot="protected" virt="non-virtual"><scope>Gecode::Int::Extensional::Incremental</scope><name>init_last</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1Incremental_1a4fad12ad02a0cb1e1dcf31f4297567c4" prot="protected" virt="non-virtual"><scope>Gecode::Int::Extensional::Incremental</scope><name>init_support</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1Base_1a8c93b7e10bd12db690645b3c067ca57d" prot="protected" virt="non-virtual"><scope>Gecode::Int::Extensional::Incremental</scope><name>last</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1Base_1a9e444c2e0f26a9d1f932a1df5dd2d864" prot="protected" virt="non-virtual"><scope>Gecode::Int::Extensional::Incremental</scope><name>last_data</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1Base_1a2458d2b428a19f00c599b9f437ab68f8" prot="protected" virt="non-virtual"><scope>Gecode::Int::Extensional::Incremental</scope><name>last_next</name></member>
      <member refid="classGecode_1_1Propagator_1ae9dfa55e47e4ff8e0c8e4c2a6efdbfc0" prot="public" virt="non-virtual"><scope>Gecode::Int::Extensional::Incremental</scope><name>med</name></member>
      <member refid="classGecode_1_1Propagator_1a4905db55af49af8f38558bdbcf5fd4a2" prot="public" virt="non-virtual"><scope>Gecode::Int::Extensional::Incremental</scope><name>modeventdelta</name></member>
      <member refid="classGecode_1_1Actor_1a388f671145dcf906f81d22bde2dc0f3d" prot="public" virt="non-virtual"><scope>Gecode::Int::Extensional::Incremental</scope><name>operator delete</name></member>
      <member refid="classGecode_1_1Actor_1ac28b9601b530076a1bda75834487f898" prot="public" virt="non-virtual"><scope>Gecode::Int::Extensional::Incremental</scope><name>operator new</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1Incremental_1a7dee12c0eccf11850814404e9da885a3" prot="public" virt="non-virtual"><scope>Gecode::Int::Extensional::Incremental</scope><name>post</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1Incremental_1a43a5e270dbcbc267bc8db609e3ba88eb" prot="public" virt="virtual"><scope>Gecode::Int::Extensional::Incremental</scope><name>propagate</name></member>
      <member refid="classGecode_1_1Propagator_1a891f3e84cde2e8e60f8ad9340ad74b05" prot="protected" virt="non-virtual"><scope>Gecode::Int::Extensional::Incremental</scope><name>Propagator</name></member>
      <member refid="classGecode_1_1Propagator_1afeaeed8dae67de4313858bd82fdae5d0" prot="protected" virt="non-virtual"><scope>Gecode::Int::Extensional::Incremental</scope><name>Propagator</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1Incremental_1a090c4c19f40b54bc308197ff7c95f329" prot="protected" virt="non-virtual"><scope>Gecode::Int::Extensional::Incremental</scope><name>remove_support</name></member>
      <member refid="classGecode_1_1Propagator_1a1781b5b0df38c39dddca4b44c3a00530" prot="public" virt="non-virtual"><scope>Gecode::Int::Extensional::Incremental</scope><name>size</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1Incremental_1aeeb8423b5d27fe84391765858f5887dd" prot="protected" virt="non-virtual"><scope>Gecode::Int::Extensional::Incremental</scope><name>support</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1Incremental_1a3076f12f040f6d6c4dd32d3aa112781b" prot="protected" virt="non-virtual"><scope>Gecode::Int::Extensional::Incremental</scope><name>support_data</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1Base_1a884b18b778f4e07097d2b32f77b7ae84" prot="protected" virt="non-virtual"><scope>Gecode::Int::Extensional::Incremental</scope><name>ts</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1Base_1a1f848bb638fc625c1cea97a24349d586" prot="protected" virt="non-virtual"><scope>Gecode::Int::Extensional::Incremental</scope><name>tupleSet</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1Incremental_1add8ead0b0a7567246fb1c5c364516bdd" prot="protected" virt="non-virtual"><scope>Gecode::Int::Extensional::Incremental</scope><name>unassigned</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1Base_1a03a802508ea0138e0a5658d34a7dff0f" prot="protected" virt="non-virtual"><scope>Gecode::Int::Extensional::Incremental</scope><name>valid</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1Incremental_1a1031bf2e9793700eece72b4ded84c6eb" prot="protected" virt="non-virtual"><scope>Gecode::Int::Extensional::Incremental</scope><name>w_remove</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1Incremental_1a443c5a657388fbbdda4e05082155147d" prot="protected" virt="non-virtual"><scope>Gecode::Int::Extensional::Incremental</scope><name>w_support</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1Base_1a70a61f3ac2699efa6e497e8125e51889" prot="protected" virt="non-virtual"><scope>Gecode::Int::Extensional::Incremental</scope><name>x</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1Base_1ad3f827c2ae5f6d18f2f5201441cb0682" prot="protected" virt="virtual"><scope>Gecode::Int::Extensional::Incremental</scope><name>~Base</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
