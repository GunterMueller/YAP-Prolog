<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="namespaceGecode_1_1Int_1_1Count" kind="namespace">
    <compoundname>Gecode::Int::Count</compoundname>
    <innerclass refid="classGecode_1_1Int_1_1Count_1_1IntBase" prot="public">Gecode::Int::Count::IntBase</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1Count_1_1EqInt" prot="public">Gecode::Int::Count::EqInt</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1Count_1_1GqInt" prot="public">Gecode::Int::Count::GqInt</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1Count_1_1LqInt" prot="public">Gecode::Int::Count::LqInt</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1Count_1_1ViewBase" prot="public">Gecode::Int::Count::ViewBase</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1Count_1_1EqView" prot="public">Gecode::Int::Count::EqView</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1Count_1_1LqView" prot="public">Gecode::Int::Count::LqView</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1Count_1_1GqView" prot="public">Gecode::Int::Count::GqView</innerclass>
      <sectiondef kind="user-defined">
      <memberdef kind="enum" id="namespaceGecode_1_1Int_1_1Count_1a700af8c99b27ddd13721a32dfb3be45f" prot="public" static="no">
        <name>ViewTypeDesc</name>
        <enumvalue id="namespaceGecode_1_1Int_1_1Count_1a700af8c99b27ddd13721a32dfb3be45fa8f64a42ab69d275eb9c103edefcd836b" prot="public">
          <name>VTD_CONSTVIEW</name>
          <briefdescription>
<para>Constant view. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceGecode_1_1Int_1_1Count_1a700af8c99b27ddd13721a32dfb3be45faf6d7d10736ebdd128d0f319e18f3be2f" prot="public">
          <name>VTD_INTSET</name>
          <briefdescription>
<para>Integer set. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceGecode_1_1Int_1_1Count_1a700af8c99b27ddd13721a32dfb3be45fad773bf11ea3c55b158d88d39dad4eabc" prot="public">
          <name>VTD_VARVIEW</name>
          <briefdescription>
<para>Variable view. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Description of view type. </para>        </briefdescription>
        <detaileddescription>
<para>Relations for domain consistent counting </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/count.hh" line="58" column="1" bodyfile="/usr/include/gecode/int/count.hh" bodystart="58" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Count_1af5ca1dc5ad19ed6c57d8c608010926fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class VY</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespaceGecode_1_1Int_1_1Count_1a700af8c99b27ddd13721a32dfb3be45f" kindref="member">ViewTypeDesc</ref></type>
        <definition>ViewTypeDesc Gecode::Int::Count::vtd</definition>
        <argsstring>(VY y)</argsstring>
        <name>vtd</name>
        <param>
          <type>VY</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Return the view type description of <emphasis>y</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/count.hh" line="65" column="1" bodyfile="/usr/include/gecode/int/count/rel.hpp" bodystart="49" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Count_1aa4d592e37d05aad26e92d79ad846819a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class VY</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Gecode::Int::Count::subscribe</definition>
        <argsstring>(Space &amp;home, Propagator &amp;p, VY y)</argsstring>
        <name>subscribe</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Propagator" kindref="compound">Propagator</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>VY</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Subscribe propagator <emphasis>p</emphasis> to view <emphasis>y</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/count.hh" line="69" column="1" bodyfile="/usr/include/gecode/int/count/rel.hpp" bodystart="79" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Count_1a07084c09dac7576c54f3b63aea23c0fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class VY</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Gecode::Int::Count::cancel</definition>
        <argsstring>(Space &amp;home, Propagator &amp;p, VY y)</argsstring>
        <name>cancel</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Propagator" kindref="compound">Propagator</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>VY</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Cancel propagator <emphasis>p</emphasis> for view <emphasis>y</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/count.hh" line="72" column="1" bodyfile="/usr/include/gecode/int/count/rel.hpp" bodystart="90" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Count_1afe8f0c8fafc7debac4c3419797307edd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class VX</type>
          </param>
        </templateparamlist>
        <type><ref refid="group__TaskActorIntTest_1gadbb359c782e2957e831fc208fcc7ad39" kindref="member">RelTest</ref></type>
        <definition>RelTest Gecode::Int::Count::holds</definition>
        <argsstring>(VX x, VX y)</argsstring>
        <name>holds</name>
        <param>
          <type>VX</type>
          <declname>x</declname>
        </param>
        <param>
          <type>VX</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Test whether <emphasis>x</emphasis> and <emphasis>y</emphasis> are equal. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/count.hh" line="76" column="1" bodyfile="/usr/include/gecode/int/count/rel.hpp" bodystart="126" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Count_1a4715ed3f85119242d830f5b2e95d3844" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class VX</type>
          </param>
        </templateparamlist>
        <type><ref refid="group__TaskActorIntTest_1gadbb359c782e2957e831fc208fcc7ad39" kindref="member">RelTest</ref></type>
        <definition>RelTest Gecode::Int::Count::holds</definition>
        <argsstring>(VX x, ConstIntView y)</argsstring>
        <name>holds</name>
        <param>
          <type>VX</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1ConstIntView" kindref="compound">ConstIntView</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Test whether <emphasis>x</emphasis> and <emphasis>y</emphasis> are equal. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/count.hh" line="79" column="1" bodyfile="/usr/include/gecode/int/count/rel.hpp" bodystart="96" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Count_1a78f82439740d65bdeb1d0694bf89d505" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class VX</type>
          </param>
        </templateparamlist>
        <type><ref refid="group__TaskActorIntTest_1gadbb359c782e2957e831fc208fcc7ad39" kindref="member">RelTest</ref></type>
        <definition>RelTest Gecode::Int::Count::holds</definition>
        <argsstring>(VX x, ZeroIntView y)</argsstring>
        <name>holds</name>
        <param>
          <type>VX</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1ZeroIntView" kindref="compound">ZeroIntView</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Test whether <emphasis>x</emphasis> and <emphasis>y</emphasis> are equal. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/count.hh" line="82" column="1" bodyfile="/usr/include/gecode/int/count/rel.hpp" bodystart="101" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Count_1aa304ab1b885f1466c33c2f81040a526c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class VX</type>
          </param>
        </templateparamlist>
        <type><ref refid="group__TaskActorIntTest_1gadbb359c782e2957e831fc208fcc7ad39" kindref="member">RelTest</ref></type>
        <definition>RelTest Gecode::Int::Count::holds</definition>
        <argsstring>(VX x, const IntSet &amp;y)</argsstring>
        <name>holds</name>
        <param>
          <type>VX</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1IntSet" kindref="compound">IntSet</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Test whether <emphasis>x</emphasis> and <emphasis>y</emphasis> are equal. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/count.hh" line="85" column="1" bodyfile="/usr/include/gecode/int/count/rel.hpp" bodystart="106" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Count_1a8f8a237d42b8dee2e59faa1a103dad87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class VX</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>ExecStatus Gecode::Int::Count::post_true</definition>
        <argsstring>(Home home, ViewArray&lt; VX &gt; &amp;x, VX y)</argsstring>
        <name>post_true</name>
        <param>
          <type><ref refid="classGecode_1_1Home" kindref="compound">Home</ref></type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; VX &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>VX</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Post that all views in <emphasis>x</emphasis> are equal to <emphasis>y</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/count.hh" line="89" column="1" bodyfile="/usr/include/gecode/int/count/rel.hpp" bodystart="218" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Count_1a84efed786f9d796e6132674e240b7034" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class VX</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>ExecStatus Gecode::Int::Count::post_true</definition>
        <argsstring>(Home home, ViewArray&lt; VX &gt; &amp;x, ConstIntView y)</argsstring>
        <name>post_true</name>
        <param>
          <type><ref refid="classGecode_1_1Home" kindref="compound">Home</ref></type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; VX &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1ConstIntView" kindref="compound">ConstIntView</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Post that all views in <emphasis>x</emphasis> are equal to <emphasis>y</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/count.hh" line="92" column="1" bodyfile="/usr/include/gecode/int/count/rel.hpp" bodystart="151" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Count_1a19baeb08ab3c37cc2500536ea5c8e41d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class VX</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>ExecStatus Gecode::Int::Count::post_true</definition>
        <argsstring>(Home home, ViewArray&lt; VX &gt; &amp;x, ZeroIntView y)</argsstring>
        <name>post_true</name>
        <param>
          <type><ref refid="classGecode_1_1Home" kindref="compound">Home</ref></type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; VX &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1ZeroIntView" kindref="compound">ZeroIntView</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Post that all views in <emphasis>x</emphasis> are equal to <emphasis>y</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/count.hh" line="95" column="1" bodyfile="/usr/include/gecode/int/count/rel.hpp" bodystart="158" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Count_1ac8686662cd3dae39552f07221e5b3833" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class VX</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>ExecStatus Gecode::Int::Count::post_true</definition>
        <argsstring>(Home home, ViewArray&lt; VX &gt; &amp;x, const IntSet &amp;y)</argsstring>
        <name>post_true</name>
        <param>
          <type><ref refid="classGecode_1_1Home" kindref="compound">Home</ref></type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; VX &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1IntSet" kindref="compound">IntSet</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Post that all views in <emphasis>x</emphasis> are equal to <emphasis>y</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/count.hh" line="98" column="1" bodyfile="/usr/include/gecode/int/count/rel.hpp" bodystart="165" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Count_1a7ee28d218821bc5170da1d7823bb24e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class VX</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>ExecStatus Gecode::Int::Count::post_false</definition>
        <argsstring>(Home home, ViewArray&lt; VX &gt; &amp;x, VX y)</argsstring>
        <name>post_false</name>
        <param>
          <type><ref refid="classGecode_1_1Home" kindref="compound">Home</ref></type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; VX &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>VX</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Post that all views in <emphasis>x</emphasis> are not equal to <emphasis>y</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/count.hh" line="102" column="1" bodyfile="/usr/include/gecode/int/count/rel.hpp" bodystart="232" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Count_1aa182e0fd70189188779ecc76bc7ca895" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class VX</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>ExecStatus Gecode::Int::Count::post_false</definition>
        <argsstring>(Home home, ViewArray&lt; VX &gt; &amp;x, ConstIntView y)</argsstring>
        <name>post_false</name>
        <param>
          <type><ref refid="classGecode_1_1Home" kindref="compound">Home</ref></type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; VX &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1ConstIntView" kindref="compound">ConstIntView</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Post that all views in <emphasis>x</emphasis> are not equal to <emphasis>y</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/count.hh" line="105" column="1" bodyfile="/usr/include/gecode/int/count/rel.hpp" bodystart="194" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Count_1af205aaebf500b7fab513abaf6d8e8e34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class VX</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>ExecStatus Gecode::Int::Count::post_false</definition>
        <argsstring>(Home home, ViewArray&lt; VX &gt; &amp;x, ZeroIntView y)</argsstring>
        <name>post_false</name>
        <param>
          <type><ref refid="classGecode_1_1Home" kindref="compound">Home</ref></type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; VX &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1ZeroIntView" kindref="compound">ZeroIntView</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Post that all views in <emphasis>x</emphasis> are not equal to <emphasis>y</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/count.hh" line="108" column="1" bodyfile="/usr/include/gecode/int/count/rel.hpp" bodystart="201" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Count_1acf90e847079e77e0e8dd9b660811e700" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class VX</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>ExecStatus Gecode::Int::Count::post_false</definition>
        <argsstring>(Home home, ViewArray&lt; VX &gt; &amp;x, const IntSet &amp;y)</argsstring>
        <name>post_false</name>
        <param>
          <type><ref refid="classGecode_1_1Home" kindref="compound">Home</ref></type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; VX &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1IntSet" kindref="compound">IntSet</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Post that all views in <emphasis>x</emphasis> are not equal to <emphasis>y</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/count.hh" line="111" column="1" bodyfile="/usr/include/gecode/int/count/rel.hpp" bodystart="208" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Count_1a54b30a647110e4eabcb003e64f2e54ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class VX</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>ExecStatus Gecode::Int::Count::prune</definition>
        <argsstring>(Home home, ViewArray&lt; VX &gt; &amp;x, VX y)</argsstring>
        <name>prune</name>
        <param>
          <type><ref refid="classGecode_1_1Home" kindref="compound">Home</ref></type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; VX &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>VX</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Prune that <emphasis>y</emphasis> is the union of <emphasis>x</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/count.hh" line="115" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Count_1ab67ca01c1d534e6cc5d92878c0a54da8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class VX</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>ExecStatus Gecode::Int::Count::prune</definition>
        <argsstring>(Home home, ViewArray&lt; VX &gt; &amp;x, ConstIntView y)</argsstring>
        <name>prune</name>
        <param>
          <type><ref refid="classGecode_1_1Home" kindref="compound">Home</ref></type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; VX &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1ConstIntView" kindref="compound">ConstIntView</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Prune that <emphasis>y</emphasis> is the union of <emphasis>x</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/count.hh" line="118" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Count_1a0518100de1950c42f7649f2a8bd48f2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class VX</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>ExecStatus Gecode::Int::Count::prune</definition>
        <argsstring>(Home home, ViewArray&lt; VX &gt; &amp;x, ZeroIntView y)</argsstring>
        <name>prune</name>
        <param>
          <type><ref refid="classGecode_1_1Home" kindref="compound">Home</ref></type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; VX &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1ZeroIntView" kindref="compound">ZeroIntView</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Prune that <emphasis>y</emphasis> is the union of <emphasis>x</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/count.hh" line="121" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Count_1adcc16f72ff6eee2b76cb92e85419995b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class VX</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>ExecStatus Gecode::Int::Count::prune</definition>
        <argsstring>(Home home, ViewArray&lt; VX &gt; &amp;x, const IntSet &amp;y)</argsstring>
        <name>prune</name>
        <param>
          <type><ref refid="classGecode_1_1Home" kindref="compound">Home</ref></type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; VX &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1IntSet" kindref="compound">IntSet</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Prune that <emphasis>y</emphasis> is the union of <emphasis>x</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/count.hh" line="124" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Count_1a96d7ce7f3850ad766ad46cbb3634ec2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class VY</type>
          </param>
        </templateparamlist>
        <type>forceinline <ref refid="namespaceGecode_1_1Int_1_1Count_1a700af8c99b27ddd13721a32dfb3be45f" kindref="member">ViewTypeDesc</ref></type>
        <definition>forceinline ViewTypeDesc Gecode::Int::Count::vtd</definition>
        <argsstring>(VY y)</argsstring>
        <name>vtd</name>
        <param>
          <type>VY</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Return the view type description of <emphasis>y</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/count/rel.hpp" line="49" column="1" bodyfile="/usr/include/gecode/int/count/rel.hpp" bodystart="49" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Count_1a1d93f90a73ecb3358b01302861048366" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>forceinline <ref refid="namespaceGecode_1_1Int_1_1Count_1a700af8c99b27ddd13721a32dfb3be45f" kindref="member">ViewTypeDesc</ref></type>
        <definition>forceinline ViewTypeDesc Gecode::Int::Count::vtd</definition>
        <argsstring>(const IntSet &amp;y)</argsstring>
        <name>vtd</name>
        <param>
          <type>const <ref refid="classGecode_1_1IntSet" kindref="compound">IntSet</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/count/rel.hpp" line="55" column="1" bodyfile="/usr/include/gecode/int/count/rel.hpp" bodystart="55" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Count_1a3c2183ad07ca4a7f8c04d97a2939660d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>forceinline <ref refid="namespaceGecode_1_1Int_1_1Count_1a700af8c99b27ddd13721a32dfb3be45f" kindref="member">ViewTypeDesc</ref></type>
        <definition>forceinline ViewTypeDesc Gecode::Int::Count::vtd</definition>
        <argsstring>(ConstIntView y)</argsstring>
        <name>vtd</name>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1ConstIntView" kindref="compound">ConstIntView</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/count/rel.hpp" line="61" column="1" bodyfile="/usr/include/gecode/int/count/rel.hpp" bodystart="61" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Count_1ad9884c2b2b8dbcef0e20edfaec92b42a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>forceinline <ref refid="namespaceGecode_1_1Int_1_1Count_1a700af8c99b27ddd13721a32dfb3be45f" kindref="member">ViewTypeDesc</ref></type>
        <definition>forceinline ViewTypeDesc Gecode::Int::Count::vtd</definition>
        <argsstring>(ZeroIntView y)</argsstring>
        <name>vtd</name>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1ZeroIntView" kindref="compound">ZeroIntView</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/count/rel.hpp" line="67" column="1" bodyfile="/usr/include/gecode/int/count/rel.hpp" bodystart="67" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Count_1a93d20c8a40a490e7efea9e540a40211f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>forceinline void</type>
        <definition>forceinline void Gecode::Int::Count::subscribe</definition>
        <argsstring>(Space &amp;home, Propagator &amp;p, IntSet &amp;y)</argsstring>
        <name>subscribe</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Propagator" kindref="compound">Propagator</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1IntSet" kindref="compound">IntSet</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/count/rel.hpp" line="74" column="1" bodyfile="/usr/include/gecode/int/count/rel.hpp" bodystart="74" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Count_1aca4492f918cd133a63932bf5f0111fa2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class VY</type>
          </param>
        </templateparamlist>
        <type>forceinline void</type>
        <definition>forceinline void Gecode::Int::Count::subscribe</definition>
        <argsstring>(Space &amp;home, Propagator &amp;p, VY y)</argsstring>
        <name>subscribe</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Propagator" kindref="compound">Propagator</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>VY</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Subscribe propagator <emphasis>p</emphasis> to view <emphasis>y</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/count/rel.hpp" line="79" column="1" bodyfile="/usr/include/gecode/int/count/rel.hpp" bodystart="79" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Count_1a0e8383847444f062bdb1e0be8763a500" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>forceinline void</type>
        <definition>forceinline void Gecode::Int::Count::cancel</definition>
        <argsstring>(Space &amp;home, Propagator &amp;p, IntSet &amp;y)</argsstring>
        <name>cancel</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Propagator" kindref="compound">Propagator</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1IntSet" kindref="compound">IntSet</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/count/rel.hpp" line="84" column="1" bodyfile="/usr/include/gecode/int/count/rel.hpp" bodystart="84" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Count_1acce2b05e1b658d1c50b1c2b7bb039d68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class VY</type>
          </param>
        </templateparamlist>
        <type>forceinline void</type>
        <definition>forceinline void Gecode::Int::Count::cancel</definition>
        <argsstring>(Space &amp;home, Propagator &amp;p, VY y)</argsstring>
        <name>cancel</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Propagator" kindref="compound">Propagator</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>VY</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Cancel propagator <emphasis>p</emphasis> for view <emphasis>y</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/count/rel.hpp" line="90" column="1" bodyfile="/usr/include/gecode/int/count/rel.hpp" bodystart="90" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Count_1a41cc4742df72725762700a1f7dbcacca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class VX</type>
          </param>
        </templateparamlist>
        <type>forceinline <ref refid="group__TaskActorIntTest_1gadbb359c782e2957e831fc208fcc7ad39" kindref="member">RelTest</ref></type>
        <definition>forceinline RelTest Gecode::Int::Count::holds</definition>
        <argsstring>(VX x, ConstIntView y)</argsstring>
        <name>holds</name>
        <param>
          <type>VX</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1ConstIntView" kindref="compound">ConstIntView</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Test whether <emphasis>x</emphasis> and <emphasis>y</emphasis> are equal. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/count/rel.hpp" line="96" column="1" bodyfile="/usr/include/gecode/int/count/rel.hpp" bodystart="96" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Count_1a2def0b7697b076bc2a12a84bff886c29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class VX</type>
          </param>
        </templateparamlist>
        <type>forceinline <ref refid="group__TaskActorIntTest_1gadbb359c782e2957e831fc208fcc7ad39" kindref="member">RelTest</ref></type>
        <definition>forceinline RelTest Gecode::Int::Count::holds</definition>
        <argsstring>(VX x, ZeroIntView)</argsstring>
        <name>holds</name>
        <param>
          <type>VX</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1ZeroIntView" kindref="compound">ZeroIntView</ref></type>
        </param>
        <briefdescription>
<para>Test whether <emphasis>x</emphasis> and <emphasis>y</emphasis> are equal. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/count/rel.hpp" line="101" column="1" bodyfile="/usr/include/gecode/int/count/rel.hpp" bodystart="101" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Count_1af3e68ed016ece216c6ee677e055dfdfb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class VX</type>
          </param>
        </templateparamlist>
        <type>forceinline <ref refid="group__TaskActorIntTest_1gadbb359c782e2957e831fc208fcc7ad39" kindref="member">RelTest</ref></type>
        <definition>forceinline RelTest Gecode::Int::Count::holds</definition>
        <argsstring>(VX x, const IntSet &amp;y)</argsstring>
        <name>holds</name>
        <param>
          <type>VX</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1IntSet" kindref="compound">IntSet</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Test whether <emphasis>x</emphasis> and <emphasis>y</emphasis> are equal. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/count/rel.hpp" line="106" column="1" bodyfile="/usr/include/gecode/int/count/rel.hpp" bodystart="106" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Count_1a2c4db5bd2d7dd4a926f79a3b11a7b42a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class VX</type>
          </param>
        </templateparamlist>
        <type>forceinline <ref refid="group__TaskActorIntTest_1gadbb359c782e2957e831fc208fcc7ad39" kindref="member">RelTest</ref></type>
        <definition>forceinline RelTest Gecode::Int::Count::holds</definition>
        <argsstring>(VX x, VX y)</argsstring>
        <name>holds</name>
        <param>
          <type>VX</type>
          <declname>x</declname>
        </param>
        <param>
          <type>VX</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Test whether <emphasis>x</emphasis> and <emphasis>y</emphasis> are equal. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/count/rel.hpp" line="126" column="1" bodyfile="/usr/include/gecode/int/count/rel.hpp" bodystart="126" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Count_1a8b673dfc29c54fe35a54df01be7d2668" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class VX</type>
          </param>
        </templateparamlist>
        <type>forceinline <ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>forceinline ExecStatus Gecode::Int::Count::post_true</definition>
        <argsstring>(Home home, VX x, ConstIntView y)</argsstring>
        <name>post_true</name>
        <param>
          <type><ref refid="classGecode_1_1Home" kindref="compound">Home</ref></type>
          <declname>home</declname>
        </param>
        <param>
          <type>VX</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1ConstIntView" kindref="compound">ConstIntView</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/count/rel.hpp" line="132" column="1" bodyfile="/usr/include/gecode/int/count/rel.hpp" bodystart="132" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Count_1ada89611f6e985c11728a99c288267278" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class VX</type>
          </param>
        </templateparamlist>
        <type>forceinline <ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>forceinline ExecStatus Gecode::Int::Count::post_true</definition>
        <argsstring>(Home home, VX x, ZeroIntView)</argsstring>
        <name>post_true</name>
        <param>
          <type><ref refid="classGecode_1_1Home" kindref="compound">Home</ref></type>
          <declname>home</declname>
        </param>
        <param>
          <type>VX</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1ZeroIntView" kindref="compound">ZeroIntView</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/count/rel.hpp" line="138" column="1" bodyfile="/usr/include/gecode/int/count/rel.hpp" bodystart="138" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Count_1aafcf041aa25ba1963a2992cd03cae34c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class VX</type>
          </param>
        </templateparamlist>
        <type>forceinline <ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>forceinline ExecStatus Gecode::Int::Count::post_true</definition>
        <argsstring>(Home home, VX x, const IntSet &amp;y)</argsstring>
        <name>post_true</name>
        <param>
          <type><ref refid="classGecode_1_1Home" kindref="compound">Home</ref></type>
          <declname>home</declname>
        </param>
        <param>
          <type>VX</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1IntSet" kindref="compound">IntSet</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/count/rel.hpp" line="144" column="1" bodyfile="/usr/include/gecode/int/count/rel.hpp" bodystart="144" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Count_1a16ef0bdb67ab7a02e51362b280514dce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class VX</type>
          </param>
        </templateparamlist>
        <type>forceinline <ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>forceinline ExecStatus Gecode::Int::Count::post_true</definition>
        <argsstring>(Home home, ViewArray&lt; VX &gt; &amp;x, ConstIntView y)</argsstring>
        <name>post_true</name>
        <param>
          <type><ref refid="classGecode_1_1Home" kindref="compound">Home</ref></type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; VX &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1ConstIntView" kindref="compound">ConstIntView</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Post that all views in <emphasis>x</emphasis> are equal to <emphasis>y</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/count/rel.hpp" line="151" column="1" bodyfile="/usr/include/gecode/int/count/rel.hpp" bodystart="151" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Count_1a73221874c7a9b3fd783429412b061ffb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class VX</type>
          </param>
        </templateparamlist>
        <type>forceinline <ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>forceinline ExecStatus Gecode::Int::Count::post_true</definition>
        <argsstring>(Home home, ViewArray&lt; VX &gt; &amp;x, ZeroIntView)</argsstring>
        <name>post_true</name>
        <param>
          <type><ref refid="classGecode_1_1Home" kindref="compound">Home</ref></type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; VX &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1ZeroIntView" kindref="compound">ZeroIntView</ref></type>
        </param>
        <briefdescription>
<para>Post that all views in <emphasis>x</emphasis> are equal to <emphasis>y</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/count/rel.hpp" line="158" column="1" bodyfile="/usr/include/gecode/int/count/rel.hpp" bodystart="158" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Count_1a0cf0476d2772fe198e16e31f469aae87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class VX</type>
          </param>
        </templateparamlist>
        <type>forceinline <ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>forceinline ExecStatus Gecode::Int::Count::post_true</definition>
        <argsstring>(Home home, ViewArray&lt; VX &gt; &amp;x, const IntSet &amp;y)</argsstring>
        <name>post_true</name>
        <param>
          <type><ref refid="classGecode_1_1Home" kindref="compound">Home</ref></type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; VX &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1IntSet" kindref="compound">IntSet</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Post that all views in <emphasis>x</emphasis> are equal to <emphasis>y</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/count/rel.hpp" line="165" column="1" bodyfile="/usr/include/gecode/int/count/rel.hpp" bodystart="165" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Count_1a690c73eb1a85a2913e6ea0f925e9f411" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class VX</type>
          </param>
        </templateparamlist>
        <type>forceinline <ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>forceinline ExecStatus Gecode::Int::Count::post_false</definition>
        <argsstring>(Home home, VX x, ConstIntView y)</argsstring>
        <name>post_false</name>
        <param>
          <type><ref refid="classGecode_1_1Home" kindref="compound">Home</ref></type>
          <declname>home</declname>
        </param>
        <param>
          <type>VX</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1ConstIntView" kindref="compound">ConstIntView</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/count/rel.hpp" line="175" column="1" bodyfile="/usr/include/gecode/int/count/rel.hpp" bodystart="175" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Count_1ab7e26581659b2604ed1e66deb4baa4e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class VX</type>
          </param>
        </templateparamlist>
        <type>forceinline <ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>forceinline ExecStatus Gecode::Int::Count::post_false</definition>
        <argsstring>(Home home, VX x, ZeroIntView)</argsstring>
        <name>post_false</name>
        <param>
          <type><ref refid="classGecode_1_1Home" kindref="compound">Home</ref></type>
          <declname>home</declname>
        </param>
        <param>
          <type>VX</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1ZeroIntView" kindref="compound">ZeroIntView</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/count/rel.hpp" line="181" column="1" bodyfile="/usr/include/gecode/int/count/rel.hpp" bodystart="181" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Count_1a5c0ebf4e7a6536b7c2b4b2f43c7302fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class VX</type>
          </param>
        </templateparamlist>
        <type>forceinline <ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>forceinline ExecStatus Gecode::Int::Count::post_false</definition>
        <argsstring>(Home home, VX x, const IntSet &amp;y)</argsstring>
        <name>post_false</name>
        <param>
          <type><ref refid="classGecode_1_1Home" kindref="compound">Home</ref></type>
          <declname>home</declname>
        </param>
        <param>
          <type>VX</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1IntSet" kindref="compound">IntSet</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/count/rel.hpp" line="187" column="1" bodyfile="/usr/include/gecode/int/count/rel.hpp" bodystart="187" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Count_1ae8da8ce5120aa22d57b293262ec6ae84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class VX</type>
          </param>
        </templateparamlist>
        <type>forceinline <ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>forceinline ExecStatus Gecode::Int::Count::post_false</definition>
        <argsstring>(Home home, ViewArray&lt; VX &gt; &amp;x, ConstIntView y)</argsstring>
        <name>post_false</name>
        <param>
          <type><ref refid="classGecode_1_1Home" kindref="compound">Home</ref></type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; VX &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1ConstIntView" kindref="compound">ConstIntView</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Post that all views in <emphasis>x</emphasis> are not equal to <emphasis>y</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/count/rel.hpp" line="194" column="1" bodyfile="/usr/include/gecode/int/count/rel.hpp" bodystart="194" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Count_1a271f42e5d7b202ff6013ab8bbed2e389" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class VX</type>
          </param>
        </templateparamlist>
        <type>forceinline <ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>forceinline ExecStatus Gecode::Int::Count::post_false</definition>
        <argsstring>(Home home, ViewArray&lt; VX &gt; &amp;x, ZeroIntView)</argsstring>
        <name>post_false</name>
        <param>
          <type><ref refid="classGecode_1_1Home" kindref="compound">Home</ref></type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; VX &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1ZeroIntView" kindref="compound">ZeroIntView</ref></type>
        </param>
        <briefdescription>
<para>Post that all views in <emphasis>x</emphasis> are not equal to <emphasis>y</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/count/rel.hpp" line="201" column="1" bodyfile="/usr/include/gecode/int/count/rel.hpp" bodystart="201" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Count_1a7cb76be3b7c09c2d22e8d38e7b8b4227" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class VX</type>
          </param>
        </templateparamlist>
        <type>forceinline <ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>forceinline ExecStatus Gecode::Int::Count::post_false</definition>
        <argsstring>(Home home, ViewArray&lt; VX &gt; &amp;x, const IntSet &amp;y)</argsstring>
        <name>post_false</name>
        <param>
          <type><ref refid="classGecode_1_1Home" kindref="compound">Home</ref></type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; VX &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1IntSet" kindref="compound">IntSet</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Post that all views in <emphasis>x</emphasis> are not equal to <emphasis>y</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/count/rel.hpp" line="208" column="1" bodyfile="/usr/include/gecode/int/count/rel.hpp" bodystart="208" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Count_1ab1aabbfb087fc7abc776eea0494e56c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class VX</type>
          </param>
        </templateparamlist>
        <type>forceinline <ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>forceinline ExecStatus Gecode::Int::Count::post_true</definition>
        <argsstring>(Home home, ViewArray&lt; VX &gt; &amp;x, VX y)</argsstring>
        <name>post_true</name>
        <param>
          <type><ref refid="classGecode_1_1Home" kindref="compound">Home</ref></type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; VX &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>VX</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Post that all views in <emphasis>x</emphasis> are equal to <emphasis>y</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/count/rel.hpp" line="218" column="1" bodyfile="/usr/include/gecode/int/count/rel.hpp" bodystart="218" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Count_1a47d53f0b1bfbac7e7b835a320e6b1549" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class VX</type>
          </param>
        </templateparamlist>
        <type>forceinline <ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>forceinline ExecStatus Gecode::Int::Count::post_true</definition>
        <argsstring>(Home home, VX x, VX y)</argsstring>
        <name>post_true</name>
        <param>
          <type><ref refid="classGecode_1_1Home" kindref="compound">Home</ref></type>
          <declname>home</declname>
        </param>
        <param>
          <type>VX</type>
          <declname>x</declname>
        </param>
        <param>
          <type>VX</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/count/rel.hpp" line="227" column="1" bodyfile="/usr/include/gecode/int/count/rel.hpp" bodystart="227" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Count_1ad3fbff396487734a4ed290b5015eb578" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class VX</type>
          </param>
        </templateparamlist>
        <type>forceinline <ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>forceinline ExecStatus Gecode::Int::Count::post_false</definition>
        <argsstring>(Home home, ViewArray&lt; VX &gt; &amp;x, VX y)</argsstring>
        <name>post_false</name>
        <param>
          <type><ref refid="classGecode_1_1Home" kindref="compound">Home</ref></type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; VX &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>VX</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Post that all views in <emphasis>x</emphasis> are not equal to <emphasis>y</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/count/rel.hpp" line="232" column="1" bodyfile="/usr/include/gecode/int/count/rel.hpp" bodystart="232" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Count_1acd5732420e187d7763b90e53cadd39b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class VX</type>
          </param>
        </templateparamlist>
        <type>forceinline <ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>forceinline ExecStatus Gecode::Int::Count::post_false</definition>
        <argsstring>(Home home, VX x, VX y)</argsstring>
        <name>post_false</name>
        <param>
          <type><ref refid="classGecode_1_1Home" kindref="compound">Home</ref></type>
          <declname>home</declname>
        </param>
        <param>
          <type>VX</type>
          <declname>x</declname>
        </param>
        <param>
          <type>VX</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/count/rel.hpp" line="239" column="1" bodyfile="/usr/include/gecode/int/count/rel.hpp" bodystart="239" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Count_1ac40bd8cf48e33f84939a888e43420aae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class VX</type>
          </param>
        </templateparamlist>
        <type>forceinline <ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>forceinline ExecStatus Gecode::Int::Count::prune</definition>
        <argsstring>(Space &amp;home, ViewArray&lt; VX &gt; &amp;x, ConstIntView)</argsstring>
        <name>prune</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; VX &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1ConstIntView" kindref="compound">ConstIntView</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/count/rel.hpp" line="245" column="1" bodyfile="/usr/include/gecode/int/count/rel.hpp" bodystart="245" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Count_1a4105fe704ec7e7b417bd4834680dfca9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class VX</type>
          </param>
        </templateparamlist>
        <type>forceinline <ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>forceinline ExecStatus Gecode::Int::Count::prune</definition>
        <argsstring>(Space &amp;home, ViewArray&lt; VX &gt; &amp;x, ZeroIntView)</argsstring>
        <name>prune</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; VX &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1ZeroIntView" kindref="compound">ZeroIntView</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/count/rel.hpp" line="252" column="1" bodyfile="/usr/include/gecode/int/count/rel.hpp" bodystart="252" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Count_1aac125bb2f166c9cab4552d818820fa72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class VX</type>
          </param>
        </templateparamlist>
        <type>forceinline <ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>forceinline ExecStatus Gecode::Int::Count::prune</definition>
        <argsstring>(Space &amp;home, ViewArray&lt; VX &gt; &amp;x, const IntSet &amp;y)</argsstring>
        <name>prune</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; VX &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1IntSet" kindref="compound">IntSet</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/count/rel.hpp" line="259" column="1" bodyfile="/usr/include/gecode/int/count/rel.hpp" bodystart="259" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Count_1ae1f7bab5e6a7c5058b9dcf66d7971e7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class VX</type>
          </param>
        </templateparamlist>
        <type>forceinline <ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>forceinline ExecStatus Gecode::Int::Count::prune</definition>
        <argsstring>(Space &amp;home, ViewArray&lt; VX &gt; &amp;x, VX y)</argsstring>
        <name>prune</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; VX &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>VX</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/count/rel.hpp" line="267" column="1" bodyfile="/usr/include/gecode/int/count/rel.hpp" bodystart="267" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Count_1a2a0a62f655ee684bb957f8f1733e534d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class VX</type>
          </param>
        </templateparamlist>
        <type>forceinline bool</type>
        <definition>forceinline bool Gecode::Int::Count::shared</definition>
        <argsstring>(const IntSet &amp;, VX)</argsstring>
        <name>shared</name>
        <param>
          <type>const <ref refid="classGecode_1_1IntSet" kindref="compound">IntSet</ref> &amp;</type>
        </param>
        <param>
          <type>VX</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/count/view-base.hpp" line="114" column="1" bodyfile="/usr/include/gecode/int/count/view-base.hpp" bodystart="114" bodyend="116"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Counting propagators. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/usr/include/gecode/int/count/int-base.hpp" line="38" column="1"/>
  </compounddef>
</doxygen>
