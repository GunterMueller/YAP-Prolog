<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="namespaceGecode_1_1Int_1_1GCC" kind="namespace">
    <compoundname>Gecode::Int::GCC</compoundname>
    <innerclass refid="classGecode_1_1Int_1_1GCC_1_1UnReachable" prot="public">Gecode::Int::GCC::UnReachable</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1GCC_1_1Rank" prot="public">Gecode::Int::GCC::Rank</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1GCC_1_1MaxInc" prot="public">Gecode::Int::GCC::MaxInc</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1GCC_1_1MinInc" prot="public">Gecode::Int::GCC::MinInc</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1GCC_1_1MinIdx" prot="public">Gecode::Int::GCC::MinIdx</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1GCC_1_1PartialSum" prot="public">Gecode::Int::GCC::PartialSum</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1GCC_1_1HallInfo" prot="public">Gecode::Int::GCC::HallInfo</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1GCC_1_1Node" prot="public">Gecode::Int::GCC::Node</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1GCC_1_1VarNode" prot="public">Gecode::Int::GCC::VarNode</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1GCC_1_1ValNode" prot="public">Gecode::Int::GCC::ValNode</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1GCC_1_1Edge" prot="public">Gecode::Int::GCC::Edge</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1GCC_1_1VarValGraph" prot="public">Gecode::Int::GCC::VarValGraph</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1GCC_1_1CardLess" prot="public">Gecode::Int::GCC::CardLess</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1GCC_1_1CardConst" prot="public">Gecode::Int::GCC::CardConst</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1GCC_1_1CardView" prot="public">Gecode::Int::GCC::CardView</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1GCC_1_1Val" prot="public">Gecode::Int::GCC::Val</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1GCC_1_1Bnd" prot="public">Gecode::Int::GCC::Bnd</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1GCC_1_1Dom" prot="public">Gecode::Int::GCC::Dom</innerclass>
      <sectiondef kind="user-defined">
      <header>Path compression</header>
      <description><para>Each of the nodes on the path from <emphasis>start</emphasis> to <emphasis>end</emphasis> becomes a direct child of <emphasis>to</emphasis>. </para></description>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1GCC_1a0b6e944c7589352ee5396664da3c6ac5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>forceinline void</type>
        <definition>forceinline void Gecode::Int::GCC::pathset_ps</definition>
        <argsstring>(HallInfo hall[], int start, int end, int to)</argsstring>
        <name>pathset_ps</name>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1GCC_1_1HallInfo" kindref="compound">HallInfo</ref></type>
          <declname>hall</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>end</declname>
        </param>
        <param>
          <type>int</type>
          <declname>to</declname>
        </param>
        <briefdescription>
<para>Path compression for potentially stable set structure. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/gcc/bnd-sup.hpp" line="511" column="1" bodyfile="/usr/include/gecode/int/gcc/bnd-sup.hpp" bodystart="511" bodyend="516"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1GCC_1a2e1d7a5a6260a66c9fd9d897aaf925a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>forceinline void</type>
        <definition>forceinline void Gecode::Int::GCC::pathset_s</definition>
        <argsstring>(HallInfo hall[], int start, int end, int to)</argsstring>
        <name>pathset_s</name>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1GCC_1_1HallInfo" kindref="compound">HallInfo</ref></type>
          <declname>hall</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>end</declname>
        </param>
        <param>
          <type>int</type>
          <declname>to</declname>
        </param>
        <briefdescription>
<para>Path compression for stable set structure. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/gcc/bnd-sup.hpp" line="519" column="1" bodyfile="/usr/include/gecode/int/gcc/bnd-sup.hpp" bodystart="519" bodyend="524"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1GCC_1a57c9a2cb4ce59a003bb6771527acc425" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>forceinline void</type>
        <definition>forceinline void Gecode::Int::GCC::pathset_t</definition>
        <argsstring>(HallInfo hall[], int start, int end, int to)</argsstring>
        <name>pathset_t</name>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1GCC_1_1HallInfo" kindref="compound">HallInfo</ref></type>
          <declname>hall</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>end</declname>
        </param>
        <param>
          <type>int</type>
          <declname>to</declname>
        </param>
        <briefdescription>
<para>Path compression for capacity pointer structure. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/gcc/bnd-sup.hpp" line="527" column="1" bodyfile="/usr/include/gecode/int/gcc/bnd-sup.hpp" bodystart="527" bodyend="532"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1GCC_1a6c06e3dec9ecee638271f2951b530b54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>forceinline void</type>
        <definition>forceinline void Gecode::Int::GCC::pathset_h</definition>
        <argsstring>(HallInfo hall[], int start, int end, int to)</argsstring>
        <name>pathset_h</name>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1GCC_1_1HallInfo" kindref="compound">HallInfo</ref></type>
          <declname>hall</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>end</declname>
        </param>
        <param>
          <type>int</type>
          <declname>to</declname>
        </param>
        <briefdescription>
<para>Path compression for hall pointer structure. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/gcc/bnd-sup.hpp" line="535" column="1" bodyfile="/usr/include/gecode/int/gcc/bnd-sup.hpp" bodystart="535" bodyend="541"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Path minimum</header>
      <description><para>Returns the smalles reachable index starting from <emphasis>i</emphasis>. </para></description>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1GCC_1ab6f6a0deb35b2f41191c850012a61a47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>forceinline int</type>
        <definition>forceinline int Gecode::Int::GCC::pathmin_h</definition>
        <argsstring>(const HallInfo hall[], int i)</argsstring>
        <name>pathmin_h</name>
        <param>
          <type>const <ref refid="classGecode_1_1Int_1_1GCC_1_1HallInfo" kindref="compound">HallInfo</ref></type>
          <declname>hall</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Path minimum for hall pointer structure. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/gcc/bnd-sup.hpp" line="553" column="1" bodyfile="/usr/include/gecode/int/gcc/bnd-sup.hpp" bodystart="553" bodyend="557"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1GCC_1ab26288423b77c1919935cca59aa7c6c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>forceinline int</type>
        <definition>forceinline int Gecode::Int::GCC::pathmin_t</definition>
        <argsstring>(const HallInfo hall[], int i)</argsstring>
        <name>pathmin_t</name>
        <param>
          <type>const <ref refid="classGecode_1_1Int_1_1GCC_1_1HallInfo" kindref="compound">HallInfo</ref></type>
          <declname>hall</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Path minimum for capacity pointer structure. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/gcc/bnd-sup.hpp" line="560" column="1" bodyfile="/usr/include/gecode/int/gcc/bnd-sup.hpp" bodystart="560" bodyend="564"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Path maximum</header>
      <description><para>Returns the greatest reachable index starting from <emphasis>i</emphasis>. </para></description>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1GCC_1a848c81cb95c3414b6829961507195c9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>forceinline int</type>
        <definition>forceinline int Gecode::Int::GCC::pathmax_h</definition>
        <argsstring>(const HallInfo hall[], int i)</argsstring>
        <name>pathmax_h</name>
        <param>
          <type>const <ref refid="classGecode_1_1Int_1_1GCC_1_1HallInfo" kindref="compound">HallInfo</ref></type>
          <declname>hall</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Path maximum for hall pointer structure. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/gcc/bnd-sup.hpp" line="576" column="1" bodyfile="/usr/include/gecode/int/gcc/bnd-sup.hpp" bodystart="576" bodyend="580"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1GCC_1aa296d9ad2bdf36a55a127aa9ff151068" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>forceinline int</type>
        <definition>forceinline int Gecode::Int::GCC::pathmax_t</definition>
        <argsstring>(const HallInfo hall[], int i)</argsstring>
        <name>pathmax_t</name>
        <param>
          <type>const <ref refid="classGecode_1_1Int_1_1GCC_1_1HallInfo" kindref="compound">HallInfo</ref></type>
          <declname>hall</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Path maximum for capacity pointer structure. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/gcc/bnd-sup.hpp" line="583" column="1" bodyfile="/usr/include/gecode/int/gcc/bnd-sup.hpp" bodystart="583" bodyend="588"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1GCC_1a17ce020ce4b00778ff2402cdc9c8794a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>forceinline int</type>
        <definition>forceinline int Gecode::Int::GCC::pathmax_s</definition>
        <argsstring>(const HallInfo hall[], int i)</argsstring>
        <name>pathmax_s</name>
        <param>
          <type>const <ref refid="classGecode_1_1Int_1_1GCC_1_1HallInfo" kindref="compound">HallInfo</ref></type>
          <declname>hall</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Path maximum for stable set pointer structure. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/gcc/bnd-sup.hpp" line="591" column="1" bodyfile="/usr/include/gecode/int/gcc/bnd-sup.hpp" bodystart="591" bodyend="595"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1GCC_1a88c6f155dfac7f5b0a39b5835dc81c11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>forceinline int</type>
        <definition>forceinline int Gecode::Int::GCC::pathmax_ps</definition>
        <argsstring>(const HallInfo hall[], int i)</argsstring>
        <name>pathmax_ps</name>
        <param>
          <type>const <ref refid="classGecode_1_1Int_1_1GCC_1_1HallInfo" kindref="compound">HallInfo</ref></type>
          <declname>hall</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Path maximum for potentially stable set pointer structure. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/gcc/bnd-sup.hpp" line="598" column="1" bodyfile="/usr/include/gecode/int/gcc/bnd-sup.hpp" bodystart="598" bodyend="602"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="namespaceGecode_1_1Int_1_1GCC_1a4e75bf3ac1c08f27964f54f5361f4cab" prot="public" static="no">
        <name>BC</name>
        <enumvalue id="namespaceGecode_1_1Int_1_1GCC_1a4e75bf3ac1c08f27964f54f5361f4caba1dc082de69279f3b1e5368b3863e7c71" prot="public">
          <name>UBC</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceGecode_1_1Int_1_1GCC_1a4e75bf3ac1c08f27964f54f5361f4caba5f509e40ed2bb68a8235dbf83e180e03" prot="public">
          <name>LBC</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Bounds constraint (BC) type. </para>        </briefdescription>
        <detaileddescription>
<para>If BC = UBC, then we argue about the Upper Bounds Constraint else we use the functions for the Lower Bounds Constraint </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/gcc/dom-sup.hpp" line="52" column="1" bodyfile="/usr/include/gecode/int/gcc/dom-sup.hpp" bodystart="52" bodyend="52"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__GCCBndSup_1gac1df4b8a1e44c4c76cc54774f2fe57a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Card</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>ExecStatus Gecode::Int::GCC::prop_card</definition>
        <argsstring>(Space &amp;home, ViewArray&lt; IntView &gt; &amp;x, ViewArray&lt; Card &gt; &amp;k)</argsstring>
        <name>prop_card</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; <ref refid="classGecode_1_1Int_1_1IntView" kindref="compound">IntView</ref> &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; Card &gt; &amp;</type>
          <declname>k</declname>
        </param>
        <briefdescription>
<para>Bounds consistency check for cardinality variables. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/gcc/bnd-sup.hpp" line="78" column="1" bodyfile="/usr/include/gecode/int/gcc/bnd-sup.hpp" bodystart="78" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="group__GCCBndSup_1ga268c8ddcdae06e977d3759b8cd5ebbab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Card</type>
          </param>
        </templateparamlist>
        <type>forceinline bool</type>
        <definition>forceinline bool Gecode::Int::GCC::card_consistent</definition>
        <argsstring>(ViewArray&lt; IntView &gt; &amp;x, ViewArray&lt; Card &gt; &amp;k)</argsstring>
        <name>card_consistent</name>
        <param>
          <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; <ref refid="classGecode_1_1Int_1_1IntView" kindref="compound">IntView</ref> &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; Card &gt; &amp;</type>
          <declname>k</declname>
        </param>
        <briefdescription>
<para>Consistency check, whether the cardinality values are feasible. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/gcc/bnd-sup.hpp" line="143" column="1" bodyfile="/usr/include/gecode/int/gcc/bnd-sup.hpp" bodystart="143" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1GCC_1af8698d5fec3d6c0a4138ccd13f83de6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Card</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>ExecStatus Gecode::Int::GCC::postSideConstraints</definition>
        <argsstring>(Home home, ViewArray&lt; IntView &gt; &amp;x, ViewArray&lt; Card &gt; &amp;k)</argsstring>
        <name>postSideConstraints</name>
        <param>
          <type><ref refid="classGecode_1_1Home" kindref="compound">Home</ref></type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; <ref refid="classGecode_1_1Int_1_1IntView" kindref="compound">IntView</ref> &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; Card &gt; &amp;</type>
          <declname>k</declname>
        </param>
        <briefdescription>
<para>Post side constraints for the <ref refid="namespaceGecode_1_1Int_1_1GCC" kindref="compound">GCC</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/gcc/post.hpp" line="64" column="1" bodyfile="/usr/include/gecode/int/gcc/post.hpp" bodystart="64" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1GCC_1ad98d8ebd3361bb51e11a6507c1faa8b1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Card</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool Gecode::Int::GCC::isDistinct</definition>
        <argsstring>(Home home, ViewArray&lt; IntView &gt; &amp;x, ViewArray&lt; Card &gt; &amp;k)</argsstring>
        <name>isDistinct</name>
        <param>
          <type><ref refid="classGecode_1_1Home" kindref="compound">Home</ref></type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; <ref refid="classGecode_1_1Int_1_1IntView" kindref="compound">IntView</ref> &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; Card &gt; &amp;</type>
          <declname>k</declname>
        </param>
        <briefdescription>
<para>Check if <ref refid="namespaceGecode_1_1Int_1_1GCC" kindref="compound">GCC</ref> is equivalent to distinct. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/gcc/post.hpp" line="142" column="1" bodyfile="/usr/include/gecode/int/gcc/post.hpp" bodystart="142" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1GCC_1a8f9c9ff46f0e1b572982965ef922cfd1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Card</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>ExecStatus Gecode::Int::GCC::prop_val</definition>
        <argsstring>(Space &amp;home, Propagator &amp;p, ViewArray&lt; IntView &gt; &amp;x, ViewArray&lt; Card &gt; &amp;k)</argsstring>
        <name>prop_val</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Propagator" kindref="compound">Propagator</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; <ref refid="classGecode_1_1Int_1_1IntView" kindref="compound">IntView</ref> &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; Card &gt; &amp;</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/gcc/val.hpp" line="89" column="1" bodyfile="/usr/include/gecode/int/gcc/val.hpp" bodystart="89" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1GCC_1a612204ff798bc68b0fc03c9135739d52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>forceinline bool</type>
        <definition>forceinline bool Gecode::Int::GCC::lookupValue</definition>
        <argsstring>(T &amp;a, int v, int &amp;i)</argsstring>
        <name>lookupValue</name>
        <param>
          <type>T &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>v</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Return index of <emphasis>v</emphasis> in array <emphasis>a</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/gcc/view.hpp" line="48" column="1" bodyfile="/usr/include/gecode/int/gcc/view.hpp" bodystart="48" bodyend="65"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Global cardinality propagators (Counting) </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/usr/include/gecode/int/gcc/bnd-sup.hpp" line="44" column="1"/>
  </compounddef>
</doxygen>
