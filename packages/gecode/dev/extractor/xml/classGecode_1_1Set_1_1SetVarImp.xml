<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classGecode_1_1Set_1_1SetVarImp" kind="class" prot="public">
    <compoundname>Gecode::Set::SetVarImp</compoundname>
    <basecompoundref prot="public" virt="non-virtual">SetVarImpBase</basecompoundref>
    <includes refid="set_2var-imp_8hpp" local="no">var-imp.hpp</includes>
      <sectiondef kind="user-defined">
      <header>Constructors and initialization</header>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetVarImp_1a8844c4fe3f0c0144d80c5ea6c6bc0eaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Set::SetVarImp::SetVarImp</definition>
        <argsstring>(Space &amp;home)</argsstring>
        <name>SetVarImp</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <briefdescription>
<para>Initialize with empty lower and full upper bound. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="450" column="1" bodyfile="/usr/include/gecode/set/var-imp/set.hpp" bodystart="52" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetVarImp_1a2c3fa3b9965d6a231c73b68f0342cc3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Set::SetVarImp::SetVarImp</definition>
        <argsstring>(Space &amp;home, int glbMin, int glbMax, int lubMin, int lubMax, unsigned int cardMin=0, unsigned int cardMax=Limits::card)</argsstring>
        <name>SetVarImp</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>int</type>
          <declname>glbMin</declname>
        </param>
        <param>
          <type>int</type>
          <declname>glbMax</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lubMin</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lubMax</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>cardMin</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>cardMax</declname>
          <defval><ref refid="namespaceGecode_1_1Set_1_1Limits_1a82e5a0891d539b2d58db3a9347ac138b" kindref="member">Limits::card</ref></defval>
        </param>
        <briefdescription>
<para>Initialize with given bounds and cardinality. </para>        </briefdescription>
        <detaileddescription>
<para>Creates a set variable <formula id="36">$s$</formula> with <formula id="393">$\mathit{glb}(s)=\{\mathit{glbMin},\dots,\mathit{glbMax}\}$</formula>, <formula id="394">$\mathit{lub}(s)=\{\mathit{lubMin},\dots,\mathit{lubMax}\}$</formula>, and <formula id="395">$\mathit{cardMin}\leq |s|\leq\mathit{cardMax}$</formula> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="459" column="1" bodyfile="/usr/include/gecode/set/var-imp/set.hpp" bodystart="59" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetVarImp_1ab4744a8971a7e56588d2507460207e61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Set::SetVarImp::SetVarImp</definition>
        <argsstring>(Space &amp;home, const IntSet &amp;glbD, int lubMin, int lubMax, unsigned int cardMin, unsigned int cardMax)</argsstring>
        <name>SetVarImp</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1IntSet" kindref="compound">IntSet</ref> &amp;</type>
          <declname>glbD</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lubMin</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lubMax</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>cardMin</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>cardMax</declname>
        </param>
        <briefdescription>
<para>Initialize with given bounds and cardinality. </para>        </briefdescription>
        <detaileddescription>
<para>Creates a set variable <formula id="36">$s$</formula> with <formula id="396">$\mathit{glb}(s)=\mathit{glbD}$</formula>, <formula id="394">$\mathit{lub}(s)=\{\mathit{lubMin},\dots,\mathit{lubMax}\}$</formula>, and <formula id="395">$\mathit{cardMin}\leq |s|\leq\mathit{cardMax}$</formula> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="470" column="1" bodyfile="/usr/include/gecode/set/var-imp/set.hpp" bodystart="68" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetVarImp_1a8b5b995ce1eac5d65e118735ccba42b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Set::SetVarImp::SetVarImp</definition>
        <argsstring>(Space &amp;home, int glbMin, int glbMax, const IntSet &amp;lubD, unsigned int cardMin, unsigned int cardMax)</argsstring>
        <name>SetVarImp</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>int</type>
          <declname>glbMin</declname>
        </param>
        <param>
          <type>int</type>
          <declname>glbMax</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1IntSet" kindref="compound">IntSet</ref> &amp;</type>
          <declname>lubD</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>cardMin</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>cardMax</declname>
        </param>
        <briefdescription>
<para>Initialize with given bounds and cardinality. </para>        </briefdescription>
        <detaileddescription>
<para>Creates a set variable <formula id="36">$s$</formula> with <formula id="393">$\mathit{glb}(s)=\{\mathit{glbMin},\dots,\mathit{glbMax}\}$</formula>, <formula id="397">$\mathit{lub}(s)=\mathit{lubD}$</formula>, and <formula id="395">$\mathit{cardMin}\leq |s|\leq\mathit{cardMax}$</formula> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="480" column="1" bodyfile="/usr/include/gecode/set/var-imp/set.hpp" bodystart="78" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetVarImp_1ad0d6f9643f68939fa7aad27ee1e931be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Set::SetVarImp::SetVarImp</definition>
        <argsstring>(Space &amp;home, const IntSet &amp;glbD, const IntSet &amp;lubD, unsigned int cardMin, unsigned int cardMax)</argsstring>
        <name>SetVarImp</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1IntSet" kindref="compound">IntSet</ref> &amp;</type>
          <declname>glbD</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1IntSet" kindref="compound">IntSet</ref> &amp;</type>
          <declname>lubD</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>cardMin</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>cardMax</declname>
        </param>
        <briefdescription>
<para>Initialize with given bounds and cardinality. </para>        </briefdescription>
        <detaileddescription>
<para>Creates a set variable <formula id="36">$s$</formula> with <formula id="396">$\mathit{glb}(s)=\mathit{glbD}$</formula>, <formula id="397">$\mathit{lub}(s)=\mathit{lubD}$</formula>, and <formula id="395">$\mathit{cardMin}\leq |s|\leq\mathit{cardMax}$</formula> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="490" column="1" bodyfile="/usr/include/gecode/set/var-imp/set.hpp" bodystart="88" bodyend="94"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Value access</header>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetVarImp_1a694f58350a6c3a63ced1fb5bb57ed658" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>forceinline unsigned int Gecode::Set::SetVarImp::cardMin</definition>
        <argsstring>(void) const </argsstring>
        <name>cardMin</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return current cardinality minimum. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="497" column="1" bodyfile="/usr/include/gecode/set/var-imp/set.hpp" bodystart="103" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetVarImp_1a65129997f2e9f7d72d920fdec313ad78" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>forceinline unsigned int Gecode::Set::SetVarImp::cardMax</definition>
        <argsstring>(void) const </argsstring>
        <name>cardMax</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return current cardinality maximum. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="499" column="1" bodyfile="/usr/include/gecode/set/var-imp/set.hpp" bodystart="106" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetVarImp_1a8929c4016f978748891be33bfb9e4ae5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Set::SetVarImp::lubMin</definition>
        <argsstring>(void) const </argsstring>
        <name>lubMin</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return minimum of the least upper bound. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="501" column="1" bodyfile="/usr/include/gecode/set/var-imp/set.hpp" bodystart="115" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetVarImp_1ad37e2c37f2a2f80f4df811aef1e9b3c7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Set::SetVarImp::lubMax</definition>
        <argsstring>(void) const </argsstring>
        <name>lubMax</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return maximum of the least upper bound. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="503" column="1" bodyfile="/usr/include/gecode/set/var-imp/set.hpp" bodystart="118" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetVarImp_1aa43ff2b6dee710b5bc1662edc2bc8c87" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Set::SetVarImp::lubMinN</definition>
        <argsstring>(unsigned int n) const </argsstring>
        <name>lubMinN</name>
        <param>
          <type>unsigned int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Return <emphasis>n</emphasis> -th smallest element in the least upper bound. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="505" column="1" bodyfile="/usr/include/gecode/set/var-imp/set.hpp" bodystart="121" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetVarImp_1a7a6057c1a6074e4ce1fb4f334dd33310" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Set::SetVarImp::glbMin</definition>
        <argsstring>(void) const </argsstring>
        <name>glbMin</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return minimum of the greatest lower bound. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="507" column="1" bodyfile="/usr/include/gecode/set/var-imp/set.hpp" bodystart="124" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetVarImp_1a5c48f4998235d3ed2ffd4f07ea744dc1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Set::SetVarImp::glbMax</definition>
        <argsstring>(void) const </argsstring>
        <name>glbMax</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return maximum of the greatest lower bound. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="509" column="1" bodyfile="/usr/include/gecode/set/var-imp/set.hpp" bodystart="127" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetVarImp_1a252e4c7ba95ccc99ab0100cfb7573e33" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>forceinline unsigned int Gecode::Set::SetVarImp::glbSize</definition>
        <argsstring>(void) const </argsstring>
        <name>glbSize</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return the size of the greatest lower bound. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="511" column="1" bodyfile="/usr/include/gecode/set/var-imp/set.hpp" bodystart="130" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetVarImp_1a2606ebe5d3efdf67cb2549894a3d63b5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>forceinline unsigned int Gecode::Set::SetVarImp::lubSize</definition>
        <argsstring>(void) const </argsstring>
        <name>lubSize</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return the size of the least upper bound. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="513" column="1" bodyfile="/usr/include/gecode/set/var-imp/set.hpp" bodystart="133" bodyend="133"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Domain tests</header>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetVarImp_1addc466fe98c9c656331ffc8c0ae291bc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::Set::SetVarImp::assigned</definition>
        <argsstring>(void) const </argsstring>
        <name>assigned</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test whether variable is assigned. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="519" column="1" bodyfile="/usr/include/gecode/set/var-imp/set.hpp" bodystart="98" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetVarImp_1a61e84ec39a34eee2fe061b4426b75149" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::Set::SetVarImp::knownIn</definition>
        <argsstring>(int n) const </argsstring>
        <name>knownIn</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Test whether <emphasis>n</emphasis> is contained in greatest lower bound. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="521" column="1" bodyfile="/usr/include/gecode/set/var-imp/set.hpp" bodystart="109" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetVarImp_1afb0cb21056528047b084d78b05068fc8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::Set::SetVarImp::knownOut</definition>
        <argsstring>(int) const </argsstring>
        <name>knownOut</name>
        <param>
          <type>int</type>
          <defname>i</defname>
        </param>
        <briefdescription>
<para>Test whether <emphasis>n</emphasis> is not contained in least upper bound. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="523" column="1" bodyfile="/usr/include/gecode/set/var-imp/set.hpp" bodystart="112" bodyend="112"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Domain update by range iterator, implementations</header>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetVarImp_1ac1f135f634165a9ea9d6ef81fd554c4c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>ModEvent Gecode::Set::SetVarImp::includeI_full</definition>
        <argsstring>(Space &amp;home, int mi, int ma, I &amp;i)</argsstring>
        <name>includeI_full</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mi</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ma</declname>
        </param>
        <param>
          <type>I &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Include set described by <emphasis>i</emphasis> in the greatest lower bound. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="530" column="1" bodyfile="/usr/include/gecode/set/var-imp/set.hpp" bodystart="317" bodyend="347"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetVarImp_1a5fa7dd0a2eea314c3da63576c978a809" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>ModEvent Gecode::Set::SetVarImp::excludeI_full</definition>
        <argsstring>(Space &amp;home, int mi, int ma, I &amp;i)</argsstring>
        <name>excludeI_full</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mi</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ma</declname>
        </param>
        <param>
          <type>I &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Exclude set described by <emphasis>i</emphasis> from the least upper bound. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="532" column="1" bodyfile="/usr/include/gecode/set/var-imp/set.hpp" bodystart="390" bodyend="420"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetVarImp_1a1c417a93a53e373315da4c6120475d8f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>ModEvent Gecode::Set::SetVarImp::intersectI_full</definition>
        <argsstring>(Space &amp;home, int mi, int ma, I &amp;i)</argsstring>
        <name>intersectI_full</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mi</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ma</declname>
        </param>
        <param>
          <type>I &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Exclude everything but set described by <emphasis>i</emphasis> from the least upper bound. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="534" column="1" bodyfile="/usr/include/gecode/set/var-imp/set.hpp" bodystart="243" bodyend="273"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Cardinality update implementation</header>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetVarImp_1a217f9e3442db3174d9068965d7258783" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GECODE_SET_EXPORT <ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>GECODE_SET_EXPORT ModEvent Gecode::Set::SetVarImp::cardMin_full</definition>
        <argsstring>(Space &amp;home)</argsstring>
        <name>cardMin_full</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <briefdescription>
<para>Restrict cardinality to be at least n. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="543" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetVarImp_1a3714528e561a1addf59aa43ddb60257e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GECODE_SET_EXPORT <ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>GECODE_SET_EXPORT ModEvent Gecode::Set::SetVarImp::cardMax_full</definition>
        <argsstring>(Space &amp;home)</argsstring>
        <name>cardMax_full</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <briefdescription>
<para>Restrict cardinality to be at most n. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="545" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Domain update by value</header>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetVarImp_1ac8090545b4c8063ffe65744c54030434" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Set::SetVarImp::include</definition>
        <argsstring>(Space &amp;home, int n)</argsstring>
        <name>include</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Include <emphasis>n</emphasis> in the greatest lower bound. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="553" column="1" bodyfile="/usr/include/gecode/set/var-imp/set.hpp" bodystart="291" bodyend="293"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetVarImp_1ac649cbfd3947fbefeacd3623a6a7d000" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Set::SetVarImp::include</definition>
        <argsstring>(Space &amp;home, int i, int j)</argsstring>
        <name>include</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>Include the range <formula id="392">$\{i,\dots,j\}$</formula> in the greatest lower bound. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="555" column="1" bodyfile="/usr/include/gecode/set/var-imp/set.hpp" bodystart="276" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetVarImp_1a1c19f360f7de0277346262b29894585e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Set::SetVarImp::exclude</definition>
        <argsstring>(Space &amp;home, int n)</argsstring>
        <name>exclude</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Exclude <emphasis>n</emphasis> from the least upper bound. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="557" column="1" bodyfile="/usr/include/gecode/set/var-imp/set.hpp" bodystart="365" bodyend="367"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetVarImp_1a00a918d3642eb6a61a8cbd2ca14665c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Set::SetVarImp::exclude</definition>
        <argsstring>(Space &amp;home, int i, int j)</argsstring>
        <name>exclude</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>Exclude the range <formula id="392">$\{i,\dots,j\}$</formula> from the least upper bound. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="559" column="1" bodyfile="/usr/include/gecode/set/var-imp/set.hpp" bodystart="350" bodyend="362"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetVarImp_1a7fa37df0e80c8f003fae1992b46700f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Set::SetVarImp::intersect</definition>
        <argsstring>(Space &amp;home, int n)</argsstring>
        <name>intersect</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Exclude everything but <emphasis>n</emphasis> from the least upper bound. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="561" column="1" bodyfile="/usr/include/gecode/set/var-imp/set.hpp" bodystart="210" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetVarImp_1a49a9157ab0a311ca4c84e29a2582efa7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Set::SetVarImp::intersect</definition>
        <argsstring>(Space &amp;home, int i, int j)</argsstring>
        <name>intersect</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>Exclude everything but the range <formula id="392">$\{i,\dots,j\}$</formula> from the least upper bound. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="563" column="1" bodyfile="/usr/include/gecode/set/var-imp/set.hpp" bodystart="185" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetVarImp_1a53dd5b491d0a17473a43400b2b3bd4f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Set::SetVarImp::cardMin</definition>
        <argsstring>(Space &amp;home, unsigned int n)</argsstring>
        <name>cardMin</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Restrict cardinality to be at least n. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="565" column="1" bodyfile="/usr/include/gecode/set/var-imp/set.hpp" bodystart="165" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetVarImp_1a736eb85d044c2ee357f2cc17bb5ced33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Set::SetVarImp::cardMax</definition>
        <argsstring>(Space &amp;home, unsigned int n)</argsstring>
        <name>cardMax</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Restrict cardinality to be at most n. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="567" column="1" bodyfile="/usr/include/gecode/set/var-imp/set.hpp" bodystart="175" bodyend="182"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Domain update by range iterator</header>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetVarImp_1ad63a6efc8edc65d7e69b39796f6c375e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>ModEvent Gecode::Set::SetVarImp::includeI</definition>
        <argsstring>(Space &amp;home, I &amp;i)</argsstring>
        <name>includeI</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>I &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Include set described by <emphasis>i</emphasis> in the greatest lower bound. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="573" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetVarImp_1aba53f3aa66c32090dd6f46e4b9abe951" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>ModEvent Gecode::Set::SetVarImp::excludeI</definition>
        <argsstring>(Space &amp;home, I &amp;i)</argsstring>
        <name>excludeI</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>I &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Exclude set described by <emphasis>i</emphasis> from the least upper bound. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="575" column="1" bodyfile="/usr/include/gecode/set/var-imp/set.hpp" bodystart="371" bodyend="386"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetVarImp_1ae45fd67ede3d0c8eaca15b7beb792d4c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>ModEvent Gecode::Set::SetVarImp::intersectI</definition>
        <argsstring>(Space &amp;home, I &amp;i)</argsstring>
        <name>intersectI</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>I &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Exclude everything but set described by <emphasis>i</emphasis> from the least upper bound. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="577" column="1" bodyfile="/usr/include/gecode/set/var-imp/set.hpp" bodystart="216" bodyend="239"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Dependencies</header>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetVarImp_1a123f7069e488a28e17481b6fbe14c873" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Set::SetVarImp::subscribe</definition>
        <argsstring>(Space &amp;home, Propagator &amp;p, PropCond pc, bool schedule=true)</argsstring>
        <name>subscribe</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Propagator" kindref="compound">Propagator</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="group__TaskVarMEPC_1gad24536e327a507a903179b6a5efd2e3d" kindref="member">PropCond</ref></type>
          <declname>pc</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>schedule</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Subscribe propagator <emphasis>p</emphasis> with propagation condition <emphasis>pc</emphasis> to variable. </para>        </briefdescription>
        <detaileddescription>
<para>In case <emphasis>schedule</emphasis> is false, the propagator is just subscribed but not scheduled for execution (this must be used when creating subscriptions during propagation). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="590" column="1" bodyfile="/usr/include/gecode/set/var-imp/set.hpp" bodystart="513" bodyend="515"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetVarImp_1a32663f2f643069ffccda88c052f2bf31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Set::SetVarImp::cancel</definition>
        <argsstring>(Space &amp;home, Propagator &amp;p, PropCond pc)</argsstring>
        <name>cancel</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Propagator" kindref="compound">Propagator</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="group__TaskVarMEPC_1gad24536e327a507a903179b6a5efd2e3d" kindref="member">PropCond</ref></type>
          <declname>pc</declname>
        </param>
        <briefdescription>
<para>Cancel subscription of propagator <emphasis>p</emphasis> with propagation condition <emphasis>pc</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="592" column="1" bodyfile="/usr/include/gecode/set/var-imp/set.hpp" bodystart="517" bodyend="519"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetVarImp_1a1101e278fe6b96bbaafabb5c688b69c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Set::SetVarImp::subscribe</definition>
        <argsstring>(Space &amp;home, Advisor &amp;a)</argsstring>
        <name>subscribe</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Advisor" kindref="compound">Advisor</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>Subscribe advisor <emphasis>a</emphasis> to variable. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="594" column="1" bodyfile="/usr/include/gecode/set/var-imp/set.hpp" bodystart="521" bodyend="523"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetVarImp_1a6f2c1efe8f5410b1f1604b793e94844a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Set::SetVarImp::cancel</definition>
        <argsstring>(Space &amp;home, Advisor &amp;a)</argsstring>
        <name>cancel</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Advisor" kindref="compound">Advisor</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>Cancel subscription of advisor <emphasis>a</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="596" column="1" bodyfile="/usr/include/gecode/set/var-imp/set.hpp" bodystart="525" bodyend="527"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Cloning</header>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetVarImp_1a9f54080d6e3b1982880902bd7768e73f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGecode_1_1Set_1_1SetVarImp" kindref="compound">SetVarImp</ref> *</type>
        <definition>forceinline SetVarImp * Gecode::Set::SetVarImp::copy</definition>
        <argsstring>(Space &amp;home, bool share)</argsstring>
        <name>copy</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>share</declname>
        </param>
        <briefdescription>
<para>Return copy of this variable. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="607" column="1" bodyfile="/usr/include/gecode/set/var-imp/set.hpp" bodystart="428" bodyend="432"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Delta information for advisors</header>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetVarImp_1ab53ccc8988f9857f2d4bd1eda9683b28" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Set::SetVarImp::glbMin</definition>
        <argsstring>(const Delta &amp;d)</argsstring>
        <name>glbMin</name>
        <param>
          <type>const <ref refid="classGecode_1_1Delta" kindref="compound">Delta</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Return minimum value just pruned from glb. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="613" column="1" bodyfile="/usr/include/gecode/set/var-imp/set.hpp" bodystart="140" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetVarImp_1ab73fe4547c74a0b8e48a85ce14da4f1f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Set::SetVarImp::glbMax</definition>
        <argsstring>(const Delta &amp;d)</argsstring>
        <name>glbMax</name>
        <param>
          <type>const <ref refid="classGecode_1_1Delta" kindref="compound">Delta</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Return maximum value just pruned from glb. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="615" column="1" bodyfile="/usr/include/gecode/set/var-imp/set.hpp" bodystart="144" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetVarImp_1a1ecc99232c92f61be1c460ca7073fd50" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::Set::SetVarImp::glbAny</definition>
        <argsstring>(const Delta &amp;d)</argsstring>
        <name>glbAny</name>
        <param>
          <type>const <ref refid="classGecode_1_1Delta" kindref="compound">Delta</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Test whether arbitrary values got pruned from glb. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="617" column="1" bodyfile="/usr/include/gecode/set/var-imp/set.hpp" bodystart="148" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetVarImp_1a97c82f21a0f8c260d16a06b3e82b2d7b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Set::SetVarImp::lubMin</definition>
        <argsstring>(const Delta &amp;d)</argsstring>
        <name>lubMin</name>
        <param>
          <type>const <ref refid="classGecode_1_1Delta" kindref="compound">Delta</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Return minimum value just pruned from lub. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="619" column="1" bodyfile="/usr/include/gecode/set/var-imp/set.hpp" bodystart="152" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetVarImp_1a725722f31c7372c0c82e1ab685ba1953" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Set::SetVarImp::lubMax</definition>
        <argsstring>(const Delta &amp;d)</argsstring>
        <name>lubMax</name>
        <param>
          <type>const <ref refid="classGecode_1_1Delta" kindref="compound">Delta</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Return maximum value just pruned from lub. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="621" column="1" bodyfile="/usr/include/gecode/set/var-imp/set.hpp" bodystart="156" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetVarImp_1a0125b837f3f7e385d424427507aca705" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::Set::SetVarImp::lubAny</definition>
        <argsstring>(const Delta &amp;d)</argsstring>
        <name>lubAny</name>
        <param>
          <type>const <ref refid="classGecode_1_1Delta" kindref="compound">Delta</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Test whether arbitrary values got pruned from lub. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="623" column="1" bodyfile="/usr/include/gecode/set/var-imp/set.hpp" bodystart="160" bodyend="162"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classGecode_1_1Set_1_1SetVarImp_1a3fedeb0aec49d6e4f07d1630f747aff5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class LubRanges&lt; SetVarImp * &gt;</definition>
        <argsstring></argsstring>
        <name>LubRanges&lt; SetVarImp * &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="418" column="1" bodyfile="/usr/include/gecode/set/var-imp.hpp" bodystart="435" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classGecode_1_1Set_1_1SetVarImp_1a3db3eb0a56009246f278c5a9cf374f9b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class GlbRanges&lt; SetVarImp * &gt;</definition>
        <argsstring></argsstring>
        <name>GlbRanges&lt; SetVarImp * &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="418" column="1" bodyfile="/usr/include/gecode/set/var-imp.hpp" bodystart="436" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classGecode_1_1Set_1_1SetVarImp_1a791f1b46134cc4ae8c03b63f9f98925c" prot="private" static="no" mutable="no">
        <type><ref refid="classGecode_1_1Set_1_1LUBndSet" kindref="compound">LUBndSet</ref></type>
        <definition>LUBndSet Gecode::Set::SetVarImp::lub</definition>
        <argsstring></argsstring>
        <name>lub</name>
        <briefdescription>
<para>The least upper bound of the domain. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="439" column="1" bodyfile="/usr/include/gecode/set/var-imp.hpp" bodystart="439" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Set_1_1SetVarImp_1ac77748a9cdb9bcc02b0eb1944163d96c" prot="private" static="no" mutable="no">
        <type><ref refid="classGecode_1_1Set_1_1GLBndSet" kindref="compound">GLBndSet</ref></type>
        <definition>GLBndSet Gecode::Set::SetVarImp::glb</definition>
        <argsstring></argsstring>
        <name>glb</name>
        <briefdescription>
<para>The greatest lower bound of the domain. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="441" column="1" bodyfile="/usr/include/gecode/set/var-imp.hpp" bodystart="441" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetVarImp_1aee4b1d450cf12cf1fcb237ce571c424c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Gecode::Set::SetVarImp::SetVarImp</definition>
        <argsstring>(Space &amp;home, bool share, SetVarImp &amp;x)</argsstring>
        <name>SetVarImp</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>share</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Set_1_1SetVarImp" kindref="compound">SetVarImp</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Constructor for cloning <emphasis>x</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="445" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetVarImp_1afc412d39b1012e846fe53371921de650" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type>forceinline <ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Set::SetVarImp::includeI</definition>
        <argsstring>(Space &amp;home, I &amp;iterator)</argsstring>
        <name>includeI</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>I &amp;</type>
          <declname>iterator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp/set.hpp" line="296" column="1" bodyfile="/usr/include/gecode/set/var-imp/set.hpp" bodystart="296" bodyend="313"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetVarImp_1a8691775b5ee6a09c26aab9169fc83fbf" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GECODE_SET_EXPORT <ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>GECODE_SET_EXPORT ModEvent Gecode::Set::SetVarImp::processLubChange</definition>
        <argsstring>(Space &amp;home, SetDelta &amp;d)</argsstring>
        <name>processLubChange</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Set_1_1SetDelta" kindref="compound">SetDelta</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="537" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetVarImp_1a5afbdd65c75b571fc40889838f321daa" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GECODE_SET_EXPORT <ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>GECODE_SET_EXPORT ModEvent Gecode::Set::SetVarImp::processGlbChange</definition>
        <argsstring>(Space &amp;home, SetDelta &amp;d)</argsstring>
        <name>processGlbChange</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Set_1_1SetDelta" kindref="compound">SetDelta</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="538" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1SetVarImp_1a7b58d3a307e0b38dd3ce51f65c63f480" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GECODE_SET_EXPORT <ref refid="classGecode_1_1Set_1_1SetVarImp" kindref="compound">SetVarImp</ref> *</type>
        <definition>GECODE_SET_EXPORT SetVarImp* Gecode::Set::SetVarImp::perform_copy</definition>
        <argsstring>(Space &amp;home, bool share)</argsstring>
        <name>perform_copy</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>share</declname>
        </param>
        <briefdescription>
<para>Return copy of not-yet copied variable. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="601" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Finite integer set variable implementation. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="6448">
        <label>Gecode::Set::SetVarImp</label>
        <link refid="classGecode_1_1Set_1_1SetVarImp"/>
        <childnode refid="6449" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6449">
        <label>SetVarImpBase</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6450">
        <label>Gecode::Set::SetVarImp</label>
        <link refid="classGecode_1_1Set_1_1SetVarImp"/>
        <childnode refid="6451" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6451">
        <label>SetVarImpBase</label>
      </node>
    </collaborationgraph>
    <location file="/usr/include/gecode/set/var-imp.hpp" line="434" column="1" bodyfile="/usr/include/gecode/set/var-imp.hpp" bodystart="434" bodyend="626"/>
    <listofallmembers>
      <member refid="classGecode_1_1Set_1_1SetVarImp_1addc466fe98c9c656331ffc8c0ae291bc" prot="public" virt="non-virtual"><scope>Gecode::Set::SetVarImp</scope><name>assigned</name></member>
      <member refid="classGecode_1_1Set_1_1SetVarImp_1a32663f2f643069ffccda88c052f2bf31" prot="public" virt="non-virtual"><scope>Gecode::Set::SetVarImp</scope><name>cancel</name></member>
      <member refid="classGecode_1_1Set_1_1SetVarImp_1a6f2c1efe8f5410b1f1604b793e94844a" prot="public" virt="non-virtual"><scope>Gecode::Set::SetVarImp</scope><name>cancel</name></member>
      <member refid="classGecode_1_1Set_1_1SetVarImp_1a65129997f2e9f7d72d920fdec313ad78" prot="public" virt="non-virtual"><scope>Gecode::Set::SetVarImp</scope><name>cardMax</name></member>
      <member refid="classGecode_1_1Set_1_1SetVarImp_1a736eb85d044c2ee357f2cc17bb5ced33" prot="public" virt="non-virtual"><scope>Gecode::Set::SetVarImp</scope><name>cardMax</name></member>
      <member refid="classGecode_1_1Set_1_1SetVarImp_1a3714528e561a1addf59aa43ddb60257e" prot="private" virt="non-virtual"><scope>Gecode::Set::SetVarImp</scope><name>cardMax_full</name></member>
      <member refid="classGecode_1_1Set_1_1SetVarImp_1a694f58350a6c3a63ced1fb5bb57ed658" prot="public" virt="non-virtual"><scope>Gecode::Set::SetVarImp</scope><name>cardMin</name></member>
      <member refid="classGecode_1_1Set_1_1SetVarImp_1a53dd5b491d0a17473a43400b2b3bd4f5" prot="public" virt="non-virtual"><scope>Gecode::Set::SetVarImp</scope><name>cardMin</name></member>
      <member refid="classGecode_1_1Set_1_1SetVarImp_1a217f9e3442db3174d9068965d7258783" prot="private" virt="non-virtual"><scope>Gecode::Set::SetVarImp</scope><name>cardMin_full</name></member>
      <member refid="classGecode_1_1Set_1_1SetVarImp_1a9f54080d6e3b1982880902bd7768e73f" prot="public" virt="non-virtual"><scope>Gecode::Set::SetVarImp</scope><name>copy</name></member>
      <member refid="classGecode_1_1Set_1_1SetVarImp_1a1c19f360f7de0277346262b29894585e" prot="public" virt="non-virtual"><scope>Gecode::Set::SetVarImp</scope><name>exclude</name></member>
      <member refid="classGecode_1_1Set_1_1SetVarImp_1a00a918d3642eb6a61a8cbd2ca14665c3" prot="public" virt="non-virtual"><scope>Gecode::Set::SetVarImp</scope><name>exclude</name></member>
      <member refid="classGecode_1_1Set_1_1SetVarImp_1aba53f3aa66c32090dd6f46e4b9abe951" prot="public" virt="non-virtual"><scope>Gecode::Set::SetVarImp</scope><name>excludeI</name></member>
      <member refid="classGecode_1_1Set_1_1SetVarImp_1a5fa7dd0a2eea314c3da63576c978a809" prot="private" virt="non-virtual"><scope>Gecode::Set::SetVarImp</scope><name>excludeI_full</name></member>
      <member refid="classGecode_1_1Set_1_1SetVarImp_1ac77748a9cdb9bcc02b0eb1944163d96c" prot="private" virt="non-virtual"><scope>Gecode::Set::SetVarImp</scope><name>glb</name></member>
      <member refid="classGecode_1_1Set_1_1SetVarImp_1a1ecc99232c92f61be1c460ca7073fd50" prot="public" virt="non-virtual"><scope>Gecode::Set::SetVarImp</scope><name>glbAny</name></member>
      <member refid="classGecode_1_1Set_1_1SetVarImp_1a5c48f4998235d3ed2ffd4f07ea744dc1" prot="public" virt="non-virtual"><scope>Gecode::Set::SetVarImp</scope><name>glbMax</name></member>
      <member refid="classGecode_1_1Set_1_1SetVarImp_1ab73fe4547c74a0b8e48a85ce14da4f1f" prot="public" virt="non-virtual"><scope>Gecode::Set::SetVarImp</scope><name>glbMax</name></member>
      <member refid="classGecode_1_1Set_1_1SetVarImp_1a7a6057c1a6074e4ce1fb4f334dd33310" prot="public" virt="non-virtual"><scope>Gecode::Set::SetVarImp</scope><name>glbMin</name></member>
      <member refid="classGecode_1_1Set_1_1SetVarImp_1ab53ccc8988f9857f2d4bd1eda9683b28" prot="public" virt="non-virtual"><scope>Gecode::Set::SetVarImp</scope><name>glbMin</name></member>
      <member refid="classGecode_1_1Set_1_1SetVarImp_1a3db3eb0a56009246f278c5a9cf374f9b" prot="private" virt="non-virtual"><scope>Gecode::Set::SetVarImp</scope><name>GlbRanges&lt; SetVarImp * &gt;</name></member>
      <member refid="classGecode_1_1Set_1_1SetVarImp_1a252e4c7ba95ccc99ab0100cfb7573e33" prot="public" virt="non-virtual"><scope>Gecode::Set::SetVarImp</scope><name>glbSize</name></member>
      <member refid="classGecode_1_1Set_1_1SetVarImp_1ac8090545b4c8063ffe65744c54030434" prot="public" virt="non-virtual"><scope>Gecode::Set::SetVarImp</scope><name>include</name></member>
      <member refid="classGecode_1_1Set_1_1SetVarImp_1ac649cbfd3947fbefeacd3623a6a7d000" prot="public" virt="non-virtual"><scope>Gecode::Set::SetVarImp</scope><name>include</name></member>
      <member refid="classGecode_1_1Set_1_1SetVarImp_1ad63a6efc8edc65d7e69b39796f6c375e" prot="public" virt="non-virtual"><scope>Gecode::Set::SetVarImp</scope><name>includeI</name></member>
      <member refid="classGecode_1_1Set_1_1SetVarImp_1afc412d39b1012e846fe53371921de650" prot="public" virt="non-virtual"><scope>Gecode::Set::SetVarImp</scope><name>includeI</name></member>
      <member refid="classGecode_1_1Set_1_1SetVarImp_1ac1f135f634165a9ea9d6ef81fd554c4c" prot="private" virt="non-virtual"><scope>Gecode::Set::SetVarImp</scope><name>includeI_full</name></member>
      <member refid="classGecode_1_1Set_1_1SetVarImp_1a7fa37df0e80c8f003fae1992b46700f8" prot="public" virt="non-virtual"><scope>Gecode::Set::SetVarImp</scope><name>intersect</name></member>
      <member refid="classGecode_1_1Set_1_1SetVarImp_1a49a9157ab0a311ca4c84e29a2582efa7" prot="public" virt="non-virtual"><scope>Gecode::Set::SetVarImp</scope><name>intersect</name></member>
      <member refid="classGecode_1_1Set_1_1SetVarImp_1ae45fd67ede3d0c8eaca15b7beb792d4c" prot="public" virt="non-virtual"><scope>Gecode::Set::SetVarImp</scope><name>intersectI</name></member>
      <member refid="classGecode_1_1Set_1_1SetVarImp_1a1c417a93a53e373315da4c6120475d8f" prot="private" virt="non-virtual"><scope>Gecode::Set::SetVarImp</scope><name>intersectI_full</name></member>
      <member refid="classGecode_1_1Set_1_1SetVarImp_1a61e84ec39a34eee2fe061b4426b75149" prot="public" virt="non-virtual"><scope>Gecode::Set::SetVarImp</scope><name>knownIn</name></member>
      <member refid="classGecode_1_1Set_1_1SetVarImp_1afb0cb21056528047b084d78b05068fc8" prot="public" virt="non-virtual"><scope>Gecode::Set::SetVarImp</scope><name>knownOut</name></member>
      <member refid="classGecode_1_1Set_1_1SetVarImp_1a791f1b46134cc4ae8c03b63f9f98925c" prot="private" virt="non-virtual"><scope>Gecode::Set::SetVarImp</scope><name>lub</name></member>
      <member refid="classGecode_1_1Set_1_1SetVarImp_1a0125b837f3f7e385d424427507aca705" prot="public" virt="non-virtual"><scope>Gecode::Set::SetVarImp</scope><name>lubAny</name></member>
      <member refid="classGecode_1_1Set_1_1SetVarImp_1ad37e2c37f2a2f80f4df811aef1e9b3c7" prot="public" virt="non-virtual"><scope>Gecode::Set::SetVarImp</scope><name>lubMax</name></member>
      <member refid="classGecode_1_1Set_1_1SetVarImp_1a725722f31c7372c0c82e1ab685ba1953" prot="public" virt="non-virtual"><scope>Gecode::Set::SetVarImp</scope><name>lubMax</name></member>
      <member refid="classGecode_1_1Set_1_1SetVarImp_1a8929c4016f978748891be33bfb9e4ae5" prot="public" virt="non-virtual"><scope>Gecode::Set::SetVarImp</scope><name>lubMin</name></member>
      <member refid="classGecode_1_1Set_1_1SetVarImp_1a97c82f21a0f8c260d16a06b3e82b2d7b" prot="public" virt="non-virtual"><scope>Gecode::Set::SetVarImp</scope><name>lubMin</name></member>
      <member refid="classGecode_1_1Set_1_1SetVarImp_1aa43ff2b6dee710b5bc1662edc2bc8c87" prot="public" virt="non-virtual"><scope>Gecode::Set::SetVarImp</scope><name>lubMinN</name></member>
      <member refid="classGecode_1_1Set_1_1SetVarImp_1a3fedeb0aec49d6e4f07d1630f747aff5" prot="private" virt="non-virtual"><scope>Gecode::Set::SetVarImp</scope><name>LubRanges&lt; SetVarImp * &gt;</name></member>
      <member refid="classGecode_1_1Set_1_1SetVarImp_1a2606ebe5d3efdf67cb2549894a3d63b5" prot="public" virt="non-virtual"><scope>Gecode::Set::SetVarImp</scope><name>lubSize</name></member>
      <member refid="classGecode_1_1Set_1_1SetVarImp_1a7b58d3a307e0b38dd3ce51f65c63f480" prot="private" virt="non-virtual"><scope>Gecode::Set::SetVarImp</scope><name>perform_copy</name></member>
      <member refid="classGecode_1_1Set_1_1SetVarImp_1a5afbdd65c75b571fc40889838f321daa" prot="private" virt="non-virtual"><scope>Gecode::Set::SetVarImp</scope><name>processGlbChange</name></member>
      <member refid="classGecode_1_1Set_1_1SetVarImp_1a8691775b5ee6a09c26aab9169fc83fbf" prot="private" virt="non-virtual"><scope>Gecode::Set::SetVarImp</scope><name>processLubChange</name></member>
      <member refid="classGecode_1_1Set_1_1SetVarImp_1aee4b1d450cf12cf1fcb237ce571c424c" prot="protected" virt="non-virtual"><scope>Gecode::Set::SetVarImp</scope><name>SetVarImp</name></member>
      <member refid="classGecode_1_1Set_1_1SetVarImp_1a8844c4fe3f0c0144d80c5ea6c6bc0eaa" prot="public" virt="non-virtual"><scope>Gecode::Set::SetVarImp</scope><name>SetVarImp</name></member>
      <member refid="classGecode_1_1Set_1_1SetVarImp_1a2c3fa3b9965d6a231c73b68f0342cc3d" prot="public" virt="non-virtual"><scope>Gecode::Set::SetVarImp</scope><name>SetVarImp</name></member>
      <member refid="classGecode_1_1Set_1_1SetVarImp_1ab4744a8971a7e56588d2507460207e61" prot="public" virt="non-virtual"><scope>Gecode::Set::SetVarImp</scope><name>SetVarImp</name></member>
      <member refid="classGecode_1_1Set_1_1SetVarImp_1a8b5b995ce1eac5d65e118735ccba42b0" prot="public" virt="non-virtual"><scope>Gecode::Set::SetVarImp</scope><name>SetVarImp</name></member>
      <member refid="classGecode_1_1Set_1_1SetVarImp_1ad0d6f9643f68939fa7aad27ee1e931be" prot="public" virt="non-virtual"><scope>Gecode::Set::SetVarImp</scope><name>SetVarImp</name></member>
      <member refid="classGecode_1_1Set_1_1SetVarImp_1a123f7069e488a28e17481b6fbe14c873" prot="public" virt="non-virtual"><scope>Gecode::Set::SetVarImp</scope><name>subscribe</name></member>
      <member refid="classGecode_1_1Set_1_1SetVarImp_1a1101e278fe6b96bbaafabb5c688b69c4" prot="public" virt="non-virtual"><scope>Gecode::Set::SetVarImp</scope><name>subscribe</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
