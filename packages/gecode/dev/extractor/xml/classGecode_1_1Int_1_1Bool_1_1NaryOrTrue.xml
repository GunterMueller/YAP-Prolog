<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classGecode_1_1Int_1_1Bool_1_1NaryOrTrue" kind="class" prot="public">
    <compoundname>Gecode::Int::Bool::NaryOrTrue</compoundname>
    <basecompoundref refid="classGecode_1_1BinaryPropagator" prot="public" virt="non-virtual">Gecode::BinaryPropagator&lt; BV, PC_BOOL_VAL &gt;</basecompoundref>
    <includes refid="bool_8hh" local="no">bool.hh</includes>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>BV</declname>
        <defname>BV</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classGecode_1_1Int_1_1Bool_1_1NaryOrTrue_1a559653e5f8824de1cfd408571a57193f" prot="protected" static="no" mutable="no">
        <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; BV &gt;</type>
        <definition>ViewArray&lt;BV&gt; Gecode::Int::Bool::NaryOrTrue&lt; BV &gt;::x</definition>
        <argsstring></argsstring>
        <name>x</name>
        <briefdescription>
<para>Views not yet subscribed to. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/bool.hh" line="396" column="1" bodyfile="/usr/include/gecode/int/bool.hh" bodystart="396" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classGecode_1_1Int_1_1Bool_1_1NaryOrTrue_1a1032cd260da4c7ee8cefbed4e5569555" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>forceinline ExecStatus Gecode::Int::Bool::NaryOrTrue&lt; BV &gt;::resubscribe</definition>
        <argsstring>(Space &amp;home, BV &amp;x0, BV x1)</argsstring>
        <name>resubscribe</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>BV &amp;</type>
          <declname>x0</declname>
        </param>
        <param>
          <type>BV</type>
          <declname>x1</declname>
        </param>
        <briefdescription>
<para>Update subscription. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/bool.hh" line="398" column="1" bodyfile="/usr/include/gecode/int/bool/or.hpp" bodystart="698" bodyend="718"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Bool_1_1NaryOrTrue_1ac72f1aa756ff90f0cbdf8f51ac4993c5" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Int::Bool::NaryOrTrue&lt; BV &gt;::NaryOrTrue</definition>
        <argsstring>(Home home, ViewArray&lt; BV &gt; &amp;x)</argsstring>
        <name>NaryOrTrue</name>
        <param>
          <type><ref refid="classGecode_1_1Home" kindref="compound">Home</ref></type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; BV &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Constructor for posting. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/bool.hh" line="400" column="1" bodyfile="/usr/include/gecode/int/bool/or.hpp" bodystart="617" bodyend="621"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Bool_1_1NaryOrTrue_1ac1aff0f427d54fa727233a040aed406b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Int::Bool::NaryOrTrue&lt; BV &gt;::NaryOrTrue</definition>
        <argsstring>(Space &amp;home, bool share, NaryOrTrue&lt; BV &gt; &amp;p)</argsstring>
        <name>NaryOrTrue</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>share</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1Bool_1_1NaryOrTrue" kindref="compound">NaryOrTrue</ref>&lt; BV &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Constructor for cloning <emphasis>p</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/bool.hh" line="402" column="1" bodyfile="/usr/include/gecode/int/bool/or.hpp" bodystart="631" bodyend="634"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classGecode_1_1Int_1_1Bool_1_1NaryOrTrue_1a84720e2844e6c685d9514832c14cd9da" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classGecode_1_1Actor" kindref="compound">Actor</ref> *</type>
        <definition>Actor * Gecode::Int::Bool::NaryOrTrue&lt; BV &gt;::copy</definition>
        <argsstring>(Space &amp;home, bool share)</argsstring>
        <name>copy</name>
        <reimplements refid="classGecode_1_1Actor_1a67b240e2810720846c3632c94cc9c99d">copy</reimplements>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>share</declname>
        </param>
        <briefdescription>
<para>Copy propagator during cloning. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/bool.hh" line="405" column="1" bodyfile="/usr/include/gecode/int/bool/or.hpp" bodystart="638" bodyend="663"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Bool_1_1NaryOrTrue_1afd7b32b6ce3378134c2f2244ab05be1d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classGecode_1_1PropCost" kindref="compound">PropCost</ref></type>
        <definition>PropCost Gecode::Int::Bool::NaryOrTrue&lt; BV &gt;::cost</definition>
        <argsstring>(const Space &amp;home, const ModEventDelta &amp;med) const </argsstring>
        <name>cost</name>
        <reimplements refid="classGecode_1_1BinaryPropagator_1ad1d5389daa9fd7e4cfa70a15e37bad1d">cost</reimplements>
        <param>
          <type>const <ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceGecode_1a129e41c1d037528010d7b6706495a560" kindref="member">ModEventDelta</ref> &amp;</type>
          <declname>med</declname>
        </param>
        <briefdescription>
<para>Cost function (defined as low unary) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/bool.hh" line="407" column="1" bodyfile="/usr/include/gecode/int/bool/or.hpp" bodystart="625" bodyend="627"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Bool_1_1NaryOrTrue_1a08597d07963035e0458f3969c960e373" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>ExecStatus Gecode::Int::Bool::NaryOrTrue&lt; BV &gt;::propagate</definition>
        <argsstring>(Space &amp;home, const ModEventDelta &amp;med)</argsstring>
        <name>propagate</name>
        <reimplements refid="classGecode_1_1Propagator_1ad2dc98c1345222892592339948c6cde1">propagate</reimplements>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceGecode_1a129e41c1d037528010d7b6706495a560" kindref="member">ModEventDelta</ref> &amp;</type>
          <declname>med</declname>
        </param>
        <briefdescription>
<para>Perform propagation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/bool.hh" line="409" column="1" bodyfile="/usr/include/gecode/int/bool/or.hpp" bodystart="722" bodyend="730"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Bool_1_1NaryOrTrue_1a86bd42c5ccfa53e9bd5f579bb870fa89" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>size_t</type>
        <definition>forceinline size_t Gecode::Int::Bool::NaryOrTrue&lt; BV &gt;::dispose</definition>
        <argsstring>(Space &amp;home)</argsstring>
        <name>dispose</name>
        <reimplements refid="classGecode_1_1BinaryPropagator_1a30b5466d8a2da45e2505fb4eacdca22e">dispose</reimplements>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <briefdescription>
<para>Delete propagator and return its size. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/bool.hh" line="413" column="1" bodyfile="/usr/include/gecode/int/bool/or.hpp" bodystart="691" bodyend="694"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classGecode_1_1Int_1_1Bool_1_1NaryOrTrue_1a407f3cb5515ab858be3769820c83975c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>ExecStatus Gecode::Int::Bool::NaryOrTrue&lt; BV &gt;::post</definition>
        <argsstring>(Home home, ViewArray&lt; BV &gt; &amp;b)</argsstring>
        <name>post</name>
        <param>
          <type><ref refid="classGecode_1_1Home" kindref="compound">Home</ref></type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; BV &gt; &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Post propagator <formula id="107">$ \bigvee_{i=0}^{|b|-1} b_i = 0$</formula>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/bool.hh" line="411" column="1" bodyfile="/usr/include/gecode/int/bool/or.hpp" bodystart="667" bodyend="687"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Boolean n-ary disjunction propagator (true) </para>    </briefdescription>
    <detaileddescription>
<para>Requires<programlisting><codeline><highlight class="preprocessor">#include<sp/>&lt;gecode/int/bool.hh&gt;</highlight><highlight class="normal"><sp/></highlight></codeline>
</programlisting> </para>    </detaileddescription>
    <inheritancegraph>
      <node id="4332">
        <label>Gecode::Int::Bool::NaryOrTrue&lt; BV &gt;</label>
        <link refid="classGecode_1_1Int_1_1Bool_1_1NaryOrTrue"/>
        <childnode refid="4333" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4334">
        <label>Gecode::Propagator</label>
        <link refid="classGecode_1_1Propagator"/>
        <childnode refid="4335" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4333">
        <label>Gecode::BinaryPropagator&lt; BV, PC_BOOL_VAL &gt;</label>
        <link refid="classGecode_1_1BinaryPropagator"/>
        <childnode refid="4334" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4335">
        <label>Gecode::Actor</label>
        <link refid="classGecode_1_1Actor"/>
        <childnode refid="4336" relation="private-inheritance">
        </childnode>
      </node>
      <node id="4336">
        <label>Gecode::ActorLink</label>
        <link refid="classGecode_1_1ActorLink"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4337">
        <label>Gecode::Int::Bool::NaryOrTrue&lt; BV &gt;</label>
        <link refid="classGecode_1_1Int_1_1Bool_1_1NaryOrTrue"/>
        <childnode refid="4338" relation="public-inheritance">
        </childnode>
        <childnode refid="4342" relation="usage">
          <edgelabel>x</edgelabel>
        </childnode>
      </node>
      <node id="4342">
        <label>Gecode::ViewArray&lt; BV &gt;</label>
        <link refid="classGecode_1_1ViewArray"/>
      </node>
      <node id="4339">
        <label>Gecode::Propagator</label>
        <link refid="classGecode_1_1Propagator"/>
        <childnode refid="4340" relation="public-inheritance">
        </childnode>
        <childnode refid="4341" relation="usage">
          <edgelabel>advisors</edgelabel>
        </childnode>
      </node>
      <node id="4338">
        <label>Gecode::BinaryPropagator&lt; BV, PC_BOOL_VAL &gt;</label>
        <link refid="classGecode_1_1BinaryPropagator"/>
        <childnode refid="4339" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4340">
        <label>Gecode::Actor</label>
        <link refid="classGecode_1_1Actor"/>
        <childnode refid="4341" relation="private-inheritance">
        </childnode>
      </node>
      <node id="4341">
        <label>Gecode::ActorLink</label>
        <link refid="classGecode_1_1ActorLink"/>
      </node>
    </collaborationgraph>
    <location file="/usr/include/gecode/int/bool.hh" line="391" column="1" bodyfile="/usr/include/gecode/int/bool.hh" bodystart="391" bodyend="414"/>
    <listofallmembers>
      <member refid="classGecode_1_1Propagator_1a55629f061a0fd8ecb2a4c41aa1568e28" prot="public" virt="virtual"><scope>Gecode::Int::Bool::NaryOrTrue</scope><name>advise</name></member>
      <member refid="classGecode_1_1Propagator_1afee33d8aed2bc9debee126f17b5015cf" prot="public" virt="non-virtual"><scope>Gecode::Int::Bool::NaryOrTrue</scope><name>advisors</name></member>
      <member refid="classGecode_1_1Propagator_1a593de773d2204f47ea365a99df2f75d0" prot="public" virt="non-virtual"><scope>Gecode::Int::Bool::NaryOrTrue</scope><name>afc</name></member>
      <member refid="classGecode_1_1BinaryPropagator_1a352dd6847573a1e6d380632b5375a32b" prot="protected" virt="non-virtual"><scope>Gecode::Int::Bool::NaryOrTrue</scope><name>BinaryPropagator</name></member>
      <member refid="classGecode_1_1BinaryPropagator_1a9779a1abaecbcbdbc5b020818b2ddd5b" prot="protected" virt="non-virtual"><scope>Gecode::Int::Bool::NaryOrTrue</scope><name>BinaryPropagator</name></member>
      <member refid="classGecode_1_1BinaryPropagator_1aac3a4c9b130503ba07cb197bdb3d3c0f" prot="protected" virt="non-virtual"><scope>Gecode::Int::Bool::NaryOrTrue</scope><name>BinaryPropagator</name></member>
      <member refid="classGecode_1_1ActorLink_1a8427f41a27a72b52ceb52d0fdad21063" prot="public" virt="non-virtual" ambiguityscope="Gecode::ActorLink::"><scope>Gecode::Int::Bool::NaryOrTrue</scope><name>cast</name></member>
      <member refid="classGecode_1_1ActorLink_1a464526456db41981f82a1193a8b4e569" prot="public" virt="non-virtual" ambiguityscope="Gecode::ActorLink::"><scope>Gecode::Int::Bool::NaryOrTrue</scope><name>cast</name></member>
      <member refid="classGecode_1_1Int_1_1Bool_1_1NaryOrTrue_1a84720e2844e6c685d9514832c14cd9da" prot="public" virt="virtual"><scope>Gecode::Int::Bool::NaryOrTrue</scope><name>copy</name></member>
      <member refid="classGecode_1_1Int_1_1Bool_1_1NaryOrTrue_1afd7b32b6ce3378134c2f2244ab05be1d" prot="public" virt="virtual"><scope>Gecode::Int::Bool::NaryOrTrue</scope><name>cost</name></member>
      <member refid="classGecode_1_1Int_1_1Bool_1_1NaryOrTrue_1a86bd42c5ccfa53e9bd5f579bb870fa89" prot="public" virt="virtual"><scope>Gecode::Int::Bool::NaryOrTrue</scope><name>dispose</name></member>
      <member refid="classGecode_1_1Propagator_1a3b286c7aec9843b60a531b495015b5f7" prot="protected" virt="non-virtual"><scope>Gecode::Int::Bool::NaryOrTrue</scope><name>fwd</name></member>
      <member refid="classGecode_1_1Propagator_1ae9dfa55e47e4ff8e0c8e4c2a6efdbfc0" prot="public" virt="non-virtual"><scope>Gecode::Int::Bool::NaryOrTrue</scope><name>med</name></member>
      <member refid="classGecode_1_1Propagator_1a4905db55af49af8f38558bdbcf5fd4a2" prot="public" virt="non-virtual"><scope>Gecode::Int::Bool::NaryOrTrue</scope><name>modeventdelta</name></member>
      <member refid="classGecode_1_1Int_1_1Bool_1_1NaryOrTrue_1ac72f1aa756ff90f0cbdf8f51ac4993c5" prot="protected" virt="non-virtual"><scope>Gecode::Int::Bool::NaryOrTrue</scope><name>NaryOrTrue</name></member>
      <member refid="classGecode_1_1Int_1_1Bool_1_1NaryOrTrue_1ac1aff0f427d54fa727233a040aed406b" prot="protected" virt="non-virtual"><scope>Gecode::Int::Bool::NaryOrTrue</scope><name>NaryOrTrue</name></member>
      <member refid="classGecode_1_1Actor_1a388f671145dcf906f81d22bde2dc0f3d" prot="public" virt="non-virtual"><scope>Gecode::Int::Bool::NaryOrTrue</scope><name>operator delete</name></member>
      <member refid="classGecode_1_1Actor_1ac28b9601b530076a1bda75834487f898" prot="public" virt="non-virtual"><scope>Gecode::Int::Bool::NaryOrTrue</scope><name>operator new</name></member>
      <member refid="classGecode_1_1Int_1_1Bool_1_1NaryOrTrue_1a407f3cb5515ab858be3769820c83975c" prot="public" virt="non-virtual"><scope>Gecode::Int::Bool::NaryOrTrue</scope><name>post</name></member>
      <member refid="classGecode_1_1Int_1_1Bool_1_1NaryOrTrue_1a08597d07963035e0458f3969c960e373" prot="public" virt="virtual"><scope>Gecode::Int::Bool::NaryOrTrue</scope><name>propagate</name></member>
      <member refid="classGecode_1_1Propagator_1a891f3e84cde2e8e60f8ad9340ad74b05" prot="protected" virt="non-virtual"><scope>Gecode::Int::Bool::NaryOrTrue</scope><name>Propagator</name></member>
      <member refid="classGecode_1_1Propagator_1afeaeed8dae67de4313858bd82fdae5d0" prot="protected" virt="non-virtual"><scope>Gecode::Int::Bool::NaryOrTrue</scope><name>Propagator</name></member>
      <member refid="classGecode_1_1Int_1_1Bool_1_1NaryOrTrue_1a1032cd260da4c7ee8cefbed4e5569555" prot="protected" virt="non-virtual"><scope>Gecode::Int::Bool::NaryOrTrue</scope><name>resubscribe</name></member>
      <member refid="classGecode_1_1Propagator_1a1781b5b0df38c39dddca4b44c3a00530" prot="public" virt="non-virtual"><scope>Gecode::Int::Bool::NaryOrTrue</scope><name>size</name></member>
      <member refid="classGecode_1_1Int_1_1Bool_1_1NaryOrTrue_1a559653e5f8824de1cfd408571a57193f" prot="protected" virt="non-virtual"><scope>Gecode::Int::Bool::NaryOrTrue</scope><name>x</name></member>
      <member refid="classGecode_1_1BinaryPropagator_1a0af8caa4d81a2f01e4be6576bb51a2f7" prot="protected" virt="non-virtual"><scope>Gecode::Int::Bool::NaryOrTrue</scope><name>x0</name></member>
      <member refid="classGecode_1_1BinaryPropagator_1ab890f8d037d5627e0a4951af6209d94d" prot="protected" virt="non-virtual"><scope>Gecode::Int::Bool::NaryOrTrue</scope><name>x1</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
