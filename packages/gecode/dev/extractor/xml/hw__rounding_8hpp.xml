<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="hw__rounding_8hpp" kind="file">
    <compoundname>hw_rounding.hpp</compoundname>
    <includes refid="third-party_2boost_2numeric_2interval_2rounding_8hpp" local="no">gecode/third-party/boost/numeric/interval/rounding.hpp</includes>
    <includes refid="rounded__arith_8hpp" local="no">gecode/third-party/boost/numeric/interval/rounded_arith.hpp</includes>
    <includedby refid="interval_8hpp" local="no">/usr/include/gecode/third-party/boost/numeric/interval.hpp</includedby>
    <incdepgraph>
      <node id="34677">
        <label>gecode/third-party/boost/config/suffix.hpp</label>
        <link refid="suffix_8hpp_source"/>
        <childnode refid="34678" relation="include">
        </childnode>
      </node>
      <node id="34679">
        <label>gecode/third-party/boost/config/no_tr1/cmath.hpp</label>
        <link refid="cmath_8hpp_source"/>
        <childnode refid="34680" relation="include">
        </childnode>
      </node>
      <node id="34671">
        <label>gecode/third-party/boost/numeric/interval/rounding.hpp</label>
        <link refid="third-party_2boost_2numeric_2interval_2rounding_8hpp_source"/>
      </node>
      <node id="34680">
        <label>cmath</label>
      </node>
      <node id="34673">
        <label>gecode/third-party/boost/numeric/interval/detail/bugs.hpp</label>
        <link refid="bugs_8hpp_source"/>
        <childnode refid="34674" relation="include">
        </childnode>
      </node>
      <node id="34678">
        <label>limits.h</label>
      </node>
      <node id="34676">
        <label>gecode/third-party/boost/config/select_platform_config.hpp</label>
        <link refid="select__platform__config_8hpp_source"/>
      </node>
      <node id="34675">
        <label>gecode/third-party/boost/config/select_compiler_config.hpp</label>
        <link refid="select__compiler__config_8hpp_source"/>
      </node>
      <node id="34674">
        <label>gecode/third-party/boost/config.hpp</label>
        <link refid="third-party_2boost_2config_8hpp_source"/>
        <childnode refid="34675" relation="include">
        </childnode>
        <childnode refid="34676" relation="include">
        </childnode>
        <childnode refid="34677" relation="include">
        </childnode>
      </node>
      <node id="34670">
        <label>/usr/include/gecode/third-party/boost/numeric/interval/hw_rounding.hpp</label>
        <link refid="hw_rounding.hpp"/>
        <childnode refid="34671" relation="include">
        </childnode>
        <childnode refid="34672" relation="include">
        </childnode>
      </node>
      <node id="34672">
        <label>gecode/third-party/boost/numeric/interval/rounded_arith.hpp</label>
        <link refid="rounded__arith_8hpp_source"/>
        <childnode refid="34671" relation="include">
        </childnode>
        <childnode refid="34673" relation="include">
        </childnode>
        <childnode refid="34679" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="34683">
        <label>/usr/include/gecode/float.hh</label>
        <link refid="float_8hh_source"/>
        <childnode refid="34684" relation="include">
        </childnode>
        <childnode refid="34685" relation="include">
        </childnode>
        <childnode refid="34686" relation="include">
        </childnode>
        <childnode refid="34687" relation="include">
        </childnode>
      </node>
      <node id="34682">
        <label>/usr/include/gecode/third-party/boost/numeric/interval.hpp</label>
        <link refid="interval_8hpp_source"/>
        <childnode refid="34683" relation="include">
        </childnode>
      </node>
      <node id="34687">
        <label>/usr/include/gecode/float/rel.hh</label>
        <link refid="float_2rel_8hh_source"/>
        <childnode refid="34684" relation="include">
        </childnode>
      </node>
      <node id="34684">
        <label>/usr/include/gecode/float/arithmetic.hh</label>
        <link refid="float_2arithmetic_8hh_source"/>
      </node>
      <node id="34681">
        <label>/usr/include/gecode/third-party/boost/numeric/interval/hw_rounding.hpp</label>
        <link refid="hw_rounding.hpp"/>
        <childnode refid="34682" relation="include">
        </childnode>
      </node>
      <node id="34686">
        <label>/usr/include/gecode/float/linear.hh</label>
        <link refid="float_2linear_8hh_source"/>
      </node>
      <node id="34685">
        <label>/usr/include/gecode/float/branch.hh</label>
        <link refid="float_2branch_8hh_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structboost_1_1numeric_1_1interval__lib_1_1rounded__math_3_01float_01_4" prot="public">boost::numeric::interval_lib::rounded_math&lt; float &gt;</innerclass>
    <innerclass refid="structboost_1_1numeric_1_1interval__lib_1_1rounded__math_3_01double_01_4" prot="public">boost::numeric::interval_lib::rounded_math&lt; double &gt;</innerclass>
    <innerclass refid="structboost_1_1numeric_1_1interval__lib_1_1rounded__math_3_01long_01double_01_4" prot="public">boost::numeric::interval_lib::rounded_math&lt; long double &gt;</innerclass>
    <innernamespace refid="namespaceboost">boost</innernamespace>
    <innernamespace refid="namespaceboost_1_1numeric">boost::numeric</innernamespace>
    <innernamespace refid="namespaceboost_1_1numeric_1_1interval__lib">boost::numeric::interval_lib</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="hw__rounding_8hpp_1a624fee40cfd12d023b40d2a004cc197c" prot="public" static="no">
        <name>BOOST_NUMERIC_INTERVAL_NO_HARDWARE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/numeric/interval/hw_rounding.hpp" line="17" column="9" bodyfile="/usr/include/gecode/third-party/boost/numeric/interval/hw_rounding.hpp" bodystart="17" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>Boost<sp/>interval/hw_rounding.hpp<sp/>template<sp/>implementation<sp/>file</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2002<sp/>Hervé<sp/>Brönnimann,<sp/>Guillaume<sp/>Melquiond,<sp/>Sylvain<sp/>Pion</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2005<sp/>Guillaume<sp/>Melquiond</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Distributed<sp/>under<sp/>the<sp/>Boost<sp/>Software<sp/>License,<sp/>Version<sp/>1.0.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>(See<sp/>accompanying<sp/>file<sp/>LICENSE_1_0.txt<sp/>or</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>copy<sp/>at<sp/>http://www.boost.org/LICENSE_1_0.txt)</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>BOOST_NUMERIC_INTERVAL_HW_ROUNDING_HPP</highlight></codeline>
<codeline lineno="12"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>BOOST_NUMERIC_INTERVAL_HW_ROUNDING_HPP</highlight></codeline>
<codeline lineno="13"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gecode/third-party/boost/numeric/interval/rounding.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gecode/third-party/boost/numeric/interval/rounded_arith.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BOOST_NUMERIC_INTERVAL_NO_HARDWARE</highlight></codeline>
<codeline lineno="18"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>define<sp/>appropriate<sp/>specialization<sp/>of<sp/>rounding_control<sp/>for<sp/>built-in<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__x86_64__)<sp/>&amp;&amp;<sp/>(defined(__USE_ISOC99)<sp/>||<sp/>defined(__APPLE__))</highlight></codeline>
<codeline lineno="21"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;gecode/third-party/boost/numeric/interval/detail/c99_rounding_control.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__i386__)<sp/>||<sp/>defined(_M_IX86)<sp/>||<sp/>defined(__BORLANDC__)<sp/>||<sp/>defined(_M_X64)</highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;gecode/third-party/boost/numeric/interval/detail/x86_rounding_control.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(powerpc)<sp/>||<sp/>defined(__powerpc__)<sp/>||<sp/>defined(__ppc__)</highlight></codeline>
<codeline lineno="25"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;gecode/third-party/boost/numeric/interval/detail/ppc_rounding_control.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(sparc)<sp/>||<sp/>defined(__sparc__)</highlight></codeline>
<codeline lineno="27"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;gecode/third-party/boost/numeric/interval/detail/sparc_rounding_control.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(alpha)<sp/>||<sp/>defined(__alpha__)</highlight></codeline>
<codeline lineno="29"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;gecode/third-party/boost/numeric/interval/detail/alpha_rounding_control.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(ia64)<sp/>||<sp/>defined(__ia64)<sp/>||<sp/>defined(__ia64__)</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;gecode/third-party/boost/numeric/interval/detail/ia64_rounding_control.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(BOOST_NUMERIC_INTERVAL_NO_HARDWARE)<sp/>&amp;&amp;<sp/>(defined(__USE_ISOC99)<sp/>||<sp/>defined(__MSL__))</highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;gecode/third-party/boost/numeric/interval/detail/c99_rounding_control.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="37"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(BOOST_NUMERIC_INTERVAL_NO_HARDWARE)</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>undef<sp/>BOOST_NUMERIC_INTERVAL_NO_HARDWARE</highlight></codeline>
<codeline lineno="40"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>error<sp/>Boost.Numeric.Interval:<sp/>Please<sp/>specify<sp/>rounding<sp/>control<sp/>mechanism.</highlight></codeline>
<codeline lineno="41"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="42"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">boost<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">numeric<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">interval_lib<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/>Three<sp/>specializations<sp/>of<sp/>rounded_math&lt;T&gt;</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="52" refid="structboost_1_1numeric_1_1interval__lib_1_1rounded__math_3_01float_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structboost_1_1numeric_1_1interval__lib_1_1rounded__math" kindref="compound">rounded_math</ref>&lt;float&gt;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>:<sp/><ref refid="structboost_1_1numeric_1_1interval__lib_1_1save__state" kindref="compound">save_state</ref>&lt;rounded_arith_opp&lt;float&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="54"><highlight class="normal">{};</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="57" refid="structboost_1_1numeric_1_1interval__lib_1_1rounded__math_3_01double_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structboost_1_1numeric_1_1interval__lib_1_1rounded__math" kindref="compound">rounded_math</ref>&lt;double&gt;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>:<sp/><ref refid="structboost_1_1numeric_1_1interval__lib_1_1save__state" kindref="compound">save_state</ref>&lt;rounded_arith_opp&lt;double&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="59"><highlight class="normal">{};</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="62" refid="structboost_1_1numeric_1_1interval__lib_1_1rounded__math_3_01long_01double_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structboost_1_1numeric_1_1interval__lib_1_1rounded__math" kindref="compound">rounded_math</ref>&lt;long<sp/>double&gt;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>:<sp/><ref refid="structboost_1_1numeric_1_1interval__lib_1_1save__state" kindref="compound">save_state</ref>&lt;rounded_arith_opp&lt;long<sp/>double&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="64"><highlight class="normal">{};</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>interval_lib</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>numeric</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>boost</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>BOOST_NUMERIC_INTERVAL_HW_ROUNDING_HPP</highlight></codeline>
    </programlisting>
    <location file="/usr/include/gecode/third-party/boost/numeric/interval/hw_rounding.hpp"/>
  </compounddef>
</doxygen>
