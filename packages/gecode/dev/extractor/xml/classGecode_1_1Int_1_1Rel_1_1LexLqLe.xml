<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classGecode_1_1Int_1_1Rel_1_1LexLqLe" kind="class" prot="public">
    <compoundname>Gecode::Int::Rel::LexLqLe</compoundname>
    <basecompoundref refid="classGecode_1_1Propagator" prot="public" virt="non-virtual">Gecode::Propagator</basecompoundref>
    <includes refid="int_2rel_8hh" local="no">rel.hh</includes>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>View</declname>
        <defname>View</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classGecode_1_1Int_1_1Rel_1_1LexLqLe_1a2498086d768f13ae0cf9df1f657e1b3c" prot="protected" static="no" mutable="no">
        <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; View &gt;</type>
        <definition>ViewArray&lt;View&gt; Gecode::Int::Rel::LexLqLe&lt; View &gt;::x</definition>
        <argsstring></argsstring>
        <name>x</name>
        <briefdescription>
<para>View arrays. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/rel.hh" line="600" column="1" bodyfile="/usr/include/gecode/int/rel.hh" bodystart="600" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Int_1_1Rel_1_1LexLqLe_1a0b992a2aa9eabcc050f795bb9856f49c" prot="protected" static="no" mutable="no">
        <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; View &gt;</type>
        <definition>ViewArray&lt;View&gt; Gecode::Int::Rel::LexLqLe&lt; View &gt;::y</definition>
        <argsstring></argsstring>
        <name>y</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/rel.hh" line="600" column="1" bodyfile="/usr/include/gecode/int/rel.hh" bodystart="600" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Int_1_1Rel_1_1LexLqLe_1a069d7555c0ed1940dc461ec6f9cf3d79" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Gecode::Int::Rel::LexLqLe&lt; View &gt;::strict</definition>
        <argsstring></argsstring>
        <name>strict</name>
        <briefdescription>
<para>Determines whether propagator is strict or not. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/rel.hh" line="602" column="1" bodyfile="/usr/include/gecode/int/rel.hh" bodystart="602" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classGecode_1_1Int_1_1Rel_1_1LexLqLe_1adfbf4289d0c1691e62c66f4c54536407" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Int::Rel::LexLqLe&lt; View &gt;::LexLqLe</definition>
        <argsstring>(Space &amp;home, bool share, LexLqLe&lt; View &gt; &amp;p)</argsstring>
        <name>LexLqLe</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>share</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1Rel_1_1LexLqLe" kindref="compound">LexLqLe</ref>&lt; View &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Constructor for cloning <emphasis>p</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/rel.hh" line="604" column="1" bodyfile="/usr/include/gecode/int/rel/lex.hpp" bodystart="54" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Rel_1_1LexLqLe_1a3ce5375593360980a3d6c3b4c6a37c85" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Gecode::Int::Rel::LexLqLe&lt; View &gt;::LexLqLe</definition>
        <argsstring>(Home home, ViewArray&lt; View &gt; &amp;x, ViewArray&lt; View &gt; &amp;y, bool strict)</argsstring>
        <name>LexLqLe</name>
        <param>
          <type><ref refid="classGecode_1_1Home" kindref="compound">Home</ref></type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; View &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; View &gt; &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>strict</declname>
        </param>
        <briefdescription>
<para>Constructor for posting. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/rel.hh" line="606" column="1" bodyfile="/usr/include/gecode/int/rel/lex.hpp" bodystart="45" bodyend="50"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classGecode_1_1Int_1_1Rel_1_1LexLqLe_1adf1fce1fd3c4dfb569ce351325379000" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classGecode_1_1Actor" kindref="compound">Actor</ref> *</type>
        <definition>Actor * Gecode::Int::Rel::LexLqLe&lt; View &gt;::copy</definition>
        <argsstring>(Space &amp;home, bool share)</argsstring>
        <name>copy</name>
        <reimplements refid="classGecode_1_1Actor_1a67b240e2810720846c3632c94cc9c99d">copy</reimplements>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>share</declname>
        </param>
        <briefdescription>
<para>Copy propagator during cloning. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/rel.hh" line="609" column="1" bodyfile="/usr/include/gecode/int/rel/lex.hpp" bodystart="62" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Rel_1_1LexLqLe_1a828a8598f5b9c61d38d70fbf51f48cae" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classGecode_1_1PropCost" kindref="compound">PropCost</ref></type>
        <definition>PropCost Gecode::Int::Rel::LexLqLe&lt; View &gt;::cost</definition>
        <argsstring>(const Space &amp;home, const ModEventDelta &amp;med) const </argsstring>
        <name>cost</name>
        <reimplements refid="classGecode_1_1Propagator_1a3de049f07a191fb956c9dbd4153efe75">cost</reimplements>
        <param>
          <type>const <ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceGecode_1a129e41c1d037528010d7b6706495a560" kindref="member">ModEventDelta</ref> &amp;</type>
          <declname>med</declname>
        </param>
        <briefdescription>
<para>Cost function (defined as low linear) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/rel.hh" line="611" column="1" bodyfile="/usr/include/gecode/int/rel/lex.hpp" bodystart="68" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Rel_1_1LexLqLe_1ad608a803d96011a1ed9ffc80f52e68d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>ExecStatus Gecode::Int::Rel::LexLqLe&lt; View &gt;::propagate</definition>
        <argsstring>(Space &amp;home, const ModEventDelta &amp;med)</argsstring>
        <name>propagate</name>
        <reimplements refid="classGecode_1_1Propagator_1ad2dc98c1345222892592339948c6cde1">propagate</reimplements>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceGecode_1a129e41c1d037528010d7b6706495a560" kindref="member">ModEventDelta</ref> &amp;</type>
          <declname>med</declname>
        </param>
        <briefdescription>
<para>Perform propagation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/rel.hh" line="613" column="1" bodyfile="/usr/include/gecode/int/rel/lex.hpp" bodystart="84" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Rel_1_1LexLqLe_1aa455e495b1a034f4cccc00fb5e40123e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>size_t</type>
        <definition>forceinline size_t Gecode::Int::Rel::LexLqLe&lt; View &gt;::dispose</definition>
        <argsstring>(Space &amp;home)</argsstring>
        <name>dispose</name>
        <reimplements refid="classGecode_1_1Actor_1a143253b3eceda40f36834e38c8ac05d9">dispose</reimplements>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <briefdescription>
<para>Delete propagator and return its size. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/rel.hh" line="618" column="1" bodyfile="/usr/include/gecode/int/rel/lex.hpp" bodystart="74" bodyend="80"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classGecode_1_1Int_1_1Rel_1_1LexLqLe_1a13138fdb3041dc6e886058186d12bd47" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>ExecStatus Gecode::Int::Rel::LexLqLe&lt; View &gt;::post</definition>
        <argsstring>(Home home, ViewArray&lt; View &gt; &amp;x, ViewArray&lt; View &gt; &amp;y, bool strict)</argsstring>
        <name>post</name>
        <param>
          <type><ref refid="classGecode_1_1Home" kindref="compound">Home</ref></type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; View &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; View &gt; &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>strict</declname>
        </param>
        <briefdescription>
<para>Post propagator for lexical order between <emphasis>x</emphasis> and <emphasis>y</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/rel.hh" line="615" column="1" bodyfile="/usr/include/gecode/int/rel/lex.hpp" bodystart="238" bodyend="255"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Lexical ordering propagator. </para>    </briefdescription>
    <detaileddescription>
<para>The propagator uses the algorithm (and also the automaton) from: Mats Carlsson, Nicolas Beldiceanu, Revisiting the Lexicographic Ordering Constraint. SICS Technical Report T2002:17, SICS, Sweden, 2002.</para><para>It deviates in the following two main aspects:<itemizedlist>
<listitem><para>Assigned variables are eagerly eliminated This yields the same incremental behaviour with respect to states 1 and 2 of the automaton. With respect to the values of <emphasis>q</emphasis> and <emphasis>r</emphasis> in the report:<itemizedlist>
<listitem><para><emphasis>q</emphasis> is always 0 after elimination</para></listitem><listitem><para><emphasis>r</emphasis> is always 1 after elimination</para></listitem></itemizedlist>
</para></listitem><listitem><para>It is not incremental with respect to states 3 and 4 as no propagation event information is available</para></listitem></itemizedlist>
</para><para>Requires<programlisting><codeline><highlight class="preprocessor">#include<sp/>&lt;gecode/int/rel.hh&gt;</highlight><highlight class="normal"><sp/></highlight></codeline>
</programlisting> </para>    </detaileddescription>
    <inheritancegraph>
      <node id="3291">
        <label>Gecode::Propagator</label>
        <link refid="classGecode_1_1Propagator"/>
        <childnode refid="3292" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3290">
        <label>Gecode::Int::Rel::LexLqLe&lt; View &gt;</label>
        <link refid="classGecode_1_1Int_1_1Rel_1_1LexLqLe"/>
        <childnode refid="3291" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3292">
        <label>Gecode::Actor</label>
        <link refid="classGecode_1_1Actor"/>
        <childnode refid="3293" relation="private-inheritance">
        </childnode>
      </node>
      <node id="3293">
        <label>Gecode::ActorLink</label>
        <link refid="classGecode_1_1ActorLink"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3295">
        <label>Gecode::Propagator</label>
        <link refid="classGecode_1_1Propagator"/>
        <childnode refid="3296" relation="public-inheritance">
        </childnode>
        <childnode refid="3297" relation="usage">
          <edgelabel>advisors</edgelabel>
        </childnode>
      </node>
      <node id="3294">
        <label>Gecode::Int::Rel::LexLqLe&lt; View &gt;</label>
        <link refid="classGecode_1_1Int_1_1Rel_1_1LexLqLe"/>
        <childnode refid="3295" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3296">
        <label>Gecode::Actor</label>
        <link refid="classGecode_1_1Actor"/>
        <childnode refid="3297" relation="private-inheritance">
        </childnode>
      </node>
      <node id="3297">
        <label>Gecode::ActorLink</label>
        <link refid="classGecode_1_1ActorLink"/>
      </node>
    </collaborationgraph>
    <location file="/usr/include/gecode/int/rel.hh" line="597" column="1" bodyfile="/usr/include/gecode/int/rel.hh" bodystart="597" bodyend="619"/>
    <listofallmembers>
      <member refid="classGecode_1_1Propagator_1a55629f061a0fd8ecb2a4c41aa1568e28" prot="public" virt="virtual"><scope>Gecode::Int::Rel::LexLqLe</scope><name>advise</name></member>
      <member refid="classGecode_1_1Propagator_1afee33d8aed2bc9debee126f17b5015cf" prot="public" virt="non-virtual"><scope>Gecode::Int::Rel::LexLqLe</scope><name>advisors</name></member>
      <member refid="classGecode_1_1Propagator_1a593de773d2204f47ea365a99df2f75d0" prot="public" virt="non-virtual"><scope>Gecode::Int::Rel::LexLqLe</scope><name>afc</name></member>
      <member refid="classGecode_1_1ActorLink_1a8427f41a27a72b52ceb52d0fdad21063" prot="public" virt="non-virtual" ambiguityscope="Gecode::ActorLink::"><scope>Gecode::Int::Rel::LexLqLe</scope><name>cast</name></member>
      <member refid="classGecode_1_1ActorLink_1a464526456db41981f82a1193a8b4e569" prot="public" virt="non-virtual" ambiguityscope="Gecode::ActorLink::"><scope>Gecode::Int::Rel::LexLqLe</scope><name>cast</name></member>
      <member refid="classGecode_1_1Int_1_1Rel_1_1LexLqLe_1adf1fce1fd3c4dfb569ce351325379000" prot="public" virt="virtual"><scope>Gecode::Int::Rel::LexLqLe</scope><name>copy</name></member>
      <member refid="classGecode_1_1Int_1_1Rel_1_1LexLqLe_1a828a8598f5b9c61d38d70fbf51f48cae" prot="public" virt="virtual"><scope>Gecode::Int::Rel::LexLqLe</scope><name>cost</name></member>
      <member refid="classGecode_1_1Int_1_1Rel_1_1LexLqLe_1aa455e495b1a034f4cccc00fb5e40123e" prot="public" virt="virtual"><scope>Gecode::Int::Rel::LexLqLe</scope><name>dispose</name></member>
      <member refid="classGecode_1_1Propagator_1a3b286c7aec9843b60a531b495015b5f7" prot="protected" virt="non-virtual"><scope>Gecode::Int::Rel::LexLqLe</scope><name>fwd</name></member>
      <member refid="classGecode_1_1Int_1_1Rel_1_1LexLqLe_1adfbf4289d0c1691e62c66f4c54536407" prot="protected" virt="non-virtual"><scope>Gecode::Int::Rel::LexLqLe</scope><name>LexLqLe</name></member>
      <member refid="classGecode_1_1Int_1_1Rel_1_1LexLqLe_1a3ce5375593360980a3d6c3b4c6a37c85" prot="protected" virt="non-virtual"><scope>Gecode::Int::Rel::LexLqLe</scope><name>LexLqLe</name></member>
      <member refid="classGecode_1_1Propagator_1ae9dfa55e47e4ff8e0c8e4c2a6efdbfc0" prot="public" virt="non-virtual"><scope>Gecode::Int::Rel::LexLqLe</scope><name>med</name></member>
      <member refid="classGecode_1_1Propagator_1a4905db55af49af8f38558bdbcf5fd4a2" prot="public" virt="non-virtual"><scope>Gecode::Int::Rel::LexLqLe</scope><name>modeventdelta</name></member>
      <member refid="classGecode_1_1Actor_1a388f671145dcf906f81d22bde2dc0f3d" prot="public" virt="non-virtual"><scope>Gecode::Int::Rel::LexLqLe</scope><name>operator delete</name></member>
      <member refid="classGecode_1_1Actor_1ac28b9601b530076a1bda75834487f898" prot="public" virt="non-virtual"><scope>Gecode::Int::Rel::LexLqLe</scope><name>operator new</name></member>
      <member refid="classGecode_1_1Int_1_1Rel_1_1LexLqLe_1a13138fdb3041dc6e886058186d12bd47" prot="public" virt="non-virtual"><scope>Gecode::Int::Rel::LexLqLe</scope><name>post</name></member>
      <member refid="classGecode_1_1Int_1_1Rel_1_1LexLqLe_1ad608a803d96011a1ed9ffc80f52e68d3" prot="public" virt="virtual"><scope>Gecode::Int::Rel::LexLqLe</scope><name>propagate</name></member>
      <member refid="classGecode_1_1Propagator_1a891f3e84cde2e8e60f8ad9340ad74b05" prot="protected" virt="non-virtual"><scope>Gecode::Int::Rel::LexLqLe</scope><name>Propagator</name></member>
      <member refid="classGecode_1_1Propagator_1afeaeed8dae67de4313858bd82fdae5d0" prot="protected" virt="non-virtual"><scope>Gecode::Int::Rel::LexLqLe</scope><name>Propagator</name></member>
      <member refid="classGecode_1_1Propagator_1a1781b5b0df38c39dddca4b44c3a00530" prot="public" virt="non-virtual"><scope>Gecode::Int::Rel::LexLqLe</scope><name>size</name></member>
      <member refid="classGecode_1_1Int_1_1Rel_1_1LexLqLe_1a069d7555c0ed1940dc461ec6f9cf3d79" prot="protected" virt="non-virtual"><scope>Gecode::Int::Rel::LexLqLe</scope><name>strict</name></member>
      <member refid="classGecode_1_1Int_1_1Rel_1_1LexLqLe_1a2498086d768f13ae0cf9df1f657e1b3c" prot="protected" virt="non-virtual"><scope>Gecode::Int::Rel::LexLqLe</scope><name>x</name></member>
      <member refid="classGecode_1_1Int_1_1Rel_1_1LexLqLe_1a0b992a2aa9eabcc050f795bb9856f49c" prot="protected" virt="non-virtual"><scope>Gecode::Int::Rel::LexLqLe</scope><name>y</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
