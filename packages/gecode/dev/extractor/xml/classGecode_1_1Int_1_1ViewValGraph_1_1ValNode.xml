<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classGecode_1_1Int_1_1ViewValGraph_1_1ValNode" kind="class" prot="public">
    <compoundname>Gecode::Int::ViewValGraph::ValNode</compoundname>
    <basecompoundref refid="classGecode_1_1Int_1_1ViewValGraph_1_1Node" prot="public" virt="non-virtual">Gecode::Int::ViewValGraph::Node&lt; View &gt;</basecompoundref>
    <includes refid="view-val-graph_8hh" local="no">view-val-graph.hh</includes>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>View</declname>
        <defname>View</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classGecode_1_1Int_1_1ViewValGraph_1_1ValNode_1a112f9213fc18f2a249cf722cc7768287" prot="protected" static="no" mutable="no">
        <type>const int</type>
        <definition>const int Gecode::Int::ViewValGraph::ValNode&lt; View &gt;::_val</definition>
        <argsstring></argsstring>
        <name>_val</name>
        <briefdescription>
<para>The value of the node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view-val-graph.hh" line="149" column="1" bodyfile="/usr/include/gecode/int/view-val-graph.hh" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Int_1_1ViewValGraph_1_1ValNode_1a9aa5ceda9d59d6ee4123527e7b3cb6c7" prot="protected" static="no" mutable="no">
        <type><ref refid="classGecode_1_1Int_1_1ViewValGraph_1_1Edge" kindref="compound">Edge</ref>&lt; View &gt; *</type>
        <definition>Edge&lt;View&gt;* Gecode::Int::ViewValGraph::ValNode&lt; View &gt;::_matching</definition>
        <argsstring></argsstring>
        <name>_matching</name>
        <briefdescription>
<para>The matching edge. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view-val-graph.hh" line="151" column="1" bodyfile="/usr/include/gecode/int/view-val-graph.hh" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Int_1_1ViewValGraph_1_1ValNode_1a5d0c44364f415c3bb5a77e274185d98b" prot="protected" static="no" mutable="no">
        <type><ref refid="classGecode_1_1Int_1_1ViewValGraph_1_1ValNode" kindref="compound">ValNode</ref>&lt; View &gt; *</type>
        <definition>ValNode&lt;View&gt;* Gecode::Int::ViewValGraph::ValNode&lt; View &gt;::_next_val</definition>
        <argsstring></argsstring>
        <name>_next_val</name>
        <briefdescription>
<para>The next value node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view-val-graph.hh" line="153" column="1" bodyfile="/usr/include/gecode/int/view-val-graph.hh" bodystart="153" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classGecode_1_1Int_1_1ViewValGraph_1_1ValNode_1aa62d330c89a31746a5165f0e77f29de8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Int::ViewValGraph::ValNode&lt; View &gt;::ValNode</definition>
        <argsstring>(int v)</argsstring>
        <name>ValNode</name>
        <param>
          <type>int</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Initialize with value <emphasis>v</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view-val-graph.hh" line="156" column="1" bodyfile="/usr/include/gecode/int/view-val-graph/node.hpp" bodystart="80" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1ViewValGraph_1_1ValNode_1acc78a18bc3cc1287d6869a271d05a572" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Int::ViewValGraph::ValNode&lt; View &gt;::ValNode</definition>
        <argsstring>(int v, ValNode&lt; View &gt; *n)</argsstring>
        <name>ValNode</name>
        <param>
          <type>int</type>
          <declname>v</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1ViewValGraph_1_1ValNode" kindref="compound">ValNode</ref>&lt; View &gt; *</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Initialize with value <emphasis>v</emphasis> and successor <emphasis>n</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view-val-graph.hh" line="158" column="1" bodyfile="/usr/include/gecode/int/view-val-graph/node.hpp" bodystart="84" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1ViewValGraph_1_1ValNode_1a9ef8adc852f73293c4739bbc4e3835f3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Int::ViewValGraph::ValNode&lt; View &gt;::val</definition>
        <argsstring>(void) const </argsstring>
        <name>val</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return value of node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view-val-graph.hh" line="160" column="1" bodyfile="/usr/include/gecode/int/view-val-graph/node.hpp" bodystart="88" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1ViewValGraph_1_1ValNode_1af2969fd4c27b35fc90464d3aff11394b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Int::ViewValGraph::ValNode&lt; View &gt;::matching</definition>
        <argsstring>(Edge&lt; View &gt; *m)</argsstring>
        <name>matching</name>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1ViewValGraph_1_1Edge" kindref="compound">Edge</ref>&lt; View &gt; *</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para><ref refid="namespaceGecode_1_1Set" kindref="compound">Set</ref> matching edge to <emphasis>m</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view-val-graph.hh" line="162" column="1" bodyfile="/usr/include/gecode/int/view-val-graph/node.hpp" bodystart="93" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1ViewValGraph_1_1ValNode_1ae22b0aabed32f1f94c8c6f7ac63e6d8e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGecode_1_1Int_1_1ViewValGraph_1_1Edge" kindref="compound">Edge</ref>&lt; View &gt; *</type>
        <definition>forceinline Edge&lt; View &gt; * Gecode::Int::ViewValGraph::ValNode&lt; View &gt;::matching</definition>
        <argsstring>(void) const </argsstring>
        <name>matching</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return matching edge (NULL if unmatched) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view-val-graph.hh" line="164" column="1" bodyfile="/usr/include/gecode/int/view-val-graph/node.hpp" bodystart="98" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1ViewValGraph_1_1ValNode_1a4a82f35f3180cee4b171eca0f9adacf3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGecode_1_1Int_1_1ViewValGraph_1_1ValNode" kindref="compound">ValNode</ref>&lt; View &gt; **</type>
        <definition>forceinline ValNode&lt; View &gt; ** Gecode::Int::ViewValGraph::ValNode&lt; View &gt;::next_val_ref</definition>
        <argsstring>(void)</argsstring>
        <name>next_val_ref</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return pointer to next value node fields. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view-val-graph.hh" line="166" column="1" bodyfile="/usr/include/gecode/int/view-val-graph/node.hpp" bodystart="103" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1ViewValGraph_1_1ValNode_1a0fa1b950f677fbf0c973723c7eacd55c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGecode_1_1Int_1_1ViewValGraph_1_1ValNode" kindref="compound">ValNode</ref>&lt; View &gt; *</type>
        <definition>forceinline ValNode&lt; View &gt; * Gecode::Int::ViewValGraph::ValNode&lt; View &gt;::next_val</definition>
        <argsstring>(void) const </argsstring>
        <name>next_val</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return next value node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view-val-graph.hh" line="168" column="1" bodyfile="/usr/include/gecode/int/view-val-graph/node.hpp" bodystart="108" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1ViewValGraph_1_1ValNode_1af3b25cb640aaa1af2e6d3695968bfa80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Int::ViewValGraph::ValNode&lt; View &gt;::next_val</definition>
        <argsstring>(ValNode&lt; View &gt; *v)</argsstring>
        <name>next_val</name>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1ViewValGraph_1_1ValNode" kindref="compound">ValNode</ref>&lt; View &gt; *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para><ref refid="namespaceGecode_1_1Set" kindref="compound">Set</ref> next value node to <emphasis>v</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view-val-graph.hh" line="170" column="1" bodyfile="/usr/include/gecode/int/view-val-graph/node.hpp" bodystart="113" bodyend="115"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Value nodes in view-value graph. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="7437">
        <label>Gecode::Int::ViewValGraph::ValNode&lt; View &gt;</label>
        <link refid="classGecode_1_1Int_1_1ViewValGraph_1_1ValNode"/>
        <childnode refid="7438" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7439">
        <label>Gecode::Int::ViewValGraph::BiLink</label>
        <link refid="classGecode_1_1Int_1_1ViewValGraph_1_1BiLink"/>
      </node>
      <node id="7438">
        <label>Gecode::Int::ViewValGraph::Node&lt; View &gt;</label>
        <link refid="classGecode_1_1Int_1_1ViewValGraph_1_1Node"/>
        <childnode refid="7439" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="7440">
        <label>Gecode::Int::ViewValGraph::ValNode&lt; View &gt;</label>
        <link refid="classGecode_1_1Int_1_1ViewValGraph_1_1ValNode"/>
        <childnode refid="7441" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7442">
        <label>Gecode::Int::ViewValGraph::BiLink</label>
        <link refid="classGecode_1_1Int_1_1ViewValGraph_1_1BiLink"/>
      </node>
      <node id="7441">
        <label>Gecode::Int::ViewValGraph::Node&lt; View &gt;</label>
        <link refid="classGecode_1_1Int_1_1ViewValGraph_1_1Node"/>
        <childnode refid="7442" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/usr/include/gecode/int/view-val-graph.hh" line="146" column="1" bodyfile="/usr/include/gecode/int/view-val-graph.hh" bodystart="146" bodyend="171"/>
    <listofallmembers>
      <member refid="classGecode_1_1Int_1_1ViewValGraph_1_1ValNode_1a9aa5ceda9d59d6ee4123527e7b3cb6c7" prot="protected" virt="non-virtual"><scope>Gecode::Int::ViewValGraph::ValNode</scope><name>_matching</name></member>
      <member refid="classGecode_1_1Int_1_1ViewValGraph_1_1ValNode_1a5d0c44364f415c3bb5a77e274185d98b" prot="protected" virt="non-virtual"><scope>Gecode::Int::ViewValGraph::ValNode</scope><name>_next_val</name></member>
      <member refid="classGecode_1_1Int_1_1ViewValGraph_1_1ValNode_1a112f9213fc18f2a249cf722cc7768287" prot="protected" virt="non-virtual"><scope>Gecode::Int::ViewValGraph::ValNode</scope><name>_val</name></member>
      <member refid="classGecode_1_1Int_1_1ViewValGraph_1_1BiLink_1abf6e776a761e4cbba3d2e47c2fa05b2c" prot="public" virt="non-virtual"><scope>Gecode::Int::ViewValGraph::ValNode</scope><name>add</name></member>
      <member refid="classGecode_1_1Int_1_1ViewValGraph_1_1BiLink_1a2c45d8f046c5ef13f19bc8bc63eee530" prot="public" virt="non-virtual"><scope>Gecode::Int::ViewValGraph::ValNode</scope><name>BiLink</name></member>
      <member refid="classGecode_1_1Int_1_1ViewValGraph_1_1Node_1a44d84b270e60d5082a0fc46532a9e3b4" prot="public" virt="non-virtual"><scope>Gecode::Int::ViewValGraph::ValNode</scope><name>comp</name></member>
      <member refid="classGecode_1_1Int_1_1ViewValGraph_1_1Node_1a6d6f05c086e2f0da61fffb156f5f0244" prot="public" virt="non-virtual"><scope>Gecode::Int::ViewValGraph::ValNode</scope><name>edge_fst</name></member>
      <member refid="classGecode_1_1Int_1_1ViewValGraph_1_1Node_1ae675d50ab5e5ca120ba53836671f11f8" prot="public" virt="non-virtual"><scope>Gecode::Int::ViewValGraph::ValNode</scope><name>edge_lst</name></member>
      <member refid="classGecode_1_1Int_1_1ViewValGraph_1_1BiLink_1af6a7e72170b5f244ee6e57e26ca1f04f" prot="public" virt="non-virtual"><scope>Gecode::Int::ViewValGraph::ValNode</scope><name>empty</name></member>
      <member refid="classGecode_1_1Int_1_1ViewValGraph_1_1Node_1a34103c5992ecb4801094b8653e124b71" prot="public" virt="non-virtual"><scope>Gecode::Int::ViewValGraph::ValNode</scope><name>iter</name></member>
      <member refid="classGecode_1_1Int_1_1ViewValGraph_1_1Node_1a9c7de4c378c4f078c0d58a852eeb0d80" prot="public" virt="non-virtual"><scope>Gecode::Int::ViewValGraph::ValNode</scope><name>low</name></member>
      <member refid="classGecode_1_1Int_1_1ViewValGraph_1_1BiLink_1ac1c5ef03c95a7232a921179e4506622a" prot="public" virt="non-virtual"><scope>Gecode::Int::ViewValGraph::ValNode</scope><name>mark</name></member>
      <member refid="classGecode_1_1Int_1_1ViewValGraph_1_1BiLink_1a477043f919a199f146ebc2825845d8be" prot="public" virt="non-virtual"><scope>Gecode::Int::ViewValGraph::ValNode</scope><name>marked</name></member>
      <member refid="classGecode_1_1Int_1_1ViewValGraph_1_1ValNode_1af2969fd4c27b35fc90464d3aff11394b" prot="public" virt="non-virtual"><scope>Gecode::Int::ViewValGraph::ValNode</scope><name>matching</name></member>
      <member refid="classGecode_1_1Int_1_1ViewValGraph_1_1ValNode_1ae22b0aabed32f1f94c8c6f7ac63e6d8e" prot="public" virt="non-virtual"><scope>Gecode::Int::ViewValGraph::ValNode</scope><name>matching</name></member>
      <member refid="classGecode_1_1Int_1_1ViewValGraph_1_1Node_1a29d734f314bd7106a2bf5eb78e71064b" prot="public" virt="non-virtual"><scope>Gecode::Int::ViewValGraph::ValNode</scope><name>min</name></member>
      <member refid="classGecode_1_1Int_1_1ViewValGraph_1_1BiLink_1ae21348fc4bde32c21cd1568ed7f6b43c" prot="public" virt="non-virtual"><scope>Gecode::Int::ViewValGraph::ValNode</scope><name>next</name></member>
      <member refid="classGecode_1_1Int_1_1ViewValGraph_1_1BiLink_1a676227782d04bba0fd9b28f154d4555f" prot="public" virt="non-virtual"><scope>Gecode::Int::ViewValGraph::ValNode</scope><name>next</name></member>
      <member refid="classGecode_1_1Int_1_1ViewValGraph_1_1ValNode_1a0fa1b950f677fbf0c973723c7eacd55c" prot="public" virt="non-virtual"><scope>Gecode::Int::ViewValGraph::ValNode</scope><name>next_val</name></member>
      <member refid="classGecode_1_1Int_1_1ViewValGraph_1_1ValNode_1af3b25cb640aaa1af2e6d3695968bfa80" prot="public" virt="non-virtual"><scope>Gecode::Int::ViewValGraph::ValNode</scope><name>next_val</name></member>
      <member refid="classGecode_1_1Int_1_1ViewValGraph_1_1ValNode_1a4a82f35f3180cee4b171eca0f9adacf3" prot="public" virt="non-virtual"><scope>Gecode::Int::ViewValGraph::ValNode</scope><name>next_val_ref</name></member>
      <member refid="classGecode_1_1Int_1_1ViewValGraph_1_1Node_1af98cfc43cf3d04ef8887b08bd81aad11" prot="public" virt="non-virtual"><scope>Gecode::Int::ViewValGraph::ValNode</scope><name>Node</name></member>
      <member refid="classGecode_1_1Int_1_1ViewValGraph_1_1Node_1a88898e37d5bf8f7a96a55e61b526a8b5" prot="public" virt="non-virtual"><scope>Gecode::Int::ViewValGraph::ValNode</scope><name>operator delete</name></member>
      <member refid="classGecode_1_1Int_1_1ViewValGraph_1_1Node_1af12b6bafa7ed362ec332789b7e11cfcd" prot="public" virt="non-virtual"><scope>Gecode::Int::ViewValGraph::ValNode</scope><name>operator delete</name></member>
      <member refid="classGecode_1_1Int_1_1ViewValGraph_1_1Node_1a19e6716675f0416f58a473b0f9a15bd1" prot="public" virt="non-virtual"><scope>Gecode::Int::ViewValGraph::ValNode</scope><name>operator new</name></member>
      <member refid="classGecode_1_1Int_1_1ViewValGraph_1_1BiLink_1a9623cbba17d117289eebb6f2c2b5c4ae" prot="public" virt="non-virtual"><scope>Gecode::Int::ViewValGraph::ValNode</scope><name>prev</name></member>
      <member refid="classGecode_1_1Int_1_1ViewValGraph_1_1BiLink_1a903bfd23c708d3848f61697ff4435cc7" prot="public" virt="non-virtual"><scope>Gecode::Int::ViewValGraph::ValNode</scope><name>prev</name></member>
      <member refid="classGecode_1_1Int_1_1ViewValGraph_1_1BiLink_1afc99ce400e8b5f69717cd7358c85aaa6" prot="public" virt="non-virtual"><scope>Gecode::Int::ViewValGraph::ValNode</scope><name>unlink</name></member>
      <member refid="classGecode_1_1Int_1_1ViewValGraph_1_1ValNode_1a9ef8adc852f73293c4739bbc4e3835f3" prot="public" virt="non-virtual"><scope>Gecode::Int::ViewValGraph::ValNode</scope><name>val</name></member>
      <member refid="classGecode_1_1Int_1_1ViewValGraph_1_1ValNode_1aa62d330c89a31746a5165f0e77f29de8" prot="public" virt="non-virtual"><scope>Gecode::Int::ViewValGraph::ValNode</scope><name>ValNode</name></member>
      <member refid="classGecode_1_1Int_1_1ViewValGraph_1_1ValNode_1acc78a18bc3cc1287d6869a271d05a572" prot="public" virt="non-virtual"><scope>Gecode::Int::ViewValGraph::ValNode</scope><name>ValNode</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
