<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classGecode_1_1Int_1_1Sequence_1_1ViewValSupport" kind="class" prot="public">
    <compoundname>Gecode::Int::Sequence::ViewValSupport</compoundname>
    <includes refid="int_2sequence_2view_8hpp" local="no">view.hpp</includes>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>View</declname>
        <defname>View</defname>
      </param>
      <param>
        <type>class</type>
        <declname>Val</declname>
        <defname>Val</defname>
      </param>
      <param>
        <type>bool</type>
        <declname>iss</declname>
        <defname>iss</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classGecode_1_1Int_1_1Sequence_1_1ViewValSupport_1a533021d357a5f4a5861a493355fdab45" prot="private" static="no" mutable="no">
        <type>int *</type>
        <definition>int* Gecode::Int::Sequence::ViewValSupport&lt; View, Val, iss &gt;::y</definition>
        <argsstring></argsstring>
        <name>y</name>
        <briefdescription>
<para><ref refid="namespaceGecode_1_1Int_1_1Cumulative" kindref="compound">Cumulative</ref> array. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/sequence/view.hpp" line="131" column="1" bodyfile="/usr/include/gecode/int/sequence/view.hpp" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Int_1_1Sequence_1_1ViewValSupport_1afe230779c88c069bd96bf00e7d7b538e" prot="private" static="no" mutable="no">
        <type><ref refid="classGecode_1_1Int_1_1Sequence_1_1Violations" kindref="compound">Violations</ref></type>
        <definition>Violations Gecode::Int::Sequence::ViewValSupport&lt; View, Val, iss &gt;::v</definition>
        <argsstring></argsstring>
        <name>v</name>
        <briefdescription>
<para>Potential violation set. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/sequence/view.hpp" line="133" column="1" bodyfile="/usr/include/gecode/int/sequence/view.hpp" bodystart="133" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classGecode_1_1Int_1_1Sequence_1_1ViewValSupport_1a33e848c61dff32aa9d64a2de8fe388f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Int::Sequence::ViewValSupport&lt; View, Val, iss &gt;::init</definition>
        <argsstring>(Space &amp;home, ViewArray&lt; View &gt; &amp;x, Val s, int i, int q)</argsstring>
        <name>init</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; View &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>Val</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>Initialize. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/sequence/view.hpp" line="88" column="1" bodyfile="/usr/include/gecode/int/sequence/view.hpp" bodystart="193" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Sequence_1_1ViewValSupport_1a51c87654a56b769380cafcb7fd89baf2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Int::Sequence::ViewValSupport&lt; View, Val, iss &gt;::update</definition>
        <argsstring>(Space &amp;home, bool share, ViewValSupport&lt; View, Val, iss &gt; &amp;vvs, int n0)</argsstring>
        <name>update</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>share</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1Sequence_1_1ViewValSupport" kindref="compound">ViewValSupport</ref>&lt; View, Val, iss &gt; &amp;</type>
          <declname>vvs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n0</declname>
        </param>
        <briefdescription>
<para>Update. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/sequence/view.hpp" line="90" column="1" bodyfile="/usr/include/gecode/int/sequence/view.hpp" bodystart="216" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Sequence_1_1ViewValSupport_1aaa3bcea43fa6ef20f81ba9501ae5b2ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>forceinline ExecStatus Gecode::Int::Sequence::ViewValSupport&lt; View, Val, iss &gt;::advise</definition>
        <argsstring>(Space &amp;home, ViewArray&lt; View &gt; &amp;a, Val s, int i, int q, int j, const Delta &amp;d)</argsstring>
        <name>advise</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; View &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>Val</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>q</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1Delta" kindref="compound">Delta</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Advise. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/sequence/view.hpp" line="92" column="1" bodyfile="/usr/include/gecode/int/sequence/view.hpp" bodystart="352" bodyend="387"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Sequence_1_1ViewValSupport_1a39aebdd81f32c3b412a4ca0fb50f146e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>forceinline ExecStatus Gecode::Int::Sequence::ViewValSupport&lt; View, Val, iss &gt;::propagate</definition>
        <argsstring>(Space &amp;home, ViewArray&lt; View &gt; &amp;a, Val s, int i, int q, int l, int u)</argsstring>
        <name>propagate</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; View &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>Val</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>q</declname>
        </param>
        <param>
          <type>int</type>
          <declname>l</declname>
        </param>
        <param>
          <type>int</type>
          <declname>u</declname>
        </param>
        <briefdescription>
<para>Propagate. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/sequence/view.hpp" line="94" column="1" bodyfile="/usr/include/gecode/int/sequence/view.hpp" bodystart="391" bodyend="414"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Sequence_1_1ViewValSupport_1a8e81574a343dd0d66bca0e6ed8c9d48a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::Int::Sequence::ViewValSupport&lt; View, Val, iss &gt;::violated</definition>
        <argsstring>(int j, int q, int l, int u) const </argsstring>
        <name>violated</name>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <param>
          <type>int</type>
          <declname>q</declname>
        </param>
        <param>
          <type>int</type>
          <declname>l</declname>
        </param>
        <param>
          <type>int</type>
          <declname>u</declname>
        </param>
        <briefdescription>
<para>Return true if sequence j has been violated. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/sequence/view.hpp" line="96" column="1" bodyfile="/usr/include/gecode/int/sequence/view.hpp" bodystart="267" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Sequence_1_1ViewValSupport_1a3de63a2d1f3a4d95477a629161823294" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::Int::Sequence::ViewValSupport&lt; View, Val, iss &gt;::retired</definition>
        <argsstring>(void) const </argsstring>
        <name>retired</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Check if retired. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/sequence/view.hpp" line="98" column="1" bodyfile="/usr/include/gecode/int/sequence/view.hpp" bodystart="164" bodyend="166"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classGecode_1_1Int_1_1Sequence_1_1ViewValSupport_1a3cd9d17a5b94a9e4c5c97df2ef69ede1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGecode_1_1Int_1_1Sequence_1_1ViewValSupport" kindref="compound">ViewValSupport</ref> *</type>
        <definition>forceinline ViewValSupport&lt; View, Val, iss &gt; * Gecode::Int::Sequence::ViewValSupport&lt; View, Val, iss &gt;::allocate</definition>
        <argsstring>(Space &amp;, int)</argsstring>
        <name>allocate</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <defname>home</defname>
        </param>
        <param>
          <type>int</type>
          <defname>n</defname>
        </param>
        <briefdescription>
<para>Allocate an instance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/sequence/view.hpp" line="100" column="1" bodyfile="/usr/include/gecode/int/sequence/view.hpp" bodystart="139" bodyend="141"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classGecode_1_1Int_1_1Sequence_1_1ViewValSupport_1a24869163a16cb504f2bfe50c5245c513" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>forceinline ExecStatus Gecode::Int::Sequence::ViewValSupport&lt; View, Val, iss &gt;::schedule_conclusion</definition>
        <argsstring>(ViewArray&lt; View &gt; &amp;a, Val s, int i)</argsstring>
        <name>schedule_conclusion</name>
        <param>
          <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; View &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>Val</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Schedules the invoking support to be concluded (to be shaved) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/sequence/view.hpp" line="103" column="1" bodyfile="/usr/include/gecode/int/sequence/view.hpp" bodystart="241" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Sequence_1_1ViewValSupport_1a13053e9cf274a6e06f507123efcd5ff4" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::Int::Sequence::ViewValSupport&lt; View, Val, iss &gt;::conlusion_scheduled</definition>
        <argsstring>(void) const </argsstring>
        <name>conlusion_scheduled</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Returns true if a conclusion to be made has been scheduled. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/sequence/view.hpp" line="105" column="1" bodyfile="/usr/include/gecode/int/sequence/view.hpp" bodystart="255" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Sequence_1_1ViewValSupport_1afe8f59bdf3aeffd478727486f13ad47f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Int::Sequence::ViewValSupport&lt; View, Val, iss &gt;::retire</definition>
        <argsstring>(void)</argsstring>
        <name>retire</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Retires invoking instance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/sequence/view.hpp" line="107" column="1" bodyfile="/usr/include/gecode/int/sequence/view.hpp" bodystart="170" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Sequence_1_1ViewValSupport_1abe01501fb9bb3ebb795751e474b435d9" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Int::Sequence::ViewValSupport&lt; View, Val, iss &gt;::values</definition>
        <argsstring>(int j, int q) const </argsstring>
        <name>values</name>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <param>
          <type>int</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>Return number of forced to s elements in sequence j. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/sequence/view.hpp" line="109" column="1" bodyfile="/usr/include/gecode/int/sequence/view.hpp" bodystart="261" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Sequence_1_1ViewValSupport_1aab1ffc1b4cdfa639bb79f0d6876f31aa" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::Int::Sequence::ViewValSupport&lt; View, Val, iss &gt;::shaved</definition>
        <argsstring>(const View &amp;x, Val s, int i) const </argsstring>
        <name>shaved</name>
        <param>
          <type>const View &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>Val</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Checks if x[i] has been shaved. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/sequence/view.hpp" line="111" column="1" bodyfile="/usr/include/gecode/int/sequence/view.hpp" bodystart="232" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Sequence_1_1ViewValSupport_1a44fec84848c7f37f3938bd4ffc58fe55" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::Int::Sequence::ViewValSupport&lt; View, Val, iss &gt;::pushup</definition>
        <argsstring>(ViewArray&lt; View &gt; &amp;a, Val s, int i, int q, int idx, int v)</argsstring>
        <name>pushup</name>
        <param>
          <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; View &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>Val</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>q</declname>
        </param>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Push up the cumulative array. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/sequence/view.hpp" line="113" column="1" bodyfile="/usr/include/gecode/int/sequence/view.hpp" bodystart="309" bodyend="348"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Sequence_1_1ViewValSupport_1a8407852c1c51bc4e7980c17a2d5891b8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>forceinline ExecStatus Gecode::Int::Sequence::ViewValSupport&lt; View, Val, iss &gt;::conclude</definition>
        <argsstring>(Space &amp;home, ViewArray&lt; View &gt; &amp;a, Val s, int i)</argsstring>
        <name>conclude</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; View &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>Val</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Make conclusion. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/sequence/view.hpp" line="115" column="1" bodyfile="/usr/include/gecode/int/sequence/view.hpp" bodystart="273" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Sequence_1_1ViewValSupport_1ab79e75d8c192aac72a1594a51398664f" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::Int::Sequence::ViewValSupport&lt; View, Val, iss &gt;::s_not_possible</definition>
        <argsstring>(ViewArray&lt; View &gt; &amp;a, Val s, int i, int idx) const </argsstring>
        <name>s_not_possible</name>
        <param>
          <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; View &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>Val</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
<para>Returns true if a[idx]=s not possible taking into account a[i]=s if iss or a[i]!=s if ! iss. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/sequence/view.hpp" line="117" column="1" bodyfile="/usr/include/gecode/int/sequence/view.hpp" bodystart="185" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Sequence_1_1ViewValSupport_1a6aa31205316a304fa5361ff2d6745050" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::Int::Sequence::ViewValSupport&lt; View, Val, iss &gt;::alternative_not_possible</definition>
        <argsstring>(ViewArray&lt; View &gt; &amp;a, Val s, int i, int idx) const </argsstring>
        <name>alternative_not_possible</name>
        <param>
          <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; View &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>Val</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
<para>Returns true if a[idx] can be not s taking into account a[i]=s if iss or a[i]!=s if ! iss. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/sequence/view.hpp" line="119" column="1" bodyfile="/usr/include/gecode/int/sequence/view.hpp" bodystart="177" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Sequence_1_1ViewValSupport_1a34bb328ed953626bce29acb84daa26b7" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::Int::Sequence::ViewValSupport&lt; View, Val, iss &gt;::has_potential_violation</definition>
        <argsstring>(void) const </argsstring>
        <name>has_potential_violation</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Returns true if there are potential violations marked. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/sequence/view.hpp" line="121" column="1" bodyfile="/usr/include/gecode/int/sequence/view.hpp" bodystart="145" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Sequence_1_1ViewValSupport_1a208c6c8ed4c45bb09e9203abba0ce7d0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Int::Sequence::ViewValSupport&lt; View, Val, iss &gt;::next_potential_violation</definition>
        <argsstring>(void)</argsstring>
        <name>next_potential_violation</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Returns next potential violation and removes it. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/sequence/view.hpp" line="123" column="1" bodyfile="/usr/include/gecode/int/sequence/view.hpp" bodystart="151" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Sequence_1_1ViewValSupport_1ad072877c8dcffb6acd0451483e1ef2e9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Int::Sequence::ViewValSupport&lt; View, Val, iss &gt;::potential_violation</definition>
        <argsstring>(int i)</argsstring>
        <name>potential_violation</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Adds potential violation i. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/sequence/view.hpp" line="125" column="1" bodyfile="/usr/include/gecode/int/sequence/view.hpp" bodystart="157" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Sequence_1_1ViewValSupport_1a6a80702993d33bbbe42f58b17d8a7daa" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Int::Sequence::ViewValSupport&lt; View, Val, iss &gt;::set</definition>
        <argsstring>(int idx, int v, int q, int n)</argsstring>
        <name>set</name>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>v</declname>
        </param>
        <param>
          <type>int</type>
          <declname>q</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/sequence/view.hpp" line="127" column="1" bodyfile="/usr/include/gecode/int/sequence/view.hpp" bodystart="299" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Sequence_1_1ViewValSupport_1afbc3906c8bf085236452d79ec36b5534" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Int::Sequence::ViewValSupport&lt; View, Val, iss &gt;::potential_violation</definition>
        <argsstring>(int idx, int q, int n)</argsstring>
        <name>potential_violation</name>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>q</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Adds potential violations for location idx in cumulative array. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/sequence/view.hpp" line="129" column="1" bodyfile="/usr/include/gecode/int/sequence/view.hpp" bodystart="288" bodyend="295"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class for view value support structure. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/usr/include/gecode/int/sequence/view.hpp" line="85" column="1" bodyfile="/usr/include/gecode/int/sequence/view.hpp" bodystart="85" bodyend="134"/>
    <listofallmembers>
      <member refid="classGecode_1_1Int_1_1Sequence_1_1ViewValSupport_1aaa3bcea43fa6ef20f81ba9501ae5b2ec" prot="public" virt="non-virtual"><scope>Gecode::Int::Sequence::ViewValSupport</scope><name>advise</name></member>
      <member refid="classGecode_1_1Int_1_1Sequence_1_1ViewValSupport_1a3cd9d17a5b94a9e4c5c97df2ef69ede1" prot="public" virt="non-virtual"><scope>Gecode::Int::Sequence::ViewValSupport</scope><name>allocate</name></member>
      <member refid="classGecode_1_1Int_1_1Sequence_1_1ViewValSupport_1a6aa31205316a304fa5361ff2d6745050" prot="private" virt="non-virtual"><scope>Gecode::Int::Sequence::ViewValSupport</scope><name>alternative_not_possible</name></member>
      <member refid="classGecode_1_1Int_1_1Sequence_1_1ViewValSupport_1a8407852c1c51bc4e7980c17a2d5891b8" prot="private" virt="non-virtual"><scope>Gecode::Int::Sequence::ViewValSupport</scope><name>conclude</name></member>
      <member refid="classGecode_1_1Int_1_1Sequence_1_1ViewValSupport_1a13053e9cf274a6e06f507123efcd5ff4" prot="private" virt="non-virtual"><scope>Gecode::Int::Sequence::ViewValSupport</scope><name>conlusion_scheduled</name></member>
      <member refid="classGecode_1_1Int_1_1Sequence_1_1ViewValSupport_1a34bb328ed953626bce29acb84daa26b7" prot="private" virt="non-virtual"><scope>Gecode::Int::Sequence::ViewValSupport</scope><name>has_potential_violation</name></member>
      <member refid="classGecode_1_1Int_1_1Sequence_1_1ViewValSupport_1a33e848c61dff32aa9d64a2de8fe388f8" prot="public" virt="non-virtual"><scope>Gecode::Int::Sequence::ViewValSupport</scope><name>init</name></member>
      <member refid="classGecode_1_1Int_1_1Sequence_1_1ViewValSupport_1a208c6c8ed4c45bb09e9203abba0ce7d0" prot="private" virt="non-virtual"><scope>Gecode::Int::Sequence::ViewValSupport</scope><name>next_potential_violation</name></member>
      <member refid="classGecode_1_1Int_1_1Sequence_1_1ViewValSupport_1ad072877c8dcffb6acd0451483e1ef2e9" prot="private" virt="non-virtual"><scope>Gecode::Int::Sequence::ViewValSupport</scope><name>potential_violation</name></member>
      <member refid="classGecode_1_1Int_1_1Sequence_1_1ViewValSupport_1afbc3906c8bf085236452d79ec36b5534" prot="private" virt="non-virtual"><scope>Gecode::Int::Sequence::ViewValSupport</scope><name>potential_violation</name></member>
      <member refid="classGecode_1_1Int_1_1Sequence_1_1ViewValSupport_1a39aebdd81f32c3b412a4ca0fb50f146e" prot="public" virt="non-virtual"><scope>Gecode::Int::Sequence::ViewValSupport</scope><name>propagate</name></member>
      <member refid="classGecode_1_1Int_1_1Sequence_1_1ViewValSupport_1a44fec84848c7f37f3938bd4ffc58fe55" prot="private" virt="non-virtual"><scope>Gecode::Int::Sequence::ViewValSupport</scope><name>pushup</name></member>
      <member refid="classGecode_1_1Int_1_1Sequence_1_1ViewValSupport_1afe8f59bdf3aeffd478727486f13ad47f" prot="private" virt="non-virtual"><scope>Gecode::Int::Sequence::ViewValSupport</scope><name>retire</name></member>
      <member refid="classGecode_1_1Int_1_1Sequence_1_1ViewValSupport_1a3de63a2d1f3a4d95477a629161823294" prot="public" virt="non-virtual"><scope>Gecode::Int::Sequence::ViewValSupport</scope><name>retired</name></member>
      <member refid="classGecode_1_1Int_1_1Sequence_1_1ViewValSupport_1ab79e75d8c192aac72a1594a51398664f" prot="private" virt="non-virtual"><scope>Gecode::Int::Sequence::ViewValSupport</scope><name>s_not_possible</name></member>
      <member refid="classGecode_1_1Int_1_1Sequence_1_1ViewValSupport_1a24869163a16cb504f2bfe50c5245c513" prot="private" virt="non-virtual"><scope>Gecode::Int::Sequence::ViewValSupport</scope><name>schedule_conclusion</name></member>
      <member refid="classGecode_1_1Int_1_1Sequence_1_1ViewValSupport_1a6a80702993d33bbbe42f58b17d8a7daa" prot="private" virt="non-virtual"><scope>Gecode::Int::Sequence::ViewValSupport</scope><name>set</name></member>
      <member refid="classGecode_1_1Int_1_1Sequence_1_1ViewValSupport_1aab1ffc1b4cdfa639bb79f0d6876f31aa" prot="private" virt="non-virtual"><scope>Gecode::Int::Sequence::ViewValSupport</scope><name>shaved</name></member>
      <member refid="classGecode_1_1Int_1_1Sequence_1_1ViewValSupport_1a51c87654a56b769380cafcb7fd89baf2" prot="public" virt="non-virtual"><scope>Gecode::Int::Sequence::ViewValSupport</scope><name>update</name></member>
      <member refid="classGecode_1_1Int_1_1Sequence_1_1ViewValSupport_1afe230779c88c069bd96bf00e7d7b538e" prot="private" virt="non-virtual"><scope>Gecode::Int::Sequence::ViewValSupport</scope><name>v</name></member>
      <member refid="classGecode_1_1Int_1_1Sequence_1_1ViewValSupport_1abe01501fb9bb3ebb795751e474b435d9" prot="private" virt="non-virtual"><scope>Gecode::Int::Sequence::ViewValSupport</scope><name>values</name></member>
      <member refid="classGecode_1_1Int_1_1Sequence_1_1ViewValSupport_1a8e81574a343dd0d66bca0e6ed8c9d48a" prot="public" virt="non-virtual"><scope>Gecode::Int::Sequence::ViewValSupport</scope><name>violated</name></member>
      <member refid="classGecode_1_1Int_1_1Sequence_1_1ViewValSupport_1a533021d357a5f4a5861a493355fdab45" prot="private" virt="non-virtual"><scope>Gecode::Int::Sequence::ViewValSupport</scope><name>y</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
