<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classGecode_1_1Set_1_1LUBndSet" kind="class" prot="public">
    <compoundname>Gecode::Set::LUBndSet</compoundname>
    <basecompoundref refid="classGecode_1_1Set_1_1BndSet" prot="public" virt="non-virtual">Gecode::Set::BndSet</basecompoundref>
    <includes refid="set_2var-imp_8hpp" local="no">var-imp.hpp</includes>
      <sectiondef kind="user-defined">
      <header>Constructors and initialization</header>
      <memberdef kind="function" id="classGecode_1_1Set_1_1LUBndSet_1aec189ff8607c6004bcba3f26916dc638" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Set::LUBndSet::LUBndSet</definition>
        <argsstring>(void)</argsstring>
        <name>LUBndSet</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Default constructor. Creates an empty set. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="255" column="1" bodyfile="/usr/include/gecode/set/var-imp/integerset.hpp" bodystart="317" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1LUBndSet_1a00005f6b5812feda371cb35163a7c9f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Set::LUBndSet::LUBndSet</definition>
        <argsstring>(Space &amp;home)</argsstring>
        <name>LUBndSet</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <briefdescription>
<para>Initialize as the full set including everything between <ref refid="namespaceGecode_1_1Set_1_1Limits_1a768af29a2cbf9eec75b4376b325f6cc4" kindref="member">Limits::min</ref> and <ref refid="namespaceGecode_1_1Set_1_1Limits_1aa0057c6b80521aaf8485343580d0eed5" kindref="member">Limits::max</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="257" column="1" bodyfile="/usr/include/gecode/set/var-imp/integerset.hpp" bodystart="320" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1LUBndSet_1a81cb6bf1f2b5d42c19bbd0ae8b331496" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Set::LUBndSet::LUBndSet</definition>
        <argsstring>(Space &amp;home, int i, int j)</argsstring>
        <name>LUBndSet</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>Initialize as the set <formula id="391">$ \{i,\dots,j\}$</formula>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="259" column="1" bodyfile="/usr/include/gecode/set/var-imp/integerset.hpp" bodystart="324" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1LUBndSet_1aac8f976c7d389285edb54ddb5c788671" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Set::LUBndSet::LUBndSet</definition>
        <argsstring>(Space &amp;home, const IntSet &amp;s)</argsstring>
        <name>LUBndSet</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1IntSet" kindref="compound">IntSet</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Initialize as the set represented by <emphasis>s</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="261" column="1" bodyfile="/usr/include/gecode/set/var-imp/integerset.hpp" bodystart="328" bodyend="329"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1LUBndSet_1aea765802d56f99c7b254bc08e02eb283" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Set::LUBndSet::init</definition>
        <argsstring>(Space &amp;home)</argsstring>
        <name>init</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <briefdescription>
<para>Initialize as the full set including everything between <ref refid="namespaceGecode_1_1Set_1_1Limits_1a768af29a2cbf9eec75b4376b325f6cc4" kindref="member">Limits::min</ref> and <ref refid="namespaceGecode_1_1Set_1_1Limits_1aa0057c6b80521aaf8485343580d0eed5" kindref="member">Limits::max</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="263" column="1" bodyfile="/usr/include/gecode/set/var-imp/integerset.hpp" bodystart="332" bodyend="340"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Update operations</header>
      <memberdef kind="function" id="classGecode_1_1Set_1_1LUBndSet_1afcce63c08c49990298015cf30bf6eb63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::Set::LUBndSet::exclude</definition>
        <argsstring>(Space &amp;home, int i, int j, SetDelta &amp;d)</argsstring>
        <name>exclude</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Set_1_1SetDelta" kindref="compound">SetDelta</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Exclude the set <formula id="392">$\{i,\dots,j\}$</formula> from this set. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="269" column="1" bodyfile="/usr/include/gecode/set/var-imp/integerset.hpp" bodystart="343" bodyend="356"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1LUBndSet_1a809a72818925ee9ee5ee829af7a0f8cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::Set::LUBndSet::intersect</definition>
        <argsstring>(Space &amp;home, int i, int j)</argsstring>
        <name>intersect</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>Intersect this set with the set <formula id="392">$\{i,\dots,j\}$</formula>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="271" column="1" bodyfile="/usr/include/gecode/set/var-imp/integerset.hpp" bodystart="359" bodyend="371"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1LUBndSet_1a29e84847cb5c60372af8d3f7c2509f7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool Gecode::Set::LUBndSet::intersectI</definition>
        <argsstring>(Space &amp;home, I &amp;i)</argsstring>
        <name>intersectI</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>I &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Exclude all elements not in the set represented by <emphasis>i</emphasis> from this set. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="273" column="1" bodyfile="/usr/include/gecode/set/var-imp/integerset.hpp" bodystart="374" bodyend="386"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1LUBndSet_1a3128d05340cf630be14714e9280d6e75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool Gecode::Set::LUBndSet::excludeI</definition>
        <argsstring>(Space &amp;home, I &amp;i)</argsstring>
        <name>excludeI</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>I &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Exclude all elements in the set represented by <emphasis>i</emphasis> from this set. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="275" column="1" bodyfile="/usr/include/gecode/set/var-imp/integerset.hpp" bodystart="389" bodyend="396"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1LUBndSet_1a76f64b1bdf7396500538263b19d50baa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Set::LUBndSet::excludeAll</definition>
        <argsstring>(Space &amp;home)</argsstring>
        <name>excludeAll</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <briefdescription>
<para>Exclude all elements from this set. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="277" column="1" bodyfile="/usr/include/gecode/set/var-imp/integerset.hpp" bodystart="399" bodyend="402"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classGecode_1_1Set_1_1LUBndSet_1a98bacba4bbdc3f14b19d6b5999582a07" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GECODE_SET_EXPORT bool</type>
        <definition>GECODE_SET_EXPORT bool Gecode::Set::LUBndSet::exclude_full</definition>
        <argsstring>(Space &amp;home, int, int, SetDelta &amp;)</argsstring>
        <name>exclude_full</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Set_1_1SetDelta" kindref="compound">SetDelta</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="249" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1LUBndSet_1aa417be0af74a8d70c8973fa9794f70a1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GECODE_SET_EXPORT bool</type>
        <definition>GECODE_SET_EXPORT bool Gecode::Set::LUBndSet::intersect_full</definition>
        <argsstring>(Space &amp;home, int i, int j)</argsstring>
        <name>intersect_full</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="250" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1LUBndSet_1a0e55af4c91aba5046458b3f452abbcc5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Gecode::Set::LUBndSet::LUBndSet</definition>
        <argsstring>(const LUBndSet &amp;)</argsstring>
        <name>LUBndSet</name>
        <param>
          <type>const <ref refid="classGecode_1_1Set_1_1LUBndSet" kindref="compound">LUBndSet</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="280" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1LUBndSet_1a05adbfc17833661bbf0b0218b52d98f9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classGecode_1_1Set_1_1LUBndSet" kindref="compound">LUBndSet</ref> &amp;</type>
        <definition>const LUBndSet&amp; Gecode::Set::LUBndSet::operator=</definition>
        <argsstring>(const LUBndSet &amp;)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classGecode_1_1Set_1_1LUBndSet" kindref="compound">LUBndSet</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="281" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Shrinking sets of integers. </para>    </briefdescription>
    <detaileddescription>
<para>These sets provide operations for monotonically shrinking the set. Shrinking sets are used for implementing the least upper bound of set variables. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="3619">
        <label>Gecode::Set::BndSet</label>
        <link refid="classGecode_1_1Set_1_1BndSet"/>
      </node>
      <node id="3618">
        <label>Gecode::Set::LUBndSet</label>
        <link refid="classGecode_1_1Set_1_1LUBndSet"/>
        <childnode refid="3619" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3621">
        <label>Gecode::Set::BndSet</label>
        <link refid="classGecode_1_1Set_1_1BndSet"/>
      </node>
      <node id="3620">
        <label>Gecode::Set::LUBndSet</label>
        <link refid="classGecode_1_1Set_1_1LUBndSet"/>
        <childnode refid="3621" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/usr/include/gecode/set/var-imp.hpp" line="247" column="1" bodyfile="/usr/include/gecode/set/var-imp.hpp" bodystart="247" bodyend="282"/>
    <listofallmembers>
      <member refid="classGecode_1_1Set_1_1BndSet_1a72ac8c078e274e567020e180a6a2310c" prot="protected" virt="non-virtual"><scope>Gecode::Set::LUBndSet</scope><name>_card</name></member>
      <member refid="classGecode_1_1Set_1_1BndSet_1ae715626a62b4a66603127f4adfa460ad" prot="protected" virt="non-virtual"><scope>Gecode::Set::LUBndSet</scope><name>_size</name></member>
      <member refid="classGecode_1_1Set_1_1BndSet_1adce5e13c9b374e193a11efd0ebf3a133" prot="public" virt="non-virtual"><scope>Gecode::Set::LUBndSet</scope><name>become</name></member>
      <member refid="classGecode_1_1Set_1_1BndSet_1a50cfb1606c03ac06cb3249ef96eefc34" prot="public" virt="non-virtual"><scope>Gecode::Set::LUBndSet</scope><name>BndSet</name></member>
      <member refid="classGecode_1_1Set_1_1BndSet_1aa26e3bfb7c95a8797cc574f5be59c33a" prot="public" virt="non-virtual"><scope>Gecode::Set::LUBndSet</scope><name>BndSet</name></member>
      <member refid="classGecode_1_1Set_1_1BndSet_1aba21bb08ddc85b03192fb7c575e45cea" prot="public" virt="non-virtual"><scope>Gecode::Set::LUBndSet</scope><name>BndSet</name></member>
      <member refid="classGecode_1_1Set_1_1BndSet_1a1929a70d68fc1cdabd40c07152f5a282" prot="public" virt="non-virtual"><scope>Gecode::Set::LUBndSet</scope><name>card</name></member>
      <member refid="classGecode_1_1Set_1_1BndSet_1af73a7b88485946bd51da2afbabf12745" prot="public" virt="non-virtual"><scope>Gecode::Set::LUBndSet</scope><name>card</name></member>
      <member refid="classGecode_1_1Set_1_1BndSet_1a4fd106aef04d3546920c07e0d94024de" prot="public" virt="non-virtual"><scope>Gecode::Set::LUBndSet</scope><name>dispose</name></member>
      <member refid="classGecode_1_1Set_1_1BndSet_1ac5a9db35697d947862965086081e59cd" prot="public" virt="non-virtual"><scope>Gecode::Set::LUBndSet</scope><name>empty</name></member>
      <member refid="classGecode_1_1Set_1_1LUBndSet_1afcce63c08c49990298015cf30bf6eb63" prot="public" virt="non-virtual"><scope>Gecode::Set::LUBndSet</scope><name>exclude</name></member>
      <member refid="classGecode_1_1Set_1_1LUBndSet_1a98bacba4bbdc3f14b19d6b5999582a07" prot="private" virt="non-virtual"><scope>Gecode::Set::LUBndSet</scope><name>exclude_full</name></member>
      <member refid="classGecode_1_1Set_1_1LUBndSet_1a76f64b1bdf7396500538263b19d50baa" prot="public" virt="non-virtual"><scope>Gecode::Set::LUBndSet</scope><name>excludeAll</name></member>
      <member refid="classGecode_1_1Set_1_1LUBndSet_1a3128d05340cf630be14714e9280d6e75" prot="public" virt="non-virtual"><scope>Gecode::Set::LUBndSet</scope><name>excludeI</name></member>
      <member refid="classGecode_1_1Set_1_1BndSet_1aba229e4bebf30696535787f7e8d0620f" prot="protected" virt="non-virtual"><scope>Gecode::Set::LUBndSet</scope><name>fst</name></member>
      <member refid="classGecode_1_1Set_1_1BndSet_1a189c9b89cd5f5db7c6eb4bdbd4166987" prot="protected" virt="non-virtual"><scope>Gecode::Set::LUBndSet</scope><name>fst</name></member>
      <member refid="classGecode_1_1Set_1_1BndSet_1a488ecdc2ee45bd60d70088cc1b9f7642" prot="public" virt="non-virtual"><scope>Gecode::Set::LUBndSet</scope><name>in</name></member>
      <member refid="classGecode_1_1Set_1_1LUBndSet_1aea765802d56f99c7b254bc08e02eb283" prot="public" virt="non-virtual"><scope>Gecode::Set::LUBndSet</scope><name>init</name></member>
      <member refid="classGecode_1_1Set_1_1LUBndSet_1a809a72818925ee9ee5ee829af7a0f8cf" prot="public" virt="non-virtual"><scope>Gecode::Set::LUBndSet</scope><name>intersect</name></member>
      <member refid="classGecode_1_1Set_1_1LUBndSet_1aa417be0af74a8d70c8973fa9794f70a1" prot="private" virt="non-virtual"><scope>Gecode::Set::LUBndSet</scope><name>intersect_full</name></member>
      <member refid="classGecode_1_1Set_1_1LUBndSet_1a29e84847cb5c60372af8d3f7c2509f7e" prot="public" virt="non-virtual"><scope>Gecode::Set::LUBndSet</scope><name>intersectI</name></member>
      <member refid="classGecode_1_1Set_1_1BndSet_1ad5fc6491a5d55b3668c42dba6d40a612" prot="public" virt="non-virtual"><scope>Gecode::Set::LUBndSet</scope><name>isConsistent</name></member>
      <member refid="classGecode_1_1Set_1_1BndSet_1a56cd57a91cbc164ec0a711590898e7fd" prot="protected" virt="non-virtual"><scope>Gecode::Set::LUBndSet</scope><name>lst</name></member>
      <member refid="classGecode_1_1Set_1_1BndSet_1aff28c7071c8b7b38132f7e1b6a8182cc" prot="protected" virt="non-virtual"><scope>Gecode::Set::LUBndSet</scope><name>lst</name></member>
      <member refid="classGecode_1_1Set_1_1LUBndSet_1aec189ff8607c6004bcba3f26916dc638" prot="public" virt="non-virtual"><scope>Gecode::Set::LUBndSet</scope><name>LUBndSet</name></member>
      <member refid="classGecode_1_1Set_1_1LUBndSet_1a00005f6b5812feda371cb35163a7c9f6" prot="public" virt="non-virtual"><scope>Gecode::Set::LUBndSet</scope><name>LUBndSet</name></member>
      <member refid="classGecode_1_1Set_1_1LUBndSet_1a81cb6bf1f2b5d42c19bbd0ae8b331496" prot="public" virt="non-virtual"><scope>Gecode::Set::LUBndSet</scope><name>LUBndSet</name></member>
      <member refid="classGecode_1_1Set_1_1LUBndSet_1aac8f976c7d389285edb54ddb5c788671" prot="public" virt="non-virtual"><scope>Gecode::Set::LUBndSet</scope><name>LUBndSet</name></member>
      <member refid="classGecode_1_1Set_1_1LUBndSet_1a0e55af4c91aba5046458b3f452abbcc5" prot="private" virt="non-virtual"><scope>Gecode::Set::LUBndSet</scope><name>LUBndSet</name></member>
      <member refid="classGecode_1_1Set_1_1BndSet_1a8b6d498312183939e1d007ed614c61a1" prot="public" virt="non-virtual"><scope>Gecode::Set::LUBndSet</scope><name>max</name></member>
      <member refid="classGecode_1_1Set_1_1BndSet_1a2a0b1c8d9863a9650eda7b1066d85943" prot="public" virt="non-virtual"><scope>Gecode::Set::LUBndSet</scope><name>MAX_OF_EMPTY</name></member>
      <member refid="classGecode_1_1Set_1_1BndSet_1af17f47c5c3582a9bd6fcd792b385bce4" prot="public" virt="non-virtual"><scope>Gecode::Set::LUBndSet</scope><name>min</name></member>
      <member refid="classGecode_1_1Set_1_1BndSet_1ac506e1f8224563cc4090b7465acbe14b" prot="public" virt="non-virtual"><scope>Gecode::Set::LUBndSet</scope><name>MIN_OF_EMPTY</name></member>
      <member refid="classGecode_1_1Set_1_1BndSet_1a287a236ac01b493edb81c654562c5998" prot="public" virt="non-virtual"><scope>Gecode::Set::LUBndSet</scope><name>minN</name></member>
      <member refid="classGecode_1_1Set_1_1LUBndSet_1a05adbfc17833661bbf0b0218b52d98f9" prot="private" virt="non-virtual"><scope>Gecode::Set::LUBndSet</scope><name>operator=</name></member>
      <member refid="classGecode_1_1Set_1_1BndSet_1a21fab9ef2a20ebaa3230c1d59a641059" prot="protected" virt="non-virtual"><scope>Gecode::Set::LUBndSet</scope><name>overwrite</name></member>
      <member refid="classGecode_1_1Set_1_1BndSet_1a77563f5392ef37fe539c07702cbb429d" prot="public" virt="non-virtual"><scope>Gecode::Set::LUBndSet</scope><name>overwrite</name></member>
      <member refid="classGecode_1_1Set_1_1BndSet_1af77054b07e5f11f6e6559adf53b0d628" prot="public" virt="non-virtual"><scope>Gecode::Set::LUBndSet</scope><name>ranges</name></member>
      <member refid="classGecode_1_1Set_1_1BndSet_1a057b3dad3bb84170fe390ddfde1b993b" prot="public" virt="non-virtual"><scope>Gecode::Set::LUBndSet</scope><name>size</name></member>
      <member refid="classGecode_1_1Set_1_1BndSet_1a4d00b2876d4c92e788b50cb927cf3751" prot="public" virt="non-virtual"><scope>Gecode::Set::LUBndSet</scope><name>update</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
