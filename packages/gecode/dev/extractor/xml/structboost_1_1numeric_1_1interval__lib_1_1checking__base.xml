<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="structboost_1_1numeric_1_1interval__lib_1_1checking__base" kind="struct" prot="public">
    <compoundname>boost::numeric::interval_lib::checking_base</compoundname>
    <derivedcompoundref refid="structboost_1_1numeric_1_1interval__lib_1_1checking__no__empty" prot="public" virt="non-virtual">boost::numeric::interval_lib::checking_no_empty&lt; T &gt;</derivedcompoundref>
    <templateparamlist>
      <param>
        <type>class T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structboost_1_1numeric_1_1interval__lib_1_1checking__base_1adfbb0a467b0971fc457e45715eb8d943" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>static T boost::numeric::interval_lib::checking_base&lt; T &gt;::pos_inf</definition>
        <argsstring>()</argsstring>
        <name>pos_inf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/numeric/interval/checking.hpp" line="41" column="1" bodyfile="/usr/include/gecode/third-party/boost/numeric/interval/checking.hpp" bodystart="41" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1numeric_1_1interval__lib_1_1checking__base_1a9152abb76bda8167c65f3c1e3f29cb35" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>static T boost::numeric::interval_lib::checking_base&lt; T &gt;::neg_inf</definition>
        <argsstring>()</argsstring>
        <name>neg_inf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/numeric/interval/checking.hpp" line="46" column="1" bodyfile="/usr/include/gecode/third-party/boost/numeric/interval/checking.hpp" bodystart="46" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1numeric_1_1interval__lib_1_1checking__base_1ab0e63130fdeacd191dc4f0db2bc4bbaa" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>static T boost::numeric::interval_lib::checking_base&lt; T &gt;::nan</definition>
        <argsstring>()</argsstring>
        <name>nan</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/numeric/interval/checking.hpp" line="51" column="1" bodyfile="/usr/include/gecode/third-party/boost/numeric/interval/checking.hpp" bodystart="51" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1numeric_1_1interval__lib_1_1checking__base_1a19ff6255ec6b41713f21a0294fea8ee3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool boost::numeric::interval_lib::checking_base&lt; T &gt;::is_nan</definition>
        <argsstring>(const T &amp;x)</argsstring>
        <name>is_nan</name>
        <param>
          <type>const T &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/numeric/interval/checking.hpp" line="56" column="1" bodyfile="/usr/include/gecode/third-party/boost/numeric/interval/checking.hpp" bodystart="56" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1numeric_1_1interval__lib_1_1checking__base_1ae697ba9343eacfa30b795fae01c7cd6b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>static T boost::numeric::interval_lib::checking_base&lt; T &gt;::empty_lower</definition>
        <argsstring>()</argsstring>
        <name>empty_lower</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/numeric/interval/checking.hpp" line="60" column="1" bodyfile="/usr/include/gecode/third-party/boost/numeric/interval/checking.hpp" bodystart="60" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1numeric_1_1interval__lib_1_1checking__base_1a884b930be5c079b5a5d6384cd077252b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>static T boost::numeric::interval_lib::checking_base&lt; T &gt;::empty_upper</definition>
        <argsstring>()</argsstring>
        <name>empty_upper</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/numeric/interval/checking.hpp" line="65" column="1" bodyfile="/usr/include/gecode/third-party/boost/numeric/interval/checking.hpp" bodystart="65" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1numeric_1_1interval__lib_1_1checking__base_1a1042698dbfbc8bc266a51efe15d41000" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool boost::numeric::interval_lib::checking_base&lt; T &gt;::is_empty</definition>
        <argsstring>(const T &amp;l, const T &amp;u)</argsstring>
        <name>is_empty</name>
        <param>
          <type>const T &amp;</type>
          <declname>l</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/third-party/boost/numeric/interval/checking.hpp" line="70" column="1" bodyfile="/usr/include/gecode/third-party/boost/numeric/interval/checking.hpp" bodystart="70" bodyend="73"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1454">
        <label>checking_no_empty&lt; T &gt;</label>
        <link refid="structboost_1_1numeric_1_1interval__lib_1_1checking__no__empty"/>
        <childnode refid="1453" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1455">
        <label>boost::numeric::interval_lib::checking_no_nan&lt; T, checking_no_empty&lt; T &gt; &gt;</label>
        <link refid="structboost_1_1numeric_1_1interval__lib_1_1checking__no__nan"/>
        <childnode refid="1454" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1456">
        <label>boost::numeric::interval_lib::checking_strict&lt; T &gt;</label>
        <link refid="structboost_1_1numeric_1_1interval__lib_1_1checking__strict"/>
        <childnode refid="1455" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1453">
        <label>boost::numeric::interval_lib::checking_base&lt; T &gt;</label>
        <link refid="structboost_1_1numeric_1_1interval__lib_1_1checking__base"/>
      </node>
    </inheritancegraph>
    <location file="/usr/include/gecode/third-party/boost/numeric/interval/checking.hpp" line="40" column="1" bodyfile="/usr/include/gecode/third-party/boost/numeric/interval/checking.hpp" bodystart="39" bodyend="74"/>
    <listofallmembers>
      <member refid="structboost_1_1numeric_1_1interval__lib_1_1checking__base_1ae697ba9343eacfa30b795fae01c7cd6b" prot="public" virt="non-virtual"><scope>boost::numeric::interval_lib::checking_base</scope><name>empty_lower</name></member>
      <member refid="structboost_1_1numeric_1_1interval__lib_1_1checking__base_1a884b930be5c079b5a5d6384cd077252b" prot="public" virt="non-virtual"><scope>boost::numeric::interval_lib::checking_base</scope><name>empty_upper</name></member>
      <member refid="structboost_1_1numeric_1_1interval__lib_1_1checking__base_1a1042698dbfbc8bc266a51efe15d41000" prot="public" virt="non-virtual"><scope>boost::numeric::interval_lib::checking_base</scope><name>is_empty</name></member>
      <member refid="structboost_1_1numeric_1_1interval__lib_1_1checking__base_1a19ff6255ec6b41713f21a0294fea8ee3" prot="public" virt="non-virtual"><scope>boost::numeric::interval_lib::checking_base</scope><name>is_nan</name></member>
      <member refid="structboost_1_1numeric_1_1interval__lib_1_1checking__base_1ab0e63130fdeacd191dc4f0db2bc4bbaa" prot="public" virt="non-virtual"><scope>boost::numeric::interval_lib::checking_base</scope><name>nan</name></member>
      <member refid="structboost_1_1numeric_1_1interval__lib_1_1checking__base_1a9152abb76bda8167c65f3c1e3f29cb35" prot="public" virt="non-virtual"><scope>boost::numeric::interval_lib::checking_base</scope><name>neg_inf</name></member>
      <member refid="structboost_1_1numeric_1_1interval__lib_1_1checking__base_1adfbb0a467b0971fc457e45715eb8d943" prot="public" virt="non-virtual"><scope>boost::numeric::interval_lib::checking_base</scope><name>pos_inf</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
