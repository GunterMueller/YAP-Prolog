<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classGecode_1_1Int_1_1BoolView" kind="class" prot="public">
    <compoundname>Gecode::Int::BoolView</compoundname>
    <basecompoundref refid="classGecode_1_1VarImpView" prot="public" virt="non-virtual">Gecode::VarImpView&lt; BoolVar &gt;</basecompoundref>
    <includes refid="int_2view_8hpp" local="no">view.hpp</includes>
      <sectiondef kind="user-defined">
      <header>Constructors and initialization</header>
      <memberdef kind="function" id="classGecode_1_1Int_1_1BoolView_1a04610e8322fb2e9c9e60371f32dc84f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Int::BoolView::BoolView</definition>
        <argsstring>(void)</argsstring>
        <name>BoolView</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="1322" column="1" bodyfile="/usr/include/gecode/int/view/bool.hpp" bodystart="45" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1BoolView_1accc6604b962883f1646a7b8b182304ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Int::BoolView::BoolView</definition>
        <argsstring>(const BoolVar &amp;y)</argsstring>
        <name>BoolView</name>
        <param>
          <type>const <ref refid="classGecode_1_1BoolVar" kindref="compound">BoolVar</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Initialize from Boolean variable <emphasis>y</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="1324" column="1" bodyfile="/usr/include/gecode/int/view/bool.hpp" bodystart="47" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1BoolView_1a1f4625f7357a609305f0245a41417e20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Int::BoolView::BoolView</definition>
        <argsstring>(BoolVarImp *y)</argsstring>
        <name>BoolView</name>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1BoolVarImp" kindref="compound">BoolVarImp</ref> *</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Initialize from Boolean variable implementation <emphasis>y</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="1326" column="1" bodyfile="/usr/include/gecode/int/view/bool.hpp" bodystart="50" bodyend="51"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Domain status access</header>
      <memberdef kind="variable" id="classGecode_1_1Int_1_1BoolView_1ab752399af12c8c51ea41f98e4f2392c9" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int Gecode::Int::BoolView::BITS</definition>
        <argsstring></argsstring>
        <name>BITS</name>
        <initializer>= BoolVarImp::BITS</initializer>
        <briefdescription>
<para>How many bits does the status have. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="1332" column="1" bodyfile="/usr/include/gecode/int/view.hpp" bodystart="1332" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Int_1_1BoolView_1af1d1ade23f0919855f85564357365948" prot="public" static="yes" mutable="no">
        <type>const <ref refid="namespaceGecode_1_1Int_1ab342b6be942d41a4aa1899f20ad3cad8" kindref="member">BoolStatus</ref></type>
        <definition>const BoolStatus Gecode::Int::BoolView::ZERO</definition>
        <argsstring></argsstring>
        <name>ZERO</name>
        <initializer>= BoolVarImp::ZERO</initializer>
        <briefdescription>
<para>Status of domain assigned to zero. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="1334" column="1" bodyfile="/usr/include/gecode/int/view.hpp" bodystart="1334" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Int_1_1BoolView_1a38c36b6e55c873f55e632e8099af0df0" prot="public" static="yes" mutable="no">
        <type>const <ref refid="namespaceGecode_1_1Int_1ab342b6be942d41a4aa1899f20ad3cad8" kindref="member">BoolStatus</ref></type>
        <definition>const BoolStatus Gecode::Int::BoolView::ONE</definition>
        <argsstring></argsstring>
        <name>ONE</name>
        <initializer>= BoolVarImp::ONE</initializer>
        <briefdescription>
<para>Status of domain assigned to one. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="1336" column="1" bodyfile="/usr/include/gecode/int/view.hpp" bodystart="1336" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Int_1_1BoolView_1a24bfd94c1da5170048a568a804a6579a" prot="public" static="yes" mutable="no">
        <type>const <ref refid="namespaceGecode_1_1Int_1ab342b6be942d41a4aa1899f20ad3cad8" kindref="member">BoolStatus</ref></type>
        <definition>const BoolStatus Gecode::Int::BoolView::NONE</definition>
        <argsstring></argsstring>
        <name>NONE</name>
        <initializer>= BoolVarImp::NONE</initializer>
        <briefdescription>
<para>Status of domain not yet assigned. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="1338" column="1" bodyfile="/usr/include/gecode/int/view.hpp" bodystart="1338" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1BoolView_1a11a0a9f97440cd6d6e5b941e9634bde9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceGecode_1_1Int_1ab342b6be942d41a4aa1899f20ad3cad8" kindref="member">BoolStatus</ref></type>
        <definition>forceinline BoolStatus Gecode::Int::BoolView::status</definition>
        <argsstring>(void) const </argsstring>
        <name>status</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return current domain status. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="1340" column="1" bodyfile="/usr/include/gecode/int/view/bool.hpp" bodystart="58" bodyend="60"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Value access</header>
      <memberdef kind="function" id="classGecode_1_1Int_1_1BoolView_1af94da7e8082bf80628406b644a9d8693" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Int::BoolView::min</definition>
        <argsstring>(void) const </argsstring>
        <name>min</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return minimum of domain. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="1346" column="1" bodyfile="/usr/include/gecode/int/view/bool.hpp" bodystart="62" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1BoolView_1aaa03ff37516598ee5fadcdbfcd490e7c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Int::BoolView::max</definition>
        <argsstring>(void) const </argsstring>
        <name>max</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return maximum of domain. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="1348" column="1" bodyfile="/usr/include/gecode/int/view/bool.hpp" bodystart="66" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1BoolView_1ab0924ec27f937e3ad9b1d58430983a14" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Int::BoolView::med</definition>
        <argsstring>(void) const </argsstring>
        <name>med</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return median of domain (greatest element not greater than the median) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="1350" column="1" bodyfile="/usr/include/gecode/int/view/bool.hpp" bodystart="70" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1BoolView_1aca5bce8b519816b457af20f24f3f8a93" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Int::BoolView::val</definition>
        <argsstring>(void) const </argsstring>
        <name>val</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return assigned value (only if assigned) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="1352" column="1" bodyfile="/usr/include/gecode/int/view/bool.hpp" bodystart="74" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1BoolView_1a3f0cd2958c21f8e1e34fe6051682c074" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>forceinline unsigned int Gecode::Int::BoolView::size</definition>
        <argsstring>(void) const </argsstring>
        <name>size</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return size (cardinality) of domain. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="1355" column="1" bodyfile="/usr/include/gecode/int/view/bool.hpp" bodystart="79" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1BoolView_1a5fea7843bbff6938d5f1db255f155295" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>forceinline unsigned int Gecode::Int::BoolView::width</definition>
        <argsstring>(void) const </argsstring>
        <name>width</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return width of domain (distance between maximum and minimum) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="1357" column="1" bodyfile="/usr/include/gecode/int/view/bool.hpp" bodystart="83" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1BoolView_1a719adeac3279e50ccfe60475225e3266" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>forceinline unsigned int Gecode::Int::BoolView::regret_min</definition>
        <argsstring>(void) const </argsstring>
        <name>regret_min</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return regret of domain minimum (distance to next larger value) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="1359" column="1" bodyfile="/usr/include/gecode/int/view/bool.hpp" bodystart="87" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1BoolView_1ac1a3d85a82278e35fdf90c4d6cde9697" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>forceinline unsigned int Gecode::Int::BoolView::regret_max</definition>
        <argsstring>(void) const </argsstring>
        <name>regret_max</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return regret of domain maximum (distance to next smaller value) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="1361" column="1" bodyfile="/usr/include/gecode/int/view/bool.hpp" bodystart="91" bodyend="93"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Domain tests</header>
      <memberdef kind="function" id="classGecode_1_1Int_1_1BoolView_1a74a1ca8794bcd47707180dc8ef567e96" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::Int::BoolView::range</definition>
        <argsstring>(void) const </argsstring>
        <name>range</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test whether domain is a range. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="1367" column="1" bodyfile="/usr/include/gecode/int/view/bool.hpp" bodystart="101" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1BoolView_1aeb59f1404d511c025677070b8a2da478" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::Int::BoolView::in</definition>
        <argsstring>(int n) const </argsstring>
        <name>in</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Test whether <emphasis>n</emphasis> is contained in domain. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="1369" column="1" bodyfile="/usr/include/gecode/int/view/bool.hpp" bodystart="105" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1BoolView_1ae54cdf5b5c76add05bec91f6b4a48a39" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::Int::BoolView::in</definition>
        <argsstring>(long long int n) const </argsstring>
        <name>in</name>
        <param>
          <type>long long int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Test whether <emphasis>n</emphasis> is contained in domain. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="1371" column="1" bodyfile="/usr/include/gecode/int/view/bool.hpp" bodystart="109" bodyend="111"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Boolean domain tests</header>
      <memberdef kind="function" id="classGecode_1_1Int_1_1BoolView_1ac0be57dc5f343bb8ed7173b68827619b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::Int::BoolView::zero</definition>
        <argsstring>(void) const </argsstring>
        <name>zero</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test whether view is assigned to be zero. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="1377" column="1" bodyfile="/usr/include/gecode/int/view/bool.hpp" bodystart="214" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1BoolView_1a933b6200f00dd245347cc46a48736ba2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::Int::BoolView::one</definition>
        <argsstring>(void) const </argsstring>
        <name>one</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test whether view is assigned to be one. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="1379" column="1" bodyfile="/usr/include/gecode/int/view/bool.hpp" bodystart="218" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1BoolView_1af16962c55f4cc487fec4f3fd971bc490" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::Int::BoolView::none</definition>
        <argsstring>(void) const </argsstring>
        <name>none</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test whether view is not yet assigned. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="1381" column="1" bodyfile="/usr/include/gecode/int/view/bool.hpp" bodystart="222" bodyend="224"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Boolean assignment operations</header>
      <memberdef kind="function" id="classGecode_1_1Int_1_1BoolView_1a20099c330c16b6c8cfa4d3d697556804" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Int::BoolView::one</definition>
        <argsstring>(Space &amp;home)</argsstring>
        <name>one</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <briefdescription>
<para>Try to assign view to one. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="1387" column="1" bodyfile="/usr/include/gecode/int/view/bool.hpp" bodystart="245" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1BoolView_1af7e32f427dd3d9b0f45119262037d31d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Int::BoolView::zero</definition>
        <argsstring>(Space &amp;home)</argsstring>
        <name>zero</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <briefdescription>
<para>Try to assign view to zero. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="1389" column="1" bodyfile="/usr/include/gecode/int/view/bool.hpp" bodystart="241" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1BoolView_1a389529e7b170dff6a4ee20431a7147f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Int::BoolView::one_none</definition>
        <argsstring>(Space &amp;home)</argsstring>
        <name>one_none</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <briefdescription>
<para>Assign not yet assigned view to one. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="1391" column="1" bodyfile="/usr/include/gecode/int/view/bool.hpp" bodystart="236" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1BoolView_1addee9d1e9e04dd35d7832729372f9019" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Int::BoolView::zero_none</definition>
        <argsstring>(Space &amp;home)</argsstring>
        <name>zero_none</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <briefdescription>
<para>Assign not yet assigned view to zero. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="1393" column="1" bodyfile="/usr/include/gecode/int/view/bool.hpp" bodystart="232" bodyend="234"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Domain update by value</header>
      <memberdef kind="function" id="classGecode_1_1Int_1_1BoolView_1ac1bc80aa03f104cfa252dc71f551a2c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Int::BoolView::lq</definition>
        <argsstring>(Space &amp;home, int n)</argsstring>
        <name>lq</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Restrict domain values to be less or equal than <emphasis>n</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="1399" column="1" bodyfile="/usr/include/gecode/int/view/bool.hpp" bodystart="119" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1BoolView_1ad7a7eb814aa6cbd861eab76fde26aaa4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Int::BoolView::lq</definition>
        <argsstring>(Space &amp;home, long long int n)</argsstring>
        <name>lq</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>long long int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Restrict domain values to be less or equal than <emphasis>n</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="1401" column="1" bodyfile="/usr/include/gecode/int/view/bool.hpp" bodystart="123" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1BoolView_1a798f83609ada16b572085eeaaf5b9af4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Int::BoolView::le</definition>
        <argsstring>(Space &amp;home, int n)</argsstring>
        <name>le</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Restrict domain values to be less than <emphasis>n</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="1404" column="1" bodyfile="/usr/include/gecode/int/view/bool.hpp" bodystart="128" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1BoolView_1a9f713975be54235ca8c7cf25cf026102" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Int::BoolView::le</definition>
        <argsstring>(Space &amp;home, long long int n)</argsstring>
        <name>le</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>long long int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Restrict domain values to be less than <emphasis>n</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="1406" column="1" bodyfile="/usr/include/gecode/int/view/bool.hpp" bodystart="132" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1BoolView_1a59684b307ad7bbc1f7667ffb7263436f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Int::BoolView::gq</definition>
        <argsstring>(Space &amp;home, int n)</argsstring>
        <name>gq</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Restrict domain values to be greater or equal than <emphasis>n</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="1409" column="1" bodyfile="/usr/include/gecode/int/view/bool.hpp" bodystart="137" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1BoolView_1a5072ad64b642e85f230bde4073769ebc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Int::BoolView::gq</definition>
        <argsstring>(Space &amp;home, long long int n)</argsstring>
        <name>gq</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>long long int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Restrict domain values to be greater or equal than <emphasis>n</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="1411" column="1" bodyfile="/usr/include/gecode/int/view/bool.hpp" bodystart="141" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1BoolView_1a4a8c4f5fcd74bbc55d5e3ca72a9d9d5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Int::BoolView::gr</definition>
        <argsstring>(Space &amp;home, int n)</argsstring>
        <name>gr</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Restrict domain values to be greater than <emphasis>n</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="1414" column="1" bodyfile="/usr/include/gecode/int/view/bool.hpp" bodystart="146" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1BoolView_1ac3cc3651dd6639a56f88fd98b99bbfbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Int::BoolView::gr</definition>
        <argsstring>(Space &amp;home, long long int n)</argsstring>
        <name>gr</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>long long int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Restrict domain values to be greater than <emphasis>n</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="1416" column="1" bodyfile="/usr/include/gecode/int/view/bool.hpp" bodystart="150" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1BoolView_1a815dc30d04bd081d2007931aa15271dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Int::BoolView::nq</definition>
        <argsstring>(Space &amp;home, int n)</argsstring>
        <name>nq</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Restrict domain values to be different from <emphasis>n</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="1419" column="1" bodyfile="/usr/include/gecode/int/view/bool.hpp" bodystart="155" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1BoolView_1a4e272bb788febf67da99931e8adae15b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Int::BoolView::nq</definition>
        <argsstring>(Space &amp;home, long long int n)</argsstring>
        <name>nq</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>long long int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Restrict domain values to be different from <emphasis>n</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="1421" column="1" bodyfile="/usr/include/gecode/int/view/bool.hpp" bodystart="159" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1BoolView_1a11a2f9bbc22ced84425ba1379439d8b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Int::BoolView::eq</definition>
        <argsstring>(Space &amp;home, int n)</argsstring>
        <name>eq</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Restrict domain values to be equal to <emphasis>n</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="1424" column="1" bodyfile="/usr/include/gecode/int/view/bool.hpp" bodystart="164" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1BoolView_1a29b95cc570733ef7edf6c33ea04937ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Int::BoolView::eq</definition>
        <argsstring>(Space &amp;home, long long int n)</argsstring>
        <name>eq</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>long long int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Restrict domain values to be equal to <emphasis>n</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="1426" column="1" bodyfile="/usr/include/gecode/int/view/bool.hpp" bodystart="168" bodyend="170"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Domain update by iterator</header>
      <description><para>Views can be both updated by range and value iterators. Value iterators do not need to be strict in that the same value is allowed to occur more than once in the iterated sequence.</para><para>The argument <emphasis>depends</emphasis> must be true, if the iterator passed as argument depends on the view on which the operation is invoked. In this case, the view is only updated after the iterator has been consumed. Otherwise, the domain might be updated concurrently while following the iterator. </para></description>
      <memberdef kind="function" id="classGecode_1_1Int_1_1BoolView_1a3b8a481dadc028c4cfde9c9cd2526cff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>ModEvent Gecode::Int::BoolView::narrow_r</definition>
        <argsstring>(Space &amp;home, I &amp;i, bool depends=true)</argsstring>
        <name>narrow_r</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>I &amp;</type>
          <declname>i</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>depends</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Replace domain by ranges described by <emphasis>i</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="1446" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1BoolView_1a5320d9475d4bc5ce870b4a5f9c646b09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>ModEvent Gecode::Int::BoolView::inter_r</definition>
        <argsstring>(Space &amp;home, I &amp;i, bool depends=true)</argsstring>
        <name>inter_r</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>I &amp;</type>
          <declname>i</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>depends</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Intersect domain with ranges described by <emphasis>i</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="1449" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1BoolView_1adba2686a9e41a12b238b337ca5a01909" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>ModEvent Gecode::Int::BoolView::minus_r</definition>
        <argsstring>(Space &amp;home, I &amp;i, bool depends=true)</argsstring>
        <name>minus_r</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>I &amp;</type>
          <declname>i</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>depends</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Remove from domain the ranges described by <emphasis>i</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="1452" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1BoolView_1a754e95e4be43ea6245a2092abfdf7459" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>ModEvent Gecode::Int::BoolView::narrow_v</definition>
        <argsstring>(Space &amp;home, I &amp;i, bool depends=true)</argsstring>
        <name>narrow_v</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>I &amp;</type>
          <declname>i</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>depends</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Replace domain by values described by <emphasis>i</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="1455" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1BoolView_1a79baa9bc26a6b83eb4d230389822e66b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>ModEvent Gecode::Int::BoolView::inter_v</definition>
        <argsstring>(Space &amp;home, I &amp;i, bool depends=true)</argsstring>
        <name>inter_v</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>I &amp;</type>
          <declname>i</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>depends</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Intersect domain with values described by <emphasis>i</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="1458" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1BoolView_1afa7e87821ca51ac8d7657bb1f80872c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>ModEvent Gecode::Int::BoolView::minus_v</definition>
        <argsstring>(Space &amp;home, I &amp;i, bool depends=true)</argsstring>
        <name>minus_v</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>I &amp;</type>
          <declname>i</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>depends</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Remove from domain the values described by <emphasis>i</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="1461" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Delta information for advisors</header>
      <memberdef kind="function" id="classGecode_1_1Int_1_1BoolView_1ac28962a11fac62331f3c2b479054166e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Int::BoolView::min</definition>
        <argsstring>(const Delta &amp;d) const </argsstring>
        <name>min</name>
        <param>
          <type>const <ref refid="classGecode_1_1Delta" kindref="compound">Delta</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Return minimum value just pruned. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="1467" column="1" bodyfile="/usr/include/gecode/int/view/bool.hpp" bodystart="255" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1BoolView_1a96f5c06a944dbd9912fdda5c5d152fda" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Int::BoolView::max</definition>
        <argsstring>(const Delta &amp;d) const </argsstring>
        <name>max</name>
        <param>
          <type>const <ref refid="classGecode_1_1Delta" kindref="compound">Delta</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Return maximum value just pruned. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="1469" column="1" bodyfile="/usr/include/gecode/int/view/bool.hpp" bodystart="259" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1BoolView_1a846aba6f1a902b246f2c9a0f54774dec" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::Int::BoolView::any</definition>
        <argsstring>(const Delta &amp;d) const </argsstring>
        <name>any</name>
        <param>
          <type>const <ref refid="classGecode_1_1Delta" kindref="compound">Delta</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Test whether arbitrary values got pruned. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="1471" column="1" bodyfile="/usr/include/gecode/int/view/bool.hpp" bodystart="263" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1BoolView_1aa96c15437eabe1477ab34ee36a6a08f4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::Int::BoolView::zero</definition>
        <argsstring>(const Delta &amp;d)</argsstring>
        <name>zero</name>
        <param>
          <type>const <ref refid="classGecode_1_1Delta" kindref="compound">Delta</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Test whether a view has been assigned to zero. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="1473" column="1" bodyfile="/usr/include/gecode/int/view/bool.hpp" bodystart="267" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1BoolView_1a1a25c9c707efa7c2532c0e78d57005a4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::Int::BoolView::one</definition>
        <argsstring>(const Delta &amp;d)</argsstring>
        <name>one</name>
        <param>
          <type>const <ref refid="classGecode_1_1Delta" kindref="compound">Delta</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Test whether a view has been assigned to one. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="1475" column="1" bodyfile="/usr/include/gecode/int/view/bool.hpp" bodystart="271" bodyend="273"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>View-dependent propagator support</header>
      <memberdef kind="function" id="classGecode_1_1Int_1_1BoolView_1a6a214290ca80fbc97c2553c48d20438a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceGecode_1a129e41c1d037528010d7b6706495a560" kindref="member">ModEventDelta</ref></type>
        <definition>forceinline ModEventDelta Gecode::Int::BoolView::med</definition>
        <argsstring>(ModEvent me)</argsstring>
        <name>med</name>
        <param>
          <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
          <declname>me</declname>
        </param>
        <briefdescription>
<para>Translate modification event <emphasis>me</emphasis> to modification event delta for view. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="1481" column="1" bodyfile="/usr/include/gecode/int/view/bool.hpp" bodystart="278" bodyend="280"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Test sharing between Boolean and negated Boolean views</header>
      <description><para><ref refid="classGecode_1_1Int_1_1NegBoolView" kindref="compound">NegBoolView</ref> </para></description>
      <memberdef kind="function" id="classGecode_1_1Int_1_1BoolView_1abb95cc5f9cbb174ac12d147c645ad52f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceGecode_1_1Int_1af2f4f54bca09d4f68bf1a6e17ad65a4b" kindref="member">BoolTest</ref></type>
        <definition>BoolTest bool_test</definition>
        <argsstring>(const BoolView &amp;b0, const BoolView &amp;b1)</argsstring>
        <name>bool_test</name>
        <param>
          <type>const <ref refid="classGecode_1_1Int_1_1BoolView" kindref="compound">BoolView</ref> &amp;</type>
          <declname>b0</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1Int_1_1BoolView" kindref="compound">BoolView</ref> &amp;</type>
          <declname>b1</declname>
        </param>
        <briefdescription>
<para>Test whether views <emphasis>b0</emphasis> and <emphasis>b1</emphasis> are the same. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="1676" column="1" bodyfile="/usr/include/gecode/int/view/bool-test.hpp" bodystart="45" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1BoolView_1aab5a3a3f5f8bbe5df9db02ff3486e369" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceGecode_1_1Int_1af2f4f54bca09d4f68bf1a6e17ad65a4b" kindref="member">BoolTest</ref></type>
        <definition>BoolTest bool_test</definition>
        <argsstring>(const BoolView &amp;b0, const NegBoolView &amp;b1)</argsstring>
        <name>bool_test</name>
        <param>
          <type>const <ref refid="classGecode_1_1Int_1_1BoolView" kindref="compound">BoolView</ref> &amp;</type>
          <declname>b0</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1Int_1_1NegBoolView" kindref="compound">NegBoolView</ref> &amp;</type>
          <declname>b1</declname>
        </param>
        <briefdescription>
<para>Test whether views <emphasis>b0</emphasis> and <emphasis>b1</emphasis> are complementary. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="1678" column="1" bodyfile="/usr/include/gecode/int/view/bool-test.hpp" bodystart="49" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1BoolView_1aab4c83508c2249291cc2ae7043234947" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceGecode_1_1Int_1af2f4f54bca09d4f68bf1a6e17ad65a4b" kindref="member">BoolTest</ref></type>
        <definition>BoolTest bool_test</definition>
        <argsstring>(const NegBoolView &amp;b0, const BoolView &amp;b1)</argsstring>
        <name>bool_test</name>
        <param>
          <type>const <ref refid="classGecode_1_1Int_1_1NegBoolView" kindref="compound">NegBoolView</ref> &amp;</type>
          <declname>b0</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1Int_1_1BoolView" kindref="compound">BoolView</ref> &amp;</type>
          <declname>b1</declname>
        </param>
        <briefdescription>
<para>Test whether views <emphasis>b0</emphasis> and <emphasis>b1</emphasis> are complementary. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="1680" column="1" bodyfile="/usr/include/gecode/int/view/bool-test.hpp" bodystart="53" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1BoolView_1aa97ceecacb04a8d799dfca49c9ebeb05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceGecode_1_1Int_1af2f4f54bca09d4f68bf1a6e17ad65a4b" kindref="member">BoolTest</ref></type>
        <definition>BoolTest bool_test</definition>
        <argsstring>(const NegBoolView &amp;b0, const NegBoolView &amp;b1)</argsstring>
        <name>bool_test</name>
        <param>
          <type>const <ref refid="classGecode_1_1Int_1_1NegBoolView" kindref="compound">NegBoolView</ref> &amp;</type>
          <declname>b0</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1Int_1_1NegBoolView" kindref="compound">NegBoolView</ref> &amp;</type>
          <declname>b1</declname>
        </param>
        <briefdescription>
<para>Test whether views <emphasis>b0</emphasis> and <emphasis>b1</emphasis> are the same. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="1682" column="1" bodyfile="/usr/include/gecode/int/view/bool-test.hpp" bodystart="57" bodyend="59"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classGecode_1_1Int_1_1BoolView_1afe01cb7c8201f4224eba502e6f249c39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type>forceinline <ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Int::BoolView::narrow_r</definition>
        <argsstring>(Space &amp;home, I &amp;i, bool depend)</argsstring>
        <name>narrow_r</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>I &amp;</type>
          <declname>i</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>depend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view/bool.hpp" line="179" column="1" bodyfile="/usr/include/gecode/int/view/bool.hpp" bodystart="179" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1BoolView_1ac80f22159d8a80ab858ea1e7970683b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type>forceinline <ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Int::BoolView::inter_r</definition>
        <argsstring>(Space &amp;home, I &amp;i, bool depend)</argsstring>
        <name>inter_r</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>I &amp;</type>
          <declname>i</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>depend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view/bool.hpp" line="184" column="1" bodyfile="/usr/include/gecode/int/view/bool.hpp" bodystart="184" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1BoolView_1a046b46f150648465e81a28b46d82e829" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type>forceinline <ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Int::BoolView::minus_r</definition>
        <argsstring>(Space &amp;home, I &amp;i, bool depend)</argsstring>
        <name>minus_r</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>I &amp;</type>
          <declname>i</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>depend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view/bool.hpp" line="189" column="1" bodyfile="/usr/include/gecode/int/view/bool.hpp" bodystart="189" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1BoolView_1a8b5fa203b568197b031db17e90b090d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type>forceinline <ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Int::BoolView::narrow_v</definition>
        <argsstring>(Space &amp;home, I &amp;i, bool depend)</argsstring>
        <name>narrow_v</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>I &amp;</type>
          <declname>i</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>depend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view/bool.hpp" line="194" column="1" bodyfile="/usr/include/gecode/int/view/bool.hpp" bodystart="194" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1BoolView_1a21324df84e383868d49696fd210ed8f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type>forceinline <ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Int::BoolView::inter_v</definition>
        <argsstring>(Space &amp;home, I &amp;i, bool depend)</argsstring>
        <name>inter_v</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>I &amp;</type>
          <declname>i</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>depend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view/bool.hpp" line="199" column="1" bodyfile="/usr/include/gecode/int/view/bool.hpp" bodystart="199" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1BoolView_1ab9344013120b7b625de1ccc2bd6050ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type>forceinline <ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Int::BoolView::minus_v</definition>
        <argsstring>(Space &amp;home, I &amp;i, bool depend)</argsstring>
        <name>minus_v</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>I &amp;</type>
          <declname>i</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>depend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view/bool.hpp" line="204" column="1" bodyfile="/usr/include/gecode/int/view/bool.hpp" bodystart="204" bodyend="206"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="related">
      <memberdef kind="function" id="classGecode_1_1Int_1_1BoolView_1ae0597d70dcfe467330bd0674e33b57f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Char</type>
          </param>
          <param>
            <type>class Traits</type>
          </param>
        </templateparamlist>
        <type>std::basic_ostream&lt; Char, Traits &gt; &amp;</type>
        <definition>std::basic_ostream&lt; Char, Traits &gt; &amp; operator&lt;&lt;</definition>
        <argsstring>(std::basic_ostream&lt; Char, Traits &gt; &amp;os, const BoolView &amp;x)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::basic_ostream&lt; Char, Traits &gt; &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1Int_1_1BoolView" kindref="compound">BoolView</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Print Boolean view. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="1276" column="1" bodyfile="/usr/include/gecode/int/view/print.hpp" bodystart="142" bodyend="148"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Boolean view for Boolean variables. </para>    </briefdescription>
    <detaileddescription>
<para>Provides convenient and efficient operations for Boolean views. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="1272">
        <label>Gecode::Int::BoolView</label>
        <link refid="classGecode_1_1Int_1_1BoolView"/>
        <childnode refid="1273" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1273">
        <label>Gecode::VarImpView&lt; BoolVar &gt;</label>
        <link refid="classGecode_1_1VarImpView"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1274">
        <label>Gecode::Int::BoolView</label>
        <link refid="classGecode_1_1Int_1_1BoolView"/>
        <childnode refid="1275" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1275">
        <label>Gecode::VarImpView&lt; BoolVar &gt;</label>
        <link refid="classGecode_1_1VarImpView"/>
      </node>
    </collaborationgraph>
    <location file="/usr/include/gecode/int/view.hpp" line="1315" column="1" bodyfile="/usr/include/gecode/int/view.hpp" bodystart="1315" bodyend="1483"/>
    <listofallmembers>
      <member refid="classGecode_1_1VarImpView_1a5b16299eecf8f61b8dc0beb8f9bd0beb" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>afc</name></member>
      <member refid="classGecode_1_1Int_1_1BoolView_1a846aba6f1a902b246f2c9a0f54774dec" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>any</name></member>
      <member refid="classGecode_1_1VarImpView_1aeee242f0be13f77dc287449dd51e6fd2" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>assigned</name></member>
      <member refid="classGecode_1_1Int_1_1BoolView_1ab752399af12c8c51ea41f98e4f2392c9" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>BITS</name></member>
      <member refid="classGecode_1_1Int_1_1BoolView_1abb95cc5f9cbb174ac12d147c645ad52f" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>bool_test</name></member>
      <member refid="classGecode_1_1Int_1_1BoolView_1aab5a3a3f5f8bbe5df9db02ff3486e369" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>bool_test</name></member>
      <member refid="classGecode_1_1Int_1_1BoolView_1aab4c83508c2249291cc2ae7043234947" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>bool_test</name></member>
      <member refid="classGecode_1_1Int_1_1BoolView_1aa97ceecacb04a8d799dfca49c9ebeb05" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>bool_test</name></member>
      <member refid="classGecode_1_1Int_1_1BoolView_1a04610e8322fb2e9c9e60371f32dc84f3" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>BoolView</name></member>
      <member refid="classGecode_1_1Int_1_1BoolView_1accc6604b962883f1646a7b8b182304ab" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>BoolView</name></member>
      <member refid="classGecode_1_1Int_1_1BoolView_1a1f4625f7357a609305f0245a41417e20" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>BoolView</name></member>
      <member refid="classGecode_1_1VarImpView_1af550f46509ae9dc6ebe600239da76455" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>cancel</name></member>
      <member refid="classGecode_1_1VarImpView_1a4f1906b462d6d5b8a01fbf76853d3c4d" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>cancel</name></member>
      <member refid="classGecode_1_1VarImpView_1aee7a33d9250e05396237e837ea9a308e" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>degree</name></member>
      <member refid="classGecode_1_1Int_1_1BoolView_1a11a2f9bbc22ced84425ba1379439d8b1" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>eq</name></member>
      <member refid="classGecode_1_1Int_1_1BoolView_1a29b95cc570733ef7edf6c33ea04937ff" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>eq</name></member>
      <member refid="classGecode_1_1Int_1_1BoolView_1a59684b307ad7bbc1f7667ffb7263436f" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>gq</name></member>
      <member refid="classGecode_1_1Int_1_1BoolView_1a5072ad64b642e85f230bde4073769ebc" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>gq</name></member>
      <member refid="classGecode_1_1Int_1_1BoolView_1a4a8c4f5fcd74bbc55d5e3ca72a9d9d5d" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>gr</name></member>
      <member refid="classGecode_1_1Int_1_1BoolView_1ac3cc3651dd6639a56f88fd98b99bbfbc" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>gr</name></member>
      <member refid="classGecode_1_1Int_1_1BoolView_1aeb59f1404d511c025677070b8a2da478" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>in</name></member>
      <member refid="classGecode_1_1Int_1_1BoolView_1ae54cdf5b5c76add05bec91f6b4a48a39" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>in</name></member>
      <member refid="classGecode_1_1Int_1_1BoolView_1a5320d9475d4bc5ce870b4a5f9c646b09" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>inter_r</name></member>
      <member refid="classGecode_1_1Int_1_1BoolView_1ac80f22159d8a80ab858ea1e7970683b9" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>inter_r</name></member>
      <member refid="classGecode_1_1Int_1_1BoolView_1a79baa9bc26a6b83eb4d230389822e66b" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>inter_v</name></member>
      <member refid="classGecode_1_1Int_1_1BoolView_1a21324df84e383868d49696fd210ed8f4" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>inter_v</name></member>
      <member refid="classGecode_1_1Int_1_1BoolView_1a798f83609ada16b572085eeaaf5b9af4" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>le</name></member>
      <member refid="classGecode_1_1Int_1_1BoolView_1a9f713975be54235ca8c7cf25cf026102" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>le</name></member>
      <member refid="classGecode_1_1Int_1_1BoolView_1ac1bc80aa03f104cfa252dc71f551a2c3" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>lq</name></member>
      <member refid="classGecode_1_1Int_1_1BoolView_1ad7a7eb814aa6cbd861eab76fde26aaa4" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>lq</name></member>
      <member refid="classGecode_1_1Int_1_1BoolView_1aaa03ff37516598ee5fadcdbfcd490e7c" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>max</name></member>
      <member refid="classGecode_1_1Int_1_1BoolView_1a96f5c06a944dbd9912fdda5c5d152fda" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>max</name></member>
      <member refid="classGecode_1_1VarImpView_1a6dced43c3bf8befaf8cd27dbd53bf24c" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>me</name></member>
      <member refid="classGecode_1_1Int_1_1BoolView_1ab0924ec27f937e3ad9b1d58430983a14" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>med</name></member>
      <member refid="classGecode_1_1Int_1_1BoolView_1a6a214290ca80fbc97c2553c48d20438a" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>med</name></member>
      <member refid="classGecode_1_1Int_1_1BoolView_1af94da7e8082bf80628406b644a9d8693" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>min</name></member>
      <member refid="classGecode_1_1Int_1_1BoolView_1ac28962a11fac62331f3c2b479054166e" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>min</name></member>
      <member refid="classGecode_1_1Int_1_1BoolView_1adba2686a9e41a12b238b337ca5a01909" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>minus_r</name></member>
      <member refid="classGecode_1_1Int_1_1BoolView_1a046b46f150648465e81a28b46d82e829" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>minus_r</name></member>
      <member refid="classGecode_1_1Int_1_1BoolView_1afa7e87821ca51ac8d7657bb1f80872c6" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>minus_v</name></member>
      <member refid="classGecode_1_1Int_1_1BoolView_1ab9344013120b7b625de1ccc2bd6050ed" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>minus_v</name></member>
      <member refid="classGecode_1_1VarImpView_1afb67198fa777462748d7367b58ba23e5" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>modevent</name></member>
      <member refid="classGecode_1_1Int_1_1BoolView_1a3b8a481dadc028c4cfde9c9cd2526cff" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>narrow_r</name></member>
      <member refid="classGecode_1_1Int_1_1BoolView_1afe01cb7c8201f4224eba502e6f249c39" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>narrow_r</name></member>
      <member refid="classGecode_1_1Int_1_1BoolView_1a754e95e4be43ea6245a2092abfdf7459" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>narrow_v</name></member>
      <member refid="classGecode_1_1Int_1_1BoolView_1a8b5fa203b568197b031db17e90b090d6" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>narrow_v</name></member>
      <member refid="classGecode_1_1Int_1_1BoolView_1af16962c55f4cc487fec4f3fd971bc490" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>none</name></member>
      <member refid="classGecode_1_1Int_1_1BoolView_1a24bfd94c1da5170048a568a804a6579a" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>NONE</name></member>
      <member refid="classGecode_1_1Int_1_1BoolView_1a815dc30d04bd081d2007931aa15271dc" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>nq</name></member>
      <member refid="classGecode_1_1Int_1_1BoolView_1a4e272bb788febf67da99931e8adae15b" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>nq</name></member>
      <member refid="classGecode_1_1Int_1_1BoolView_1a933b6200f00dd245347cc46a48736ba2" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>one</name></member>
      <member refid="classGecode_1_1Int_1_1BoolView_1a20099c330c16b6c8cfa4d3d697556804" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>one</name></member>
      <member refid="classGecode_1_1Int_1_1BoolView_1a1a25c9c707efa7c2532c0e78d57005a4" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>one</name></member>
      <member refid="classGecode_1_1Int_1_1BoolView_1a38c36b6e55c873f55e632e8099af0df0" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>ONE</name></member>
      <member refid="classGecode_1_1Int_1_1BoolView_1a389529e7b170dff6a4ee20431a7147f1" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>one_none</name></member>
      <member refid="classGecode_1_1Int_1_1BoolView_1ae0597d70dcfe467330bd0674e33b57f4" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>operator&lt;&lt;</name></member>
      <member refid="classGecode_1_1Int_1_1BoolView_1a74a1ca8794bcd47707180dc8ef567e96" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>range</name></member>
      <member refid="classGecode_1_1Int_1_1BoolView_1ac1a3d85a82278e35fdf90c4d6cde9697" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>regret_max</name></member>
      <member refid="classGecode_1_1Int_1_1BoolView_1a719adeac3279e50ccfe60475225e3266" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>regret_min</name></member>
      <member refid="classGecode_1_1VarImpView_1a9861f2a94658e8d7c917367919adc5f6" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>schedule</name></member>
      <member refid="classGecode_1_1Int_1_1BoolView_1a3f0cd2958c21f8e1e34fe6051682c074" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>size</name></member>
      <member refid="classGecode_1_1Int_1_1BoolView_1a11a0a9f97440cd6d6e5b941e9634bde9" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>status</name></member>
      <member refid="classGecode_1_1VarImpView_1a9a475b6d28d2a0f263958aa36a322c50" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>subscribe</name></member>
      <member refid="classGecode_1_1VarImpView_1a6fd19edeff9ba18b8791726ac5e5a149" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>subscribe</name></member>
      <member refid="classGecode_1_1VarImpView_1a5f0569230bea9a229d76eed32716b42a" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>update</name></member>
      <member refid="classGecode_1_1Int_1_1BoolView_1aca5bce8b519816b457af20f24f3f8a93" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>val</name></member>
      <member refid="classGecode_1_1VarImpView_1ad4a4e4dfa41f166978eb9fa1bd15a255" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>varderived</name></member>
      <member refid="classGecode_1_1VarImpView_1a0df1db1c3ac7184748b4e0c74fed40df" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>varimp</name></member>
      <member refid="classGecode_1_1VarImpView_1a425ac8d1c235ca801bcfb0f8afb54765" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>VarImpType</name></member>
      <member refid="classGecode_1_1VarImpView_1aad6311d35eedfdcb341a4f89b14fc666" prot="protected" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>VarImpView</name></member>
      <member refid="classGecode_1_1VarImpView_1a9affaf70dbab8cca81208453fa895257" prot="protected" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>VarImpView</name></member>
      <member refid="classGecode_1_1VarImpView_1a0b2acbfe831d91899de6f207aac7ea22" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>VarType</name></member>
      <member refid="classGecode_1_1Int_1_1BoolView_1a5fea7843bbff6938d5f1db255f155295" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>width</name></member>
      <member refid="classGecode_1_1VarImpView_1af6b0f6f2e4c989a317c6134709c147a7" prot="protected" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>x</name></member>
      <member refid="classGecode_1_1Int_1_1BoolView_1ac0be57dc5f343bb8ed7173b68827619b" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>zero</name></member>
      <member refid="classGecode_1_1Int_1_1BoolView_1af7e32f427dd3d9b0f45119262037d31d" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>zero</name></member>
      <member refid="classGecode_1_1Int_1_1BoolView_1aa96c15437eabe1477ab34ee36a6a08f4" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>zero</name></member>
      <member refid="classGecode_1_1Int_1_1BoolView_1af1d1ade23f0919855f85564357365948" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>ZERO</name></member>
      <member refid="classGecode_1_1Int_1_1BoolView_1addee9d1e9e04dd35d7832729372f9019" prot="public" virt="non-virtual"><scope>Gecode::Int::BoolView</scope><name>zero_none</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
