<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="spacenode_8hpp" kind="file">
    <compoundname>spacenode.hpp</compoundname>
    <includedby refid="visualnode_8hh" local="no">/usr/include/gecode/gist/visualnode.hh</includedby>
    <invincdepgraph>
      <node id="8590">
        <label>/usr/include/gecode/gist/mainwindow.hh</label>
        <link refid="mainwindow_8hh_source"/>
      </node>
      <node id="8587">
        <label>/usr/include/gecode/gist/nodecursor.hh</label>
        <link refid="nodecursor_8hh_source"/>
        <childnode refid="8586" relation="include">
        </childnode>
        <childnode refid="8585" relation="include">
        </childnode>
      </node>
      <node id="8584">
        <label>/usr/include/gecode/gist/visualnode.hh</label>
        <link refid="visualnode_8hh_source"/>
        <childnode refid="8585" relation="include">
        </childnode>
        <childnode refid="8587" relation="include">
        </childnode>
        <childnode refid="8588" relation="include">
        </childnode>
        <childnode refid="8592" relation="include">
        </childnode>
      </node>
      <node id="8589">
        <label>/usr/include/gecode/gist/qtgist.hh</label>
        <link refid="qtgist_8hh_source"/>
        <childnode refid="8590" relation="include">
        </childnode>
        <childnode refid="8591" relation="include">
        </childnode>
      </node>
      <node id="8592">
        <label>/usr/include/gecode/gist/treecanvas.hh</label>
        <link refid="treecanvas_8hh_source"/>
        <childnode refid="8589" relation="include">
        </childnode>
      </node>
      <node id="8588">
        <label>/usr/include/gecode/gist/nodestats.hh</label>
        <link refid="nodestats_8hh_source"/>
        <childnode refid="8589" relation="include">
        </childnode>
      </node>
      <node id="8591">
        <label>/usr/include/gecode/gist/nodewidget.hh</label>
        <link refid="nodewidget_8hh_source"/>
      </node>
      <node id="8585">
        <label>/usr/include/gecode/gist/layoutcursor.hh</label>
        <link refid="layoutcursor_8hh_source"/>
        <childnode refid="8586" relation="include">
        </childnode>
      </node>
      <node id="8586">
        <label>/usr/include/gecode/gist/drawingcursor.hh</label>
        <link refid="drawingcursor_8hh_source"/>
      </node>
      <node id="8583">
        <label>/usr/include/gecode/gist/spacenode.hpp</label>
        <link refid="spacenode.hpp"/>
        <childnode refid="8584" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespaceGecode">Gecode</innernamespace>
    <innernamespace refid="namespaceGecode_1_1Gist">Gecode::Gist</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>mode:<sp/>C++;<sp/>c-basic-offset:<sp/>2;<sp/>indent-tabs-mode:<sp/>nil<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/><sp/>Main<sp/>authors:</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Guido<sp/>Tack<sp/>&lt;tack@gecode.org&gt;</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>Copyright:</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Guido<sp/>Tack,<sp/>2006</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/>Last<sp/>modified:</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>$Date:<sp/>2010-08-12<sp/>11:02:06<sp/>+0200<sp/>(Thu,<sp/>12<sp/>Aug<sp/>2010)<sp/>$<sp/>by<sp/>$Author:<sp/>tack<sp/>$</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>$Revision:<sp/>11347<sp/>$</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>Gecode,<sp/>the<sp/>generic<sp/>constraint</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/>development<sp/>environment:</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.gecode.org</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Gecode<sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Gist<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="classGecode_1_1Gist_1_1SpaceNode_1a82fd1d1d433bb8f7e12014edd38c3d37" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Gist_1_1SpaceNode_1a82fd1d1d433bb8f7e12014edd38c3d37" kindref="member">SpaceNode::setFlag</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flag,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Gist_1_1SpaceNode_1a3b8f86c47db93ca2a991a50a3b183c76" kindref="member">nstatus</ref><sp/>|=<sp/>1&lt;&lt;(flag-1);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Gist_1_1SpaceNode_1a3b8f86c47db93ca2a991a50a3b183c76" kindref="member">nstatus</ref><sp/>&amp;=<sp/>~(1&lt;&lt;(flag-1));</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="classGecode_1_1Gist_1_1SpaceNode_1a3cd555ecf0715b588c9b2aa1112fc89c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Gist_1_1SpaceNode_1a3cd555ecf0715b588c9b2aa1112fc89c" kindref="member">SpaceNode::getFlag</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flag)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classGecode_1_1Gist_1_1SpaceNode_1a3b8f86c47db93ca2a991a50a3b183c76" kindref="member">nstatus</ref><sp/>&amp;<sp/>(1&lt;&lt;(flag-1)))<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>SpaceNode::setHasOpenChildren(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Gist_1_1SpaceNode_1a82fd1d1d433bb8f7e12014edd38c3d37" kindref="member">setFlag</ref>(HASOPENCHILDREN,<sp/>b);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>SpaceNode::setHasFailedChildren(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Gist_1_1SpaceNode_1a82fd1d1d433bb8f7e12014edd38c3d37" kindref="member">setFlag</ref>(HASFAILEDCHILDREN,<sp/>b);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>SpaceNode::setHasSolvedChildren(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Gist_1_1SpaceNode_1a82fd1d1d433bb8f7e12014edd38c3d37" kindref="member">setFlag</ref>(HASSOLVEDCHILDREN,<sp/>b);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="classGecode_1_1Gist_1_1SpaceNode_1a5aa891d18a42d609b1d678c7a3ff0e8a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Gist_1_1SpaceNode_1a5aa891d18a42d609b1d678c7a3ff0e8a" kindref="member">SpaceNode::setStatus</ref>(<ref refid="namespaceGecode_1_1Gist_1a579d345f937ff0b19a2a4157995931f2" kindref="member">NodeStatus</ref><sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Gist_1_1SpaceNode_1a3b8f86c47db93ca2a991a50a3b183c76" kindref="member">nstatus</ref><sp/>&amp;=<sp/>~(<sp/>STATUSMASK<sp/>);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Gist_1_1SpaceNode_1a3b8f86c47db93ca2a991a50a3b183c76" kindref="member">nstatus</ref><sp/>|=<sp/>s<sp/>&lt;&lt;<sp/>20;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>forceinline<sp/><ref refid="namespaceGecode_1_1Gist_1a579d345f937ff0b19a2a4157995931f2" kindref="member">NodeStatus</ref></highlight></codeline>
<codeline lineno="75" refid="classGecode_1_1Gist_1_1SpaceNode_1a761b8c0b2bdfbfc3616af1fc48537250" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Gist_1_1SpaceNode_1a761b8c0b2bdfbfc3616af1fc48537250" kindref="member">SpaceNode::getStatus</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="namespaceGecode_1_1Gist_1a579d345f937ff0b19a2a4157995931f2" kindref="member">NodeStatus</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">((<ref refid="classGecode_1_1Gist_1_1SpaceNode_1a3b8f86c47db93ca2a991a50a3b183c76" kindref="member">nstatus</ref><sp/>&amp;<sp/>STATUSMASK)<sp/>&gt;&gt;<sp/>20);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="classGecode_1_1Gist_1_1SpaceNode_1a5309ea005af1603ca60598dba61d2311" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Gist_1_1SpaceNode_1a5309ea005af1603ca60598dba61d2311" kindref="member">SpaceNode::setDistance</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d<sp/>&gt;<sp/>MAXDISTANCE)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>=<sp/>MAXDISTANCE;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Gist_1_1SpaceNode_1a3b8f86c47db93ca2a991a50a3b183c76" kindref="member">nstatus</ref><sp/>&amp;=<sp/>~(<sp/>DISTANCEMASK<sp/>);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Gist_1_1SpaceNode_1a3b8f86c47db93ca2a991a50a3b183c76" kindref="member">nstatus</ref><sp/>|=<sp/>d;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="classGecode_1_1Gist_1_1SpaceNode_1a435f0efc7d9a79de130cabde4df013a4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Gist_1_1SpaceNode_1a435f0efc7d9a79de130cabde4df013a4" kindref="member">SpaceNode::getDistance</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Gist_1_1SpaceNode_1a3b8f86c47db93ca2a991a50a3b183c76" kindref="member">nstatus</ref><sp/>&amp;<sp/>DISTANCEMASK;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>forceinline</highlight></codeline>
<codeline lineno="93" refid="classGecode_1_1Gist_1_1SpaceNode_1aa316b48e1d0f80c59cc5dee35a922b4b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Gist_1_1SpaceNode_1aa316b48e1d0f80c59cc5dee35a922b4b" kindref="member">SpaceNode::SpaceNode</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>:<sp/><ref refid="classGecode_1_1Gist_1_1Node" kindref="compound">Node</ref>(p),<sp/>copy(NULL),<sp/>nstatus(0)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>choice<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Gist_1_1SpaceNode_1a5aa891d18a42d609b1d678c7a3ff0e8a" kindref="member">setStatus</ref>(<ref refid="namespaceGecode_1_1Gist_1a579d345f937ff0b19a2a4157995931f2a136607a803fcc25c40a5d41fcfaf45eb" kindref="member">UNDETERMINED</ref>);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>setHasSolvedChildren(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>setHasFailedChildren(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>forceinline<sp/><ref refid="classGecode_1_1Space" kindref="compound">Space</ref>*</highlight></codeline>
<codeline lineno="102" refid="classGecode_1_1Gist_1_1SpaceNode_1a161d1ac44c65708adb034470a76de58d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Gist_1_1SpaceNode_1a161d1ac44c65708adb034470a76de58d" kindref="member">SpaceNode::getSpace</ref>(<ref refid="classGecode_1_1Gist_1_1NodeAllocatorBase" kindref="compound">NodeAllocator</ref>&amp;<sp/>na,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Gist_1_1BestNode" kindref="compound">BestNode</ref>*<sp/>curBest,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c_d,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a_d)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Gist_1_1SpaceNode_1a5c4ea1e84b7a801d8d7bf00f6a2f3eaf" kindref="member">acquireSpace</ref>(na,curBest,c_d,a_d);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Space" kindref="compound">Space</ref>*<sp/>ret;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Support::marked(<ref refid="classGecode_1_1Gist_1_1SpaceNode_1a0a172325cbe028ffb5440b13a393b5a8" kindref="member">copy</ref>))<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="classGecode_1_1Space" kindref="compound">Space</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(Support::unmark(<ref refid="classGecode_1_1Gist_1_1SpaceNode_1a0a172325cbe028ffb5440b13a393b5a8" kindref="member">copy</ref>));</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Gist_1_1SpaceNode_1a0a172325cbe028ffb5440b13a393b5a8" kindref="member">copy</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="classGecode_1_1Gist_1_1SpaceNode_1a0a172325cbe028ffb5440b13a393b5a8" kindref="member">copy</ref>-&gt;<ref refid="classGecode_1_1Space_1a54f69f4d73d434c2dcea056a7e678d23" kindref="member">clone</ref>();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Space" kindref="compound">Space</ref>*</highlight></codeline>
<codeline lineno="116" refid="classGecode_1_1Gist_1_1SpaceNode_1a8a28681a80b5e8575b6892b9137b3a70" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Gist_1_1SpaceNode_1a8a28681a80b5e8575b6892b9137b3a70" kindref="member">SpaceNode::getWorkingSpace</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<ref refid="classGecode_1_1Gist_1_1SpaceNode_1a0a172325cbe028ffb5440b13a393b5a8" kindref="member">copy</ref><sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Support::marked(<ref refid="classGecode_1_1Gist_1_1SpaceNode_1a0a172325cbe028ffb5440b13a393b5a8" kindref="member">copy</ref>))</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="classGecode_1_1Space" kindref="compound">Space</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(Support::unmark(<ref refid="classGecode_1_1Gist_1_1SpaceNode_1a0a172325cbe028ffb5440b13a393b5a8" kindref="member">copy</ref>));</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Gist_1_1SpaceNode_1a0a172325cbe028ffb5440b13a393b5a8" kindref="member">copy</ref>;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="classGecode_1_1Gist_1_1SpaceNode_1ab19a1eeeee22227fc2d23cc088cbb1aa" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Gist_1_1SpaceNode_1ab19a1eeeee22227fc2d23cc088cbb1aa" kindref="member">SpaceNode::purge</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Gist_1_1NodeAllocatorBase" kindref="compound">NodeAllocator</ref>&amp;<sp/>na)<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classGecode_1_1Gist_1_1Node_1a2b0f5b6e8ab7b1c0ca0dd91abbac7a97" kindref="member">isRoot</ref>()<sp/>&amp;&amp;<sp/>(<ref refid="classGecode_1_1Gist_1_1SpaceNode_1a761b8c0b2bdfbfc3616af1fc48537250" kindref="member">getStatus</ref>()<sp/>!=<sp/><ref refid="namespaceGecode_1_1Gist_1a579d345f937ff0b19a2a4157995931f2ad54c985d9a7dfd1c3754aade3dba4b5d" kindref="member">SOLVED</ref><sp/>||<sp/>!na.<ref refid="classGecode_1_1Gist_1_1NodeAllocatorBase_1ada874c939cc3c2e2bb5e35df806600b2" kindref="member">bab</ref>()))<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>only<sp/>delete<sp/>copies<sp/>from<sp/>solutions<sp/>if<sp/>we<sp/>are<sp/>not<sp/>in<sp/>BAB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Support::marked(<ref refid="classGecode_1_1Gist_1_1SpaceNode_1a0a172325cbe028ffb5440b13a393b5a8" kindref="member">copy</ref>))</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>static_cast&lt;Space*&gt;(Support::unmark(<ref refid="classGecode_1_1Gist_1_1SpaceNode_1a0a172325cbe028ffb5440b13a393b5a8" kindref="member">copy</ref>));</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Gist_1_1SpaceNode_1a0a172325cbe028ffb5440b13a393b5a8" kindref="member">copy</ref>;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Gist_1_1SpaceNode_1a0a172325cbe028ffb5440b13a393b5a8" kindref="member">copy</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="classGecode_1_1Gist_1_1SpaceNode_1a80b205319f33a23fb3e091c430175d2e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Gist_1_1SpaceNode_1a80b205319f33a23fb3e091c430175d2e" kindref="member">SpaceNode::isCurrentBest</ref>(<ref refid="classGecode_1_1Gist_1_1BestNode" kindref="compound">BestNode</ref>*<sp/>curBest)<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>curBest<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>curBest-&gt;<ref refid="classGecode_1_1Gist_1_1BestNode_1a33b3fa668f7af63b2375ea7d6a975a6a" kindref="member">s</ref><sp/>==<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="classGecode_1_1Gist_1_1SpaceNode_1aac1d94c4f2a63f5115e0f9d528198039" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Gist_1_1SpaceNode_1aac1d94c4f2a63f5115e0f9d528198039" kindref="member">SpaceNode::isOpen</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((<ref refid="classGecode_1_1Gist_1_1SpaceNode_1a761b8c0b2bdfbfc3616af1fc48537250" kindref="member">getStatus</ref>()<sp/>==<sp/><ref refid="namespaceGecode_1_1Gist_1a579d345f937ff0b19a2a4157995931f2a136607a803fcc25c40a5d41fcfaf45eb" kindref="member">UNDETERMINED</ref>)<sp/>||</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Gist_1_1SpaceNode_1a3cd555ecf0715b588c9b2aa1112fc89c" kindref="member">getFlag</ref>(HASOPENCHILDREN));</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="classGecode_1_1Gist_1_1SpaceNode_1a2dd3836f977c8137ff81f8742016d054" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Gist_1_1SpaceNode_1a2dd3836f977c8137ff81f8742016d054" kindref="member">SpaceNode::hasFailedChildren</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Gist_1_1SpaceNode_1a3cd555ecf0715b588c9b2aa1112fc89c" kindref="member">getFlag</ref>(HASFAILEDCHILDREN);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153" refid="classGecode_1_1Gist_1_1SpaceNode_1a97366b607037285b6b6e5a821c66afd2" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Gist_1_1SpaceNode_1a97366b607037285b6b6e5a821c66afd2" kindref="member">SpaceNode::hasSolvedChildren</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Gist_1_1SpaceNode_1a3cd555ecf0715b588c9b2aa1112fc89c" kindref="member">getFlag</ref>(HASSOLVEDCHILDREN);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="classGecode_1_1Gist_1_1SpaceNode_1ab767d5a5d1ade2a13a36f18fcb3becb0" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Gist_1_1SpaceNode_1ab767d5a5d1ade2a13a36f18fcb3becb0" kindref="member">SpaceNode::hasOpenChildren</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Gist_1_1SpaceNode_1a3cd555ecf0715b588c9b2aa1112fc89c" kindref="member">getFlag</ref>(HASOPENCHILDREN);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163" refid="classGecode_1_1Gist_1_1SpaceNode_1a891f19abbbd7490a4c67064e0b2531d5" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Gist_1_1SpaceNode_1a891f19abbbd7490a4c67064e0b2531d5" kindref="member">SpaceNode::hasCopy</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Gist_1_1SpaceNode_1a0a172325cbe028ffb5440b13a393b5a8" kindref="member">copy</ref><sp/>!=<sp/>NULL;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168" refid="classGecode_1_1Gist_1_1SpaceNode_1a8349f99edfbc56fe3823365f8ca2754f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Gist_1_1SpaceNode_1a8349f99edfbc56fe3823365f8ca2754f" kindref="member">SpaceNode::hasWorkingSpace</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Gist_1_1SpaceNode_1a0a172325cbe028ffb5440b13a393b5a8" kindref="member">copy</ref><sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>Support::marked(<ref refid="classGecode_1_1Gist_1_1SpaceNode_1a0a172325cbe028ffb5440b13a393b5a8" kindref="member">copy</ref>);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173" refid="classGecode_1_1Gist_1_1SpaceNode_1aec08184747286f69edbc51438714f469" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Gist_1_1SpaceNode_1aec08184747286f69edbc51438714f469" kindref="member">SpaceNode::getAlternative</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Gist_1_1NodeAllocatorBase" kindref="compound">NodeAllocator</ref>&amp;<sp/>na)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Gist_1_1SpaceNode" kindref="compound">SpaceNode</ref>*<sp/>p<sp/>=<sp/><ref refid="classGecode_1_1Gist_1_1Node_1af832b649d232c4d03b6fcf534c3482e7" kindref="member">getParent</ref>(na);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=p-&gt;<ref refid="classGecode_1_1Gist_1_1Node_1afbbbcaf065a9cf68d2bee0414468000d" kindref="member">getNumberOfChildren</ref>();<sp/>i--;)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="classGecode_1_1Gist_1_1Node_1a81a3ee39115b6771a4d63edfeef2fe47" kindref="member">getChild</ref>(na,i)<sp/>==<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>GECODE_NEVER;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Choice" kindref="compound">Choice</ref>*</highlight></codeline>
<codeline lineno="185" refid="classGecode_1_1Gist_1_1SpaceNode_1a61558968dcfcbb1ae26b4d0d9bbda703" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Gist_1_1SpaceNode_1a61558968dcfcbb1ae26b4d0d9bbda703" kindref="member">SpaceNode::getChoice</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>choice;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal">}}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="comment">//<sp/>STATISTICS:<sp/>gist-any</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/usr/include/gecode/gist/spacenode.hpp"/>
  </compounddef>
</doxygen>
