<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="namespaceGecode_1_1Int_1_1Sequence" kind="namespace">
    <compoundname>Gecode::Int::Sequence</compoundname>
    <innerclass refid="classGecode_1_1Int_1_1Sequence_1_1SupportAdvisor" prot="public">Gecode::Int::Sequence::SupportAdvisor</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1Sequence_1_1ViewValSupport" prot="public">Gecode::Int::Sequence::ViewValSupport</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1Sequence_1_1Violations" prot="public">Gecode::Int::Sequence::Violations</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1Sequence_1_1ViewValSupportArray" prot="public">Gecode::Int::Sequence::ViewValSupportArray</innerclass>
    <innerclass refid="classGecode_1_1Int_1_1Sequence_1_1Sequence" prot="public">Gecode::Int::Sequence::Sequence</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="namespaceGecode_1_1Int_1_1Sequence_1a299b9e2a107fc8f097e84320307a7d2a" prot="public" static="no">
        <name>TakesStatus</name>
        <enumvalue id="namespaceGecode_1_1Int_1_1Sequence_1a299b9e2a107fc8f097e84320307a7d2aa2cd9339646dab728374d9143d21b0096" prot="public">
          <name>TS_NO</name>
          <briefdescription>
<para>Definitely not. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceGecode_1_1Int_1_1Sequence_1a299b9e2a107fc8f097e84320307a7d2aaf63685cb26a4e6c03c58f0ad9d7a7d3f" prot="public">
          <name>TS_YES</name>
          <briefdescription>
<para>Definitely yes. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceGecode_1_1Int_1_1Sequence_1a299b9e2a107fc8f097e84320307a7d2aa2456e3ce83d86886e41cdba858db41e3" prot="public">
          <name>TS_MAYBE</name>
          <briefdescription>
<para>Maybe or maybe not. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Status of whether a view takes a value from a set. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/sequence/set-op.hpp" line="41" column="1" bodyfile="/usr/include/gecode/int/sequence/set-op.hpp" bodystart="41" bodyend="45"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Sequence_1ac9fc00c381343d8316a543b77761c899" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class View</type>
          </param>
        </templateparamlist>
        <type>forceinline <ref refid="namespaceGecode_1_1Int_1_1Sequence_1a299b9e2a107fc8f097e84320307a7d2a" kindref="member">TakesStatus</ref></type>
        <definition>forceinline TakesStatus Gecode::Int::Sequence::takes</definition>
        <argsstring>(const View &amp;x, int s)</argsstring>
        <name>takes</name>
        <param>
          <type>const View &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Return whether view <emphasis>x</emphasis> takes value <emphasis>s</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/sequence/set-op.hpp" line="50" column="1" bodyfile="/usr/include/gecode/int/sequence/set-op.hpp" bodystart="50" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Sequence_1a6d33caea68089a0655954581c475317d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class View</type>
          </param>
        </templateparamlist>
        <type>forceinline <ref refid="namespaceGecode_1_1Int_1_1Sequence_1a299b9e2a107fc8f097e84320307a7d2a" kindref="member">TakesStatus</ref></type>
        <definition>forceinline TakesStatus Gecode::Int::Sequence::takes</definition>
        <argsstring>(const View &amp;x, const IntSet &amp;s)</argsstring>
        <name>takes</name>
        <param>
          <type>const View &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1IntSet" kindref="compound">IntSet</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Return whether view <emphasis>x</emphasis> takes value from <emphasis>s</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/sequence/set-op.hpp" line="59" column="1" bodyfile="/usr/include/gecode/int/sequence/set-op.hpp" bodystart="59" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Sequence_1a7f5ef0cb1ce7ea6682de28e4ccfc26ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class View</type>
          </param>
        </templateparamlist>
        <type>forceinline bool</type>
        <definition>forceinline bool Gecode::Int::Sequence::includes</definition>
        <argsstring>(const View &amp;x, int s)</argsstring>
        <name>includes</name>
        <param>
          <type>const View &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Test whether all values of view <emphasis>x</emphasis> are included in <emphasis>s</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/sequence/set-op.hpp" line="76" column="1" bodyfile="/usr/include/gecode/int/sequence/set-op.hpp" bodystart="76" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Sequence_1a8c67f6eb542e2d6bf1d11b0bdbc29491" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class View</type>
          </param>
        </templateparamlist>
        <type>forceinline bool</type>
        <definition>forceinline bool Gecode::Int::Sequence::includes</definition>
        <argsstring>(const View &amp;x, const IntSet &amp;s)</argsstring>
        <name>includes</name>
        <param>
          <type>const View &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1IntSet" kindref="compound">IntSet</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Test whether all values of view <emphasis>x</emphasis> are included in <emphasis>s</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/sequence/set-op.hpp" line="82" column="1" bodyfile="/usr/include/gecode/int/sequence/set-op.hpp" bodystart="82" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Sequence_1af4cbe2ae8218a477162b5245df0b3d3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class View</type>
          </param>
        </templateparamlist>
        <type>forceinline bool</type>
        <definition>forceinline bool Gecode::Int::Sequence::excludes</definition>
        <argsstring>(const View &amp;x, int s)</argsstring>
        <name>excludes</name>
        <param>
          <type>const View &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Test whether all values of view <emphasis>x</emphasis> are excluded from <emphasis>s</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/sequence/set-op.hpp" line="93" column="1" bodyfile="/usr/include/gecode/int/sequence/set-op.hpp" bodystart="93" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Sequence_1a3b053eedfffcf972d3d914ba3e13d187" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class View</type>
          </param>
        </templateparamlist>
        <type>forceinline bool</type>
        <definition>forceinline bool Gecode::Int::Sequence::excludes</definition>
        <argsstring>(const View &amp;x, const IntSet &amp;s)</argsstring>
        <name>excludes</name>
        <param>
          <type>const View &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1IntSet" kindref="compound">IntSet</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Test whether all values of view <emphasis>x</emphasis> are excluded from <emphasis>s</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/sequence/set-op.hpp" line="99" column="1" bodyfile="/usr/include/gecode/int/sequence/set-op.hpp" bodystart="99" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Sequence_1aa9e0590adb9cab66933b36de7896aced" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class View</type>
          </param>
        </templateparamlist>
        <type>forceinline bool</type>
        <definition>forceinline bool Gecode::Int::Sequence::undecided</definition>
        <argsstring>(const View &amp;x, int s)</argsstring>
        <name>undecided</name>
        <param>
          <type>const View &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Test whether no decision on inclusion or exclusion of values of view <emphasis>x</emphasis> in <emphasis>s</emphasis> can be made. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/sequence/set-op.hpp" line="110" column="1" bodyfile="/usr/include/gecode/int/sequence/set-op.hpp" bodystart="110" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Sequence_1aa7e5c73012a96353e99f8d1ea3a80421" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class View</type>
          </param>
        </templateparamlist>
        <type>forceinline bool</type>
        <definition>forceinline bool Gecode::Int::Sequence::undecided</definition>
        <argsstring>(const View &amp;x, const IntSet &amp;s)</argsstring>
        <name>undecided</name>
        <param>
          <type>const View &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1IntSet" kindref="compound">IntSet</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Test whether no decision on inclusion or exclusion of values of view <emphasis>x</emphasis> in <emphasis>s</emphasis> can be made. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/sequence/set-op.hpp" line="116" column="1" bodyfile="/usr/include/gecode/int/sequence/set-op.hpp" bodystart="116" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Sequence_1a65867c2766fa2b73dc0af71e36a02a28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class View</type>
          </param>
        </templateparamlist>
        <type>forceinline <ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Int::Sequence::include</definition>
        <argsstring>(Space &amp;home, View &amp;x, int s)</argsstring>
        <name>include</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>View &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Prune view <emphasis>x</emphasis> to only include values from <emphasis>s</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/sequence/set-op.hpp" line="127" column="1" bodyfile="/usr/include/gecode/int/sequence/set-op.hpp" bodystart="127" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Sequence_1aacd6d082acf357016b0682a06f38a4c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class View</type>
          </param>
        </templateparamlist>
        <type>forceinline <ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Int::Sequence::include</definition>
        <argsstring>(Space &amp;home, View &amp;x, const IntSet &amp;s)</argsstring>
        <name>include</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>View &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1IntSet" kindref="compound">IntSet</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Prune view <emphasis>x</emphasis> to only include values from <emphasis>s</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/sequence/set-op.hpp" line="133" column="1" bodyfile="/usr/include/gecode/int/sequence/set-op.hpp" bodystart="133" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Sequence_1ab8a0f81a9b8b4d3b0bbc06dce3809a49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class View</type>
          </param>
        </templateparamlist>
        <type>forceinline <ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Int::Sequence::exclude</definition>
        <argsstring>(Space &amp;home, View &amp;x, int s)</argsstring>
        <name>exclude</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>View &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Prune view <emphasis>x</emphasis> to exclude all values from <emphasis>s</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/sequence/set-op.hpp" line="141" column="1" bodyfile="/usr/include/gecode/int/sequence/set-op.hpp" bodystart="141" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Int_1_1Sequence_1aabadd631298a62a91229adf677afba77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class View</type>
          </param>
        </templateparamlist>
        <type>forceinline <ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Int::Sequence::exclude</definition>
        <argsstring>(Space &amp;home, View &amp;x, const IntSet &amp;s)</argsstring>
        <name>exclude</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>View &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1IntSet" kindref="compound">IntSet</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Prune view <emphasis>x</emphasis> to exclude all values from <emphasis>s</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/sequence/set-op.hpp" line="147" column="1" bodyfile="/usr/include/gecode/int/sequence/set-op.hpp" bodystart="147" bodyend="150"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Sequence propagators </para>    </briefdescription>
    <detaileddescription>
<para>This namespace contains a propagator for the cumulatives constraint as presented in Willem Jan van Hoeve, Gilles Pesant, Louis-Martin Rousseau, and Ashish Sabharwal, New filtering algorithms for combinations of among constraints. Constraints, 14(2), 273-292, 2009. </para>    </detaileddescription>
    <location file="/usr/include/gecode/int/sequence/int.hpp" line="42" column="1"/>
  </compounddef>
</doxygen>
