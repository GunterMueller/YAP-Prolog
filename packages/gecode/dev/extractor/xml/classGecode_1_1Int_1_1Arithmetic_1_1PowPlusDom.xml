<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classGecode_1_1Int_1_1Arithmetic_1_1PowPlusDom" kind="class" prot="public">
    <compoundname>Gecode::Int::Arithmetic::PowPlusDom</compoundname>
    <basecompoundref refid="classGecode_1_1MixBinaryPropagator" prot="public" virt="non-virtual">Gecode::MixBinaryPropagator&lt; VA, PC_INT_DOM, VB, PC_INT_DOM &gt;</basecompoundref>
    <includes refid="int_2arithmetic_8hh" local="no">arithmetic.hh</includes>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>VA</declname>
        <defname>VA</defname>
      </param>
      <param>
        <type>class</type>
        <declname>VB</declname>
        <defname>VB</defname>
      </param>
      <param>
        <type>class</type>
        <declname>Ops</declname>
        <defname>Ops</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classGecode_1_1Int_1_1Arithmetic_1_1PowPlusDom_1a50666d658f4ed3078f3e7c89b158b1b0" prot="protected" static="no" mutable="no">
        <type>Ops</type>
        <definition>Ops Gecode::Int::Arithmetic::PowPlusDom&lt; VA, VB, Ops &gt;::ops</definition>
        <argsstring></argsstring>
        <name>ops</name>
        <briefdescription>
<para>Operations. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/arithmetic.hh" line="382" column="1" bodyfile="/usr/include/gecode/int/arithmetic.hh" bodystart="382" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classGecode_1_1Int_1_1Arithmetic_1_1PowPlusDom_1a7d2be21e2fe9a2385f5884727a25c613" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Int::Arithmetic::PowPlusDom&lt; VA, VB, Ops &gt;::PowPlusDom</definition>
        <argsstring>(Home home, VA x0, VB x1, const Ops &amp;ops)</argsstring>
        <name>PowPlusDom</name>
        <param>
          <type><ref refid="classGecode_1_1Home" kindref="compound">Home</ref></type>
          <declname>home</declname>
        </param>
        <param>
          <type>VA</type>
          <declname>x0</declname>
        </param>
        <param>
          <type>VB</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>const Ops &amp;</type>
          <declname>ops</declname>
        </param>
        <briefdescription>
<para>Constructor for posting. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/arithmetic.hh" line="384" column="1" bodyfile="/usr/include/gecode/int/arithmetic/pow.hpp" bodystart="311" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Arithmetic_1_1PowPlusDom_1a384b0376f45a462a9f7ea1abaead05a7" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Int::Arithmetic::PowPlusDom&lt; VA, VB, Ops &gt;::PowPlusDom</definition>
        <argsstring>(Space &amp;home, bool share, PowPlusDom&lt; VA, VB, Ops &gt; &amp;p)</argsstring>
        <name>PowPlusDom</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>share</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1Arithmetic_1_1PowPlusDom" kindref="compound">PowPlusDom</ref>&lt; VA, VB, Ops &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Constructor for cloning <emphasis>p</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/arithmetic.hh" line="386" column="1" bodyfile="/usr/include/gecode/int/arithmetic/pow.hpp" bodystart="330" bodyend="333"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classGecode_1_1Int_1_1Arithmetic_1_1PowPlusDom_1a0bbb795c70df674287ce695b5605b37f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classGecode_1_1Actor" kindref="compound">Actor</ref> *</type>
        <definition>Actor * Gecode::Int::Arithmetic::PowPlusDom&lt; VA, VB, Ops &gt;::copy</definition>
        <argsstring>(Space &amp;home, bool share)</argsstring>
        <name>copy</name>
        <reimplements refid="classGecode_1_1Actor_1a67b240e2810720846c3632c94cc9c99d">copy</reimplements>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>share</declname>
        </param>
        <briefdescription>
<para>Copy propagator during cloning. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/arithmetic.hh" line="389" column="1" bodyfile="/usr/include/gecode/int/arithmetic/pow.hpp" bodystart="337" bodyend="339"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Arithmetic_1_1PowPlusDom_1ad8c848291d51466e092295dae88bae95" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classGecode_1_1PropCost" kindref="compound">PropCost</ref></type>
        <definition>PropCost Gecode::Int::Arithmetic::PowPlusDom&lt; VA, VB, Ops &gt;::cost</definition>
        <argsstring>(const Space &amp;home, const ModEventDelta &amp;med) const </argsstring>
        <name>cost</name>
        <reimplements refid="classGecode_1_1MixBinaryPropagator_1aef25c60dde63e8d9cda2cec8c17b51e8">cost</reimplements>
        <param>
          <type>const <ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceGecode_1a129e41c1d037528010d7b6706495a560" kindref="member">ModEventDelta</ref> &amp;</type>
          <declname>med</declname>
        </param>
        <briefdescription>
<para>Cost function. </para>        </briefdescription>
        <detaileddescription>
<para>If a view has been assigned, the cost is low unary. If in stage for bounds propagation, the cost is low binary. Otherwise it is high binary. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/arithmetic.hh" line="397" column="1" bodyfile="/usr/include/gecode/int/arithmetic/pow.hpp" bodystart="343" bodyend="350"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Arithmetic_1_1PowPlusDom_1a5c353a9a579e93fd83eed13edc2d5d1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>ExecStatus Gecode::Int::Arithmetic::PowPlusDom&lt; VA, VB, Ops &gt;::propagate</definition>
        <argsstring>(Space &amp;home, const ModEventDelta &amp;med)</argsstring>
        <name>propagate</name>
        <reimplements refid="classGecode_1_1Propagator_1ad2dc98c1345222892592339948c6cde1">propagate</reimplements>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceGecode_1a129e41c1d037528010d7b6706495a560" kindref="member">ModEventDelta</ref> &amp;</type>
          <declname>med</declname>
        </param>
        <briefdescription>
<para>Perform propagation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/arithmetic.hh" line="399" column="1" bodyfile="/usr/include/gecode/int/arithmetic/pow.hpp" bodystart="354" bodyend="377"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classGecode_1_1Int_1_1Arithmetic_1_1PowPlusDom_1a54196481929ef9c9ae3c8d273174a9da" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>forceinline ExecStatus Gecode::Int::Arithmetic::PowPlusDom&lt; VA, VB, Ops &gt;::post</definition>
        <argsstring>(Home home, VA x0, VB x1, Ops ops)</argsstring>
        <name>post</name>
        <param>
          <type><ref refid="classGecode_1_1Home" kindref="compound">Home</ref></type>
          <declname>home</declname>
        </param>
        <param>
          <type>VA</type>
          <declname>x0</declname>
        </param>
        <param>
          <type>VB</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>Ops</type>
          <declname>ops</declname>
        </param>
        <briefdescription>
<para>Post propagator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/arithmetic.hh" line="401" column="1" bodyfile="/usr/include/gecode/int/arithmetic/pow.hpp" bodystart="317" bodyend="326"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Domain consistent positive power propagator. </para>    </briefdescription>
    <detaileddescription>
<para>This propagator is for positive views only. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="5229">
        <label>Gecode::MixBinaryPropagator&lt; VA, PC_INT_DOM, VB, PC_INT_DOM &gt;</label>
        <link refid="classGecode_1_1MixBinaryPropagator"/>
        <childnode refid="5230" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5228">
        <label>Gecode::Int::Arithmetic::PowPlusDom&lt; VA, VB, Ops &gt;</label>
        <link refid="classGecode_1_1Int_1_1Arithmetic_1_1PowPlusDom"/>
        <childnode refid="5229" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5230">
        <label>Gecode::Propagator</label>
        <link refid="classGecode_1_1Propagator"/>
        <childnode refid="5231" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5231">
        <label>Gecode::Actor</label>
        <link refid="classGecode_1_1Actor"/>
        <childnode refid="5232" relation="private-inheritance">
        </childnode>
      </node>
      <node id="5232">
        <label>Gecode::ActorLink</label>
        <link refid="classGecode_1_1ActorLink"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5234">
        <label>Gecode::MixBinaryPropagator&lt; VA, PC_INT_DOM, VB, PC_INT_DOM &gt;</label>
        <link refid="classGecode_1_1MixBinaryPropagator"/>
        <childnode refid="5235" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5233">
        <label>Gecode::Int::Arithmetic::PowPlusDom&lt; VA, VB, Ops &gt;</label>
        <link refid="classGecode_1_1Int_1_1Arithmetic_1_1PowPlusDom"/>
        <childnode refid="5234" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5235">
        <label>Gecode::Propagator</label>
        <link refid="classGecode_1_1Propagator"/>
        <childnode refid="5236" relation="public-inheritance">
        </childnode>
        <childnode refid="5237" relation="usage">
          <edgelabel>advisors</edgelabel>
        </childnode>
      </node>
      <node id="5236">
        <label>Gecode::Actor</label>
        <link refid="classGecode_1_1Actor"/>
        <childnode refid="5237" relation="private-inheritance">
        </childnode>
      </node>
      <node id="5237">
        <label>Gecode::ActorLink</label>
        <link refid="classGecode_1_1ActorLink"/>
      </node>
    </collaborationgraph>
    <location file="/usr/include/gecode/int/arithmetic.hh" line="377" column="1" bodyfile="/usr/include/gecode/int/arithmetic.hh" bodystart="377" bodyend="402"/>
    <listofallmembers>
      <member refid="classGecode_1_1Propagator_1a55629f061a0fd8ecb2a4c41aa1568e28" prot="public" virt="virtual"><scope>Gecode::Int::Arithmetic::PowPlusDom</scope><name>advise</name></member>
      <member refid="classGecode_1_1Propagator_1afee33d8aed2bc9debee126f17b5015cf" prot="public" virt="non-virtual"><scope>Gecode::Int::Arithmetic::PowPlusDom</scope><name>advisors</name></member>
      <member refid="classGecode_1_1Propagator_1a593de773d2204f47ea365a99df2f75d0" prot="public" virt="non-virtual"><scope>Gecode::Int::Arithmetic::PowPlusDom</scope><name>afc</name></member>
      <member refid="classGecode_1_1ActorLink_1a8427f41a27a72b52ceb52d0fdad21063" prot="public" virt="non-virtual" ambiguityscope="Gecode::ActorLink::"><scope>Gecode::Int::Arithmetic::PowPlusDom</scope><name>cast</name></member>
      <member refid="classGecode_1_1ActorLink_1a464526456db41981f82a1193a8b4e569" prot="public" virt="non-virtual" ambiguityscope="Gecode::ActorLink::"><scope>Gecode::Int::Arithmetic::PowPlusDom</scope><name>cast</name></member>
      <member refid="classGecode_1_1Int_1_1Arithmetic_1_1PowPlusDom_1a0bbb795c70df674287ce695b5605b37f" prot="public" virt="virtual"><scope>Gecode::Int::Arithmetic::PowPlusDom</scope><name>copy</name></member>
      <member refid="classGecode_1_1Int_1_1Arithmetic_1_1PowPlusDom_1ad8c848291d51466e092295dae88bae95" prot="public" virt="virtual"><scope>Gecode::Int::Arithmetic::PowPlusDom</scope><name>cost</name></member>
      <member refid="classGecode_1_1MixBinaryPropagator_1a10c621be7a2dfef913ce01e7678bac84" prot="public" virt="virtual"><scope>Gecode::Int::Arithmetic::PowPlusDom</scope><name>dispose</name></member>
      <member refid="classGecode_1_1Propagator_1a3b286c7aec9843b60a531b495015b5f7" prot="protected" virt="non-virtual"><scope>Gecode::Int::Arithmetic::PowPlusDom</scope><name>fwd</name></member>
      <member refid="classGecode_1_1Propagator_1ae9dfa55e47e4ff8e0c8e4c2a6efdbfc0" prot="public" virt="non-virtual"><scope>Gecode::Int::Arithmetic::PowPlusDom</scope><name>med</name></member>
      <member refid="classGecode_1_1MixBinaryPropagator_1a6d2a3d72b230c1d7f3628d35f12a5fad" prot="protected" virt="non-virtual"><scope>Gecode::Int::Arithmetic::PowPlusDom</scope><name>MixBinaryPropagator</name></member>
      <member refid="classGecode_1_1MixBinaryPropagator_1a77d8edc82a546fde6866328412de52ba" prot="protected" virt="non-virtual"><scope>Gecode::Int::Arithmetic::PowPlusDom</scope><name>MixBinaryPropagator</name></member>
      <member refid="classGecode_1_1MixBinaryPropagator_1a93a5256431c0f53076a11d440960d50b" prot="protected" virt="non-virtual"><scope>Gecode::Int::Arithmetic::PowPlusDom</scope><name>MixBinaryPropagator</name></member>
      <member refid="classGecode_1_1Propagator_1a4905db55af49af8f38558bdbcf5fd4a2" prot="public" virt="non-virtual"><scope>Gecode::Int::Arithmetic::PowPlusDom</scope><name>modeventdelta</name></member>
      <member refid="classGecode_1_1Actor_1a388f671145dcf906f81d22bde2dc0f3d" prot="public" virt="non-virtual"><scope>Gecode::Int::Arithmetic::PowPlusDom</scope><name>operator delete</name></member>
      <member refid="classGecode_1_1Actor_1ac28b9601b530076a1bda75834487f898" prot="public" virt="non-virtual"><scope>Gecode::Int::Arithmetic::PowPlusDom</scope><name>operator new</name></member>
      <member refid="classGecode_1_1Int_1_1Arithmetic_1_1PowPlusDom_1a50666d658f4ed3078f3e7c89b158b1b0" prot="protected" virt="non-virtual"><scope>Gecode::Int::Arithmetic::PowPlusDom</scope><name>ops</name></member>
      <member refid="classGecode_1_1Int_1_1Arithmetic_1_1PowPlusDom_1a54196481929ef9c9ae3c8d273174a9da" prot="public" virt="non-virtual"><scope>Gecode::Int::Arithmetic::PowPlusDom</scope><name>post</name></member>
      <member refid="classGecode_1_1Int_1_1Arithmetic_1_1PowPlusDom_1a7d2be21e2fe9a2385f5884727a25c613" prot="protected" virt="non-virtual"><scope>Gecode::Int::Arithmetic::PowPlusDom</scope><name>PowPlusDom</name></member>
      <member refid="classGecode_1_1Int_1_1Arithmetic_1_1PowPlusDom_1a384b0376f45a462a9f7ea1abaead05a7" prot="protected" virt="non-virtual"><scope>Gecode::Int::Arithmetic::PowPlusDom</scope><name>PowPlusDom</name></member>
      <member refid="classGecode_1_1Int_1_1Arithmetic_1_1PowPlusDom_1a5c353a9a579e93fd83eed13edc2d5d1d" prot="public" virt="virtual"><scope>Gecode::Int::Arithmetic::PowPlusDom</scope><name>propagate</name></member>
      <member refid="classGecode_1_1Propagator_1a891f3e84cde2e8e60f8ad9340ad74b05" prot="protected" virt="non-virtual"><scope>Gecode::Int::Arithmetic::PowPlusDom</scope><name>Propagator</name></member>
      <member refid="classGecode_1_1Propagator_1afeaeed8dae67de4313858bd82fdae5d0" prot="protected" virt="non-virtual"><scope>Gecode::Int::Arithmetic::PowPlusDom</scope><name>Propagator</name></member>
      <member refid="classGecode_1_1Propagator_1a1781b5b0df38c39dddca4b44c3a00530" prot="public" virt="non-virtual"><scope>Gecode::Int::Arithmetic::PowPlusDom</scope><name>size</name></member>
      <member refid="classGecode_1_1MixBinaryPropagator_1af4b9b77e2ef3a4923fb0c86a9182158b" prot="protected" virt="non-virtual"><scope>Gecode::Int::Arithmetic::PowPlusDom</scope><name>x0</name></member>
      <member refid="classGecode_1_1MixBinaryPropagator_1a7a162f63c3a35d6bbcdd6dbef1549caf" prot="protected" virt="non-virtual"><scope>Gecode::Int::Arithmetic::PowPlusDom</scope><name>x1</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
