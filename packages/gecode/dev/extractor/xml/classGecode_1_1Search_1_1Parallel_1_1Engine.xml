<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classGecode_1_1Search_1_1Parallel_1_1Engine" kind="class" prot="public">
    <compoundname>Gecode::Search::Parallel::Engine</compoundname>
    <basecompoundref refid="classGecode_1_1Search_1_1Engine" prot="public" virt="non-virtual">Gecode::Search::Engine</basecompoundref>
    <derivedcompoundref refid="classGecode_1_1Search_1_1Parallel_1_1BAB" prot="public" virt="non-virtual">Gecode::Search::Parallel::BAB</derivedcompoundref>
    <derivedcompoundref refid="classGecode_1_1Search_1_1Parallel_1_1DFS" prot="public" virt="non-virtual">Gecode::Search::Parallel::DFS</derivedcompoundref>
    <includes refid="engine_8hh" local="no">engine.hh</includes>
    <innerclass refid="classGecode_1_1Search_1_1Parallel_1_1Engine_1_1Worker" prot="protected">Gecode::Search::Parallel::Engine::Worker</innerclass>
      <sectiondef kind="user-defined">
      <header>Commands from engine to workers and wait management</header>
      <memberdef kind="enum" id="classGecode_1_1Search_1_1Parallel_1_1Engine_1ab9b4c505e1391b07b2cee9d236a51740" prot="public" static="no">
        <name>Cmd</name>
        <enumvalue id="classGecode_1_1Search_1_1Parallel_1_1Engine_1ab9b4c505e1391b07b2cee9d236a51740a32fbd7bad3461f12eba4d69fa41be1a3" prot="public">
          <name>C_WORK</name>
          <briefdescription>
<para>Perform work. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classGecode_1_1Search_1_1Parallel_1_1Engine_1ab9b4c505e1391b07b2cee9d236a51740a9b1196019deaa97825ba75f18c7922be" prot="public">
          <name>C_WAIT</name>
          <briefdescription>
<para>Run into wait lock. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classGecode_1_1Search_1_1Parallel_1_1Engine_1ab9b4c505e1391b07b2cee9d236a51740a5348929ecd6088bfd58f0f6887c1a192" prot="public">
          <name>C_RESET</name>
          <briefdescription>
<para>Perform reset operation. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classGecode_1_1Search_1_1Parallel_1_1Engine_1ab9b4c505e1391b07b2cee9d236a51740a0b96bbbdf1411f08c9ac03850ec96018" prot="public">
          <name>C_TERMINATE</name>
          <briefdescription>
<para>Terminate. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Commands from engine to workers. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/search/parallel/engine.hh" line="91" column="1" bodyfile="/usr/include/gecode/search/parallel/engine.hh" bodystart="91" bodyend="96"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Search_1_1Parallel_1_1Engine_1a5eac981c888b778221e308086d5fc06c" prot="protected" static="no" mutable="no">
        <type><ref refid="classGecode_1_1Search_1_1Parallel_1_1Engine_1ab9b4c505e1391b07b2cee9d236a51740" kindref="member">Cmd</ref></type>
        <definition>volatile Cmd Gecode::Search::Parallel::Engine::_cmd</definition>
        <argsstring></argsstring>
        <name>_cmd</name>
        <briefdescription>
<para>The current command. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/search/parallel/engine.hh" line="99" column="1" bodyfile="/usr/include/gecode/search/parallel/engine.hh" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Search_1_1Parallel_1_1Engine_1a982e9e141adaa2bfb67df0f2255b3a63" prot="protected" static="no" mutable="no">
        <type><ref refid="classGecode_1_1Support_1_1Mutex" kindref="compound">Support::Mutex</ref></type>
        <definition>Support::Mutex Gecode::Search::Parallel::Engine::_m_wait</definition>
        <argsstring></argsstring>
        <name>_m_wait</name>
        <briefdescription>
<para>Mutex for forcing workers to wait. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/search/parallel/engine.hh" line="101" column="1" bodyfile="/usr/include/gecode/search/parallel/engine.hh" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Search_1_1Parallel_1_1Engine_1a1d17360c09bc85ba2d81a0d574776bc6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGecode_1_1Search_1_1Parallel_1_1Engine_1ab9b4c505e1391b07b2cee9d236a51740" kindref="member">Cmd</ref></type>
        <definition>forceinline Engine::Cmd Gecode::Search::Parallel::Engine::cmd</definition>
        <argsstring>(void) const </argsstring>
        <name>cmd</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return current command. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/search/parallel/engine.hh" line="104" column="1" bodyfile="/usr/include/gecode/search/parallel/engine.hh" bodystart="218" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Search_1_1Parallel_1_1Engine_1a019cee5708ec9f9c4715e9ef40c2d114" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Search::Parallel::Engine::block</definition>
        <argsstring>(void)</argsstring>
        <name>block</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Block all workers. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/search/parallel/engine.hh" line="106" column="1" bodyfile="/usr/include/gecode/search/parallel/engine.hh" bodystart="222" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Search_1_1Parallel_1_1Engine_1ac0f5d9a7335c3ec7f4f23e0573c05060" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Search::Parallel::Engine::release</definition>
        <argsstring>(Cmd c)</argsstring>
        <name>release</name>
        <param>
          <type><ref refid="classGecode_1_1Search_1_1Parallel_1_1Engine_1ab9b4c505e1391b07b2cee9d236a51740" kindref="member">Cmd</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Release all workers. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/search/parallel/engine.hh" line="108" column="1" bodyfile="/usr/include/gecode/search/parallel/engine.hh" bodystart="227" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Search_1_1Parallel_1_1Engine_1a435dbac216542e2fe4963bb65309d53f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Search::Parallel::Engine::wait</definition>
        <argsstring>(void)</argsstring>
        <name>wait</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Ensure that worker waits. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/search/parallel/engine.hh" line="110" column="1" bodyfile="/usr/include/gecode/search/parallel/engine.hh" bodystart="232" bodyend="234"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Termination control</header>
      <memberdef kind="variable" id="classGecode_1_1Search_1_1Parallel_1_1Engine_1a7a8fabfd749ce1b2b0dbe0ff48ef6d97" prot="protected" static="no" mutable="no">
        <type><ref refid="classGecode_1_1Support_1_1Mutex" kindref="compound">Support::Mutex</ref></type>
        <definition>Support::Mutex Gecode::Search::Parallel::Engine::_m_term</definition>
        <argsstring></argsstring>
        <name>_m_term</name>
        <briefdescription>
<para>Mutex for access to termination information. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/search/parallel/engine.hh" line="117" column="1" bodyfile="/usr/include/gecode/search/parallel/engine.hh" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Search_1_1Parallel_1_1Engine_1a0335fb08cad7b9d6fbb63d0b7858ca35" prot="protected" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>volatile unsigned int Gecode::Search::Parallel::Engine::_n_term_not_ack</definition>
        <argsstring></argsstring>
        <name>_n_term_not_ack</name>
        <briefdescription>
<para>Number of workers that have not yet acknowledged termination. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/search/parallel/engine.hh" line="119" column="1" bodyfile="/usr/include/gecode/search/parallel/engine.hh" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Search_1_1Parallel_1_1Engine_1a5b107663eff682b8f2e27844cde90a1f" prot="protected" static="no" mutable="no">
        <type><ref refid="classGecode_1_1Support_1_1Event" kindref="compound">Support::Event</ref></type>
        <definition>Support::Event Gecode::Search::Parallel::Engine::_e_term_ack</definition>
        <argsstring></argsstring>
        <name>_e_term_ack</name>
        <briefdescription>
<para>Event for termination acknowledgment. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/search/parallel/engine.hh" line="121" column="1" bodyfile="/usr/include/gecode/search/parallel/engine.hh" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Search_1_1Parallel_1_1Engine_1af3117f15676aea5ab4b5ae19066a5e68" prot="protected" static="no" mutable="no">
        <type><ref refid="classGecode_1_1Support_1_1Mutex" kindref="compound">Support::Mutex</ref></type>
        <definition>Support::Mutex Gecode::Search::Parallel::Engine::_m_wait_terminate</definition>
        <argsstring></argsstring>
        <name>_m_wait_terminate</name>
        <briefdescription>
<para>Mutex for waiting for termination. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/search/parallel/engine.hh" line="123" column="1" bodyfile="/usr/include/gecode/search/parallel/engine.hh" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Search_1_1Parallel_1_1Engine_1abe5af87e4dd02ac66e83bd02a535a196" prot="protected" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>volatile unsigned int Gecode::Search::Parallel::Engine::_n_not_terminated</definition>
        <argsstring></argsstring>
        <name>_n_not_terminated</name>
        <briefdescription>
<para>Number of not yet terminated workers. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/search/parallel/engine.hh" line="125" column="1" bodyfile="/usr/include/gecode/search/parallel/engine.hh" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Search_1_1Parallel_1_1Engine_1ad89510b823b56776bd0d58fb2b6106c1" prot="protected" static="no" mutable="no">
        <type><ref refid="classGecode_1_1Support_1_1Event" kindref="compound">Support::Event</ref></type>
        <definition>Support::Event Gecode::Search::Parallel::Engine::_e_terminate</definition>
        <argsstring></argsstring>
        <name>_e_terminate</name>
        <briefdescription>
<para>Event for termination (all threads have terminated) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/search/parallel/engine.hh" line="127" column="1" bodyfile="/usr/include/gecode/search/parallel/engine.hh" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Search_1_1Parallel_1_1Engine_1a85e9e5172b3a63ef2a88ab4f0a34c8d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Search::Parallel::Engine::ack_terminate</definition>
        <argsstring>(void)</argsstring>
        <name>ack_terminate</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>For worker to acknowledge termination command. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/search/parallel/engine.hh" line="130" column="1" bodyfile="/usr/include/gecode/search/parallel/engine.hh" bodystart="335" bodyend="340"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Search_1_1Parallel_1_1Engine_1a89b1f5d36c3ff261ad8945ff79c47945" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Search::Parallel::Engine::terminated</definition>
        <argsstring>(void)</argsstring>
        <name>terminated</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>For worker to register termination. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/search/parallel/engine.hh" line="132" column="1" bodyfile="/usr/include/gecode/search/parallel/engine.hh" bodystart="323" bodyend="332"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Search_1_1Parallel_1_1Engine_1a454c9eaf51a54d96de336233b93746ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Search::Parallel::Engine::wait_terminate</definition>
        <argsstring>(void)</argsstring>
        <name>wait_terminate</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>For worker to wait until termination is legal. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/search/parallel/engine.hh" line="134" column="1" bodyfile="/usr/include/gecode/search/parallel/engine.hh" bodystart="343" bodyend="346"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Search_1_1Parallel_1_1Engine_1aa52016592ea3db4028466ad56eba661b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Search::Parallel::Engine::terminate</definition>
        <argsstring>(void)</argsstring>
        <name>terminate</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>For engine to peform thread termination. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/search/parallel/engine.hh" line="136" column="1" bodyfile="/usr/include/gecode/search/parallel/engine.hh" bodystart="349" bodyend="361"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Reset control</header>
      <memberdef kind="variable" id="classGecode_1_1Search_1_1Parallel_1_1Engine_1a5488b898a152484319e7f3b2cae8c0a8" prot="protected" static="no" mutable="no">
        <type><ref refid="classGecode_1_1Support_1_1Mutex" kindref="compound">Support::Mutex</ref></type>
        <definition>Support::Mutex Gecode::Search::Parallel::Engine::_m_reset</definition>
        <argsstring></argsstring>
        <name>_m_reset</name>
        <briefdescription>
<para>Mutex for access to reset information. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/search/parallel/engine.hh" line="143" column="1" bodyfile="/usr/include/gecode/search/parallel/engine.hh" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Search_1_1Parallel_1_1Engine_1ab0e5174a38053ef340ca6347456da731" prot="protected" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>volatile unsigned int Gecode::Search::Parallel::Engine::_n_reset_not_ack</definition>
        <argsstring></argsstring>
        <name>_n_reset_not_ack</name>
        <briefdescription>
<para>Number of workers that have not yet acknowledged reset. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/search/parallel/engine.hh" line="145" column="1" bodyfile="/usr/include/gecode/search/parallel/engine.hh" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Search_1_1Parallel_1_1Engine_1a53f6cb5f525453bf82b4e301c149cfc2" prot="protected" static="no" mutable="no">
        <type><ref refid="classGecode_1_1Support_1_1Event" kindref="compound">Support::Event</ref></type>
        <definition>Support::Event Gecode::Search::Parallel::Engine::e_reset_ack_start</definition>
        <argsstring></argsstring>
        <name>e_reset_ack_start</name>
        <briefdescription>
<para>Event for reset acknowledgment started. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/search/parallel/engine.hh" line="147" column="1" bodyfile="/usr/include/gecode/search/parallel/engine.hh" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Search_1_1Parallel_1_1Engine_1a28be43ff783eb3a53a0a5974f62a7240" prot="protected" static="no" mutable="no">
        <type><ref refid="classGecode_1_1Support_1_1Event" kindref="compound">Support::Event</ref></type>
        <definition>Support::Event Gecode::Search::Parallel::Engine::e_reset_ack_stop</definition>
        <argsstring></argsstring>
        <name>e_reset_ack_stop</name>
        <briefdescription>
<para>Event for reset acknowledgment stopped. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/search/parallel/engine.hh" line="149" column="1" bodyfile="/usr/include/gecode/search/parallel/engine.hh" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Search_1_1Parallel_1_1Engine_1af4156abfb708fa315bd9ec796d1f20a7" prot="protected" static="no" mutable="no">
        <type><ref refid="classGecode_1_1Support_1_1Mutex" kindref="compound">Support::Mutex</ref></type>
        <definition>Support::Mutex Gecode::Search::Parallel::Engine::m_wait_reset</definition>
        <argsstring></argsstring>
        <name>m_wait_reset</name>
        <briefdescription>
<para>Mutex for waiting for reset. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/search/parallel/engine.hh" line="151" column="1" bodyfile="/usr/include/gecode/search/parallel/engine.hh" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Search_1_1Parallel_1_1Engine_1a5d38c37021bf1158ef49416e5703386d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Search::Parallel::Engine::ack_reset_start</definition>
        <argsstring>(void)</argsstring>
        <name>ack_reset_start</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>For worker to acknowledge start of reset cycle. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/search/parallel/engine.hh" line="154" column="1" bodyfile="/usr/include/gecode/search/parallel/engine.hh" bodystart="369" bodyend="374"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Search_1_1Parallel_1_1Engine_1ac80be30fc27e1e98eb6ea2520ebf7052" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Search::Parallel::Engine::ack_reset_stop</definition>
        <argsstring>(void)</argsstring>
        <name>ack_reset_stop</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>For worker to acknowledge stop of reset cycle. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/search/parallel/engine.hh" line="156" column="1" bodyfile="/usr/include/gecode/search/parallel/engine.hh" bodystart="377" bodyend="382"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Search_1_1Parallel_1_1Engine_1a8dc3767941d08cadb56375d2a6e69945" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Search::Parallel::Engine::wait_reset</definition>
        <argsstring>(void)</argsstring>
        <name>wait_reset</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>For worker to wait for all workers to reset. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/search/parallel/engine.hh" line="158" column="1" bodyfile="/usr/include/gecode/search/parallel/engine.hh" bodystart="385" bodyend="388"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Search control</header>
      <memberdef kind="variable" id="classGecode_1_1Search_1_1Parallel_1_1Engine_1ad6aee35e5f12f4890cd4daf06effd5e5" prot="protected" static="no" mutable="no">
        <type><ref refid="classGecode_1_1Support_1_1Mutex" kindref="compound">Support::Mutex</ref></type>
        <definition>Support::Mutex Gecode::Search::Parallel::Engine::m_search</definition>
        <argsstring></argsstring>
        <name>m_search</name>
        <briefdescription>
<para>Mutex for search. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/search/parallel/engine.hh" line="165" column="1" bodyfile="/usr/include/gecode/search/parallel/engine.hh" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Search_1_1Parallel_1_1Engine_1a674ecae827ba980acc5df329f10a5055" prot="protected" static="no" mutable="no">
        <type><ref refid="classGecode_1_1Support_1_1Event" kindref="compound">Support::Event</ref></type>
        <definition>Support::Event Gecode::Search::Parallel::Engine::e_search</definition>
        <argsstring></argsstring>
        <name>e_search</name>
        <briefdescription>
<para>Event for search (solution found, no more solutions, search stopped) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/search/parallel/engine.hh" line="167" column="1" bodyfile="/usr/include/gecode/search/parallel/engine.hh" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Search_1_1Parallel_1_1Engine_1a33d019fdde44e32b1dd1b0f768dce34a" prot="protected" static="no" mutable="no">
        <type><ref refid="classGecode_1_1Support_1_1DynamicQueue" kindref="compound">Support::DynamicQueue</ref>&lt; <ref refid="classGecode_1_1Space" kindref="compound">Space</ref> *, <ref refid="classGecode_1_1Heap" kindref="compound">Heap</ref> &gt;</type>
        <definition>Support::DynamicQueue&lt;Space*,Heap&gt; Gecode::Search::Parallel::Engine::solutions</definition>
        <argsstring></argsstring>
        <name>solutions</name>
        <briefdescription>
<para>Queue of solutions. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/search/parallel/engine.hh" line="169" column="1" bodyfile="/usr/include/gecode/search/parallel/engine.hh" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Search_1_1Parallel_1_1Engine_1a5a83657df5615994c6b1385b21f6d395" prot="protected" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>volatile unsigned int Gecode::Search::Parallel::Engine::n_busy</definition>
        <argsstring></argsstring>
        <name>n_busy</name>
        <briefdescription>
<para>Number of busy workers. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/search/parallel/engine.hh" line="171" column="1" bodyfile="/usr/include/gecode/search/parallel/engine.hh" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Search_1_1Parallel_1_1Engine_1a2a9c20fd3d0b236ec71424b3764b4a7f" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>volatile bool Gecode::Search::Parallel::Engine::has_stopped</definition>
        <argsstring></argsstring>
        <name>has_stopped</name>
        <briefdescription>
<para>Whether a worker had been stopped. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/search/parallel/engine.hh" line="173" column="1" bodyfile="/usr/include/gecode/search/parallel/engine.hh" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Search_1_1Parallel_1_1Engine_1a9a193a8d3cf7a2e0b42052e76bf1e762" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Search::Parallel::Engine::idle</definition>
        <argsstring>(void)</argsstring>
        <name>idle</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Report that worker is idle. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/search/parallel/engine.hh" line="178" column="1" bodyfile="/usr/include/gecode/search/parallel/engine.hh" bodystart="293" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Search_1_1Parallel_1_1Engine_1a875750608158ba5873eb57bbbf0a9be7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Search::Parallel::Engine::busy</definition>
        <argsstring>(void)</argsstring>
        <name>busy</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Report that worker is busy. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/search/parallel/engine.hh" line="180" column="1" bodyfile="/usr/include/gecode/search/parallel/engine.hh" bodystart="302" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Search_1_1Parallel_1_1Engine_1af73d53cf8eb65b0ca626b6e541051f09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Search::Parallel::Engine::stop</definition>
        <argsstring>(void)</argsstring>
        <name>stop</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Report that worker has been stopped. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/search/parallel/engine.hh" line="182" column="1" bodyfile="/usr/include/gecode/search/parallel/engine.hh" bodystart="309" bodyend="316"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Search_1_1Parallel_1_1Engine_1af2e15bfc6ad901090961aaedec171ccd" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::Search::Parallel::Engine::signal</definition>
        <argsstring>(void) const </argsstring>
        <name>signal</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Whether search state changed such that signal is needed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/search/parallel/engine.hh" line="175" column="1" bodyfile="/usr/include/gecode/search/parallel/engine.hh" bodystart="289" bodyend="291"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Engine interface</header>
      <memberdef kind="function" id="classGecode_1_1Search_1_1Parallel_1_1Engine_1a441a649423e21b5195dfd737eebb543f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Search::Parallel::Engine::Engine</definition>
        <argsstring>(const Options &amp;o)</argsstring>
        <name>Engine</name>
        <param>
          <type>const <ref refid="classGecode_1_1Search_1_1Options" kindref="compound">Options</ref> &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
<para>Initialize with options <emphasis>o</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/search/parallel/engine.hh" line="188" column="1" bodyfile="/usr/include/gecode/search/parallel/engine.hh" bodystart="260" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Search_1_1Parallel_1_1Engine_1a92a548a107ff9e501944cacaa162923d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> *</type>
        <definition>virtual Space* Gecode::Search::Parallel::Engine::next</definition>
        <argsstring>(void)</argsstring>
        <name>next</name>
        <reimplements refid="classGecode_1_1Search_1_1Engine_1a79f991f4da7ed5cb9e4b38767aec7175">next</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return next solution (NULL, if none exists or search has been stopped) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/search/parallel/engine.hh" line="190" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Search_1_1Parallel_1_1Engine_1a1aa45336c2883b1714d162cc97c4d95b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool Gecode::Search::Parallel::Engine::stopped</definition>
        <argsstring>(void) const </argsstring>
        <name>stopped</name>
        <reimplements refid="classGecode_1_1Search_1_1Engine_1aca0084b861dfeedb14cfa0e811d0c19f">stopped</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Check whether engine has been stopped. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/search/parallel/engine.hh" line="192" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classGecode_1_1Search_1_1Parallel_1_1Engine_1a36cc92d74293eb04d8c197a76a16c16a" prot="protected" static="no" mutable="no">
        <type>const <ref refid="classGecode_1_1Search_1_1Options" kindref="compound">Options</ref></type>
        <definition>const Options Gecode::Search::Parallel::Engine::_opt</definition>
        <argsstring></argsstring>
        <name>_opt</name>
        <briefdescription>
<para>Search options. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/search/parallel/engine.hh" line="81" column="1" bodyfile="/usr/include/gecode/search/parallel/engine.hh" bodystart="81" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classGecode_1_1Search_1_1Parallel_1_1Engine_1a79ac9263eb1c19547f577684604c2b69" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classGecode_1_1Search_1_1Options" kindref="compound">Options</ref> &amp;</type>
        <definition>forceinline const Options &amp; Gecode::Search::Parallel::Engine::opt</definition>
        <argsstring>(void) const </argsstring>
        <name>opt</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Provide access to search options. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/search/parallel/engine.hh" line="84" column="1" bodyfile="/usr/include/gecode/search/parallel/engine.hh" bodystart="205" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Search_1_1Parallel_1_1Engine_1a201cb68b54ddd60ea405b23717360389" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>forceinline unsigned int Gecode::Search::Parallel::Engine::workers</definition>
        <argsstring>(void) const </argsstring>
        <name>workers</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return number of workers. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/search/parallel/engine.hh" line="86" column="1" bodyfile="/usr/include/gecode/search/parallel/engine.hh" bodystart="209" bodyend="211"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Parallel depth-first search engine </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1960">
        <label>Gecode::Search::Parallel::DFS</label>
        <link refid="classGecode_1_1Search_1_1Parallel_1_1DFS"/>
        <childnode refid="1957" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1957">
        <label>Gecode::Search::Parallel::Engine</label>
        <link refid="classGecode_1_1Search_1_1Parallel_1_1Engine"/>
        <childnode refid="1958" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1958">
        <label>Gecode::Search::Engine</label>
        <link refid="classGecode_1_1Search_1_1Engine"/>
      </node>
      <node id="1959">
        <label>Gecode::Search::Parallel::BAB</label>
        <link refid="classGecode_1_1Search_1_1Parallel_1_1BAB"/>
        <childnode refid="1957" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1964">
        <label>Gecode::Support::Event</label>
        <link refid="classGecode_1_1Support_1_1Event"/>
      </node>
      <node id="1968">
        <label>Gecode::Search::Stop</label>
        <link refid="classGecode_1_1Search_1_1Stop"/>
      </node>
      <node id="1967">
        <label>Gecode::Search::Cutoff</label>
        <link refid="classGecode_1_1Search_1_1Cutoff"/>
      </node>
      <node id="1963">
        <label>Gecode::Support::DynamicQueue&lt; Gecode::Space *, Gecode::Heap &gt;</label>
        <link refid="classGecode_1_1Support_1_1DynamicQueue"/>
      </node>
      <node id="1961">
        <label>Gecode::Search::Parallel::Engine</label>
        <link refid="classGecode_1_1Search_1_1Parallel_1_1Engine"/>
        <childnode refid="1962" relation="public-inheritance">
        </childnode>
        <childnode refid="1963" relation="usage">
          <edgelabel>solutions</edgelabel>
        </childnode>
        <childnode refid="1964" relation="usage">
          <edgelabel>e_reset_ack_stop</edgelabel>
          <edgelabel>_e_term_ack</edgelabel>
          <edgelabel>e_search</edgelabel>
          <edgelabel>e_reset_ack_start</edgelabel>
          <edgelabel>_e_terminate</edgelabel>
        </childnode>
        <childnode refid="1965" relation="usage">
          <edgelabel>_m_reset</edgelabel>
          <edgelabel>_m_wait</edgelabel>
          <edgelabel>_m_wait_terminate</edgelabel>
          <edgelabel>_m_term</edgelabel>
          <edgelabel>m_search</edgelabel>
          <edgelabel>m_wait_reset</edgelabel>
        </childnode>
        <childnode refid="1966" relation="usage">
          <edgelabel>_opt</edgelabel>
        </childnode>
      </node>
      <node id="1962">
        <label>Gecode::Search::Engine</label>
        <link refid="classGecode_1_1Search_1_1Engine"/>
      </node>
      <node id="1966">
        <label>Gecode::Search::Options</label>
        <link refid="classGecode_1_1Search_1_1Options"/>
        <childnode refid="1967" relation="usage">
          <edgelabel>cutoff</edgelabel>
        </childnode>
        <childnode refid="1968" relation="usage">
          <edgelabel>stop</edgelabel>
        </childnode>
        <childnode refid="1966" relation="usage">
          <edgelabel>def</edgelabel>
        </childnode>
      </node>
      <node id="1965">
        <label>Gecode::Support::Mutex</label>
        <link refid="classGecode_1_1Support_1_1Mutex"/>
      </node>
    </collaborationgraph>
    <location file="/usr/include/gecode/search/parallel/engine.hh" line="49" column="1" bodyfile="/usr/include/gecode/search/parallel/engine.hh" bodystart="49" bodyend="194"/>
    <listofallmembers>
      <member refid="classGecode_1_1Search_1_1Parallel_1_1Engine_1a5eac981c888b778221e308086d5fc06c" prot="protected" virt="non-virtual"><scope>Gecode::Search::Parallel::Engine</scope><name>_cmd</name></member>
      <member refid="classGecode_1_1Search_1_1Parallel_1_1Engine_1a5b107663eff682b8f2e27844cde90a1f" prot="protected" virt="non-virtual"><scope>Gecode::Search::Parallel::Engine</scope><name>_e_term_ack</name></member>
      <member refid="classGecode_1_1Search_1_1Parallel_1_1Engine_1ad89510b823b56776bd0d58fb2b6106c1" prot="protected" virt="non-virtual"><scope>Gecode::Search::Parallel::Engine</scope><name>_e_terminate</name></member>
      <member refid="classGecode_1_1Search_1_1Parallel_1_1Engine_1a5488b898a152484319e7f3b2cae8c0a8" prot="protected" virt="non-virtual"><scope>Gecode::Search::Parallel::Engine</scope><name>_m_reset</name></member>
      <member refid="classGecode_1_1Search_1_1Parallel_1_1Engine_1a7a8fabfd749ce1b2b0dbe0ff48ef6d97" prot="protected" virt="non-virtual"><scope>Gecode::Search::Parallel::Engine</scope><name>_m_term</name></member>
      <member refid="classGecode_1_1Search_1_1Parallel_1_1Engine_1a982e9e141adaa2bfb67df0f2255b3a63" prot="protected" virt="non-virtual"><scope>Gecode::Search::Parallel::Engine</scope><name>_m_wait</name></member>
      <member refid="classGecode_1_1Search_1_1Parallel_1_1Engine_1af3117f15676aea5ab4b5ae19066a5e68" prot="protected" virt="non-virtual"><scope>Gecode::Search::Parallel::Engine</scope><name>_m_wait_terminate</name></member>
      <member refid="classGecode_1_1Search_1_1Parallel_1_1Engine_1abe5af87e4dd02ac66e83bd02a535a196" prot="protected" virt="non-virtual"><scope>Gecode::Search::Parallel::Engine</scope><name>_n_not_terminated</name></member>
      <member refid="classGecode_1_1Search_1_1Parallel_1_1Engine_1ab0e5174a38053ef340ca6347456da731" prot="protected" virt="non-virtual"><scope>Gecode::Search::Parallel::Engine</scope><name>_n_reset_not_ack</name></member>
      <member refid="classGecode_1_1Search_1_1Parallel_1_1Engine_1a0335fb08cad7b9d6fbb63d0b7858ca35" prot="protected" virt="non-virtual"><scope>Gecode::Search::Parallel::Engine</scope><name>_n_term_not_ack</name></member>
      <member refid="classGecode_1_1Search_1_1Parallel_1_1Engine_1a36cc92d74293eb04d8c197a76a16c16a" prot="protected" virt="non-virtual"><scope>Gecode::Search::Parallel::Engine</scope><name>_opt</name></member>
      <member refid="classGecode_1_1Search_1_1Parallel_1_1Engine_1a5d38c37021bf1158ef49416e5703386d" prot="public" virt="non-virtual"><scope>Gecode::Search::Parallel::Engine</scope><name>ack_reset_start</name></member>
      <member refid="classGecode_1_1Search_1_1Parallel_1_1Engine_1ac80be30fc27e1e98eb6ea2520ebf7052" prot="public" virt="non-virtual"><scope>Gecode::Search::Parallel::Engine</scope><name>ack_reset_stop</name></member>
      <member refid="classGecode_1_1Search_1_1Parallel_1_1Engine_1a85e9e5172b3a63ef2a88ab4f0a34c8d6" prot="public" virt="non-virtual"><scope>Gecode::Search::Parallel::Engine</scope><name>ack_terminate</name></member>
      <member refid="classGecode_1_1Search_1_1Parallel_1_1Engine_1a019cee5708ec9f9c4715e9ef40c2d114" prot="public" virt="non-virtual"><scope>Gecode::Search::Parallel::Engine</scope><name>block</name></member>
      <member refid="classGecode_1_1Search_1_1Parallel_1_1Engine_1a875750608158ba5873eb57bbbf0a9be7" prot="public" virt="non-virtual"><scope>Gecode::Search::Parallel::Engine</scope><name>busy</name></member>
      <member refid="classGecode_1_1Search_1_1Parallel_1_1Engine_1ab9b4c505e1391b07b2cee9d236a51740a5348929ecd6088bfd58f0f6887c1a192" prot="public" virt="non-virtual"><scope>Gecode::Search::Parallel::Engine</scope><name>C_RESET</name></member>
      <member refid="classGecode_1_1Search_1_1Parallel_1_1Engine_1ab9b4c505e1391b07b2cee9d236a51740a0b96bbbdf1411f08c9ac03850ec96018" prot="public" virt="non-virtual"><scope>Gecode::Search::Parallel::Engine</scope><name>C_TERMINATE</name></member>
      <member refid="classGecode_1_1Search_1_1Parallel_1_1Engine_1ab9b4c505e1391b07b2cee9d236a51740a9b1196019deaa97825ba75f18c7922be" prot="public" virt="non-virtual"><scope>Gecode::Search::Parallel::Engine</scope><name>C_WAIT</name></member>
      <member refid="classGecode_1_1Search_1_1Parallel_1_1Engine_1ab9b4c505e1391b07b2cee9d236a51740a32fbd7bad3461f12eba4d69fa41be1a3" prot="public" virt="non-virtual"><scope>Gecode::Search::Parallel::Engine</scope><name>C_WORK</name></member>
      <member refid="classGecode_1_1Search_1_1Parallel_1_1Engine_1ab9b4c505e1391b07b2cee9d236a51740" prot="public" virt="non-virtual"><scope>Gecode::Search::Parallel::Engine</scope><name>Cmd</name></member>
      <member refid="classGecode_1_1Search_1_1Parallel_1_1Engine_1a1d17360c09bc85ba2d81a0d574776bc6" prot="public" virt="non-virtual"><scope>Gecode::Search::Parallel::Engine</scope><name>cmd</name></member>
      <member refid="classGecode_1_1Search_1_1Parallel_1_1Engine_1a53f6cb5f525453bf82b4e301c149cfc2" prot="protected" virt="non-virtual"><scope>Gecode::Search::Parallel::Engine</scope><name>e_reset_ack_start</name></member>
      <member refid="classGecode_1_1Search_1_1Parallel_1_1Engine_1a28be43ff783eb3a53a0a5974f62a7240" prot="protected" virt="non-virtual"><scope>Gecode::Search::Parallel::Engine</scope><name>e_reset_ack_stop</name></member>
      <member refid="classGecode_1_1Search_1_1Parallel_1_1Engine_1a674ecae827ba980acc5df329f10a5055" prot="protected" virt="non-virtual"><scope>Gecode::Search::Parallel::Engine</scope><name>e_search</name></member>
      <member refid="classGecode_1_1Search_1_1Parallel_1_1Engine_1a441a649423e21b5195dfd737eebb543f" prot="public" virt="non-virtual"><scope>Gecode::Search::Parallel::Engine</scope><name>Engine</name></member>
      <member refid="classGecode_1_1Search_1_1Parallel_1_1Engine_1a2a9c20fd3d0b236ec71424b3764b4a7f" prot="protected" virt="non-virtual"><scope>Gecode::Search::Parallel::Engine</scope><name>has_stopped</name></member>
      <member refid="classGecode_1_1Search_1_1Parallel_1_1Engine_1a9a193a8d3cf7a2e0b42052e76bf1e762" prot="public" virt="non-virtual"><scope>Gecode::Search::Parallel::Engine</scope><name>idle</name></member>
      <member refid="classGecode_1_1Search_1_1Parallel_1_1Engine_1ad6aee35e5f12f4890cd4daf06effd5e5" prot="protected" virt="non-virtual"><scope>Gecode::Search::Parallel::Engine</scope><name>m_search</name></member>
      <member refid="classGecode_1_1Search_1_1Parallel_1_1Engine_1af4156abfb708fa315bd9ec796d1f20a7" prot="protected" virt="non-virtual"><scope>Gecode::Search::Parallel::Engine</scope><name>m_wait_reset</name></member>
      <member refid="classGecode_1_1Search_1_1Parallel_1_1Engine_1a5a83657df5615994c6b1385b21f6d395" prot="protected" virt="non-virtual"><scope>Gecode::Search::Parallel::Engine</scope><name>n_busy</name></member>
      <member refid="classGecode_1_1Search_1_1Parallel_1_1Engine_1a92a548a107ff9e501944cacaa162923d" prot="public" virt="virtual"><scope>Gecode::Search::Parallel::Engine</scope><name>next</name></member>
      <member refid="classGecode_1_1Search_1_1Engine_1a8ed6f6fe44adba4285e52d3db1e0c00a" prot="public" virt="pure-virtual"><scope>Gecode::Search::Parallel::Engine</scope><name>nogoods</name></member>
      <member refid="classGecode_1_1Search_1_1Parallel_1_1Engine_1a79ac9263eb1c19547f577684604c2b69" prot="public" virt="non-virtual"><scope>Gecode::Search::Parallel::Engine</scope><name>opt</name></member>
      <member refid="classGecode_1_1Search_1_1Parallel_1_1Engine_1ac0f5d9a7335c3ec7f4f23e0573c05060" prot="public" virt="non-virtual"><scope>Gecode::Search::Parallel::Engine</scope><name>release</name></member>
      <member refid="classGecode_1_1Search_1_1Engine_1a0dfdae4b329fd9e00a84a81d2d1a33c2" prot="public" virt="pure-virtual"><scope>Gecode::Search::Parallel::Engine</scope><name>reset</name></member>
      <member refid="classGecode_1_1Search_1_1Parallel_1_1Engine_1af2e15bfc6ad901090961aaedec171ccd" prot="protected" virt="non-virtual"><scope>Gecode::Search::Parallel::Engine</scope><name>signal</name></member>
      <member refid="classGecode_1_1Search_1_1Parallel_1_1Engine_1a33d019fdde44e32b1dd1b0f768dce34a" prot="protected" virt="non-virtual"><scope>Gecode::Search::Parallel::Engine</scope><name>solutions</name></member>
      <member refid="classGecode_1_1Search_1_1Engine_1a90486627834ec4103794cf2bd2c87610" prot="public" virt="pure-virtual"><scope>Gecode::Search::Parallel::Engine</scope><name>statistics</name></member>
      <member refid="classGecode_1_1Search_1_1Parallel_1_1Engine_1af73d53cf8eb65b0ca626b6e541051f09" prot="public" virt="non-virtual"><scope>Gecode::Search::Parallel::Engine</scope><name>stop</name></member>
      <member refid="classGecode_1_1Search_1_1Parallel_1_1Engine_1a1aa45336c2883b1714d162cc97c4d95b" prot="public" virt="virtual"><scope>Gecode::Search::Parallel::Engine</scope><name>stopped</name></member>
      <member refid="classGecode_1_1Search_1_1Parallel_1_1Engine_1aa52016592ea3db4028466ad56eba661b" prot="public" virt="non-virtual"><scope>Gecode::Search::Parallel::Engine</scope><name>terminate</name></member>
      <member refid="classGecode_1_1Search_1_1Parallel_1_1Engine_1a89b1f5d36c3ff261ad8945ff79c47945" prot="public" virt="non-virtual"><scope>Gecode::Search::Parallel::Engine</scope><name>terminated</name></member>
      <member refid="classGecode_1_1Search_1_1Parallel_1_1Engine_1a435dbac216542e2fe4963bb65309d53f" prot="public" virt="non-virtual"><scope>Gecode::Search::Parallel::Engine</scope><name>wait</name></member>
      <member refid="classGecode_1_1Search_1_1Parallel_1_1Engine_1a8dc3767941d08cadb56375d2a6e69945" prot="public" virt="non-virtual"><scope>Gecode::Search::Parallel::Engine</scope><name>wait_reset</name></member>
      <member refid="classGecode_1_1Search_1_1Parallel_1_1Engine_1a454c9eaf51a54d96de336233b93746ab" prot="public" virt="non-virtual"><scope>Gecode::Search::Parallel::Engine</scope><name>wait_terminate</name></member>
      <member refid="classGecode_1_1Search_1_1Parallel_1_1Engine_1a201cb68b54ddd60ea405b23717360389" prot="public" virt="non-virtual"><scope>Gecode::Search::Parallel::Engine</scope><name>workers</name></member>
      <member refid="classGecode_1_1Search_1_1Engine_1ae2edd144a6800328408bea4ead419840" prot="public" virt="virtual"><scope>Gecode::Search::Parallel::Engine</scope><name>~Engine</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
