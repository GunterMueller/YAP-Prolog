<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="namespaceGecode_1_1Set_1_1Limits" kind="namespace">
    <compoundname>Gecode::Set::Limits</compoundname>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespaceGecode_1_1Set_1_1Limits_1aa0057c6b80521aaf8485343580d0eed5" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int Gecode::Set::Limits::max</definition>
        <argsstring></argsstring>
        <name>max</name>
        <initializer>= (Gecode::Int::Limits::max / 2) - 1</initializer>
        <briefdescription>
<para>Largest allowed integer in integer set. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set.hh" line="99" column="1" bodyfile="/usr/include/gecode/set.hh" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceGecode_1_1Set_1_1Limits_1a768af29a2cbf9eec75b4376b325f6cc4" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int Gecode::Set::Limits::min</definition>
        <argsstring></argsstring>
        <name>min</name>
        <initializer>= -<ref refid="namespaceGecode_1_1Set_1_1Limits_1aa0057c6b80521aaf8485343580d0eed5" kindref="member">max</ref></initializer>
        <briefdescription>
<para>Smallest allowed integer in integer set. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set.hh" line="101" column="1" bodyfile="/usr/include/gecode/set.hh" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceGecode_1_1Set_1_1Limits_1a82e5a0891d539b2d58db3a9347ac138b" prot="public" static="no" mutable="no">
        <type>const unsigned int</type>
        <definition>const unsigned int Gecode::Set::Limits::card</definition>
        <argsstring></argsstring>
        <name>card</name>
        <initializer>= <ref refid="namespaceGecode_1_1Set_1_1Limits_1aa0057c6b80521aaf8485343580d0eed5" kindref="member">max</ref>-<ref refid="namespaceGecode_1_1Set_1_1Limits_1a768af29a2cbf9eec75b4376b325f6cc4" kindref="member">min</ref>+1</initializer>
        <briefdescription>
<para>Maximum cardinality of an integer set. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set.hh" line="103" column="1" bodyfile="/usr/include/gecode/set.hh" bodystart="103" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceGecode_1_1Set_1_1Limits_1a4b7ffb78327d0939e3fec2bc7718b799" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Gecode::Set::Limits::check</definition>
        <argsstring>(int n, const char *l)</argsstring>
        <name>check</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>l</declname>
        </param>
        <briefdescription>
<para>Check whether integer <emphasis>n</emphasis> is in range, otherwise throw overflow exception with information <emphasis>l</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set.hh" line="105" column="1" bodyfile="/usr/include/gecode/set/limits.hpp" bodystart="41" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Set_1_1Limits_1aca906935d0209a741637909d16cec980" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Gecode::Set::Limits::check</definition>
        <argsstring>(unsigned int n, const char *l)</argsstring>
        <name>check</name>
        <param>
          <type>unsigned int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>l</declname>
        </param>
        <briefdescription>
<para>Check whether unsigned int <emphasis>n</emphasis> is in range for cardinality, otherwise throw overflow exception with information <emphasis>l</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set.hh" line="107" column="1" bodyfile="/usr/include/gecode/set/limits.hpp" bodystart="47" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="namespaceGecode_1_1Set_1_1Limits_1a111b1c28dab41d797c149490ffad3d71" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Gecode::Set::Limits::check</definition>
        <argsstring>(const IntSet &amp;s, const char *l)</argsstring>
        <name>check</name>
        <param>
          <type>const <ref refid="classGecode_1_1IntSet" kindref="compound">IntSet</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>l</declname>
        </param>
        <briefdescription>
<para>Check whether minimum and maximum of <ref refid="classGecode_1_1IntSet" kindref="compound">IntSet</ref> <emphasis>s</emphasis> is in range, otherwise throw overflow exception with information <emphasis>l</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set.hh" line="109" column="1" bodyfile="/usr/include/gecode/set/limits.hpp" bodystart="53" bodyend="58"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Numerical limits for set variables. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/usr/include/gecode/set.hh" line="97" column="1"/>
  </compounddef>
</doxygen>
