<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classGecode_1_1Iter_1_1Ranges_1_1Size" kind="class" prot="public">
    <compoundname>Gecode::Iter::Ranges::Size</compoundname>
    <includes refid="ranges-size_8hpp" local="no">ranges-size.hpp</includes>
    <templateparamlist>
      <param>
        <type>class I</type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Constructors and initialization</header>
      <memberdef kind="function" id="classGecode_1_1Iter_1_1Ranges_1_1Size_1abe41cf789c9e0f2ff28e7a51ca0f2169" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Iter::Ranges::Size&lt; I &gt;::Size</definition>
        <argsstring>(void)</argsstring>
        <name>Size</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/iter/ranges-size.hpp" line="60" column="1" bodyfile="/usr/include/gecode/iter/ranges-size.hpp" bodystart="95" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Iter_1_1Ranges_1_1Size_1a3e93a6e328bc49f70dea5e2673f2d43e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Gecode::Iter::Ranges::Size&lt; I &gt;::Size</definition>
        <argsstring>(I &amp;i)</argsstring>
        <name>Size</name>
        <param>
          <type>I &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Initialize with ranges from <emphasis>i</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/iter/ranges-size.hpp" line="62" column="1" bodyfile="/usr/include/gecode/iter/ranges-size.hpp" bodystart="107" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Iter_1_1Ranges_1_1Size_1a73501b81f2e7cebed136c5ad1da82df0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Gecode::Iter::Ranges::Size&lt; I &gt;::init</definition>
        <argsstring>(I &amp;i)</argsstring>
        <name>init</name>
        <param>
          <type>I &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Initialize with ranges from <emphasis>i</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/iter/ranges-size.hpp" line="64" column="1" bodyfile="/usr/include/gecode/iter/ranges-size.hpp" bodystart="100" bodyend="103"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Iteration control</header>
      <memberdef kind="function" id="classGecode_1_1Iter_1_1Ranges_1_1Size_1a13ac7658ec1a14d6b1e66b0b644b0858" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::Iter::Ranges::Size&lt; I &gt;::operator()</definition>
        <argsstring>(void)</argsstring>
        <name>operator()</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test whether iterator is still at a range or done. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/iter/ranges-size.hpp" line="70" column="1" bodyfile="/usr/include/gecode/iter/ranges-size.hpp" bodystart="117" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Iter_1_1Ranges_1_1Size_1af7730e44185e9b08a934de2efa722ca5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Iter::Ranges::Size&lt; I &gt;::operator++</definition>
        <argsstring>(void)</argsstring>
        <name>operator++</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Move iterator to next range (if possible) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/iter/ranges-size.hpp" line="72" column="1" bodyfile="/usr/include/gecode/iter/ranges-size.hpp" bodystart="111" bodyend="114"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>%Range access</header>
      <memberdef kind="function" id="classGecode_1_1Iter_1_1Ranges_1_1Size_1a3670a08c10fb4ac8409123b746815a0f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Iter::Ranges::Size&lt; I &gt;::min</definition>
        <argsstring>(void) const </argsstring>
        <name>min</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return smallest value of range. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/iter/ranges-size.hpp" line="78" column="1" bodyfile="/usr/include/gecode/iter/ranges-size.hpp" bodystart="123" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Iter_1_1Ranges_1_1Size_1aef539e159961a72f47c2fc6864efb238" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Iter::Ranges::Size&lt; I &gt;::max</definition>
        <argsstring>(void) const </argsstring>
        <name>max</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return largest value of range. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/iter/ranges-size.hpp" line="80" column="1" bodyfile="/usr/include/gecode/iter/ranges-size.hpp" bodystart="128" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Iter_1_1Ranges_1_1Size_1a3e725f196b3a4e2e2d0ab4bc3b12c7a5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>forceinline unsigned int Gecode::Iter::Ranges::Size&lt; I &gt;::width</definition>
        <argsstring>(void) const </argsstring>
        <name>width</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return width of range (distance between minimum and maximum) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/iter/ranges-size.hpp" line="82" column="1" bodyfile="/usr/include/gecode/iter/ranges-size.hpp" bodystart="133" bodyend="135"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>%Size access</header>
      <memberdef kind="function" id="classGecode_1_1Iter_1_1Ranges_1_1Size_1a2eeb081af98bb8ff059e102c9b592236" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>forceinline unsigned int Gecode::Iter::Ranges::Size&lt; I &gt;::size</definition>
        <argsstring>(void) const </argsstring>
        <name>size</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return accumulated size. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/iter/ranges-size.hpp" line="88" column="1" bodyfile="/usr/include/gecode/iter/ranges-size.hpp" bodystart="139" bodyend="141"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classGecode_1_1Iter_1_1Ranges_1_1Size_1adab81da590af973fabc388048eff611e" prot="protected" static="no" mutable="no">
        <type>I</type>
        <definition>I Gecode::Iter::Ranges::Size&lt; I &gt;::i</definition>
        <argsstring></argsstring>
        <name>i</name>
        <briefdescription>
<para>Iterator to compute size of. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/iter/ranges-size.hpp" line="53" column="1" bodyfile="/usr/include/gecode/iter/ranges-size.hpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Iter_1_1Ranges_1_1Size_1a0840bfaf8d2e2d7d7349309c4aa02e86" prot="protected" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int Gecode::Iter::Ranges::Size&lt; I &gt;::_size</definition>
        <argsstring></argsstring>
        <name>_size</name>
        <briefdescription>
<para>Accumulated size. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/iter/ranges-size.hpp" line="55" column="1" bodyfile="/usr/include/gecode/iter/ranges-size.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Range iterator with size counting </para>    </briefdescription>
    <detaileddescription>
<para>Allows to iterate the ranges as defined by the input iterator and access the size of the set already iterated. After complete iteration, the reported size is thus the size of the set. </para>    </detaileddescription>
    <collaborationgraph>
      <node id="6535">
        <label>I</label>
      </node>
      <node id="6534">
        <label>Gecode::Iter::Ranges::Size&lt; I &gt;</label>
        <link refid="classGecode_1_1Iter_1_1Ranges_1_1Size"/>
        <childnode refid="6535" relation="usage">
          <edgelabel>i</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/usr/include/gecode/iter/ranges-size.hpp" line="50" column="1" bodyfile="/usr/include/gecode/iter/ranges-size.hpp" bodystart="50" bodyend="90"/>
    <listofallmembers>
      <member refid="classGecode_1_1Iter_1_1Ranges_1_1Size_1a0840bfaf8d2e2d7d7349309c4aa02e86" prot="protected" virt="non-virtual"><scope>Gecode::Iter::Ranges::Size</scope><name>_size</name></member>
      <member refid="classGecode_1_1Iter_1_1Ranges_1_1Size_1adab81da590af973fabc388048eff611e" prot="protected" virt="non-virtual"><scope>Gecode::Iter::Ranges::Size</scope><name>i</name></member>
      <member refid="classGecode_1_1Iter_1_1Ranges_1_1Size_1a73501b81f2e7cebed136c5ad1da82df0" prot="public" virt="non-virtual"><scope>Gecode::Iter::Ranges::Size</scope><name>init</name></member>
      <member refid="classGecode_1_1Iter_1_1Ranges_1_1Size_1aef539e159961a72f47c2fc6864efb238" prot="public" virt="non-virtual"><scope>Gecode::Iter::Ranges::Size</scope><name>max</name></member>
      <member refid="classGecode_1_1Iter_1_1Ranges_1_1Size_1a3670a08c10fb4ac8409123b746815a0f" prot="public" virt="non-virtual"><scope>Gecode::Iter::Ranges::Size</scope><name>min</name></member>
      <member refid="classGecode_1_1Iter_1_1Ranges_1_1Size_1a13ac7658ec1a14d6b1e66b0b644b0858" prot="public" virt="non-virtual"><scope>Gecode::Iter::Ranges::Size</scope><name>operator()</name></member>
      <member refid="classGecode_1_1Iter_1_1Ranges_1_1Size_1af7730e44185e9b08a934de2efa722ca5" prot="public" virt="non-virtual"><scope>Gecode::Iter::Ranges::Size</scope><name>operator++</name></member>
      <member refid="classGecode_1_1Iter_1_1Ranges_1_1Size_1a2eeb081af98bb8ff059e102c9b592236" prot="public" virt="non-virtual"><scope>Gecode::Iter::Ranges::Size</scope><name>size</name></member>
      <member refid="classGecode_1_1Iter_1_1Ranges_1_1Size_1abe41cf789c9e0f2ff28e7a51ca0f2169" prot="public" virt="non-virtual"><scope>Gecode::Iter::Ranges::Size</scope><name>Size</name></member>
      <member refid="classGecode_1_1Iter_1_1Ranges_1_1Size_1a3e93a6e328bc49f70dea5e2673f2d43e" prot="public" virt="non-virtual"><scope>Gecode::Iter::Ranges::Size</scope><name>Size</name></member>
      <member refid="classGecode_1_1Iter_1_1Ranges_1_1Size_1a3e725f196b3a4e2e2d0ab4bc3b12c7a5" prot="public" virt="non-virtual"><scope>Gecode::Iter::Ranges::Size</scope><name>width</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
