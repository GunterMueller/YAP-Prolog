<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classGecode_1_1Int_1_1Linear_1_1EqBoolInt" kind="class" prot="public">
    <compoundname>Gecode::Int::Linear::EqBoolInt</compoundname>
    <basecompoundref refid="classGecode_1_1Int_1_1Linear_1_1LinBoolInt" prot="public" virt="non-virtual">Gecode::Int::Linear::LinBoolInt&lt; VX &gt;</basecompoundref>
    <includes refid="int_2linear_8hh" local="no">linear.hh</includes>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>VX</declname>
        <defname>VX</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classGecode_1_1Int_1_1Linear_1_1EqBoolInt_1a007072258a9f2ef470798681616902b0" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Int::Linear::EqBoolInt&lt; VX &gt;::EqBoolInt</definition>
        <argsstring>(Space &amp;home, bool share, EqBoolInt &amp;p)</argsstring>
        <name>EqBoolInt</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>share</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1Linear_1_1EqBoolInt" kindref="compound">EqBoolInt</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Constructor for cloning <emphasis>p</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/linear.hh" line="819" column="1" bodyfile="/usr/include/gecode/int/linear/bool-int.hpp" bodystart="236" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Linear_1_1EqBoolInt_1a4e959b83943961993546327df87ca817" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Int::Linear::EqBoolInt&lt; VX &gt;::EqBoolInt</definition>
        <argsstring>(Home home, ViewArray&lt; VX &gt; &amp;x, int c)</argsstring>
        <name>EqBoolInt</name>
        <param>
          <type><ref refid="classGecode_1_1Home" kindref="compound">Home</ref></type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; VX &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Constructor for creation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/linear.hh" line="821" column="1" bodyfile="/usr/include/gecode/int/linear/bool-int.hpp" bodystart="231" bodyend="232"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classGecode_1_1Int_1_1Linear_1_1EqBoolInt_1ab398d7b666b20e936fb339b379919c51" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classGecode_1_1Actor" kindref="compound">Actor</ref> *</type>
        <definition>Actor * Gecode::Int::Linear::EqBoolInt&lt; VX &gt;::copy</definition>
        <argsstring>(Space &amp;home, bool share)</argsstring>
        <name>copy</name>
        <reimplements refid="classGecode_1_1Actor_1a67b240e2810720846c3632c94cc9c99d">copy</reimplements>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>share</declname>
        </param>
        <briefdescription>
<para>Create copy during cloning. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/linear.hh" line="824" column="1" bodyfile="/usr/include/gecode/int/linear/bool-int.hpp" bodystart="241" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Linear_1_1EqBoolInt_1ab2d83a914726a5cc568064b9d24b04d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>ExecStatus Gecode::Int::Linear::EqBoolInt&lt; VX &gt;::advise</definition>
        <argsstring>(Space &amp;home, Advisor &amp;a, const Delta &amp;d)</argsstring>
        <name>advise</name>
        <reimplements refid="classGecode_1_1Propagator_1a55629f061a0fd8ecb2a4c41aa1568e28">advise</reimplements>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Advisor" kindref="compound">Advisor</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1Delta" kindref="compound">Delta</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Give advice to propagator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/linear.hh" line="826" column="1" bodyfile="/usr/include/gecode/int/linear/bool-int.hpp" bodystart="247" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Linear_1_1EqBoolInt_1ab1aa3df3da71a09a21dd96fdf21513fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>ExecStatus Gecode::Int::Linear::EqBoolInt&lt; VX &gt;::propagate</definition>
        <argsstring>(Space &amp;home, const ModEventDelta &amp;med)</argsstring>
        <name>propagate</name>
        <reimplements refid="classGecode_1_1Propagator_1ad2dc98c1345222892592339948c6cde1">propagate</reimplements>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceGecode_1a129e41c1d037528010d7b6706495a560" kindref="member">ModEventDelta</ref> &amp;</type>
          <declname>med</declname>
        </param>
        <briefdescription>
<para>Perform propagation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/linear.hh" line="828" column="1" bodyfile="/usr/include/gecode/int/linear/bool-int.hpp" bodystart="282" bodyend="298"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classGecode_1_1Int_1_1Linear_1_1EqBoolInt_1aee2940dc1afd8f78d9a320960a0dabdc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>ExecStatus Gecode::Int::Linear::EqBoolInt&lt; VX &gt;::post</definition>
        <argsstring>(Home home, ViewArray&lt; VX &gt; &amp;x, int c)</argsstring>
        <name>post</name>
        <param>
          <type><ref refid="classGecode_1_1Home" kindref="compound">Home</ref></type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; VX &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Post propagator for <formula id="159">$\sum_{i=0}^{|x|-1}x_i = c$</formula>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/linear.hh" line="830" column="1" bodyfile="/usr/include/gecode/int/linear/bool-int.hpp" bodystart="302" bodyend="329"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Propagator for integer equal to Boolean sum (cardinality) </para>    </briefdescription>
    <detaileddescription>
<para>Requires<programlisting><codeline><highlight class="preprocessor">#include<sp/>&lt;gecode/int/linear.hh&gt;</highlight><highlight class="normal"><sp/></highlight></codeline>
</programlisting> </para>    </detaileddescription>
    <inheritancegraph>
      <node id="2087">
        <label>Gecode::Propagator</label>
        <link refid="classGecode_1_1Propagator"/>
        <childnode refid="2088" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2086">
        <label>Gecode::Int::Linear::LinBoolInt&lt; VX &gt;</label>
        <link refid="classGecode_1_1Int_1_1Linear_1_1LinBoolInt"/>
        <childnode refid="2087" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2088">
        <label>Gecode::Actor</label>
        <link refid="classGecode_1_1Actor"/>
        <childnode refid="2089" relation="private-inheritance">
        </childnode>
      </node>
      <node id="2089">
        <label>Gecode::ActorLink</label>
        <link refid="classGecode_1_1ActorLink"/>
      </node>
      <node id="2085">
        <label>Gecode::Int::Linear::EqBoolInt&lt; VX &gt;</label>
        <link refid="classGecode_1_1Int_1_1Linear_1_1EqBoolInt"/>
        <childnode refid="2086" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2096">
        <label>Gecode::Council&lt; Gecode::Advisor &gt;</label>
        <link refid="classGecode_1_1Council"/>
      </node>
      <node id="2095">
        <label>Gecode::ViewArray&lt; VX &gt;</label>
        <link refid="classGecode_1_1ViewArray"/>
      </node>
      <node id="2092">
        <label>Gecode::Propagator</label>
        <link refid="classGecode_1_1Propagator"/>
        <childnode refid="2093" relation="public-inheritance">
        </childnode>
        <childnode refid="2094" relation="usage">
          <edgelabel>advisors</edgelabel>
        </childnode>
      </node>
      <node id="2091">
        <label>Gecode::Int::Linear::LinBoolInt&lt; VX &gt;</label>
        <link refid="classGecode_1_1Int_1_1Linear_1_1LinBoolInt"/>
        <childnode refid="2092" relation="public-inheritance">
        </childnode>
        <childnode refid="2095" relation="usage">
          <edgelabel>x</edgelabel>
        </childnode>
        <childnode refid="2096" relation="usage">
          <edgelabel>co</edgelabel>
        </childnode>
      </node>
      <node id="2093">
        <label>Gecode::Actor</label>
        <link refid="classGecode_1_1Actor"/>
        <childnode refid="2094" relation="private-inheritance">
        </childnode>
      </node>
      <node id="2094">
        <label>Gecode::ActorLink</label>
        <link refid="classGecode_1_1ActorLink"/>
      </node>
      <node id="2090">
        <label>Gecode::Int::Linear::EqBoolInt&lt; VX &gt;</label>
        <link refid="classGecode_1_1Int_1_1Linear_1_1EqBoolInt"/>
        <childnode refid="2091" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/usr/include/gecode/int/linear.hh" line="811" column="1" bodyfile="/usr/include/gecode/int/linear.hh" bodystart="811" bodyend="831"/>
    <listofallmembers>
      <member refid="classGecode_1_1Int_1_1Linear_1_1EqBoolInt_1ab2d83a914726a5cc568064b9d24b04d9" prot="public" virt="virtual"><scope>Gecode::Int::Linear::EqBoolInt</scope><name>advise</name></member>
      <member refid="classGecode_1_1Propagator_1afee33d8aed2bc9debee126f17b5015cf" prot="public" virt="non-virtual"><scope>Gecode::Int::Linear::EqBoolInt</scope><name>advisors</name></member>
      <member refid="classGecode_1_1Propagator_1a593de773d2204f47ea365a99df2f75d0" prot="public" virt="non-virtual"><scope>Gecode::Int::Linear::EqBoolInt</scope><name>afc</name></member>
      <member refid="classGecode_1_1Int_1_1Linear_1_1LinBoolInt_1a8536a4d55fc3191f427a67727b0c6a14" prot="protected" virt="non-virtual"><scope>Gecode::Int::Linear::EqBoolInt</scope><name>c</name></member>
      <member refid="classGecode_1_1ActorLink_1a8427f41a27a72b52ceb52d0fdad21063" prot="public" virt="non-virtual" ambiguityscope="Gecode::ActorLink::"><scope>Gecode::Int::Linear::EqBoolInt</scope><name>cast</name></member>
      <member refid="classGecode_1_1ActorLink_1a464526456db41981f82a1193a8b4e569" prot="public" virt="non-virtual" ambiguityscope="Gecode::ActorLink::"><scope>Gecode::Int::Linear::EqBoolInt</scope><name>cast</name></member>
      <member refid="classGecode_1_1Int_1_1Linear_1_1LinBoolInt_1ab33a71a959c8b299dee6d7f727d5202d" prot="protected" virt="non-virtual"><scope>Gecode::Int::Linear::EqBoolInt</scope><name>co</name></member>
      <member refid="classGecode_1_1Int_1_1Linear_1_1EqBoolInt_1ab398d7b666b20e936fb339b379919c51" prot="public" virt="virtual"><scope>Gecode::Int::Linear::EqBoolInt</scope><name>copy</name></member>
      <member refid="classGecode_1_1Int_1_1Linear_1_1LinBoolInt_1a0675f53206d2f4c588d421cb1537da70" prot="public" virt="virtual"><scope>Gecode::Int::Linear::EqBoolInt</scope><name>cost</name></member>
      <member refid="classGecode_1_1Int_1_1Linear_1_1LinBoolInt_1a873ddd4f064a4945c17ed5091b28eb6f" prot="public" virt="virtual"><scope>Gecode::Int::Linear::EqBoolInt</scope><name>dispose</name></member>
      <member refid="classGecode_1_1Int_1_1Linear_1_1EqBoolInt_1a007072258a9f2ef470798681616902b0" prot="protected" virt="non-virtual"><scope>Gecode::Int::Linear::EqBoolInt</scope><name>EqBoolInt</name></member>
      <member refid="classGecode_1_1Int_1_1Linear_1_1EqBoolInt_1a4e959b83943961993546327df87ca817" prot="protected" virt="non-virtual"><scope>Gecode::Int::Linear::EqBoolInt</scope><name>EqBoolInt</name></member>
      <member refid="classGecode_1_1Propagator_1a3b286c7aec9843b60a531b495015b5f7" prot="protected" virt="non-virtual"><scope>Gecode::Int::Linear::EqBoolInt</scope><name>fwd</name></member>
      <member refid="classGecode_1_1Int_1_1Linear_1_1LinBoolInt_1a14afb994235544bcce0967659d3251c4" prot="protected" virt="non-virtual"><scope>Gecode::Int::Linear::EqBoolInt</scope><name>LinBoolInt</name></member>
      <member refid="classGecode_1_1Int_1_1Linear_1_1LinBoolInt_1a0762145324195c29cdf9e573e4923b6c" prot="protected" virt="non-virtual"><scope>Gecode::Int::Linear::EqBoolInt</scope><name>LinBoolInt</name></member>
      <member refid="classGecode_1_1Propagator_1ae9dfa55e47e4ff8e0c8e4c2a6efdbfc0" prot="public" virt="non-virtual"><scope>Gecode::Int::Linear::EqBoolInt</scope><name>med</name></member>
      <member refid="classGecode_1_1Propagator_1a4905db55af49af8f38558bdbcf5fd4a2" prot="public" virt="non-virtual"><scope>Gecode::Int::Linear::EqBoolInt</scope><name>modeventdelta</name></member>
      <member refid="classGecode_1_1Int_1_1Linear_1_1LinBoolInt_1a2d94b2f2333e0ba73aa0c89c1bc56068" prot="protected" virt="non-virtual"><scope>Gecode::Int::Linear::EqBoolInt</scope><name>n_as</name></member>
      <member refid="classGecode_1_1Int_1_1Linear_1_1LinBoolInt_1ad83dc1f71482291a625a7f74d6eccefd" prot="protected" virt="non-virtual"><scope>Gecode::Int::Linear::EqBoolInt</scope><name>n_hs</name></member>
      <member refid="classGecode_1_1Int_1_1Linear_1_1LinBoolInt_1a8517973b26e64c472a2d41f0932425c8" prot="protected" virt="non-virtual"><scope>Gecode::Int::Linear::EqBoolInt</scope><name>normalize</name></member>
      <member refid="classGecode_1_1Actor_1a388f671145dcf906f81d22bde2dc0f3d" prot="public" virt="non-virtual"><scope>Gecode::Int::Linear::EqBoolInt</scope><name>operator delete</name></member>
      <member refid="classGecode_1_1Actor_1ac28b9601b530076a1bda75834487f898" prot="public" virt="non-virtual"><scope>Gecode::Int::Linear::EqBoolInt</scope><name>operator new</name></member>
      <member refid="classGecode_1_1Int_1_1Linear_1_1EqBoolInt_1aee2940dc1afd8f78d9a320960a0dabdc" prot="public" virt="non-virtual"><scope>Gecode::Int::Linear::EqBoolInt</scope><name>post</name></member>
      <member refid="classGecode_1_1Int_1_1Linear_1_1EqBoolInt_1ab1aa3df3da71a09a21dd96fdf21513fe" prot="public" virt="virtual"><scope>Gecode::Int::Linear::EqBoolInt</scope><name>propagate</name></member>
      <member refid="classGecode_1_1Propagator_1a891f3e84cde2e8e60f8ad9340ad74b05" prot="protected" virt="non-virtual"><scope>Gecode::Int::Linear::EqBoolInt</scope><name>Propagator</name></member>
      <member refid="classGecode_1_1Propagator_1afeaeed8dae67de4313858bd82fdae5d0" prot="protected" virt="non-virtual"><scope>Gecode::Int::Linear::EqBoolInt</scope><name>Propagator</name></member>
      <member refid="classGecode_1_1Propagator_1a1781b5b0df38c39dddca4b44c3a00530" prot="public" virt="non-virtual"><scope>Gecode::Int::Linear::EqBoolInt</scope><name>size</name></member>
      <member refid="classGecode_1_1Int_1_1Linear_1_1LinBoolInt_1af9e8e7b2291d38f37004e307b45fef2b" prot="protected" virt="non-virtual"><scope>Gecode::Int::Linear::EqBoolInt</scope><name>x</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
