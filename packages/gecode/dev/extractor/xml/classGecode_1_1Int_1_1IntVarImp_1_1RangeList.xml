<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classGecode_1_1Int_1_1IntVarImp_1_1RangeList" kind="class" prot="protected">
    <compoundname>Gecode::Int::IntVarImp::RangeList</compoundname>
    <basecompoundref refid="classGecode_1_1FreeList" prot="public" virt="non-virtual">Gecode::FreeList</basecompoundref>
    <includes refid="int_2var-imp_8hpp" local="no">var-imp.hpp</includes>
      <sectiondef kind="user-defined">
      <header>Constructors</header>
      <memberdef kind="function" id="classGecode_1_1Int_1_1IntVarImp_1_1RangeList_1a2e04fdb739a1cf5e376fdc0cfd9f96f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Int::IntVarImp::RangeList::RangeList</definition>
        <argsstring>(void)</argsstring>
        <name>RangeList</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Default constructor (noop) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/var-imp.hpp" line="114" column="1" bodyfile="/usr/include/gecode/int/var-imp/int.hpp" bodystart="53" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1IntVarImp_1_1RangeList_1aaa0766fa8ebfca5c3aeef082a8717df9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Int::IntVarImp::RangeList::RangeList</definition>
        <argsstring>(int min, int max)</argsstring>
        <name>RangeList</name>
        <param>
          <type>int</type>
          <declname>min</declname>
        </param>
        <param>
          <type>int</type>
          <declname>max</declname>
        </param>
        <briefdescription>
<para>Initialize with minimum <emphasis>min</emphasis> and maximum <emphasis>max</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/var-imp.hpp" line="116" column="1" bodyfile="/usr/include/gecode/int/var-imp/int.hpp" bodystart="56" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1IntVarImp_1_1RangeList_1ad91d3deb9bfe4117603260eba34bac04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Int::IntVarImp::RangeList::RangeList</definition>
        <argsstring>(int min, int max, RangeList *p, RangeList *n)</argsstring>
        <name>RangeList</name>
        <param>
          <type>int</type>
          <declname>min</declname>
        </param>
        <param>
          <type>int</type>
          <declname>max</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1IntVarImp_1_1RangeList" kindref="compound">RangeList</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1IntVarImp_1_1RangeList" kindref="compound">RangeList</ref> *</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Initialize with minimum <emphasis>min</emphasis> and maximum <emphasis>max</emphasis> and predecessor <emphasis>p</emphasis> and successor <emphasis>n</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/var-imp.hpp" line="118" column="1" bodyfile="/usr/include/gecode/int/var-imp/int.hpp" bodystart="60" bodyend="63"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Access</header>
      <memberdef kind="function" id="classGecode_1_1Int_1_1IntVarImp_1_1RangeList_1a02cbc09e587d0e6448582a20391dc51b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Int::IntVarImp::RangeList::min</definition>
        <argsstring>(void) const </argsstring>
        <name>min</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return minimum. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/var-imp.hpp" line="124" column="1" bodyfile="/usr/include/gecode/int/var-imp/int.hpp" bodystart="102" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1IntVarImp_1_1RangeList_1a55bb9c9bd6e67b7374fc6a2e4f712424" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Int::IntVarImp::RangeList::max</definition>
        <argsstring>(void) const </argsstring>
        <name>max</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return maximum. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/var-imp.hpp" line="126" column="1" bodyfile="/usr/include/gecode/int/var-imp/int.hpp" bodystart="106" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1IntVarImp_1_1RangeList_1ae0a2a1ff0e651cd6562da8dd821dc192" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>forceinline unsigned int Gecode::Int::IntVarImp::RangeList::width</definition>
        <argsstring>(void) const </argsstring>
        <name>width</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return width (distance between maximum and minimum) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/var-imp.hpp" line="128" column="1" bodyfile="/usr/include/gecode/int/var-imp/int.hpp" bodystart="110" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1IntVarImp_1_1RangeList_1afe19eb44cf879a84d63af032cfa2dba0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGecode_1_1Int_1_1IntVarImp_1_1RangeList" kindref="compound">RangeList</ref> *</type>
        <definition>forceinline IntVarImp::RangeList * Gecode::Int::IntVarImp::RangeList::next</definition>
        <argsstring>(const RangeList *p) const </argsstring>
        <name>next</name>
        <param>
          <type>const <ref refid="classGecode_1_1Int_1_1IntVarImp_1_1RangeList" kindref="compound">RangeList</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Return next element (from previous <emphasis>p</emphasis>) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/var-imp.hpp" line="131" column="1" bodyfile="/usr/include/gecode/int/var-imp/int.hpp" bodystart="66" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1IntVarImp_1_1RangeList_1a61f009ebb6f560a7662ffb9d9e446e4c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGecode_1_1Int_1_1IntVarImp_1_1RangeList" kindref="compound">RangeList</ref> *</type>
        <definition>forceinline IntVarImp::RangeList * Gecode::Int::IntVarImp::RangeList::prev</definition>
        <argsstring>(const RangeList *n) const </argsstring>
        <name>prev</name>
        <param>
          <type>const <ref refid="classGecode_1_1Int_1_1IntVarImp_1_1RangeList" kindref="compound">RangeList</ref> *</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Return previous element (from next <emphasis>n</emphasis>) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/var-imp.hpp" line="133" column="1" bodyfile="/usr/include/gecode/int/var-imp/int.hpp" bodystart="70" bodyend="72"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Update</header>
      <memberdef kind="function" id="classGecode_1_1Int_1_1IntVarImp_1_1RangeList_1a5324be6938d6815231bbccfc31e53bd6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Int::IntVarImp::RangeList::min</definition>
        <argsstring>(int n)</argsstring>
        <name>min</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para><ref refid="namespaceGecode_1_1Set" kindref="compound">Set</ref> minimum to <emphasis>n</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/var-imp.hpp" line="139" column="1" bodyfile="/usr/include/gecode/int/var-imp/int.hpp" bodystart="93" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1IntVarImp_1_1RangeList_1a74b5fa898843532a2565b143a71b6ba7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Int::IntVarImp::RangeList::max</definition>
        <argsstring>(int n)</argsstring>
        <name>max</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para><ref refid="namespaceGecode_1_1Set" kindref="compound">Set</ref> maximum to <emphasis>n</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/var-imp.hpp" line="141" column="1" bodyfile="/usr/include/gecode/int/var-imp/int.hpp" bodystart="97" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1IntVarImp_1_1RangeList_1a7e6a590657ab8ba63c3caf3437aeacd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Int::IntVarImp::RangeList::prevnext</definition>
        <argsstring>(RangeList *p, RangeList *n)</argsstring>
        <name>prevnext</name>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1IntVarImp_1_1RangeList" kindref="compound">RangeList</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1IntVarImp_1_1RangeList" kindref="compound">RangeList</ref> *</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para><ref refid="namespaceGecode_1_1Set" kindref="compound">Set</ref> previous element to <emphasis>p</emphasis> and next element to <emphasis>n</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/var-imp.hpp" line="144" column="1" bodyfile="/usr/include/gecode/int/var-imp/int.hpp" bodystart="74" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1IntVarImp_1_1RangeList_1aab15ec74b6aa596b4645291ec5ad669b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Int::IntVarImp::RangeList::next</definition>
        <argsstring>(RangeList *o, RangeList *n)</argsstring>
        <name>next</name>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1IntVarImp_1_1RangeList" kindref="compound">RangeList</ref> *</type>
          <declname>o</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1IntVarImp_1_1RangeList" kindref="compound">RangeList</ref> *</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para><ref refid="namespaceGecode_1_1Set" kindref="compound">Set</ref> next element from <emphasis>o</emphasis> to <emphasis>n</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/var-imp.hpp" line="146" column="1" bodyfile="/usr/include/gecode/int/var-imp/int.hpp" bodystart="78" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1IntVarImp_1_1RangeList_1a47df89bf9a9ce677f0bd85174b4ca758" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Int::IntVarImp::RangeList::prev</definition>
        <argsstring>(RangeList *o, RangeList *n)</argsstring>
        <name>prev</name>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1IntVarImp_1_1RangeList" kindref="compound">RangeList</ref> *</type>
          <declname>o</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1IntVarImp_1_1RangeList" kindref="compound">RangeList</ref> *</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para><ref refid="namespaceGecode_1_1Set" kindref="compound">Set</ref> previous element from <emphasis>o</emphasis> to <emphasis>n</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/var-imp.hpp" line="148" column="1" bodyfile="/usr/include/gecode/int/var-imp/int.hpp" bodystart="83" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1IntVarImp_1_1RangeList_1ae84f47eb240e4b3750ac8041407b7dd6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Int::IntVarImp::RangeList::fix</definition>
        <argsstring>(RangeList *n)</argsstring>
        <name>fix</name>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1IntVarImp_1_1RangeList" kindref="compound">RangeList</ref> *</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Restore simple link to next element (so that it becomes a true free list) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/var-imp.hpp" line="150" column="1" bodyfile="/usr/include/gecode/int/var-imp/int.hpp" bodystart="88" bodyend="90"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Memory management</header>
      <memberdef kind="function" id="classGecode_1_1Int_1_1IntVarImp_1_1RangeList_1a08341d345319693dcf1cd6509508de91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Int::IntVarImp::RangeList::dispose</definition>
        <argsstring>(Space &amp;home, RangeList *p, RangeList *l)</argsstring>
        <name>dispose</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1IntVarImp_1_1RangeList" kindref="compound">RangeList</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1IntVarImp_1_1RangeList" kindref="compound">RangeList</ref> *</type>
          <declname>l</declname>
        </param>
        <briefdescription>
<para>Free memory for all elements between this and <emphasis>l</emphasis> (inclusive) </para>        </briefdescription>
        <detaileddescription>
<para><emphasis>p</emphasis> must be the pointer to the previous element of <computeroutput>this</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/var-imp.hpp" line="160" column="1" bodyfile="/usr/include/gecode/int/var-imp/int.hpp" bodystart="138" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1IntVarImp_1_1RangeList_1a414dc109036add867d8c16dd8e8a422c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Int::IntVarImp::RangeList::dispose</definition>
        <argsstring>(Space &amp;home, RangeList *l)</argsstring>
        <name>dispose</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1IntVarImp_1_1RangeList" kindref="compound">RangeList</ref> *</type>
          <declname>l</declname>
        </param>
        <briefdescription>
<para>Free memory for all elements between this and <emphasis>l</emphasis> (inclusive) </para>        </briefdescription>
        <detaileddescription>
<para>This routine assumes that the list has already been fixed. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/var-imp.hpp" line="166" column="1" bodyfile="/usr/include/gecode/int/var-imp/int.hpp" bodystart="149" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1IntVarImp_1_1RangeList_1a749cff3e0d28f4bb9e578f32259f3731" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Int::IntVarImp::RangeList::dispose</definition>
        <argsstring>(Space &amp;home)</argsstring>
        <name>dispose</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <briefdescription>
<para>Free memory for this element. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/var-imp.hpp" line="168" column="1" bodyfile="/usr/include/gecode/int/var-imp/int.hpp" bodystart="154" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1IntVarImp_1_1RangeList_1a49c1625b35ada00cee72782b704afd35" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>forceinline void * Gecode::Int::IntVarImp::RangeList::operator new</definition>
        <argsstring>(size_t s, Space &amp;home)</argsstring>
        <name>operator new</name>
        <param>
          <type>size_t</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <briefdescription>
<para>Allocate memory from space. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/var-imp.hpp" line="171" column="1" bodyfile="/usr/include/gecode/int/var-imp/int.hpp" bodystart="128" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1IntVarImp_1_1RangeList_1a00f85f9d1570edb8ea9d6199b890cb57" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>forceinline void * Gecode::Int::IntVarImp::RangeList::operator new</definition>
        <argsstring>(size_t s, void *p)</argsstring>
        <name>operator new</name>
        <param>
          <type>size_t</type>
          <declname>s</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Placement new. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/var-imp.hpp" line="173" column="1" bodyfile="/usr/include/gecode/int/var-imp/int.hpp" bodystart="133" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1IntVarImp_1_1RangeList_1a68c5b81d2c0aeffdba9e025df87115e9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Int::IntVarImp::RangeList::operator delete</definition>
        <argsstring>(void *)</argsstring>
        <name>operator delete</name>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
<para>No-op (for exceptions) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/var-imp.hpp" line="175" column="1" bodyfile="/usr/include/gecode/int/var-imp/int.hpp" bodystart="116" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1IntVarImp_1_1RangeList_1aebb335e80f61132a13d02db14e64e642" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Int::IntVarImp::RangeList::operator delete</definition>
        <argsstring>(void *, Space &amp;)</argsstring>
        <name>operator delete</name>
        <param>
          <type>void *</type>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
        </param>
        <briefdescription>
<para>No-op (use dispose instead) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/var-imp.hpp" line="177" column="1" bodyfile="/usr/include/gecode/int/var-imp/int.hpp" bodystart="119" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1IntVarImp_1_1RangeList_1a04dde9254a1bea8021bfd8671bde3caf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Int::IntVarImp::RangeList::operator delete</definition>
        <argsstring>(void *, void *)</argsstring>
        <name>operator delete</name>
        <param>
          <type>void *</type>
        </param>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
<para>No-op (use dispose instead) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/var-imp.hpp" line="179" column="1" bodyfile="/usr/include/gecode/int/var-imp/int.hpp" bodystart="123" bodyend="125"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classGecode_1_1Int_1_1IntVarImp_1_1RangeList_1a3a02f8c7d44b5ba0f959cf7e96189d6d" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int Gecode::Int::IntVarImp::RangeList::_min</definition>
        <argsstring></argsstring>
        <name>_min</name>
        <briefdescription>
<para>Minimum of range. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/var-imp.hpp" line="107" column="1" bodyfile="/usr/include/gecode/int/var-imp.hpp" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Int_1_1IntVarImp_1_1RangeList_1a325a0e3327fe5fcfbf9f6180abc5ea6d" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int Gecode::Int::IntVarImp::RangeList::_max</definition>
        <argsstring></argsstring>
        <name>_max</name>
        <briefdescription>
<para>Maximum of range. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/var-imp.hpp" line="109" column="1" bodyfile="/usr/include/gecode/int/var-imp.hpp" bodystart="109" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Lists of ranges (intervals) </para>    </briefdescription>
    <detaileddescription>
<para>Range lists are doubly-linked storing the pointer to both the next and the previous element in a single pointer. That means that the next element is only available when the previous element is supplied as additional information. The same holds true for access to the previous element. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="5636">
        <label>Gecode::Int::IntVarImp::RangeList</label>
        <link refid="classGecode_1_1Int_1_1IntVarImp_1_1RangeList"/>
        <childnode refid="5637" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5637">
        <label>Gecode::FreeList</label>
        <link refid="classGecode_1_1FreeList"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5638">
        <label>Gecode::Int::IntVarImp::RangeList</label>
        <link refid="classGecode_1_1Int_1_1IntVarImp_1_1RangeList"/>
        <childnode refid="5639" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5639">
        <label>Gecode::FreeList</label>
        <link refid="classGecode_1_1FreeList"/>
        <childnode refid="5639" relation="usage">
          <edgelabel>_next</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/usr/include/gecode/int/var-imp.hpp" line="104" column="1" bodyfile="/usr/include/gecode/int/var-imp.hpp" bodystart="104" bodyend="181"/>
    <listofallmembers>
      <member refid="classGecode_1_1Int_1_1IntVarImp_1_1RangeList_1a325a0e3327fe5fcfbf9f6180abc5ea6d" prot="protected" virt="non-virtual"><scope>Gecode::Int::IntVarImp::RangeList</scope><name>_max</name></member>
      <member refid="classGecode_1_1Int_1_1IntVarImp_1_1RangeList_1a3a02f8c7d44b5ba0f959cf7e96189d6d" prot="protected" virt="non-virtual"><scope>Gecode::Int::IntVarImp::RangeList</scope><name>_min</name></member>
      <member refid="classGecode_1_1FreeList_1af9f8e4304c3b32d60120be64f51a6140" prot="protected" virt="non-virtual"><scope>Gecode::Int::IntVarImp::RangeList</scope><name>_next</name></member>
      <member refid="classGecode_1_1Int_1_1IntVarImp_1_1RangeList_1a08341d345319693dcf1cd6509508de91" prot="public" virt="non-virtual"><scope>Gecode::Int::IntVarImp::RangeList</scope><name>dispose</name></member>
      <member refid="classGecode_1_1Int_1_1IntVarImp_1_1RangeList_1a414dc109036add867d8c16dd8e8a422c" prot="public" virt="non-virtual"><scope>Gecode::Int::IntVarImp::RangeList</scope><name>dispose</name></member>
      <member refid="classGecode_1_1Int_1_1IntVarImp_1_1RangeList_1a749cff3e0d28f4bb9e578f32259f3731" prot="public" virt="non-virtual"><scope>Gecode::Int::IntVarImp::RangeList</scope><name>dispose</name></member>
      <member refid="classGecode_1_1Int_1_1IntVarImp_1_1RangeList_1ae84f47eb240e4b3750ac8041407b7dd6" prot="public" virt="non-virtual"><scope>Gecode::Int::IntVarImp::RangeList</scope><name>fix</name></member>
      <member refid="classGecode_1_1FreeList_1af1afc36981b813bf6aa84b9520692a23" prot="public" virt="non-virtual"><scope>Gecode::Int::IntVarImp::RangeList</scope><name>FreeList</name></member>
      <member refid="classGecode_1_1FreeList_1a46875b41d67aa1429d1e16be296a496e" prot="public" virt="non-virtual"><scope>Gecode::Int::IntVarImp::RangeList</scope><name>FreeList</name></member>
      <member refid="classGecode_1_1Int_1_1IntVarImp_1_1RangeList_1a55bb9c9bd6e67b7374fc6a2e4f712424" prot="public" virt="non-virtual"><scope>Gecode::Int::IntVarImp::RangeList</scope><name>max</name></member>
      <member refid="classGecode_1_1Int_1_1IntVarImp_1_1RangeList_1a74b5fa898843532a2565b143a71b6ba7" prot="public" virt="non-virtual"><scope>Gecode::Int::IntVarImp::RangeList</scope><name>max</name></member>
      <member refid="classGecode_1_1Int_1_1IntVarImp_1_1RangeList_1a02cbc09e587d0e6448582a20391dc51b" prot="public" virt="non-virtual"><scope>Gecode::Int::IntVarImp::RangeList</scope><name>min</name></member>
      <member refid="classGecode_1_1Int_1_1IntVarImp_1_1RangeList_1a5324be6938d6815231bbccfc31e53bd6" prot="public" virt="non-virtual"><scope>Gecode::Int::IntVarImp::RangeList</scope><name>min</name></member>
      <member refid="classGecode_1_1Int_1_1IntVarImp_1_1RangeList_1afe19eb44cf879a84d63af032cfa2dba0" prot="public" virt="non-virtual"><scope>Gecode::Int::IntVarImp::RangeList</scope><name>next</name></member>
      <member refid="classGecode_1_1Int_1_1IntVarImp_1_1RangeList_1aab15ec74b6aa596b4645291ec5ad669b" prot="public" virt="non-virtual"><scope>Gecode::Int::IntVarImp::RangeList</scope><name>next</name></member>
      <member refid="classGecode_1_1FreeList_1ab8373a79677d6628fafd49a76cf41cfe" prot="public" virt="non-virtual" ambiguityscope="Gecode::FreeList::"><scope>Gecode::Int::IntVarImp::RangeList</scope><name>next</name></member>
      <member refid="classGecode_1_1FreeList_1a6bcae4b5f7a4e613622abc7b5387a23f" prot="public" virt="non-virtual" ambiguityscope="Gecode::FreeList::"><scope>Gecode::Int::IntVarImp::RangeList</scope><name>next</name></member>
      <member refid="classGecode_1_1FreeList_1a9874d126df8911a0cd9c04d2bcb51e8f" prot="public" virt="non-virtual"><scope>Gecode::Int::IntVarImp::RangeList</scope><name>nextRef</name></member>
      <member refid="classGecode_1_1Int_1_1IntVarImp_1_1RangeList_1a68c5b81d2c0aeffdba9e025df87115e9" prot="public" virt="non-virtual"><scope>Gecode::Int::IntVarImp::RangeList</scope><name>operator delete</name></member>
      <member refid="classGecode_1_1Int_1_1IntVarImp_1_1RangeList_1aebb335e80f61132a13d02db14e64e642" prot="public" virt="non-virtual"><scope>Gecode::Int::IntVarImp::RangeList</scope><name>operator delete</name></member>
      <member refid="classGecode_1_1Int_1_1IntVarImp_1_1RangeList_1a04dde9254a1bea8021bfd8671bde3caf" prot="public" virt="non-virtual"><scope>Gecode::Int::IntVarImp::RangeList</scope><name>operator delete</name></member>
      <member refid="classGecode_1_1Int_1_1IntVarImp_1_1RangeList_1a49c1625b35ada00cee72782b704afd35" prot="public" virt="non-virtual"><scope>Gecode::Int::IntVarImp::RangeList</scope><name>operator new</name></member>
      <member refid="classGecode_1_1Int_1_1IntVarImp_1_1RangeList_1a00f85f9d1570edb8ea9d6199b890cb57" prot="public" virt="non-virtual"><scope>Gecode::Int::IntVarImp::RangeList</scope><name>operator new</name></member>
      <member refid="classGecode_1_1Int_1_1IntVarImp_1_1RangeList_1a61f009ebb6f560a7662ffb9d9e446e4c" prot="public" virt="non-virtual"><scope>Gecode::Int::IntVarImp::RangeList</scope><name>prev</name></member>
      <member refid="classGecode_1_1Int_1_1IntVarImp_1_1RangeList_1a47df89bf9a9ce677f0bd85174b4ca758" prot="public" virt="non-virtual"><scope>Gecode::Int::IntVarImp::RangeList</scope><name>prev</name></member>
      <member refid="classGecode_1_1Int_1_1IntVarImp_1_1RangeList_1a7e6a590657ab8ba63c3caf3437aeacd0" prot="public" virt="non-virtual"><scope>Gecode::Int::IntVarImp::RangeList</scope><name>prevnext</name></member>
      <member refid="classGecode_1_1Int_1_1IntVarImp_1_1RangeList_1a2e04fdb739a1cf5e376fdc0cfd9f96f3" prot="public" virt="non-virtual"><scope>Gecode::Int::IntVarImp::RangeList</scope><name>RangeList</name></member>
      <member refid="classGecode_1_1Int_1_1IntVarImp_1_1RangeList_1aaa0766fa8ebfca5c3aeef082a8717df9" prot="public" virt="non-virtual"><scope>Gecode::Int::IntVarImp::RangeList</scope><name>RangeList</name></member>
      <member refid="classGecode_1_1Int_1_1IntVarImp_1_1RangeList_1ad91d3deb9bfe4117603260eba34bac04" prot="public" virt="non-virtual"><scope>Gecode::Int::IntVarImp::RangeList</scope><name>RangeList</name></member>
      <member refid="classGecode_1_1Int_1_1IntVarImp_1_1RangeList_1ae0a2a1ff0e651cd6562da8dd821dc192" prot="public" virt="non-virtual"><scope>Gecode::Int::IntVarImp::RangeList</scope><name>width</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
