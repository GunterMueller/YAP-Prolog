<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classGecode_1_1Set_1_1BndSet" kind="class" prot="public">
    <compoundname>Gecode::Set::BndSet</compoundname>
    <derivedcompoundref refid="classGecode_1_1Set_1_1GLBndSet" prot="public" virt="non-virtual">Gecode::Set::GLBndSet</derivedcompoundref>
    <derivedcompoundref refid="classGecode_1_1Set_1_1LUBndSet" prot="public" virt="non-virtual">Gecode::Set::LUBndSet</derivedcompoundref>
    <includes refid="set_2var-imp_8hpp" local="no">var-imp.hpp</includes>
      <sectiondef kind="user-defined">
      <header>Constructors and initialization</header>
      <memberdef kind="function" id="classGecode_1_1Set_1_1BndSet_1a50cfb1606c03ac06cb3249ef96eefc34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Set::BndSet::BndSet</definition>
        <argsstring>(void)</argsstring>
        <name>BndSet</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Default constructor. Creates an empty set. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="121" column="1" bodyfile="/usr/include/gecode/set/var-imp/integerset.hpp" bodystart="50" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1BndSet_1aa26e3bfb7c95a8797cc574f5be59c33a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Set::BndSet::BndSet</definition>
        <argsstring>(Space &amp;home, int i, int j)</argsstring>
        <name>BndSet</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>Initialize as the set <formula id="391">$ \{i,\dots,j\}$</formula>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="123" column="1" bodyfile="/usr/include/gecode/set/var-imp/integerset.hpp" bodystart="80" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1BndSet_1aba21bb08ddc85b03192fb7c575e45cea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GECODE_SET_EXPORT</type>
        <definition>GECODE_SET_EXPORT Gecode::Set::BndSet::BndSet</definition>
        <argsstring>(Space &amp;home, const IntSet &amp;s)</argsstring>
        <name>BndSet</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1IntSet" kindref="compound">IntSet</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Initialize as the set represented by <emphasis>s</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="125" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Memory management</header>
      <memberdef kind="function" id="classGecode_1_1Set_1_1BndSet_1a4fd106aef04d3546920c07e0d94024de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Set::BndSet::dispose</definition>
        <argsstring>(Space &amp;home)</argsstring>
        <name>dispose</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <briefdescription>
<para>Free memory used by this set. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="131" column="1" bodyfile="/usr/include/gecode/set/var-imp/integerset.hpp" bodystart="64" bodyend="67"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Value access</header>
      <memberdef kind="function" id="classGecode_1_1Set_1_1BndSet_1af17f47c5c3582a9bd6fcd792b385bce4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Set::BndSet::min</definition>
        <argsstring>(void) const </argsstring>
        <name>min</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return smallest element. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="137" column="1" bodyfile="/usr/include/gecode/set/var-imp/integerset.hpp" bodystart="107" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1BndSet_1a8b6d498312183939e1d007ed614c61a1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Set::BndSet::max</definition>
        <argsstring>(void) const </argsstring>
        <name>max</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return greatest element. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="139" column="1" bodyfile="/usr/include/gecode/set/var-imp/integerset.hpp" bodystart="115" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1BndSet_1a287a236ac01b493edb81c654562c5998" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Set::BndSet::minN</definition>
        <argsstring>(unsigned int n) const </argsstring>
        <name>minN</name>
        <param>
          <type>unsigned int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Return <emphasis>n</emphasis> -th smallest element. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="141" column="1" bodyfile="/usr/include/gecode/set/var-imp/integerset.hpp" bodystart="124" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1BndSet_1a057b3dad3bb84170fe390ddfde1b993b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>forceinline unsigned int Gecode::Set::BndSet::size</definition>
        <argsstring>(void) const </argsstring>
        <name>size</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return size. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="143" column="1" bodyfile="/usr/include/gecode/set/var-imp/integerset.hpp" bodystart="97" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1BndSet_1a1929a70d68fc1cdabd40c07152f5a282" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>forceinline unsigned int Gecode::Set::BndSet::card</definition>
        <argsstring>(void) const </argsstring>
        <name>card</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return cardinality. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="145" column="1" bodyfile="/usr/include/gecode/set/var-imp/integerset.hpp" bodystart="134" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1BndSet_1af73a7b88485946bd51da2afbabf12745" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Set::BndSet::card</definition>
        <argsstring>(unsigned int c)</argsstring>
        <name>card</name>
        <param>
          <type>unsigned int</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para><ref refid="namespaceGecode_1_1Set" kindref="compound">Set</ref> cardinality. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="147" column="1" bodyfile="/usr/include/gecode/set/var-imp/integerset.hpp" bodystart="139" bodyend="141"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Tests</header>
      <memberdef kind="function" id="classGecode_1_1Set_1_1BndSet_1ac5a9db35697d947862965086081e59cd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::Set::BndSet::empty</definition>
        <argsstring>(void) const </argsstring>
        <name>empty</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test whether this set is empty. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="153" column="1" bodyfile="/usr/include/gecode/set/var-imp/integerset.hpp" bodystart="102" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1BndSet_1a488ecdc2ee45bd60d70088cc1b9f7642" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::Set::BndSet::in</definition>
        <argsstring>(int i) const </argsstring>
        <name>in</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Test whether <emphasis>i</emphasis> is an element of this set. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="155" column="1" bodyfile="/usr/include/gecode/set/var-imp/integerset.hpp" bodystart="228" bodyend="236"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Update operations</header>
      <memberdef kind="function" id="classGecode_1_1Set_1_1BndSet_1adce5e13c9b374e193a11efd0ebf3a133" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Set::BndSet::become</definition>
        <argsstring>(Space &amp;home, const BndSet &amp;s)</argsstring>
        <name>become</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1Set_1_1BndSet" kindref="compound">BndSet</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Make this set equal to <emphasis>s</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="161" column="1" bodyfile="/usr/include/gecode/set/var-imp/integerset.hpp" bodystart="215" bodyend="225"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Range list access for iteration</header>
      <memberdef kind="function" id="classGecode_1_1Set_1_1BndSet_1af77054b07e5f11f6e6559adf53b0d628" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGecode_1_1RangeList" kindref="compound">RangeList</ref> *</type>
        <definition>forceinline RangeList * Gecode::Set::BndSet::ranges</definition>
        <argsstring>(void) const </argsstring>
        <name>ranges</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return range list for iteration. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="167" column="1" bodyfile="/usr/include/gecode/set/var-imp/integerset.hpp" bodystart="92" bodyend="94"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Cloning</header>
      <memberdef kind="function" id="classGecode_1_1Set_1_1BndSet_1a4d00b2876d4c92e788b50cb927cf3751" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Set::BndSet::update</definition>
        <argsstring>(Space &amp;home, BndSet &amp;x)</argsstring>
        <name>update</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Set_1_1BndSet" kindref="compound">BndSet</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Update this set to be a clone of set <emphasis>x</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="178" column="1" bodyfile="/usr/include/gecode/set/var-imp/integerset.hpp" bodystart="144" bodyend="172"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classGecode_1_1Set_1_1BndSet_1a6f61703c4a072c7c9d9f56897c57ef27" prot="private" static="no" mutable="no">
        <type><ref refid="classGecode_1_1RangeList" kindref="compound">RangeList</ref> *</type>
        <definition>RangeList* Gecode::Set::BndSet::first</definition>
        <argsstring></argsstring>
        <name>first</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="95" column="1" bodyfile="/usr/include/gecode/set/var-imp.hpp" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Set_1_1BndSet_1ae2b24225f67fa02d1ae2ccf9ea80b457" prot="private" static="no" mutable="no">
        <type><ref refid="classGecode_1_1RangeList" kindref="compound">RangeList</ref> *</type>
        <definition>RangeList* Gecode::Set::BndSet::last</definition>
        <argsstring></argsstring>
        <name>last</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="96" column="1" bodyfile="/usr/include/gecode/set/var-imp.hpp" bodystart="96" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classGecode_1_1Set_1_1BndSet_1ae715626a62b4a66603127f4adfa460ad" prot="protected" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int Gecode::Set::BndSet::_size</definition>
        <argsstring></argsstring>
        <name>_size</name>
        <briefdescription>
<para>The size of this set. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="99" column="1" bodyfile="/usr/include/gecode/set/var-imp.hpp" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Set_1_1BndSet_1a72ac8c078e274e567020e180a6a2310c" prot="protected" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int Gecode::Set::BndSet::_card</definition>
        <argsstring></argsstring>
        <name>_card</name>
        <briefdescription>
<para>The cardinality this set represents. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="101" column="1" bodyfile="/usr/include/gecode/set/var-imp.hpp" bodystart="101" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classGecode_1_1Set_1_1BndSet_1a2a0b1c8d9863a9650eda7b1066d85943" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int Gecode::Set::BndSet::MAX_OF_EMPTY</definition>
        <argsstring></argsstring>
        <name>MAX_OF_EMPTY</name>
        <initializer>= <ref refid="namespaceGecode_1_1Set_1_1Limits_1a768af29a2cbf9eec75b4376b325f6cc4" kindref="member">Limits::min</ref>-1</initializer>
        <briefdescription>
<para>Returned by empty sets when asked for their maximum element. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="114" column="1" bodyfile="/usr/include/gecode/set/var-imp.hpp" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Set_1_1BndSet_1ac506e1f8224563cc4090b7465acbe14b" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int Gecode::Set::BndSet::MIN_OF_EMPTY</definition>
        <argsstring></argsstring>
        <name>MIN_OF_EMPTY</name>
        <initializer>= <ref refid="namespaceGecode_1_1Set_1_1Limits_1aa0057c6b80521aaf8485343580d0eed5" kindref="member">Limits::max</ref>+1</initializer>
        <briefdescription>
<para>Returned by empty sets when asked for their minimum element. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="116" column="1" bodyfile="/usr/include/gecode/set/var-imp.hpp" bodystart="116" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classGecode_1_1Set_1_1BndSet_1aba229e4bebf30696535787f7e8d0620f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Set::BndSet::fst</definition>
        <argsstring>(RangeList *r)</argsstring>
        <name>fst</name>
        <param>
          <type><ref refid="classGecode_1_1RangeList" kindref="compound">RangeList</ref> *</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para><ref refid="namespaceGecode_1_1Set" kindref="compound">Set</ref> first range to <emphasis>r</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="103" column="1" bodyfile="/usr/include/gecode/set/var-imp/integerset.hpp" bodystart="70" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1BndSet_1a56cd57a91cbc164ec0a711590898e7fd" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Set::BndSet::lst</definition>
        <argsstring>(RangeList *r)</argsstring>
        <name>lst</name>
        <param>
          <type><ref refid="classGecode_1_1RangeList" kindref="compound">RangeList</ref> *</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para><ref refid="namespaceGecode_1_1Set" kindref="compound">Set</ref> last range to <emphasis>r</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="105" column="1" bodyfile="/usr/include/gecode/set/var-imp/integerset.hpp" bodystart="75" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1BndSet_1a189c9b89cd5f5db7c6eb4bdbd4166987" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGecode_1_1RangeList" kindref="compound">RangeList</ref> *</type>
        <definition>forceinline RangeList * Gecode::Set::BndSet::fst</definition>
        <argsstring>(void) const </argsstring>
        <name>fst</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return first range. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="108" column="1" bodyfile="/usr/include/gecode/set/var-imp/integerset.hpp" bodystart="54" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1BndSet_1aff28c7071c8b7b38132f7e1b6a8182cc" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGecode_1_1RangeList" kindref="compound">RangeList</ref> *</type>
        <definition>forceinline RangeList * Gecode::Set::BndSet::lst</definition>
        <argsstring>(void) const </argsstring>
        <name>lst</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return last range. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="110" column="1" bodyfile="/usr/include/gecode/set/var-imp/integerset.hpp" bodystart="59" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1BndSet_1a21fab9ef2a20ebaa3230c1d59a641059" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool Gecode::Set::BndSet::overwrite</definition>
        <argsstring>(Space &amp;home, I &amp;i)</argsstring>
        <name>overwrite</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>I &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Overwrite the ranges with those represented by <emphasis>i</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="172" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classGecode_1_1Set_1_1BndSet_1ad5fc6491a5d55b3668c42dba6d40a612" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>GECODE_SET_EXPORT bool</type>
        <definition>GECODE_SET_EXPORT bool Gecode::Set::BndSet::isConsistent</definition>
        <argsstring>(void) const </argsstring>
        <name>isConsistent</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Check whether internal invariants hold. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp.hpp" line="182" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1BndSet_1a77563f5392ef37fe539c07702cbb429d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type>forceinline bool</type>
        <definition>forceinline bool Gecode::Set::BndSet::overwrite</definition>
        <argsstring>(Space &amp;home, I &amp;ri)</argsstring>
        <name>overwrite</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>I &amp;</type>
          <declname>ri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/var-imp/integerset.hpp" line="175" column="1" bodyfile="/usr/include/gecode/set/var-imp/integerset.hpp" bodystart="175" bodyend="212"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Sets of integers. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1161">
        <label>Gecode::Set::BndSet</label>
        <link refid="classGecode_1_1Set_1_1BndSet"/>
      </node>
      <node id="1163">
        <label>Gecode::Set::LUBndSet</label>
        <link refid="classGecode_1_1Set_1_1LUBndSet"/>
        <childnode refid="1161" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1162">
        <label>Gecode::Set::GLBndSet</label>
        <link refid="classGecode_1_1Set_1_1GLBndSet"/>
        <childnode refid="1161" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/usr/include/gecode/set/var-imp.hpp" line="93" column="1" bodyfile="/usr/include/gecode/set/var-imp.hpp" bodystart="93" bodyend="183"/>
    <listofallmembers>
      <member refid="classGecode_1_1Set_1_1BndSet_1a72ac8c078e274e567020e180a6a2310c" prot="protected" virt="non-virtual"><scope>Gecode::Set::BndSet</scope><name>_card</name></member>
      <member refid="classGecode_1_1Set_1_1BndSet_1ae715626a62b4a66603127f4adfa460ad" prot="protected" virt="non-virtual"><scope>Gecode::Set::BndSet</scope><name>_size</name></member>
      <member refid="classGecode_1_1Set_1_1BndSet_1adce5e13c9b374e193a11efd0ebf3a133" prot="public" virt="non-virtual"><scope>Gecode::Set::BndSet</scope><name>become</name></member>
      <member refid="classGecode_1_1Set_1_1BndSet_1a50cfb1606c03ac06cb3249ef96eefc34" prot="public" virt="non-virtual"><scope>Gecode::Set::BndSet</scope><name>BndSet</name></member>
      <member refid="classGecode_1_1Set_1_1BndSet_1aa26e3bfb7c95a8797cc574f5be59c33a" prot="public" virt="non-virtual"><scope>Gecode::Set::BndSet</scope><name>BndSet</name></member>
      <member refid="classGecode_1_1Set_1_1BndSet_1aba21bb08ddc85b03192fb7c575e45cea" prot="public" virt="non-virtual"><scope>Gecode::Set::BndSet</scope><name>BndSet</name></member>
      <member refid="classGecode_1_1Set_1_1BndSet_1a1929a70d68fc1cdabd40c07152f5a282" prot="public" virt="non-virtual"><scope>Gecode::Set::BndSet</scope><name>card</name></member>
      <member refid="classGecode_1_1Set_1_1BndSet_1af73a7b88485946bd51da2afbabf12745" prot="public" virt="non-virtual"><scope>Gecode::Set::BndSet</scope><name>card</name></member>
      <member refid="classGecode_1_1Set_1_1BndSet_1a4fd106aef04d3546920c07e0d94024de" prot="public" virt="non-virtual"><scope>Gecode::Set::BndSet</scope><name>dispose</name></member>
      <member refid="classGecode_1_1Set_1_1BndSet_1ac5a9db35697d947862965086081e59cd" prot="public" virt="non-virtual"><scope>Gecode::Set::BndSet</scope><name>empty</name></member>
      <member refid="classGecode_1_1Set_1_1BndSet_1a6f61703c4a072c7c9d9f56897c57ef27" prot="private" virt="non-virtual"><scope>Gecode::Set::BndSet</scope><name>first</name></member>
      <member refid="classGecode_1_1Set_1_1BndSet_1aba229e4bebf30696535787f7e8d0620f" prot="protected" virt="non-virtual"><scope>Gecode::Set::BndSet</scope><name>fst</name></member>
      <member refid="classGecode_1_1Set_1_1BndSet_1a189c9b89cd5f5db7c6eb4bdbd4166987" prot="protected" virt="non-virtual"><scope>Gecode::Set::BndSet</scope><name>fst</name></member>
      <member refid="classGecode_1_1Set_1_1BndSet_1a488ecdc2ee45bd60d70088cc1b9f7642" prot="public" virt="non-virtual"><scope>Gecode::Set::BndSet</scope><name>in</name></member>
      <member refid="classGecode_1_1Set_1_1BndSet_1ad5fc6491a5d55b3668c42dba6d40a612" prot="public" virt="non-virtual"><scope>Gecode::Set::BndSet</scope><name>isConsistent</name></member>
      <member refid="classGecode_1_1Set_1_1BndSet_1ae2b24225f67fa02d1ae2ccf9ea80b457" prot="private" virt="non-virtual"><scope>Gecode::Set::BndSet</scope><name>last</name></member>
      <member refid="classGecode_1_1Set_1_1BndSet_1a56cd57a91cbc164ec0a711590898e7fd" prot="protected" virt="non-virtual"><scope>Gecode::Set::BndSet</scope><name>lst</name></member>
      <member refid="classGecode_1_1Set_1_1BndSet_1aff28c7071c8b7b38132f7e1b6a8182cc" prot="protected" virt="non-virtual"><scope>Gecode::Set::BndSet</scope><name>lst</name></member>
      <member refid="classGecode_1_1Set_1_1BndSet_1a8b6d498312183939e1d007ed614c61a1" prot="public" virt="non-virtual"><scope>Gecode::Set::BndSet</scope><name>max</name></member>
      <member refid="classGecode_1_1Set_1_1BndSet_1a2a0b1c8d9863a9650eda7b1066d85943" prot="public" virt="non-virtual"><scope>Gecode::Set::BndSet</scope><name>MAX_OF_EMPTY</name></member>
      <member refid="classGecode_1_1Set_1_1BndSet_1af17f47c5c3582a9bd6fcd792b385bce4" prot="public" virt="non-virtual"><scope>Gecode::Set::BndSet</scope><name>min</name></member>
      <member refid="classGecode_1_1Set_1_1BndSet_1ac506e1f8224563cc4090b7465acbe14b" prot="public" virt="non-virtual"><scope>Gecode::Set::BndSet</scope><name>MIN_OF_EMPTY</name></member>
      <member refid="classGecode_1_1Set_1_1BndSet_1a287a236ac01b493edb81c654562c5998" prot="public" virt="non-virtual"><scope>Gecode::Set::BndSet</scope><name>minN</name></member>
      <member refid="classGecode_1_1Set_1_1BndSet_1a21fab9ef2a20ebaa3230c1d59a641059" prot="protected" virt="non-virtual"><scope>Gecode::Set::BndSet</scope><name>overwrite</name></member>
      <member refid="classGecode_1_1Set_1_1BndSet_1a77563f5392ef37fe539c07702cbb429d" prot="public" virt="non-virtual"><scope>Gecode::Set::BndSet</scope><name>overwrite</name></member>
      <member refid="classGecode_1_1Set_1_1BndSet_1af77054b07e5f11f6e6559adf53b0d628" prot="public" virt="non-virtual"><scope>Gecode::Set::BndSet</scope><name>ranges</name></member>
      <member refid="classGecode_1_1Set_1_1BndSet_1a057b3dad3bb84170fe390ddfde1b993b" prot="public" virt="non-virtual"><scope>Gecode::Set::BndSet</scope><name>size</name></member>
      <member refid="classGecode_1_1Set_1_1BndSet_1a4d00b2876d4c92e788b50cb927cf3751" prot="public" virt="non-virtual"><scope>Gecode::Set::BndSet</scope><name>update</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
