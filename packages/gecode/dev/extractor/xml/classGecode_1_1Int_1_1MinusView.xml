<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classGecode_1_1Int_1_1MinusView" kind="class" prot="public">
    <compoundname>Gecode::Int::MinusView</compoundname>
    <basecompoundref refid="classGecode_1_1DerivedView" prot="public" virt="non-virtual">Gecode::DerivedView&lt; IntView &gt;</basecompoundref>
    <includes refid="int_2view_8hpp" local="no">view.hpp</includes>
      <sectiondef kind="user-defined">
      <header>Constructors and initialization</header>
      <memberdef kind="function" id="classGecode_1_1Int_1_1MinusView_1a831122ad45eebc7751f24a06a2a57ad5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Int::MinusView::MinusView</definition>
        <argsstring>(void)</argsstring>
        <name>MinusView</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="283" column="1" bodyfile="/usr/include/gecode/int/view/minus.hpp" bodystart="45" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1MinusView_1a2c6dc981d4a0122fee2882920cb1fc70" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Int::MinusView::MinusView</definition>
        <argsstring>(const IntView &amp;y)</argsstring>
        <name>MinusView</name>
        <param>
          <type>const <ref refid="classGecode_1_1Int_1_1IntView" kindref="compound">IntView</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Initialize with integer view <emphasis>y</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="285" column="1" bodyfile="/usr/include/gecode/int/view/minus.hpp" bodystart="47" bodyend="48"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Value access</header>
      <memberdef kind="function" id="classGecode_1_1Int_1_1MinusView_1ae09e4a55b35135b15ab27fc95bcfeccf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Int::MinusView::min</definition>
        <argsstring>(void) const </argsstring>
        <name>min</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return minimum of domain. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="291" column="1" bodyfile="/usr/include/gecode/int/view/minus.hpp" bodystart="56" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1MinusView_1ac6a086e4b74799f2c9a006023ea4e5ec" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Int::MinusView::max</definition>
        <argsstring>(void) const </argsstring>
        <name>max</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return maximum of domain. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="293" column="1" bodyfile="/usr/include/gecode/int/view/minus.hpp" bodystart="60" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1MinusView_1aeecc6df29dc7164b4c37b6fcbdba1182" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Gecode::Int::MinusView::med</definition>
        <argsstring>(void) const </argsstring>
        <name>med</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return median of domain. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="295" column="1" bodyfile="/usr/include/gecode/int/view/minus.hpp" bodystart="287" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1MinusView_1a27ba55d1de66bdeb48e3d4b41aa75253" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Int::MinusView::val</definition>
        <argsstring>(void) const </argsstring>
        <name>val</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return assigned value (only if assigned) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="297" column="1" bodyfile="/usr/include/gecode/int/view/minus.hpp" bodystart="64" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1MinusView_1a0fc7576acdbc97ed8549404978db034e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>forceinline unsigned int Gecode::Int::MinusView::size</definition>
        <argsstring>(void) const </argsstring>
        <name>size</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return size (cardinality) of domain. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="300" column="1" bodyfile="/usr/include/gecode/int/view/minus.hpp" bodystart="73" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1MinusView_1ab269a5cc966b84745615b3f99efafa50" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>forceinline unsigned int Gecode::Int::MinusView::width</definition>
        <argsstring>(void) const </argsstring>
        <name>width</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return width of domain (distance between maximum and minimum) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="302" column="1" bodyfile="/usr/include/gecode/int/view/minus.hpp" bodystart="69" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1MinusView_1a4731d8f3ea596df4ce52df37cffa02f8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>forceinline unsigned int Gecode::Int::MinusView::regret_min</definition>
        <argsstring>(void) const </argsstring>
        <name>regret_min</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return regret of domain minimum (distance to next larger value) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="304" column="1" bodyfile="/usr/include/gecode/int/view/minus.hpp" bodystart="77" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1MinusView_1abdb77971d6620205008599c4badfaa51" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>forceinline unsigned int Gecode::Int::MinusView::regret_max</definition>
        <argsstring>(void) const </argsstring>
        <name>regret_max</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return regret of domain maximum (distance to next smaller value) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="306" column="1" bodyfile="/usr/include/gecode/int/view/minus.hpp" bodystart="81" bodyend="83"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Domain tests</header>
      <memberdef kind="function" id="classGecode_1_1Int_1_1MinusView_1acc72f60e3440bdc4ddec9f9db9a11dda" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::Int::MinusView::range</definition>
        <argsstring>(void) const </argsstring>
        <name>range</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test whether domain is a range. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="312" column="1" bodyfile="/usr/include/gecode/int/view/minus.hpp" bodystart="91" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1MinusView_1a044a55a1b4a6924ec036e6c92daf8574" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::Int::MinusView::in</definition>
        <argsstring>(int n) const </argsstring>
        <name>in</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Test whether <emphasis>n</emphasis> is contained in domain. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="315" column="1" bodyfile="/usr/include/gecode/int/view/minus.hpp" bodystart="95" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1MinusView_1a235046e78f5831626804eca94fe38391" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::Int::MinusView::in</definition>
        <argsstring>(long long int n) const </argsstring>
        <name>in</name>
        <param>
          <type>long long int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Test whether <emphasis>n</emphasis> is contained in domain. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="317" column="1" bodyfile="/usr/include/gecode/int/view/minus.hpp" bodystart="99" bodyend="101"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Domain update by value</header>
      <memberdef kind="function" id="classGecode_1_1Int_1_1MinusView_1aaaf401587c6ee367103a91fd224769fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Int::MinusView::lq</definition>
        <argsstring>(Space &amp;home, int n)</argsstring>
        <name>lq</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Restrict domain values to be less or equal than <emphasis>n</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="323" column="1" bodyfile="/usr/include/gecode/int/view/minus.hpp" bodystart="109" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1MinusView_1a98fb44270c1b7af8659a00259cea8bd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Int::MinusView::lq</definition>
        <argsstring>(Space &amp;home, long long int n)</argsstring>
        <name>lq</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>long long int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Restrict domain values to be less or equal than <emphasis>n</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="325" column="1" bodyfile="/usr/include/gecode/int/view/minus.hpp" bodystart="113" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1MinusView_1ac02fdc1b0ff0129982cd6d0865fdc6c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Int::MinusView::le</definition>
        <argsstring>(Space &amp;home, int n)</argsstring>
        <name>le</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Restrict domain values to be less than <emphasis>n</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="328" column="1" bodyfile="/usr/include/gecode/int/view/minus.hpp" bodystart="118" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1MinusView_1a8de0afb488ebbea5692231403d99fbb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Int::MinusView::le</definition>
        <argsstring>(Space &amp;home, long long int n)</argsstring>
        <name>le</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>long long int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Restrict domain values to be less than <emphasis>n</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="330" column="1" bodyfile="/usr/include/gecode/int/view/minus.hpp" bodystart="122" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1MinusView_1ad214c5a7a2336fb381000420ec07ea29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Int::MinusView::gq</definition>
        <argsstring>(Space &amp;home, int n)</argsstring>
        <name>gq</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Restrict domain values to be greater or equal than <emphasis>n</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="333" column="1" bodyfile="/usr/include/gecode/int/view/minus.hpp" bodystart="127" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1MinusView_1adeeb6889a882c83cf6fde47d9e200ab2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Int::MinusView::gq</definition>
        <argsstring>(Space &amp;home, long long int n)</argsstring>
        <name>gq</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>long long int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Restrict domain values to be greater or equal than <emphasis>n</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="335" column="1" bodyfile="/usr/include/gecode/int/view/minus.hpp" bodystart="131" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1MinusView_1a3e02b86a12df11500aebf331bfe7b7a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Int::MinusView::gr</definition>
        <argsstring>(Space &amp;home, int n)</argsstring>
        <name>gr</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Restrict domain values to be greater than <emphasis>n</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="338" column="1" bodyfile="/usr/include/gecode/int/view/minus.hpp" bodystart="136" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1MinusView_1a684268a47c01abbb38ff4e2658b3a7b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Int::MinusView::gr</definition>
        <argsstring>(Space &amp;home, long long int n)</argsstring>
        <name>gr</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>long long int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Restrict domain values to be greater than <emphasis>n</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="340" column="1" bodyfile="/usr/include/gecode/int/view/minus.hpp" bodystart="140" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1MinusView_1abc17f3e9b5218de100b9c2f5d4657301" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Int::MinusView::nq</definition>
        <argsstring>(Space &amp;home, int n)</argsstring>
        <name>nq</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Restrict domain values to be different from <emphasis>n</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="343" column="1" bodyfile="/usr/include/gecode/int/view/minus.hpp" bodystart="145" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1MinusView_1a26a3f10017ea13fbd74d136ee6f06a41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Int::MinusView::nq</definition>
        <argsstring>(Space &amp;home, long long int n)</argsstring>
        <name>nq</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>long long int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Restrict domain values to be different from <emphasis>n</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="345" column="1" bodyfile="/usr/include/gecode/int/view/minus.hpp" bodystart="149" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1MinusView_1a3fbe1a9aa9d7bdd93b5ca15690f72e93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Int::MinusView::eq</definition>
        <argsstring>(Space &amp;home, int n)</argsstring>
        <name>eq</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Restrict domain values to be equal to <emphasis>n</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="348" column="1" bodyfile="/usr/include/gecode/int/view/minus.hpp" bodystart="154" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1MinusView_1aac489d747fe903002cd4c9168be1df92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Int::MinusView::eq</definition>
        <argsstring>(Space &amp;home, long long int n)</argsstring>
        <name>eq</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>long long int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Restrict domain values to be equal to <emphasis>n</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="350" column="1" bodyfile="/usr/include/gecode/int/view/minus.hpp" bodystart="158" bodyend="160"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Domain update by iterator</header>
      <description><para>Views can be both updated by range and value iterators. Value iterators do not need to be strict in that the same value is allowed to occur more than once in the iterated sequence.</para><para>The argument <emphasis>depends</emphasis> must be true, if the iterator passed as argument depends on the view on which the operation is invoked. In this case, the view is only updated after the iterator has been consumed. Otherwise, the domain might be updated concurrently while following the iterator. </para></description>
      <memberdef kind="function" id="classGecode_1_1Int_1_1MinusView_1acb8e7b05dcc9b4973a939ead9ca1ca70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>ModEvent Gecode::Int::MinusView::narrow_r</definition>
        <argsstring>(Space &amp;home, I &amp;i, bool depends=true)</argsstring>
        <name>narrow_r</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>I &amp;</type>
          <declname>i</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>depends</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Replace domain by ranges described by <emphasis>i</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="370" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1MinusView_1aae9186671617e792b298dfde4d160ea0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>ModEvent Gecode::Int::MinusView::inter_r</definition>
        <argsstring>(Space &amp;home, I &amp;i, bool depends=true)</argsstring>
        <name>inter_r</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>I &amp;</type>
          <declname>i</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>depends</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Intersect domain with ranges described by <emphasis>i</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="373" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1MinusView_1a6a8764298a5543c7ab1e91647b2dc7ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>ModEvent Gecode::Int::MinusView::minus_r</definition>
        <argsstring>(Space &amp;home, I &amp;i, bool depends=true)</argsstring>
        <name>minus_r</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>I &amp;</type>
          <declname>i</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>depends</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Remove from domain the ranges described by <emphasis>i</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="376" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1MinusView_1a04d38d5547e066992e14428bfd7d8a2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>ModEvent Gecode::Int::MinusView::narrow_v</definition>
        <argsstring>(Space &amp;home, I &amp;i, bool depends=true)</argsstring>
        <name>narrow_v</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>I &amp;</type>
          <declname>i</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>depends</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Replace domain by values described by <emphasis>i</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="379" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1MinusView_1a8e00647e5bd9182ddbad31ee030310f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>ModEvent Gecode::Int::MinusView::inter_v</definition>
        <argsstring>(Space &amp;home, I &amp;i, bool depends=true)</argsstring>
        <name>inter_v</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>I &amp;</type>
          <declname>i</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>depends</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Intersect domain with values described by <emphasis>i</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="382" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1MinusView_1ad5cefe62abdf044659e6acd3e1483287" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>ModEvent Gecode::Int::MinusView::minus_v</definition>
        <argsstring>(Space &amp;home, I &amp;i, bool depends=true)</argsstring>
        <name>minus_v</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>I &amp;</type>
          <declname>i</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>depends</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Remove from domain the values described by <emphasis>i</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="385" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>View-dependent propagator support</header>
      <memberdef kind="function" id="classGecode_1_1Int_1_1MinusView_1a75bb0f4cddff06dffe652f8137517df6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceGecode_1a129e41c1d037528010d7b6706495a560" kindref="member">ModEventDelta</ref></type>
        <definition>forceinline ModEventDelta Gecode::Int::MinusView::med</definition>
        <argsstring>(ModEvent me)</argsstring>
        <name>med</name>
        <param>
          <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
          <declname>me</declname>
        </param>
        <briefdescription>
<para>Translate modification event <emphasis>me</emphasis> to modification event delta for view. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="391" column="1" bodyfile="/usr/include/gecode/int/view/minus.hpp" bodystart="216" bodyend="218"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Delta information for advisors</header>
      <memberdef kind="function" id="classGecode_1_1Int_1_1MinusView_1add8d5b51e9a796ef99633470e87e9bc0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Int::MinusView::min</definition>
        <argsstring>(const Delta &amp;d) const </argsstring>
        <name>min</name>
        <param>
          <type>const <ref refid="classGecode_1_1Delta" kindref="compound">Delta</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Return minimum value just pruned. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="397" column="1" bodyfile="/usr/include/gecode/int/view/minus.hpp" bodystart="226" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1MinusView_1a54a8c866fed356be5a01cf3d587b4d62" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Int::MinusView::max</definition>
        <argsstring>(const Delta &amp;d) const </argsstring>
        <name>max</name>
        <param>
          <type>const <ref refid="classGecode_1_1Delta" kindref="compound">Delta</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Return maximum value just pruned. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="399" column="1" bodyfile="/usr/include/gecode/int/view/minus.hpp" bodystart="230" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1MinusView_1a438e93d8c5a1eae85232362e0eec70fd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::Int::MinusView::any</definition>
        <argsstring>(const Delta &amp;d) const </argsstring>
        <name>any</name>
        <param>
          <type>const <ref refid="classGecode_1_1Delta" kindref="compound">Delta</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Test whether arbitrary values got pruned. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="401" column="1" bodyfile="/usr/include/gecode/int/view/minus.hpp" bodystart="234" bodyend="236"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classGecode_1_1Int_1_1MinusView_1a2dfff135ffdc44b118e5da57c8fba9db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type>forceinline <ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Int::MinusView::narrow_r</definition>
        <argsstring>(Space &amp;home, I &amp;i, bool)</argsstring>
        <name>narrow_r</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>I &amp;</type>
          <declname>i</declname>
        </param>
        <param>
          <type>bool</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view/minus.hpp" line="169" column="1" bodyfile="/usr/include/gecode/int/view/minus.hpp" bodystart="169" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1MinusView_1a8eb5c70c270b024d8f7f9b7290b34631" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type>forceinline <ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Int::MinusView::inter_r</definition>
        <argsstring>(Space &amp;home, I &amp;i, bool)</argsstring>
        <name>inter_r</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>I &amp;</type>
          <declname>i</declname>
        </param>
        <param>
          <type>bool</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view/minus.hpp" line="176" column="1" bodyfile="/usr/include/gecode/int/view/minus.hpp" bodystart="176" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1MinusView_1ae7e0b93120e9b3358369e2f9acbee5ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type>forceinline <ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Int::MinusView::minus_r</definition>
        <argsstring>(Space &amp;home, I &amp;i, bool)</argsstring>
        <name>minus_r</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>I &amp;</type>
          <declname>i</declname>
        </param>
        <param>
          <type>bool</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view/minus.hpp" line="183" column="1" bodyfile="/usr/include/gecode/int/view/minus.hpp" bodystart="183" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1MinusView_1a840c0e7ed7b8ee52ad865955d7b235ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type>forceinline <ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Int::MinusView::narrow_v</definition>
        <argsstring>(Space &amp;home, I &amp;i, bool)</argsstring>
        <name>narrow_v</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>I &amp;</type>
          <declname>i</declname>
        </param>
        <param>
          <type>bool</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view/minus.hpp" line="190" column="1" bodyfile="/usr/include/gecode/int/view/minus.hpp" bodystart="190" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1MinusView_1a85df7ed16cb83fcb1fdcf4e647cb066c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type>forceinline <ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Int::MinusView::inter_v</definition>
        <argsstring>(Space &amp;home, I &amp;i, bool)</argsstring>
        <name>inter_v</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>I &amp;</type>
          <declname>i</declname>
        </param>
        <param>
          <type>bool</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view/minus.hpp" line="197" column="1" bodyfile="/usr/include/gecode/int/view/minus.hpp" bodystart="197" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1MinusView_1a1491c7841742296196fb4cad687ae967" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type>forceinline <ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Int::MinusView::minus_v</definition>
        <argsstring>(Space &amp;home, I &amp;i, bool)</argsstring>
        <name>minus_v</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>I &amp;</type>
          <declname>i</declname>
        </param>
        <param>
          <type>bool</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view/minus.hpp" line="204" column="1" bodyfile="/usr/include/gecode/int/view/minus.hpp" bodystart="204" bodyend="208"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="related">
      <memberdef kind="function" id="classGecode_1_1Int_1_1MinusView_1a0ecf46ed6aaeb1e5b1032f8341fe0840" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Char</type>
          </param>
          <param>
            <type>class Traits</type>
          </param>
        </templateparamlist>
        <type>std::basic_ostream&lt; Char, Traits &gt; &amp;</type>
        <definition>std::basic_ostream&lt; Char, Traits &gt; &amp; operator&lt;&lt;</definition>
        <argsstring>(std::basic_ostream&lt; Char, Traits &gt; &amp;os, const MinusView &amp;x)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::basic_ostream&lt; Char, Traits &gt; &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1Int_1_1MinusView" kindref="compound">MinusView</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Print integer minus view. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/view.hpp" line="103" column="1" bodyfile="/usr/include/gecode/int/view/print.hpp" bodystart="102" bodyend="104"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Minus integer view. </para>    </briefdescription>
    <detaileddescription>
<para>A minus integer view <formula id="30">$m$</formula> for an integer view <formula id="31">$x$</formula> provides operations such that <formula id="30">$m$</formula> behaves as <formula id="32">$-x$</formula>. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="4036">
        <label>Gecode::Int::MinusView</label>
        <link refid="classGecode_1_1Int_1_1MinusView"/>
        <childnode refid="4037" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4037">
        <label>Gecode::DerivedView&lt; IntView &gt;</label>
        <link refid="classGecode_1_1DerivedView"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4040">
        <label>Gecode::Int::IntView</label>
        <link refid="classGecode_1_1Int_1_1IntView"/>
        <childnode refid="4041" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4038">
        <label>Gecode::Int::MinusView</label>
        <link refid="classGecode_1_1Int_1_1MinusView"/>
        <childnode refid="4039" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4041">
        <label>Gecode::VarImpView&lt; IntVar &gt;</label>
        <link refid="classGecode_1_1VarImpView"/>
      </node>
      <node id="4039">
        <label>Gecode::DerivedView&lt; IntView &gt;</label>
        <link refid="classGecode_1_1DerivedView"/>
        <childnode refid="4040" relation="usage">
          <edgelabel>x</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/usr/include/gecode/int/view.hpp" line="276" column="1" bodyfile="/usr/include/gecode/int/view.hpp" bodystart="276" bodyend="403"/>
    <listofallmembers>
      <member refid="classGecode_1_1DerivedView_1a8af1ef9d834817687d07b24073bb11cb" prot="public" virt="non-virtual"><scope>Gecode::Int::MinusView</scope><name>afc</name></member>
      <member refid="classGecode_1_1Int_1_1MinusView_1a438e93d8c5a1eae85232362e0eec70fd" prot="public" virt="non-virtual"><scope>Gecode::Int::MinusView</scope><name>any</name></member>
      <member refid="classGecode_1_1DerivedView_1a7a052d937c4a0e3e056f2c04bf426958" prot="public" virt="non-virtual"><scope>Gecode::Int::MinusView</scope><name>assigned</name></member>
      <member refid="classGecode_1_1DerivedView_1aa50003acd00fbe1aba2c59913cfef099" prot="public" virt="non-virtual"><scope>Gecode::Int::MinusView</scope><name>base</name></member>
      <member refid="classGecode_1_1DerivedView_1a7106983000f6ea5bb00ebf6220101ddc" prot="public" virt="non-virtual"><scope>Gecode::Int::MinusView</scope><name>cancel</name></member>
      <member refid="classGecode_1_1DerivedView_1a9eaeb396937207a32f1b79faa9330e66" prot="public" virt="non-virtual"><scope>Gecode::Int::MinusView</scope><name>cancel</name></member>
      <member refid="classGecode_1_1DerivedView_1a5268030de7f958b6cc01d3eeb672aab8" prot="public" virt="non-virtual"><scope>Gecode::Int::MinusView</scope><name>degree</name></member>
      <member refid="classGecode_1_1DerivedView_1a98dc20fbac8c4b0511291136fad93944" prot="protected" virt="non-virtual"><scope>Gecode::Int::MinusView</scope><name>DerivedView</name></member>
      <member refid="classGecode_1_1DerivedView_1ae5ae685043fb880eef3c0041b1665b53" prot="protected" virt="non-virtual"><scope>Gecode::Int::MinusView</scope><name>DerivedView</name></member>
      <member refid="classGecode_1_1Int_1_1MinusView_1a3fbe1a9aa9d7bdd93b5ca15690f72e93" prot="public" virt="non-virtual"><scope>Gecode::Int::MinusView</scope><name>eq</name></member>
      <member refid="classGecode_1_1Int_1_1MinusView_1aac489d747fe903002cd4c9168be1df92" prot="public" virt="non-virtual"><scope>Gecode::Int::MinusView</scope><name>eq</name></member>
      <member refid="classGecode_1_1Int_1_1MinusView_1ad214c5a7a2336fb381000420ec07ea29" prot="public" virt="non-virtual"><scope>Gecode::Int::MinusView</scope><name>gq</name></member>
      <member refid="classGecode_1_1Int_1_1MinusView_1adeeb6889a882c83cf6fde47d9e200ab2" prot="public" virt="non-virtual"><scope>Gecode::Int::MinusView</scope><name>gq</name></member>
      <member refid="classGecode_1_1Int_1_1MinusView_1a3e02b86a12df11500aebf331bfe7b7a7" prot="public" virt="non-virtual"><scope>Gecode::Int::MinusView</scope><name>gr</name></member>
      <member refid="classGecode_1_1Int_1_1MinusView_1a684268a47c01abbb38ff4e2658b3a7b3" prot="public" virt="non-virtual"><scope>Gecode::Int::MinusView</scope><name>gr</name></member>
      <member refid="classGecode_1_1Int_1_1MinusView_1a044a55a1b4a6924ec036e6c92daf8574" prot="public" virt="non-virtual"><scope>Gecode::Int::MinusView</scope><name>in</name></member>
      <member refid="classGecode_1_1Int_1_1MinusView_1a235046e78f5831626804eca94fe38391" prot="public" virt="non-virtual"><scope>Gecode::Int::MinusView</scope><name>in</name></member>
      <member refid="classGecode_1_1Int_1_1MinusView_1aae9186671617e792b298dfde4d160ea0" prot="public" virt="non-virtual"><scope>Gecode::Int::MinusView</scope><name>inter_r</name></member>
      <member refid="classGecode_1_1Int_1_1MinusView_1a8eb5c70c270b024d8f7f9b7290b34631" prot="public" virt="non-virtual"><scope>Gecode::Int::MinusView</scope><name>inter_r</name></member>
      <member refid="classGecode_1_1Int_1_1MinusView_1a8e00647e5bd9182ddbad31ee030310f8" prot="public" virt="non-virtual"><scope>Gecode::Int::MinusView</scope><name>inter_v</name></member>
      <member refid="classGecode_1_1Int_1_1MinusView_1a85df7ed16cb83fcb1fdcf4e647cb066c" prot="public" virt="non-virtual"><scope>Gecode::Int::MinusView</scope><name>inter_v</name></member>
      <member refid="classGecode_1_1Int_1_1MinusView_1ac02fdc1b0ff0129982cd6d0865fdc6c9" prot="public" virt="non-virtual"><scope>Gecode::Int::MinusView</scope><name>le</name></member>
      <member refid="classGecode_1_1Int_1_1MinusView_1a8de0afb488ebbea5692231403d99fbb2" prot="public" virt="non-virtual"><scope>Gecode::Int::MinusView</scope><name>le</name></member>
      <member refid="classGecode_1_1Int_1_1MinusView_1aaaf401587c6ee367103a91fd224769fa" prot="public" virt="non-virtual"><scope>Gecode::Int::MinusView</scope><name>lq</name></member>
      <member refid="classGecode_1_1Int_1_1MinusView_1a98fb44270c1b7af8659a00259cea8bd7" prot="public" virt="non-virtual"><scope>Gecode::Int::MinusView</scope><name>lq</name></member>
      <member refid="classGecode_1_1Int_1_1MinusView_1ac6a086e4b74799f2c9a006023ea4e5ec" prot="public" virt="non-virtual"><scope>Gecode::Int::MinusView</scope><name>max</name></member>
      <member refid="classGecode_1_1Int_1_1MinusView_1a54a8c866fed356be5a01cf3d587b4d62" prot="public" virt="non-virtual"><scope>Gecode::Int::MinusView</scope><name>max</name></member>
      <member refid="classGecode_1_1DerivedView_1ad50ca39d6fc43ff0bb8f65a2f787b25d" prot="public" virt="non-virtual"><scope>Gecode::Int::MinusView</scope><name>me</name></member>
      <member refid="classGecode_1_1Int_1_1MinusView_1aeecc6df29dc7164b4c37b6fcbdba1182" prot="public" virt="non-virtual"><scope>Gecode::Int::MinusView</scope><name>med</name></member>
      <member refid="classGecode_1_1Int_1_1MinusView_1a75bb0f4cddff06dffe652f8137517df6" prot="public" virt="non-virtual"><scope>Gecode::Int::MinusView</scope><name>med</name></member>
      <member refid="classGecode_1_1Int_1_1MinusView_1ae09e4a55b35135b15ab27fc95bcfeccf" prot="public" virt="non-virtual"><scope>Gecode::Int::MinusView</scope><name>min</name></member>
      <member refid="classGecode_1_1Int_1_1MinusView_1add8d5b51e9a796ef99633470e87e9bc0" prot="public" virt="non-virtual"><scope>Gecode::Int::MinusView</scope><name>min</name></member>
      <member refid="classGecode_1_1Int_1_1MinusView_1a6a8764298a5543c7ab1e91647b2dc7ff" prot="public" virt="non-virtual"><scope>Gecode::Int::MinusView</scope><name>minus_r</name></member>
      <member refid="classGecode_1_1Int_1_1MinusView_1ae7e0b93120e9b3358369e2f9acbee5ff" prot="public" virt="non-virtual"><scope>Gecode::Int::MinusView</scope><name>minus_r</name></member>
      <member refid="classGecode_1_1Int_1_1MinusView_1ad5cefe62abdf044659e6acd3e1483287" prot="public" virt="non-virtual"><scope>Gecode::Int::MinusView</scope><name>minus_v</name></member>
      <member refid="classGecode_1_1Int_1_1MinusView_1a1491c7841742296196fb4cad687ae967" prot="public" virt="non-virtual"><scope>Gecode::Int::MinusView</scope><name>minus_v</name></member>
      <member refid="classGecode_1_1Int_1_1MinusView_1a831122ad45eebc7751f24a06a2a57ad5" prot="public" virt="non-virtual"><scope>Gecode::Int::MinusView</scope><name>MinusView</name></member>
      <member refid="classGecode_1_1Int_1_1MinusView_1a2c6dc981d4a0122fee2882920cb1fc70" prot="public" virt="non-virtual"><scope>Gecode::Int::MinusView</scope><name>MinusView</name></member>
      <member refid="classGecode_1_1DerivedView_1ae2ccb41242200b5e2121164db287d76d" prot="public" virt="non-virtual"><scope>Gecode::Int::MinusView</scope><name>modevent</name></member>
      <member refid="classGecode_1_1Int_1_1MinusView_1acb8e7b05dcc9b4973a939ead9ca1ca70" prot="public" virt="non-virtual"><scope>Gecode::Int::MinusView</scope><name>narrow_r</name></member>
      <member refid="classGecode_1_1Int_1_1MinusView_1a2dfff135ffdc44b118e5da57c8fba9db" prot="public" virt="non-virtual"><scope>Gecode::Int::MinusView</scope><name>narrow_r</name></member>
      <member refid="classGecode_1_1Int_1_1MinusView_1a04d38d5547e066992e14428bfd7d8a2d" prot="public" virt="non-virtual"><scope>Gecode::Int::MinusView</scope><name>narrow_v</name></member>
      <member refid="classGecode_1_1Int_1_1MinusView_1a840c0e7ed7b8ee52ad865955d7b235ed" prot="public" virt="non-virtual"><scope>Gecode::Int::MinusView</scope><name>narrow_v</name></member>
      <member refid="classGecode_1_1Int_1_1MinusView_1abc17f3e9b5218de100b9c2f5d4657301" prot="public" virt="non-virtual"><scope>Gecode::Int::MinusView</scope><name>nq</name></member>
      <member refid="classGecode_1_1Int_1_1MinusView_1a26a3f10017ea13fbd74d136ee6f06a41" prot="public" virt="non-virtual"><scope>Gecode::Int::MinusView</scope><name>nq</name></member>
      <member refid="classGecode_1_1Int_1_1MinusView_1a0ecf46ed6aaeb1e5b1032f8341fe0840" prot="public" virt="non-virtual"><scope>Gecode::Int::MinusView</scope><name>operator&lt;&lt;</name></member>
      <member refid="classGecode_1_1Int_1_1MinusView_1acc72f60e3440bdc4ddec9f9db9a11dda" prot="public" virt="non-virtual"><scope>Gecode::Int::MinusView</scope><name>range</name></member>
      <member refid="classGecode_1_1Int_1_1MinusView_1abdb77971d6620205008599c4badfaa51" prot="public" virt="non-virtual"><scope>Gecode::Int::MinusView</scope><name>regret_max</name></member>
      <member refid="classGecode_1_1Int_1_1MinusView_1a4731d8f3ea596df4ce52df37cffa02f8" prot="public" virt="non-virtual"><scope>Gecode::Int::MinusView</scope><name>regret_min</name></member>
      <member refid="classGecode_1_1DerivedView_1aed474218f6ac19c8958f5dd921dd4a56" prot="public" virt="non-virtual"><scope>Gecode::Int::MinusView</scope><name>schedule</name></member>
      <member refid="classGecode_1_1Int_1_1MinusView_1a0fc7576acdbc97ed8549404978db034e" prot="public" virt="non-virtual"><scope>Gecode::Int::MinusView</scope><name>size</name></member>
      <member refid="classGecode_1_1DerivedView_1a9ca639fc9c07f03ff1ed8e4bdb2554ca" prot="public" virt="non-virtual"><scope>Gecode::Int::MinusView</scope><name>subscribe</name></member>
      <member refid="classGecode_1_1DerivedView_1aa1b46557b44017c14d09f6397c62f7b1" prot="public" virt="non-virtual"><scope>Gecode::Int::MinusView</scope><name>subscribe</name></member>
      <member refid="classGecode_1_1DerivedView_1a1fd607dd28d8f0dd8a61efafc6cd46f7" prot="public" virt="non-virtual"><scope>Gecode::Int::MinusView</scope><name>update</name></member>
      <member refid="classGecode_1_1Int_1_1MinusView_1a27ba55d1de66bdeb48e3d4b41aa75253" prot="public" virt="non-virtual"><scope>Gecode::Int::MinusView</scope><name>val</name></member>
      <member refid="classGecode_1_1DerivedView_1a040ec29422fa48ade9b5d6b595e9d2e8" prot="public" virt="non-virtual"><scope>Gecode::Int::MinusView</scope><name>varderived</name></member>
      <member refid="classGecode_1_1DerivedView_1acf843af5c66aaf459055496fb6e69d5e" prot="public" virt="non-virtual"><scope>Gecode::Int::MinusView</scope><name>varimp</name></member>
      <member refid="classGecode_1_1DerivedView_1a859634f2bf00d75823bbd24bc052fbb3" prot="public" virt="non-virtual"><scope>Gecode::Int::MinusView</scope><name>VarImpType</name></member>
      <member refid="classGecode_1_1DerivedView_1a87ae51cbfed201d640f8d6db2d8fb4b4" prot="public" virt="non-virtual"><scope>Gecode::Int::MinusView</scope><name>VarType</name></member>
      <member refid="classGecode_1_1Int_1_1MinusView_1ab269a5cc966b84745615b3f99efafa50" prot="public" virt="non-virtual"><scope>Gecode::Int::MinusView</scope><name>width</name></member>
      <member refid="classGecode_1_1DerivedView_1a5183c0d4bfdd31dd2db78e4ad855c8ea" prot="protected" virt="non-virtual"><scope>Gecode::Int::MinusView</scope><name>x</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
