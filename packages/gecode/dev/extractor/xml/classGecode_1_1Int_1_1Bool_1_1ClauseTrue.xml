<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classGecode_1_1Int_1_1Bool_1_1ClauseTrue" kind="class" prot="public">
    <compoundname>Gecode::Int::Bool::ClauseTrue</compoundname>
    <basecompoundref refid="classGecode_1_1MixBinaryPropagator" prot="public" virt="non-virtual">Gecode::MixBinaryPropagator&lt; VX, PC_BOOL_VAL, VY, PC_BOOL_VAL &gt;</basecompoundref>
    <includes refid="bool_8hh" local="no">bool.hh</includes>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>VX</declname>
        <defname>VX</defname>
      </param>
      <param>
        <type>class</type>
        <declname>VY</declname>
        <defname>VY</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classGecode_1_1Int_1_1Bool_1_1ClauseTrue_1a83332b812f56c5c45c3c429735edcf25" prot="protected" static="no" mutable="no">
        <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; VX &gt;</type>
        <definition>ViewArray&lt;VX&gt; Gecode::Int::Bool::ClauseTrue&lt; VX, VY &gt;::x</definition>
        <argsstring></argsstring>
        <name>x</name>
        <briefdescription>
<para>Views not yet subscribed to. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/bool.hh" line="548" column="1" bodyfile="/usr/include/gecode/int/bool.hh" bodystart="548" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Int_1_1Bool_1_1ClauseTrue_1af13389cf8895b48a7ac7ced60e59e083" prot="protected" static="no" mutable="no">
        <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; VY &gt;</type>
        <definition>ViewArray&lt;VY&gt; Gecode::Int::Bool::ClauseTrue&lt; VX, VY &gt;::y</definition>
        <argsstring></argsstring>
        <name>y</name>
        <briefdescription>
<para>Views not yet subscribed to (origin from negative variables) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/bool.hh" line="550" column="1" bodyfile="/usr/include/gecode/int/bool.hh" bodystart="550" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classGecode_1_1Int_1_1Bool_1_1ClauseTrue_1a2a638546e2baee7a06d9a47039f57a03" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Int::Bool::ClauseTrue&lt; VX, VY &gt;::ClauseTrue</definition>
        <argsstring>(Home home, ViewArray&lt; VX &gt; &amp;x, ViewArray&lt; VY &gt; &amp;y)</argsstring>
        <name>ClauseTrue</name>
        <param>
          <type><ref refid="classGecode_1_1Home" kindref="compound">Home</ref></type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; VX &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; VY &gt; &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Constructor for posting. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/bool.hh" line="552" column="1" bodyfile="/usr/include/gecode/int/bool/clause.hpp" bodystart="47" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Bool_1_1ClauseTrue_1a2316e80c8d6f910672ec58c081131143" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Int::Bool::ClauseTrue&lt; VX, VY &gt;::ClauseTrue</definition>
        <argsstring>(Space &amp;home, bool share, ClauseTrue&lt; VX, VY &gt; &amp;p)</argsstring>
        <name>ClauseTrue</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>share</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1Bool_1_1ClauseTrue" kindref="compound">ClauseTrue</ref>&lt; VX, VY &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Constructor for cloning <emphasis>p</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/bool.hh" line="554" column="1" bodyfile="/usr/include/gecode/int/bool/clause.hpp" bodystart="63" bodyend="67"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classGecode_1_1Int_1_1Bool_1_1ClauseTrue_1a881674e3b43393e5871d3a930a6060d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classGecode_1_1Actor" kindref="compound">Actor</ref> *</type>
        <definition>Actor * Gecode::Int::Bool::ClauseTrue&lt; VX, VY &gt;::copy</definition>
        <argsstring>(Space &amp;home, bool share)</argsstring>
        <name>copy</name>
        <reimplements refid="classGecode_1_1Actor_1a67b240e2810720846c3632c94cc9c99d">copy</reimplements>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>share</declname>
        </param>
        <briefdescription>
<para>Copy propagator during cloning. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/bool.hh" line="557" column="1" bodyfile="/usr/include/gecode/int/bool/clause.hpp" bodystart="71" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Bool_1_1ClauseTrue_1a6538a1c52fb171299268ad844a16387a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classGecode_1_1PropCost" kindref="compound">PropCost</ref></type>
        <definition>PropCost Gecode::Int::Bool::ClauseTrue&lt; VX, VY &gt;::cost</definition>
        <argsstring>(const Space &amp;home, const ModEventDelta &amp;med) const </argsstring>
        <name>cost</name>
        <reimplements refid="classGecode_1_1MixBinaryPropagator_1aef25c60dde63e8d9cda2cec8c17b51e8">cost</reimplements>
        <param>
          <type>const <ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceGecode_1a129e41c1d037528010d7b6706495a560" kindref="member">ModEventDelta</ref> &amp;</type>
          <declname>med</declname>
        </param>
        <briefdescription>
<para>Cost function (defined as low binary) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/bool.hh" line="559" column="1" bodyfile="/usr/include/gecode/int/bool/clause.hpp" bodystart="57" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Bool_1_1ClauseTrue_1ae81cdc935c5bc0c84a652f6267d67eb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>ExecStatus Gecode::Int::Bool::ClauseTrue&lt; VX, VY &gt;::propagate</definition>
        <argsstring>(Space &amp;home, const ModEventDelta &amp;med)</argsstring>
        <name>propagate</name>
        <reimplements refid="classGecode_1_1Propagator_1ad2dc98c1345222892592339948c6cde1">propagate</reimplements>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceGecode_1a129e41c1d037528010d7b6706495a560" kindref="member">ModEventDelta</ref> &amp;</type>
          <declname>med</declname>
        </param>
        <briefdescription>
<para>Perform propagation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/bool.hh" line="561" column="1" bodyfile="/usr/include/gecode/int/bool/clause.hpp" bodystart="177" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Bool_1_1ClauseTrue_1a8fd0275862c5c55fde2b740929e5b0c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>size_t</type>
        <definition>forceinline size_t Gecode::Int::Bool::ClauseTrue&lt; VX, VY &gt;::dispose</definition>
        <argsstring>(Space &amp;home)</argsstring>
        <name>dispose</name>
        <reimplements refid="classGecode_1_1MixBinaryPropagator_1a10c621be7a2dfef913ce01e7678bac84">dispose</reimplements>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <briefdescription>
<para>Delete propagator and return its size. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/bool.hh" line="565" column="1" bodyfile="/usr/include/gecode/int/bool/clause.hpp" bodystart="135" bodyend="138"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classGecode_1_1Int_1_1Bool_1_1ClauseTrue_1a1addd7ff3a287f2e3e415f56943a84e9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>ExecStatus Gecode::Int::Bool::ClauseTrue&lt; VX, VY &gt;::post</definition>
        <argsstring>(Home home, ViewArray&lt; VX &gt; &amp;x, ViewArray&lt; VY &gt; &amp;y)</argsstring>
        <name>post</name>
        <param>
          <type><ref refid="classGecode_1_1Home" kindref="compound">Home</ref></type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; VX &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; VY &gt; &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Post propagator <formula id="111">$ \bigvee_{i=0}^{|x|-1} x_i \vee \bigvee_{i=0}^{|y|-1} y_i = 1$</formula>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/bool.hh" line="563" column="1" bodyfile="/usr/include/gecode/int/bool/clause.hpp" bodystart="110" bodyend="131"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Boolean clause propagator (disjunctive, true) </para>    </briefdescription>
    <detaileddescription>
<para>Requires<programlisting><codeline><highlight class="preprocessor">#include<sp/>&lt;gecode/int/bool.hh&gt;</highlight><highlight class="normal"><sp/></highlight></codeline>
</programlisting> </para>    </detaileddescription>
    <inheritancegraph>
      <node id="1502">
        <label>Gecode::MixBinaryPropagator&lt; VX, PC_BOOL_VAL, VY, PC_BOOL_VAL &gt;</label>
        <link refid="classGecode_1_1MixBinaryPropagator"/>
        <childnode refid="1503" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1503">
        <label>Gecode::Propagator</label>
        <link refid="classGecode_1_1Propagator"/>
        <childnode refid="1504" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1501">
        <label>Gecode::Int::Bool::ClauseTrue&lt; VX, VY &gt;</label>
        <link refid="classGecode_1_1Int_1_1Bool_1_1ClauseTrue"/>
        <childnode refid="1502" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1504">
        <label>Gecode::Actor</label>
        <link refid="classGecode_1_1Actor"/>
        <childnode refid="1505" relation="private-inheritance">
        </childnode>
      </node>
      <node id="1505">
        <label>Gecode::ActorLink</label>
        <link refid="classGecode_1_1ActorLink"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1507">
        <label>Gecode::MixBinaryPropagator&lt; VX, PC_BOOL_VAL, VY, PC_BOOL_VAL &gt;</label>
        <link refid="classGecode_1_1MixBinaryPropagator"/>
        <childnode refid="1508" relation="public-inheritance">
        </childnode>
        <childnode refid="1511" relation="usage">
          <edgelabel>x0</edgelabel>
        </childnode>
      </node>
      <node id="1511">
        <label>VX</label>
      </node>
      <node id="1512">
        <label>Gecode::ViewArray&lt; VX &gt;</label>
        <link refid="classGecode_1_1ViewArray"/>
      </node>
      <node id="1508">
        <label>Gecode::Propagator</label>
        <link refid="classGecode_1_1Propagator"/>
        <childnode refid="1509" relation="public-inheritance">
        </childnode>
        <childnode refid="1510" relation="usage">
          <edgelabel>advisors</edgelabel>
        </childnode>
      </node>
      <node id="1506">
        <label>Gecode::Int::Bool::ClauseTrue&lt; VX, VY &gt;</label>
        <link refid="classGecode_1_1Int_1_1Bool_1_1ClauseTrue"/>
        <childnode refid="1507" relation="public-inheritance">
        </childnode>
        <childnode refid="1512" relation="usage">
          <edgelabel>x</edgelabel>
        </childnode>
        <childnode refid="1513" relation="usage">
          <edgelabel>y</edgelabel>
        </childnode>
      </node>
      <node id="1513">
        <label>Gecode::ViewArray&lt; VY &gt;</label>
        <link refid="classGecode_1_1ViewArray"/>
      </node>
      <node id="1509">
        <label>Gecode::Actor</label>
        <link refid="classGecode_1_1Actor"/>
        <childnode refid="1510" relation="private-inheritance">
        </childnode>
      </node>
      <node id="1510">
        <label>Gecode::ActorLink</label>
        <link refid="classGecode_1_1ActorLink"/>
      </node>
    </collaborationgraph>
    <location file="/usr/include/gecode/int/bool.hh" line="543" column="1" bodyfile="/usr/include/gecode/int/bool.hh" bodystart="542" bodyend="566"/>
    <listofallmembers>
      <member refid="classGecode_1_1Propagator_1a55629f061a0fd8ecb2a4c41aa1568e28" prot="public" virt="virtual"><scope>Gecode::Int::Bool::ClauseTrue</scope><name>advise</name></member>
      <member refid="classGecode_1_1Propagator_1afee33d8aed2bc9debee126f17b5015cf" prot="public" virt="non-virtual"><scope>Gecode::Int::Bool::ClauseTrue</scope><name>advisors</name></member>
      <member refid="classGecode_1_1Propagator_1a593de773d2204f47ea365a99df2f75d0" prot="public" virt="non-virtual"><scope>Gecode::Int::Bool::ClauseTrue</scope><name>afc</name></member>
      <member refid="classGecode_1_1ActorLink_1a8427f41a27a72b52ceb52d0fdad21063" prot="public" virt="non-virtual" ambiguityscope="Gecode::ActorLink::"><scope>Gecode::Int::Bool::ClauseTrue</scope><name>cast</name></member>
      <member refid="classGecode_1_1ActorLink_1a464526456db41981f82a1193a8b4e569" prot="public" virt="non-virtual" ambiguityscope="Gecode::ActorLink::"><scope>Gecode::Int::Bool::ClauseTrue</scope><name>cast</name></member>
      <member refid="classGecode_1_1Int_1_1Bool_1_1ClauseTrue_1a2a638546e2baee7a06d9a47039f57a03" prot="protected" virt="non-virtual"><scope>Gecode::Int::Bool::ClauseTrue</scope><name>ClauseTrue</name></member>
      <member refid="classGecode_1_1Int_1_1Bool_1_1ClauseTrue_1a2316e80c8d6f910672ec58c081131143" prot="protected" virt="non-virtual"><scope>Gecode::Int::Bool::ClauseTrue</scope><name>ClauseTrue</name></member>
      <member refid="classGecode_1_1Int_1_1Bool_1_1ClauseTrue_1a881674e3b43393e5871d3a930a6060d8" prot="public" virt="virtual"><scope>Gecode::Int::Bool::ClauseTrue</scope><name>copy</name></member>
      <member refid="classGecode_1_1Int_1_1Bool_1_1ClauseTrue_1a6538a1c52fb171299268ad844a16387a" prot="public" virt="virtual"><scope>Gecode::Int::Bool::ClauseTrue</scope><name>cost</name></member>
      <member refid="classGecode_1_1Int_1_1Bool_1_1ClauseTrue_1a8fd0275862c5c55fde2b740929e5b0c3" prot="public" virt="virtual"><scope>Gecode::Int::Bool::ClauseTrue</scope><name>dispose</name></member>
      <member refid="classGecode_1_1Propagator_1a3b286c7aec9843b60a531b495015b5f7" prot="protected" virt="non-virtual"><scope>Gecode::Int::Bool::ClauseTrue</scope><name>fwd</name></member>
      <member refid="classGecode_1_1Propagator_1ae9dfa55e47e4ff8e0c8e4c2a6efdbfc0" prot="public" virt="non-virtual"><scope>Gecode::Int::Bool::ClauseTrue</scope><name>med</name></member>
      <member refid="classGecode_1_1MixBinaryPropagator_1a6d2a3d72b230c1d7f3628d35f12a5fad" prot="protected" virt="non-virtual"><scope>Gecode::Int::Bool::ClauseTrue</scope><name>MixBinaryPropagator</name></member>
      <member refid="classGecode_1_1MixBinaryPropagator_1a77d8edc82a546fde6866328412de52ba" prot="protected" virt="non-virtual"><scope>Gecode::Int::Bool::ClauseTrue</scope><name>MixBinaryPropagator</name></member>
      <member refid="classGecode_1_1MixBinaryPropagator_1a93a5256431c0f53076a11d440960d50b" prot="protected" virt="non-virtual"><scope>Gecode::Int::Bool::ClauseTrue</scope><name>MixBinaryPropagator</name></member>
      <member refid="classGecode_1_1Propagator_1a4905db55af49af8f38558bdbcf5fd4a2" prot="public" virt="non-virtual"><scope>Gecode::Int::Bool::ClauseTrue</scope><name>modeventdelta</name></member>
      <member refid="classGecode_1_1Actor_1a388f671145dcf906f81d22bde2dc0f3d" prot="public" virt="non-virtual"><scope>Gecode::Int::Bool::ClauseTrue</scope><name>operator delete</name></member>
      <member refid="classGecode_1_1Actor_1ac28b9601b530076a1bda75834487f898" prot="public" virt="non-virtual"><scope>Gecode::Int::Bool::ClauseTrue</scope><name>operator new</name></member>
      <member refid="classGecode_1_1Int_1_1Bool_1_1ClauseTrue_1a1addd7ff3a287f2e3e415f56943a84e9" prot="public" virt="non-virtual"><scope>Gecode::Int::Bool::ClauseTrue</scope><name>post</name></member>
      <member refid="classGecode_1_1Int_1_1Bool_1_1ClauseTrue_1ae81cdc935c5bc0c84a652f6267d67eb9" prot="public" virt="virtual"><scope>Gecode::Int::Bool::ClauseTrue</scope><name>propagate</name></member>
      <member refid="classGecode_1_1Propagator_1a891f3e84cde2e8e60f8ad9340ad74b05" prot="protected" virt="non-virtual"><scope>Gecode::Int::Bool::ClauseTrue</scope><name>Propagator</name></member>
      <member refid="classGecode_1_1Propagator_1afeaeed8dae67de4313858bd82fdae5d0" prot="protected" virt="non-virtual"><scope>Gecode::Int::Bool::ClauseTrue</scope><name>Propagator</name></member>
      <member refid="classGecode_1_1Propagator_1a1781b5b0df38c39dddca4b44c3a00530" prot="public" virt="non-virtual"><scope>Gecode::Int::Bool::ClauseTrue</scope><name>size</name></member>
      <member refid="classGecode_1_1Int_1_1Bool_1_1ClauseTrue_1a83332b812f56c5c45c3c429735edcf25" prot="protected" virt="non-virtual"><scope>Gecode::Int::Bool::ClauseTrue</scope><name>x</name></member>
      <member refid="classGecode_1_1MixBinaryPropagator_1af4b9b77e2ef3a4923fb0c86a9182158b" prot="protected" virt="non-virtual"><scope>Gecode::Int::Bool::ClauseTrue</scope><name>x0</name></member>
      <member refid="classGecode_1_1MixBinaryPropagator_1a7a162f63c3a35d6bbcdd6dbef1549caf" prot="protected" virt="non-virtual"><scope>Gecode::Int::Bool::ClauseTrue</scope><name>x1</name></member>
      <member refid="classGecode_1_1Int_1_1Bool_1_1ClauseTrue_1af13389cf8895b48a7ac7ced60e59e083" prot="protected" virt="non-virtual"><scope>Gecode::Int::Bool::ClauseTrue</scope><name>y</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
