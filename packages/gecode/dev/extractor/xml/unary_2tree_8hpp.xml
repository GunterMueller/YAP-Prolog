<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="unary_2tree_8hpp" kind="file">
    <compoundname>tree.hpp</compoundname>
    <includes local="no">algorithm</includes>
    <includedby refid="unary_8hh" local="no">/usr/include/gecode/int/unary.hh</includedby>
    <incdepgraph>
      <node id="12776">
        <label>/usr/include/gecode/int/unary/tree.hpp</label>
        <link refid="unary/tree.hpp"/>
        <childnode refid="12777" relation="include">
        </childnode>
      </node>
      <node id="12777">
        <label>algorithm</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="12780">
        <label>/usr/include/gecode/int/cumulative.hh</label>
        <link refid="cumulative_8hh_source"/>
      </node>
      <node id="12779">
        <label>/usr/include/gecode/int/unary.hh</label>
        <link refid="unary_8hh_source"/>
        <childnode refid="12780" relation="include">
        </childnode>
      </node>
      <node id="12778">
        <label>/usr/include/gecode/int/unary/tree.hpp</label>
        <link refid="unary/tree.hpp"/>
        <childnode refid="12779" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespaceGecode">Gecode</innernamespace>
    <innernamespace refid="namespaceGecode_1_1Int">Gecode::Int</innernamespace>
    <innernamespace refid="namespaceGecode_1_1Int_1_1Unary">Gecode::Int::Unary</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>mode:<sp/>C++;<sp/>c-basic-offset:<sp/>2;<sp/>indent-tabs-mode:<sp/>nil<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/><sp/>Main<sp/>authors:</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Christian<sp/>Schulte<sp/>&lt;schulte@gecode.org&gt;</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>Copyright:</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Christian<sp/>Schulte,<sp/>2009</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/>Last<sp/>modified:</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>$Date:<sp/>2011-05-25<sp/>16:56:41<sp/>+0200<sp/>(Wed,<sp/>25<sp/>May<sp/>2011)<sp/>$<sp/>by<sp/>$Author:<sp/>schulte<sp/>$</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>$Revision:<sp/>12022<sp/>$</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>Gecode,<sp/>the<sp/>generic<sp/>constraint</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/>development<sp/>environment:</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.gecode.org</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/><sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/><sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/><sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/><sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/><sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/><sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/><sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/><sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/><sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/><sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Gecode<sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Int<sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Unary<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Omega<sp/>tree</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="classGecode_1_1Int_1_1Unary_1_1OmegaNode_1ad94b2db347f1fc949dea6b18ec081da4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaNode_1ad94b2db347f1fc949dea6b18ec081da4" kindref="member">OmegaNode::init</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaNode" kindref="compound">OmegaNode</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaNode" kindref="compound">OmegaNode</ref>&amp;)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaNode_1a5e1918516db50c22d1b1587b413c7d83" kindref="member">p</ref><sp/>=<sp/>0;<sp/><ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaNode_1a190cd665b77fe379ab02cc2bd34a3dbb" kindref="member">ect</ref><sp/>=<sp/>-<ref refid="namespaceGecode_1_1Int_1_1Limits_1a5a8edf24fe7e29c7159587b7e7d0260a" kindref="member">Int::Limits::infinity</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="classGecode_1_1Int_1_1Unary_1_1OmegaNode_1a448db7e53a32364b89b2aa4ffe19ad8d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaNode_1a448db7e53a32364b89b2aa4ffe19ad8d" kindref="member">OmegaNode::update</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaNode" kindref="compound">OmegaNode</ref>&amp;<sp/>l,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaNode" kindref="compound">OmegaNode</ref>&amp;<sp/>r)<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaNode_1a5e1918516db50c22d1b1587b413c7d83" kindref="member">p</ref><sp/>=<sp/>l.<ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaNode_1a5e1918516db50c22d1b1587b413c7d83" kindref="member">p</ref><sp/>+<sp/>r.<ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaNode_1a5e1918516db50c22d1b1587b413c7d83" kindref="member">p</ref>;<sp/></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaNode_1a190cd665b77fe379ab02cc2bd34a3dbb" kindref="member">ect</ref><sp/>=<sp/><ref refid="group__TaskModelFloatArith_1ga958cb25ae9754d6cc35c7c6e34ebc1e3" kindref="member">std::max</ref>(<ref refid="namespaceGecode_1_1Int_1a6c8c36ec855e57c1638ce9e531a486bf" kindref="member">plus</ref>(l.<ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaNode_1a190cd665b77fe379ab02cc2bd34a3dbb" kindref="member">ect</ref>,r.<ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaNode_1a5e1918516db50c22d1b1587b413c7d83" kindref="member">p</ref>),<sp/>r.<ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaNode_1a190cd665b77fe379ab02cc2bd34a3dbb" kindref="member">ect</ref>);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>TaskView&gt;</highlight></codeline>
<codeline lineno="58" refid="classGecode_1_1Int_1_1Unary_1_1OmegaTree_1a9a12647400b536352acee46b7dd51661" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaTree_1a9a12647400b536352acee46b7dd51661" kindref="member">OmegaTree&lt;TaskView&gt;::OmegaTree</ref>(<ref refid="classGecode_1_1Region" kindref="compound">Region</ref>&amp;<sp/>r,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Int_1_1TaskViewArray" kindref="compound">TaskViewArray&lt;TaskView&gt;</ref>&amp;<sp/>t)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classGecode_1_1Int_1_1TaskTree" kindref="compound">TaskTree</ref>&lt;TaskView,<ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaNode" kindref="compound">OmegaNode</ref>&gt;(r,t)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=<ref refid="classGecode_1_1Int_1_1TaskTree_1a588d7ff506e04319c9730a20686c5736" kindref="member">tasks</ref>.size();<sp/>i--;<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Int_1_1TaskTree_1aab3d5439983995ce1a163f34acff2da4" kindref="member">leaf</ref>(i).p<sp/>=<sp/>0;<sp/><ref refid="classGecode_1_1Int_1_1TaskTree_1aab3d5439983995ce1a163f34acff2da4" kindref="member">leaf</ref>(i).ect<sp/>=<sp/>-<ref refid="namespaceGecode_1_1Int_1_1Limits_1a5a8edf24fe7e29c7159587b7e7d0260a" kindref="member">Int::Limits::infinity</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Int_1_1TaskTree_1ac3c4f8d8062e3f4184e0dc0f8e3f0780" kindref="member">init</ref>();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>TaskView&gt;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="68" refid="classGecode_1_1Int_1_1Unary_1_1OmegaTree_1abd71e873d894e55d132b7fc92b5c6f78" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaTree_1abd71e873d894e55d132b7fc92b5c6f78" kindref="member">OmegaTree&lt;TaskView&gt;::insert</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>leaf(i).p<sp/>=<sp/>tasks[i].pmin();</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>leaf(i).ect<sp/>=<sp/>tasks[i].est()+tasks[i].pmin();</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>update(i);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>TaskView&gt;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="classGecode_1_1Int_1_1Unary_1_1OmegaTree_1a625867b6e501a9d7aff391b8d384202f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaTree_1a625867b6e501a9d7aff391b8d384202f" kindref="member">OmegaTree&lt;TaskView&gt;::remove</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>leaf(i).p<sp/>=<sp/>0;<sp/>leaf(i).ect<sp/>=<sp/>-<ref refid="namespaceGecode_1_1Int_1_1Limits_1a5a8edf24fe7e29c7159587b7e7d0260a" kindref="member">Int::Limits::infinity</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>update(i);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>TaskView&gt;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="83" refid="classGecode_1_1Int_1_1Unary_1_1OmegaTree_1ad91515fb5348065f8d57cfb41197b569" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaTree_1ad91515fb5348065f8d57cfb41197b569" kindref="member">OmegaTree&lt;TaskView&gt;::ect</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>root().ect;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>TaskView&gt;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="89" refid="classGecode_1_1Int_1_1Unary_1_1OmegaTree_1a2f63cf44b1998d4f0ce0422714bdaf4a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaTree_1ad91515fb5348065f8d57cfb41197b569" kindref="member">OmegaTree&lt;TaskView&gt;::ect</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>whether<sp/>task<sp/>i<sp/>is<sp/>in?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaTree" kindref="compound">OmegaTree&lt;TaskView&gt;</ref>&amp;<sp/>o<sp/>=<sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaTree" kindref="compound">OmegaTree&lt;TaskView&gt;</ref>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(*this);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(o.<ref refid="classGecode_1_1Int_1_1TaskTree_1aab3d5439983995ce1a163f34acff2da4" kindref="member">leaf</ref>(i).<ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaNode_1a190cd665b77fe379ab02cc2bd34a3dbb" kindref="member">ect</ref><sp/>!=<sp/>-<ref refid="namespaceGecode_1_1Int_1_1Limits_1a5a8edf24fe7e29c7159587b7e7d0260a" kindref="member">Int::Limits::infinity</ref>)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>o.<ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaTree_1a625867b6e501a9d7aff391b8d384202f" kindref="member">remove</ref>(i);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ect<sp/>=<sp/>o.<ref refid="classGecode_1_1Int_1_1TaskTree_1a130379d0eb9b561fd8c2ecd34a1e6e85" kindref="member">root</ref>().<ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaNode_1a190cd665b77fe379ab02cc2bd34a3dbb" kindref="member">ect</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>o.<ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaTree_1abd71e873d894e55d132b7fc92b5c6f78" kindref="member">insert</ref>(i);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ect;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>root().ect;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Ome<sp/>lambda<sp/>tree</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaNode_1a7fcb5d870c059db0deb86bd29e28217c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaNode_1a7fcb5d870c059db0deb86bd29e28217c" kindref="member">OmegaLambdaNode::init</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaNode" kindref="compound">OmegaLambdaNode</ref>&amp;<sp/>l,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaNode" kindref="compound">OmegaLambdaNode</ref>&amp;<sp/>r)<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaNode_1ad94b2db347f1fc949dea6b18ec081da4" kindref="member">OmegaNode::init</ref>(l,r);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaNode_1a782f4dc36b047b4aa39960c4bd494df5" kindref="member">lp</ref><sp/>=<sp/><ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaNode_1a5e1918516db50c22d1b1587b413c7d83" kindref="member">p</ref>;<sp/><ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaNode_1afb5d7956a2fc4729604b77fc6b4835ce" kindref="member">lect</ref><sp/>=<sp/><ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaNode_1a190cd665b77fe379ab02cc2bd34a3dbb" kindref="member">ect</ref>;<sp/><ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaNode_1abbdf9d71d0108564674a08d67af000c2" kindref="member">resEct</ref><sp/>=<sp/><ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaNode_1a87f20ae6860376edfaa48f0236ca567e" kindref="member">undef</ref>;<sp/><ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaNode_1af789b58419478247e65c81c0fbf2c2be" kindref="member">resLp</ref><sp/>=<sp/><ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaNode_1a87f20ae6860376edfaa48f0236ca567e" kindref="member">undef</ref>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaNode_1a3801fc234498f51b0785d82ff577a6cb" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaNode_1a3801fc234498f51b0785d82ff577a6cb" kindref="member">OmegaLambdaNode::update</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaNode" kindref="compound">OmegaLambdaNode</ref>&amp;<sp/>l,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaNode" kindref="compound">OmegaLambdaNode</ref>&amp;<sp/>r)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaNode_1a448db7e53a32364b89b2aa4ffe19ad8d" kindref="member">OmegaNode::update</ref>(l,r);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(l.<ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaNode_1a782f4dc36b047b4aa39960c4bd494df5" kindref="member">lp</ref><sp/>+<sp/>r.<ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaNode_1a5e1918516db50c22d1b1587b413c7d83" kindref="member">p</ref><sp/>&gt;<sp/>l.<ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaNode_1a5e1918516db50c22d1b1587b413c7d83" kindref="member">p</ref><sp/>+<sp/>r.<ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaNode_1a782f4dc36b047b4aa39960c4bd494df5" kindref="member">lp</ref>)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaNode_1af789b58419478247e65c81c0fbf2c2be" kindref="member">resLp</ref><sp/>=<sp/>l.<ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaNode_1af789b58419478247e65c81c0fbf2c2be" kindref="member">resLp</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaNode_1a782f4dc36b047b4aa39960c4bd494df5" kindref="member">lp</ref><sp/>=<sp/>l.<ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaNode_1a782f4dc36b047b4aa39960c4bd494df5" kindref="member">lp</ref><sp/>+<sp/>r.<ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaNode_1a5e1918516db50c22d1b1587b413c7d83" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaNode_1af789b58419478247e65c81c0fbf2c2be" kindref="member">resLp</ref><sp/>=<sp/>r.<ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaNode_1af789b58419478247e65c81c0fbf2c2be" kindref="member">resLp</ref>;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaNode_1a782f4dc36b047b4aa39960c4bd494df5" kindref="member">lp</ref><sp/>=<sp/>l.<ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaNode_1a5e1918516db50c22d1b1587b413c7d83" kindref="member">p</ref><sp/>+<sp/>r.<ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaNode_1a782f4dc36b047b4aa39960c4bd494df5" kindref="member">lp</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((r.<ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaNode_1afb5d7956a2fc4729604b77fc6b4835ce" kindref="member">lect</ref><sp/>&gt;=<sp/><ref refid="namespaceGecode_1_1Int_1a6c8c36ec855e57c1638ce9e531a486bf" kindref="member">plus</ref>(l.<ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaNode_1a190cd665b77fe379ab02cc2bd34a3dbb" kindref="member">ect</ref>,r.<ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaNode_1a782f4dc36b047b4aa39960c4bd494df5" kindref="member">lp</ref>))<sp/>&amp;&amp;<sp/>(r.<ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaNode_1afb5d7956a2fc4729604b77fc6b4835ce" kindref="member">lect</ref><sp/>&gt;=<sp/><ref refid="namespaceGecode_1_1Int_1a6c8c36ec855e57c1638ce9e531a486bf" kindref="member">plus</ref>(l.<ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaNode_1afb5d7956a2fc4729604b77fc6b4835ce" kindref="member">lect</ref>,r.<ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaNode_1a5e1918516db50c22d1b1587b413c7d83" kindref="member">p</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaNode_1afb5d7956a2fc4729604b77fc6b4835ce" kindref="member">lect</ref><sp/>=<sp/>r.<ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaNode_1afb5d7956a2fc4729604b77fc6b4835ce" kindref="member">lect</ref>;<sp/><ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaNode_1abbdf9d71d0108564674a08d67af000c2" kindref="member">resEct</ref><sp/>=<sp/>r.<ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaNode_1abbdf9d71d0108564674a08d67af000c2" kindref="member">resEct</ref>;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceGecode_1_1Int_1a6c8c36ec855e57c1638ce9e531a486bf" kindref="member">plus</ref>(l.<ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaNode_1a190cd665b77fe379ab02cc2bd34a3dbb" kindref="member">ect</ref>,r.<ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaNode_1a782f4dc36b047b4aa39960c4bd494df5" kindref="member">lp</ref>)<sp/>&gt;=<sp/><ref refid="namespaceGecode_1_1Int_1a6c8c36ec855e57c1638ce9e531a486bf" kindref="member">plus</ref>(l.<ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaNode_1afb5d7956a2fc4729604b77fc6b4835ce" kindref="member">lect</ref>,r.<ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaNode_1a5e1918516db50c22d1b1587b413c7d83" kindref="member">p</ref>))<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="namespaceGecode_1_1Int_1a6c8c36ec855e57c1638ce9e531a486bf" kindref="member">plus</ref>(l.<ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaNode_1a190cd665b77fe379ab02cc2bd34a3dbb" kindref="member">ect</ref>,r.<ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaNode_1a782f4dc36b047b4aa39960c4bd494df5" kindref="member">lp</ref>)<sp/>&gt;<sp/>r.<ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaNode_1afb5d7956a2fc4729604b77fc6b4835ce" kindref="member">lect</ref>);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaNode_1afb5d7956a2fc4729604b77fc6b4835ce" kindref="member">lect</ref><sp/>=<sp/><ref refid="namespaceGecode_1_1Int_1a6c8c36ec855e57c1638ce9e531a486bf" kindref="member">plus</ref>(l.<ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaNode_1a190cd665b77fe379ab02cc2bd34a3dbb" kindref="member">ect</ref>,r.<ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaNode_1a782f4dc36b047b4aa39960c4bd494df5" kindref="member">lp</ref>);<sp/><ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaNode_1abbdf9d71d0108564674a08d67af000c2" kindref="member">resEct</ref><sp/>=<sp/>r.<ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaNode_1af789b58419478247e65c81c0fbf2c2be" kindref="member">resLp</ref>;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert((<ref refid="namespaceGecode_1_1Int_1a6c8c36ec855e57c1638ce9e531a486bf" kindref="member">plus</ref>(l.<ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaNode_1afb5d7956a2fc4729604b77fc6b4835ce" kindref="member">lect</ref>,r.<ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaNode_1a5e1918516db50c22d1b1587b413c7d83" kindref="member">p</ref>)<sp/>&gt;<sp/>r.<ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaNode_1afb5d7956a2fc4729604b77fc6b4835ce" kindref="member">lect</ref>)<sp/>&amp;&amp;<sp/></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="namespaceGecode_1_1Int_1a6c8c36ec855e57c1638ce9e531a486bf" kindref="member">plus</ref>(l.<ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaNode_1afb5d7956a2fc4729604b77fc6b4835ce" kindref="member">lect</ref>,r.<ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaNode_1a5e1918516db50c22d1b1587b413c7d83" kindref="member">p</ref>)<sp/>&gt;<sp/><ref refid="namespaceGecode_1_1Int_1a6c8c36ec855e57c1638ce9e531a486bf" kindref="member">plus</ref>(l.<ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaNode_1a190cd665b77fe379ab02cc2bd34a3dbb" kindref="member">ect</ref>,r.<ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaNode_1a782f4dc36b047b4aa39960c4bd494df5" kindref="member">lp</ref>)));</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaNode_1afb5d7956a2fc4729604b77fc6b4835ce" kindref="member">lect</ref><sp/>=<sp/><ref refid="namespaceGecode_1_1Int_1a6c8c36ec855e57c1638ce9e531a486bf" kindref="member">plus</ref>(l.<ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaNode_1afb5d7956a2fc4729604b77fc6b4835ce" kindref="member">lect</ref>,r.<ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaNode_1a5e1918516db50c22d1b1587b413c7d83" kindref="member">p</ref>);<sp/><ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaNode_1abbdf9d71d0108564674a08d67af000c2" kindref="member">resEct</ref><sp/>=<sp/>l.<ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaNode_1abbdf9d71d0108564674a08d67af000c2" kindref="member">resEct</ref>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>TaskView&gt;</highlight></codeline>
<codeline lineno="138" refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaTree_1a27741cecb8d9855c3d281040f0ed9216" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaTree_1a27741cecb8d9855c3d281040f0ed9216" kindref="member">OmegaLambdaTree&lt;TaskView&gt;::OmegaLambdaTree</ref>(<ref refid="classGecode_1_1Region" kindref="compound">Region</ref>&amp;<sp/>r,<sp/></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGecode_1_1Int_1_1TaskViewArray" kindref="compound">TaskViewArray&lt;TaskView&gt;</ref>&amp;<sp/>t,</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>inc)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classGecode_1_1Int_1_1TaskTree" kindref="compound">TaskTree</ref>&lt;TaskView,<ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaNode" kindref="compound">OmegaLambdaNode</ref>&gt;(r,t)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inc)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Enter<sp/>all<sp/>tasks<sp/>into<sp/>tree<sp/>(omega<sp/>=<sp/>all<sp/>tasks,<sp/>lambda<sp/>=<sp/>empty)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=<ref refid="classGecode_1_1Int_1_1TaskTree_1a588d7ff506e04319c9730a20686c5736" kindref="member">tasks</ref>.size();<sp/>i--;<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Int_1_1TaskTree_1aab3d5439983995ce1a163f34acff2da4" kindref="member">leaf</ref>(i).p<sp/>=<sp/><ref refid="classGecode_1_1Int_1_1TaskTree_1aab3d5439983995ce1a163f34acff2da4" kindref="member">leaf</ref>(i).lp<sp/>=<sp/><ref refid="classGecode_1_1Int_1_1TaskTree_1a588d7ff506e04319c9730a20686c5736" kindref="member">tasks</ref>[i].pmin();</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Int_1_1TaskTree_1aab3d5439983995ce1a163f34acff2da4" kindref="member">leaf</ref>(i).ect<sp/>=<sp/><ref refid="classGecode_1_1Int_1_1TaskTree_1aab3d5439983995ce1a163f34acff2da4" kindref="member">leaf</ref>(i).lect<sp/>=<sp/><ref refid="classGecode_1_1Int_1_1TaskTree_1a588d7ff506e04319c9730a20686c5736" kindref="member">tasks</ref>[i].est()+<ref refid="classGecode_1_1Int_1_1TaskTree_1a588d7ff506e04319c9730a20686c5736" kindref="member">tasks</ref>[i].pmin();</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Int_1_1TaskTree_1aab3d5439983995ce1a163f34acff2da4" kindref="member">leaf</ref>(i).resEct<sp/>=<sp/><ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaNode_1a87f20ae6860376edfaa48f0236ca567e" kindref="member">OmegaLambdaNode::undef</ref>;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Int_1_1TaskTree_1aab3d5439983995ce1a163f34acff2da4" kindref="member">leaf</ref>(i).resLp<sp/>=<sp/><ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaNode_1a87f20ae6860376edfaa48f0236ca567e" kindref="member">OmegaLambdaNode::undef</ref>;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Int_1_1TaskTree_1ae19f603654fbcfb07f639fc1b235872f" kindref="member">update</ref>();</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Enter<sp/>no<sp/>tasks<sp/>into<sp/>tree<sp/>(omega<sp/>=<sp/>empty,<sp/>lambda<sp/>=<sp/>empty)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=<ref refid="classGecode_1_1Int_1_1TaskTree_1a588d7ff506e04319c9730a20686c5736" kindref="member">tasks</ref>.size();<sp/>i--;<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Int_1_1TaskTree_1aab3d5439983995ce1a163f34acff2da4" kindref="member">leaf</ref>(i).p<sp/>=<sp/><ref refid="classGecode_1_1Int_1_1TaskTree_1aab3d5439983995ce1a163f34acff2da4" kindref="member">leaf</ref>(i).lp<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Int_1_1TaskTree_1aab3d5439983995ce1a163f34acff2da4" kindref="member">leaf</ref>(i).ect<sp/>=<sp/><ref refid="classGecode_1_1Int_1_1TaskTree_1aab3d5439983995ce1a163f34acff2da4" kindref="member">leaf</ref>(i).lect<sp/>=<sp/>-<ref refid="namespaceGecode_1_1Int_1_1Limits_1a5a8edf24fe7e29c7159587b7e7d0260a" kindref="member">Int::Limits::infinity</ref>;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Int_1_1TaskTree_1aab3d5439983995ce1a163f34acff2da4" kindref="member">leaf</ref>(i).resEct<sp/>=<sp/><ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaNode_1a87f20ae6860376edfaa48f0236ca567e" kindref="member">OmegaLambdaNode::undef</ref>;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Int_1_1TaskTree_1aab3d5439983995ce1a163f34acff2da4" kindref="member">leaf</ref>(i).resLp<sp/>=<sp/><ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaNode_1a87f20ae6860376edfaa48f0236ca567e" kindref="member">OmegaLambdaNode::undef</ref>;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGecode_1_1Int_1_1TaskTree_1ac3c4f8d8062e3f4184e0dc0f8e3f0780" kindref="member">init</ref>();</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>TaskView&gt;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="165" refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaTree_1a05c17f20b201b8ccb478d673d2ccb170" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaTree_1a05c17f20b201b8ccb478d673d2ccb170" kindref="member">OmegaLambdaTree&lt;TaskView&gt;::shift</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>That<sp/>means<sp/>that<sp/>i<sp/>is<sp/>in<sp/>omega</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(leaf(i).ect<sp/>&gt;<sp/>-<ref refid="namespaceGecode_1_1Int_1_1Limits_1a5a8edf24fe7e29c7159587b7e7d0260a" kindref="member">Int::Limits::infinity</ref>);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>leaf(i).p<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>leaf(i).ect<sp/>=<sp/>-<ref refid="namespaceGecode_1_1Int_1_1Limits_1a5a8edf24fe7e29c7159587b7e7d0260a" kindref="member">Int::Limits::infinity</ref>;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>leaf(i).resEct<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>leaf(i).resLp<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>update(i);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>TaskView&gt;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177" refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaTree_1a82f34689f9129676e75482ecb05f85c8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaTree_1a82f34689f9129676e75482ecb05f85c8" kindref="member">OmegaLambdaTree&lt;TaskView&gt;::oinsert</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>leaf(i).p<sp/>=<sp/>tasks[i].pmin();<sp/></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>leaf(i).ect<sp/>=<sp/>tasks[i].est()+tasks[i].pmin();</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>update(i);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>TaskView&gt;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185" refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaTree_1ab03e58572750e18b3c9ead0c019bfd85" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaTree_1ab03e58572750e18b3c9ead0c019bfd85" kindref="member">OmegaLambdaTree&lt;TaskView&gt;::linsert</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>leaf(i).lp<sp/>=<sp/>tasks[i].pmin();<sp/></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>leaf(i).lect<sp/>=<sp/>tasks[i].est()+tasks[i].pmin();</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>leaf(i).resEct<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>leaf(i).resLp<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>update(i);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>TaskView&gt;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195" refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaTree_1a0ee1f5a8d092a81c8340b8366e9cadbd" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaTree_1a0ee1f5a8d092a81c8340b8366e9cadbd" kindref="member">OmegaLambdaTree&lt;TaskView&gt;::lremove</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>leaf(i).lp<sp/>=<sp/>0;<sp/></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>leaf(i).lect<sp/>=<sp/>-<ref refid="namespaceGecode_1_1Int_1_1Limits_1a5a8edf24fe7e29c7159587b7e7d0260a" kindref="member">Int::Limits::infinity</ref>;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>leaf(i).resEct<sp/>=<sp/><ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaNode_1a87f20ae6860376edfaa48f0236ca567e" kindref="member">OmegaLambdaNode::undef</ref>;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>leaf(i).resLp<sp/>=<sp/><ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaNode_1a87f20ae6860376edfaa48f0236ca567e" kindref="member">OmegaLambdaNode::undef</ref>;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>update(i);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>TaskView&gt;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205" refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaTree_1a02f805b04a686d75951df2df8057d4be" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaTree_1a02f805b04a686d75951df2df8057d4be" kindref="member">OmegaLambdaTree&lt;TaskView&gt;::lempty</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>root().resEct<sp/>&lt;<sp/>0;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>TaskView&gt;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="211" refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaTree_1a9a9a71821f4cee13980927d35382a348" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaTree_1a9a9a71821f4cee13980927d35382a348" kindref="member">OmegaLambdaTree&lt;TaskView&gt;::responsible</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>root().resEct;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>TaskView&gt;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="217" refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaTree_1a96e98fea91f3a4f541eef2023da39e93" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaTree_1a96e98fea91f3a4f541eef2023da39e93" kindref="member">OmegaLambdaTree&lt;TaskView&gt;::ect</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>root().ect;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>TaskView&gt;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>forceinline<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="223" refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaTree_1a1c7f5f14a7b969f6355328f0f4ed143f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classGecode_1_1Int_1_1Unary_1_1OmegaLambdaTree_1a1c7f5f14a7b969f6355328f0f4ed143f" kindref="member">OmegaLambdaTree&lt;TaskView&gt;::lect</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>root().lect;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="227"><highlight class="normal">}}}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="comment">//<sp/>STATISTICS:<sp/>int-prop</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/usr/include/gecode/int/unary/tree.hpp"/>
  </compounddef>
</doxygen>
