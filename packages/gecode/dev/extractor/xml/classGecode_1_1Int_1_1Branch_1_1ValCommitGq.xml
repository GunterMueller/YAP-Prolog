<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classGecode_1_1Int_1_1Branch_1_1ValCommitGq" kind="class" prot="public">
    <compoundname>Gecode::Int::Branch::ValCommitGq</compoundname>
    <basecompoundref refid="classGecode_1_1ValCommit" prot="public" virt="non-virtual">Gecode::ValCommit&lt; View, int &gt;</basecompoundref>
    <includes refid="int_2branch_8hh" local="no">branch.hh</includes>
    <templateparamlist>
      <param>
        <type>class <ref refid="classGecode_1_1ValCommit_1ac14c515eb7d66bdcba521e13eb0db0da" kindref="member">View</ref></type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classGecode_1_1Int_1_1Branch_1_1ValCommitGq_1a3194b1a66bfd1de06690974884cacc54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Int::Branch::ValCommitGq&lt; View &gt;::ValCommitGq</definition>
        <argsstring>(Space &amp;home, const ValBranch &amp;vb)</argsstring>
        <name>ValCommitGq</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1ValBranch" kindref="compound">ValBranch</ref> &amp;</type>
          <declname>vb</declname>
        </param>
        <briefdescription>
<para>Constructor for initialization. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/branch.hh" line="563" column="1" bodyfile="/usr/include/gecode/int/branch/val-commit.hpp" bodystart="100" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Branch_1_1ValCommitGq_1ab35eebf9aced14d7370e7e119325b278" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Int::Branch::ValCommitGq&lt; View &gt;::ValCommitGq</definition>
        <argsstring>(Space &amp;home, bool shared, ValCommitGq &amp;vc)</argsstring>
        <name>ValCommitGq</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>shared</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1Branch_1_1ValCommitGq" kindref="compound">ValCommitGq</ref> &amp;</type>
          <declname>vc</declname>
        </param>
        <briefdescription>
<para>Constructor for cloning. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/branch.hh" line="565" column="1" bodyfile="/usr/include/gecode/int/branch/val-commit.hpp" bodystart="104" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Branch_1_1ValCommitGq_1ac44246cbf0f3b8492ebc19bb67017f7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Int::Branch::ValCommitGq&lt; View &gt;::commit</definition>
        <argsstring>(Space &amp;home, unsigned int a, View x, int i, int n)</argsstring>
        <name>commit</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ValCommit_1ac14c515eb7d66bdcba521e13eb0db0da" kindref="member">View</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Commit view <emphasis>x</emphasis> at position <emphasis>i</emphasis> to value <emphasis>n</emphasis> for alternative <emphasis>a</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/branch.hh" line="567" column="1" bodyfile="/usr/include/gecode/int/branch/val-commit.hpp" bodystart="108" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Branch_1_1ValCommitGq_1a43b7cb2f101803e0579a84e9db7f90bf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGecode_1_1NGL" kindref="compound">NGL</ref> *</type>
        <definition>forceinline NGL * Gecode::Int::Branch::ValCommitGq&lt; View &gt;::ngl</definition>
        <argsstring>(Space &amp;home, unsigned int a, View x, int n) const </argsstring>
        <name>ngl</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ValCommit_1ac14c515eb7d66bdcba521e13eb0db0da" kindref="member">View</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Create no-good literal for alternative <emphasis>a</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/branch.hh" line="569" column="1" bodyfile="/usr/include/gecode/int/branch/val-commit.hpp" bodystart="113" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Branch_1_1ValCommitGq_1acc1987ae6b427166bb9f471818a6db82" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Int::Branch::ValCommitGq&lt; View &gt;::print</definition>
        <argsstring>(const Space &amp;home, unsigned int a, View x, int i, int n, std::ostream &amp;o) const </argsstring>
        <name>print</name>
        <param>
          <type>const <ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ValCommit_1ac14c515eb7d66bdcba521e13eb0db0da" kindref="member">View</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>std::ostream &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
<para>Print on <emphasis>o</emphasis> the alternative <emphasis>with</emphasis> view <emphasis>x</emphasis> at position <emphasis>i</emphasis> and value <emphasis>n</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/branch.hh" line="571" column="1" bodyfile="/usr/include/gecode/int/branch/val-commit.hpp" bodystart="121" bodyend="125"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Value commit class for greater or equal. </para>    </briefdescription>
    <detaileddescription>
<para>Requires<programlisting><codeline><highlight class="preprocessor">#include<sp/>&lt;gecode/int/branch.hh&gt;</highlight><highlight class="normal"><sp/></highlight></codeline>
</programlisting> </para>    </detaileddescription>
    <inheritancegraph>
      <node id="7410">
        <label>Gecode::ValCommit&lt; View, int &gt;</label>
        <link refid="classGecode_1_1ValCommit"/>
      </node>
      <node id="7409">
        <label>Gecode::Int::Branch::ValCommitGq&lt; View &gt;</label>
        <link refid="classGecode_1_1Int_1_1Branch_1_1ValCommitGq"/>
        <childnode refid="7410" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="7412">
        <label>Gecode::ValCommit&lt; View, int &gt;</label>
        <link refid="classGecode_1_1ValCommit"/>
      </node>
      <node id="7411">
        <label>Gecode::Int::Branch::ValCommitGq&lt; View &gt;</label>
        <link refid="classGecode_1_1Int_1_1Branch_1_1ValCommitGq"/>
        <childnode refid="7412" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/usr/include/gecode/int/branch.hh" line="560" column="1" bodyfile="/usr/include/gecode/int/branch.hh" bodystart="560" bodyend="573"/>
    <listofallmembers>
      <member refid="classGecode_1_1Int_1_1Branch_1_1ValCommitGq_1ac44246cbf0f3b8492ebc19bb67017f7f" prot="public" virt="non-virtual"><scope>Gecode::Int::Branch::ValCommitGq</scope><name>commit</name></member>
      <member refid="classGecode_1_1ValCommit_1a99b526c56e60c02474ce7400a087d5a5" prot="public" virt="non-virtual"><scope>Gecode::Int::Branch::ValCommitGq</scope><name>dispose</name></member>
      <member refid="classGecode_1_1Int_1_1Branch_1_1ValCommitGq_1a43b7cb2f101803e0579a84e9db7f90bf" prot="public" virt="non-virtual"><scope>Gecode::Int::Branch::ValCommitGq</scope><name>ngl</name></member>
      <member refid="classGecode_1_1ValCommit_1a27594fca7c49155fdd66218963b28cfe" prot="public" virt="non-virtual"><scope>Gecode::Int::Branch::ValCommitGq</scope><name>notice</name></member>
      <member refid="classGecode_1_1Int_1_1Branch_1_1ValCommitGq_1acc1987ae6b427166bb9f471818a6db82" prot="public" virt="non-virtual"><scope>Gecode::Int::Branch::ValCommitGq</scope><name>print</name></member>
      <member refid="classGecode_1_1ValCommit_1abca8d62ca4173efc87a20f442c11e25e" prot="public" virt="non-virtual"><scope>Gecode::Int::Branch::ValCommitGq</scope><name>Val</name></member>
      <member refid="classGecode_1_1ValCommit_1a920a0cd48c53c6e33ad4458313ae01b6" prot="public" virt="non-virtual"><scope>Gecode::Int::Branch::ValCommitGq</scope><name>ValCommit</name></member>
      <member refid="classGecode_1_1ValCommit_1a7cef4dd276cd789ff71e1ac479e78b2e" prot="public" virt="non-virtual"><scope>Gecode::Int::Branch::ValCommitGq</scope><name>ValCommit</name></member>
      <member refid="classGecode_1_1Int_1_1Branch_1_1ValCommitGq_1a3194b1a66bfd1de06690974884cacc54" prot="public" virt="non-virtual"><scope>Gecode::Int::Branch::ValCommitGq</scope><name>ValCommitGq</name></member>
      <member refid="classGecode_1_1Int_1_1Branch_1_1ValCommitGq_1ab35eebf9aced14d7370e7e119325b278" prot="public" virt="non-virtual"><scope>Gecode::Int::Branch::ValCommitGq</scope><name>ValCommitGq</name></member>
      <member refid="classGecode_1_1ValCommit_1ac14c515eb7d66bdcba521e13eb0db0da" prot="public" virt="non-virtual"><scope>Gecode::Int::Branch::ValCommitGq</scope><name>View</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
