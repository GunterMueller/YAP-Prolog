<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="namespaceGecode_1_1Search_1_1Config" kind="namespace">
    <compoundname>Gecode::Search::Config</compoundname>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespaceGecode_1_1Search_1_1Config_1afdb4be17b74fd329b8a800a7f9bd2aca" prot="public" static="no" mutable="no">
        <type>const bool</type>
        <definition>const bool Gecode::Search::Config::clone</definition>
        <argsstring></argsstring>
        <name>clone</name>
        <initializer>= true</initializer>
        <briefdescription>
<para>Whether engines create a clone when being initialized. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/search.hh" line="93" column="1" bodyfile="/usr/include/gecode/search.hh" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceGecode_1_1Search_1_1Config_1abe409869d3873cfc087738de405b4808" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double Gecode::Search::Config::threads</definition>
        <argsstring></argsstring>
        <name>threads</name>
        <initializer>= 1.0</initializer>
        <briefdescription>
<para>Number of threads to use. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/search.hh" line="95" column="1" bodyfile="/usr/include/gecode/search.hh" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceGecode_1_1Search_1_1Config_1a48008079eac43d0373f70179ce4a5cc7" prot="public" static="no" mutable="no">
        <type>const unsigned int</type>
        <definition>const unsigned int Gecode::Search::Config::c_d</definition>
        <argsstring></argsstring>
        <name>c_d</name>
        <initializer>= 8</initializer>
        <briefdescription>
<para>Create a clone after every <emphasis>c_d</emphasis> commits (commit distance) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/search.hh" line="97" column="1" bodyfile="/usr/include/gecode/search.hh" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceGecode_1_1Search_1_1Config_1a37b274de3aedd81f17b3c7f70ef49000" prot="public" static="no" mutable="no">
        <type>const unsigned int</type>
        <definition>const unsigned int Gecode::Search::Config::a_d</definition>
        <argsstring></argsstring>
        <name>a_d</name>
        <initializer>= 2</initializer>
        <briefdescription>
<para>Create a clone during recomputation if distance is greater than <emphasis>a_d</emphasis> (adaptive distance) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/search.hh" line="99" column="1" bodyfile="/usr/include/gecode/search.hh" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceGecode_1_1Search_1_1Config_1aa3849b8a7359cd020d9a27b9292874c8" prot="public" static="no" mutable="no">
        <type>const unsigned int</type>
        <definition>const unsigned int Gecode::Search::Config::steal_limit</definition>
        <argsstring></argsstring>
        <name>steal_limit</name>
        <initializer>= 3</initializer>
        <briefdescription>
<para>Minimal number of open nodes for stealing. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/search.hh" line="102" column="1" bodyfile="/usr/include/gecode/search.hh" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceGecode_1_1Search_1_1Config_1a28206d346c274e14b0cada3fe389070f" prot="public" static="no" mutable="no">
        <type>const unsigned int</type>
        <definition>const unsigned int Gecode::Search::Config::initial_delay</definition>
        <argsstring></argsstring>
        <name>initial_delay</name>
        <initializer>= 5</initializer>
        <briefdescription>
<para>Initial delay in milliseconds for all but first worker thread. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/search.hh" line="104" column="1" bodyfile="/usr/include/gecode/search.hh" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceGecode_1_1Search_1_1Config_1a98e80176f3ea4c97c2f5976bce01c9a0" prot="public" static="no" mutable="no">
        <type>const unsigned int</type>
        <definition>const unsigned int Gecode::Search::Config::nogoods_limit</definition>
        <argsstring></argsstring>
        <name>nogoods_limit</name>
        <initializer>= 128</initializer>
        <briefdescription>
<para>Depth limit for no-good generation during search. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/search.hh" line="107" column="1" bodyfile="/usr/include/gecode/search.hh" bodystart="107" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Search configuration </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/usr/include/gecode/search.hh" line="91" column="1"/>
  </compounddef>
</doxygen>
