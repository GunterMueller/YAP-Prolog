<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classGecode_1_1Set_1_1ConstSetView" kind="class" prot="public">
    <compoundname>Gecode::Set::ConstSetView</compoundname>
    <basecompoundref refid="classGecode_1_1ConstView" prot="public" virt="non-virtual">Gecode::ConstView&lt; SetView &gt;</basecompoundref>
    <includes refid="set_2view_8hpp" local="no">view.hpp</includes>
      <sectiondef kind="user-defined">
      <header>View comparison</header>
      <memberdef kind="function" id="classGecode_1_1Set_1_1ConstSetView_1a227c7d4aa341a10ebdc9905f48d73a5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool same</definition>
        <argsstring>(const ConstSetView &amp;x, const ConstSetView &amp;y)</argsstring>
        <name>same</name>
        <param>
          <type>const <ref refid="classGecode_1_1Set_1_1ConstSetView" kindref="compound">ConstSetView</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1Set_1_1ConstSetView" kindref="compound">ConstSetView</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Test whether views <emphasis>x</emphasis> and <emphasis>y</emphasis> are the same. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="321" column="1" bodyfile="/usr/include/gecode/set/view/const.hpp" bodystart="688" bodyend="696"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1ConstSetView_1aebb2b28f770043349d8208b380674309" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool before</definition>
        <argsstring>(const ConstSetView &amp;x, const ConstSetView &amp;y)</argsstring>
        <name>before</name>
        <param>
          <type>const <ref refid="classGecode_1_1Set_1_1ConstSetView" kindref="compound">ConstSetView</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1Set_1_1ConstSetView" kindref="compound">ConstSetView</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Test whether view <emphasis>x</emphasis> comes before <emphasis>y</emphasis> (arbitrary order) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="323" column="1" bodyfile="/usr/include/gecode/set/view/const.hpp" bodystart="698" bodyend="708"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Constructors and initialization</header>
      <memberdef kind="function" id="classGecode_1_1Set_1_1ConstSetView_1aabefcaa7d5dbb456e213669e2678de87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Set::ConstSetView::ConstSetView</definition>
        <argsstring>(void)</argsstring>
        <name>ConstSetView</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="205" column="1" bodyfile="/usr/include/gecode/set/view/const.hpp" bodystart="85" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1ConstSetView_1a11881c622fe6d70a7444800cb4adc164" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Set::ConstSetView::ConstSetView</definition>
        <argsstring>(Space &amp;home, const IntSet &amp;s)</argsstring>
        <name>ConstSetView</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1IntSet" kindref="compound">IntSet</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Construct with <emphasis>s</emphasis> as the domain. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="207" column="1" bodyfile="/usr/include/gecode/set/view/const.hpp" bodystart="88" bodyend="103"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Value access</header>
      <memberdef kind="function" id="classGecode_1_1Set_1_1ConstSetView_1a236f70cf598a7ad992b5bd75bfd052f7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>forceinline unsigned int Gecode::Set::ConstSetView::cardMin</definition>
        <argsstring>(void) const </argsstring>
        <name>cardMin</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return minimum cardinality. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="213" column="1" bodyfile="/usr/include/gecode/set/view/const.hpp" bodystart="131" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1ConstSetView_1a7c6301dc5017a0e41d40461d8de407d6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>forceinline unsigned int Gecode::Set::ConstSetView::cardMax</definition>
        <argsstring>(void) const </argsstring>
        <name>cardMax</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return maximum cardinality. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="215" column="1" bodyfile="/usr/include/gecode/set/view/const.hpp" bodystart="134" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1ConstSetView_1a42192413e2ffc0fd4a12c9d6694a4c00" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Set::ConstSetView::lubMin</definition>
        <argsstring>(void) const </argsstring>
        <name>lubMin</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return minimum of the least upper bound. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="217" column="1" bodyfile="/usr/include/gecode/set/view/const.hpp" bodystart="137" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1ConstSetView_1ab4fbcb1e46dc3328711b7dfa784ab484" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Set::ConstSetView::lubMax</definition>
        <argsstring>(void) const </argsstring>
        <name>lubMax</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return maximum of the least upper bound. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="219" column="1" bodyfile="/usr/include/gecode/set/view/const.hpp" bodystart="142" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1ConstSetView_1a58f555c7c768cfc02e35148186bc9d07" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Gecode::Set::ConstSetView::lubMinN</definition>
        <argsstring>(unsigned int n) const </argsstring>
        <name>lubMinN</name>
        <param>
          <type>unsigned int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Return n-th smallest element of the least upper bound. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="221" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1ConstSetView_1a8d30f8aedfe104b9d806874609d92d7a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Set::ConstSetView::glbMin</definition>
        <argsstring>(void) const </argsstring>
        <name>glbMin</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return minimum of the greatest lower bound. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="223" column="1" bodyfile="/usr/include/gecode/set/view/const.hpp" bodystart="147" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1ConstSetView_1a961a3d4fbed9b9fb4576e9df900fda0f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Set::ConstSetView::glbMax</definition>
        <argsstring>(void) const </argsstring>
        <name>glbMax</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return maximum of the greatest lower bound. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="225" column="1" bodyfile="/usr/include/gecode/set/view/const.hpp" bodystart="150" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1ConstSetView_1aa7832e29dc7cf15649db57841df76715" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>forceinline unsigned int Gecode::Set::ConstSetView::glbSize</definition>
        <argsstring>(void) const </argsstring>
        <name>glbSize</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return the number of elements in the greatest lower bound. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="228" column="1" bodyfile="/usr/include/gecode/set/view/const.hpp" bodystart="106" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1ConstSetView_1ac7b65ab945a39883a2f8425f1ed2bf76" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>forceinline unsigned int Gecode::Set::ConstSetView::lubSize</definition>
        <argsstring>(void) const </argsstring>
        <name>lubSize</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return the number of elements in the least upper bound. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="230" column="1" bodyfile="/usr/include/gecode/set/view/const.hpp" bodystart="109" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1ConstSetView_1ad80ed0d577406ec0feb540b228024584" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>forceinline unsigned int Gecode::Set::ConstSetView::unknownSize</definition>
        <argsstring>(void) const </argsstring>
        <name>unknownSize</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return the number of unknown elements. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="232" column="1" bodyfile="/usr/include/gecode/set/view/const.hpp" bodystart="112" bodyend="112"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Domain tests</header>
      <memberdef kind="function" id="classGecode_1_1Set_1_1ConstSetView_1ad5a63733ffc7c5706472147f63499786" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::Set::ConstSetView::contains</definition>
        <argsstring>(int i) const </argsstring>
        <name>contains</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Test whether <emphasis>i</emphasis> is in the greatest lower bound. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="238" column="1" bodyfile="/usr/include/gecode/set/view/const.hpp" bodystart="115" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1ConstSetView_1acb05946f02d2a7e161177617b7bf262e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::Set::ConstSetView::notContains</definition>
        <argsstring>(int i) const </argsstring>
        <name>notContains</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Test whether <emphasis>i</emphasis> is not in the least upper bound. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="240" column="1" bodyfile="/usr/include/gecode/set/view/const.hpp" bodystart="126" bodyend="128"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Domain update by value</header>
      <memberdef kind="function" id="classGecode_1_1Set_1_1ConstSetView_1a5fdcb3f1db64ada8c28c0b6687815c9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Set::ConstSetView::cardMin</definition>
        <argsstring>(Space &amp;home, unsigned int m)</argsstring>
        <name>cardMin</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Restrict cardinality to be greater than or equal to <emphasis>m</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="247" column="1" bodyfile="/usr/include/gecode/set/view/const.hpp" bodystart="153" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1ConstSetView_1a5261b770e63df165b68edba0e3311a80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Set::ConstSetView::cardMax</definition>
        <argsstring>(Space &amp;home, unsigned int m)</argsstring>
        <name>cardMax</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Restrict cardinality to be less than or equal to <emphasis>m</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="249" column="1" bodyfile="/usr/include/gecode/set/view/const.hpp" bodystart="158" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1ConstSetView_1a7a137a197c000ab824285bb7d48e432f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Set::ConstSetView::include</definition>
        <argsstring>(Space &amp;home, int i, int j)</argsstring>
        <name>include</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>Update greatest lower bound to include all elements between and including <emphasis>i</emphasis> and <emphasis>j</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="254" column="1" bodyfile="/usr/include/gecode/set/view/const.hpp" bodystart="187" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1ConstSetView_1afc0de40dda24a6567f97b9d64796f07a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Set::ConstSetView::exclude</definition>
        <argsstring>(Space &amp;home, int i, int j)</argsstring>
        <name>exclude</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>Restrict least upper bound to not contain all elements between and including <emphasis>i</emphasis> and <emphasis>j</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="259" column="1" bodyfile="/usr/include/gecode/set/view/const.hpp" bodystart="195" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1ConstSetView_1ab35289059c1796a035af226a69873164" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Set::ConstSetView::include</definition>
        <argsstring>(Space &amp;home, int i)</argsstring>
        <name>include</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Update greatest lower bound to contain <emphasis>i</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="261" column="1" bodyfile="/usr/include/gecode/set/view/const.hpp" bodystart="163" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1ConstSetView_1ad4bf29c0d9bd7230a0ed322da624cd19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Set::ConstSetView::exclude</definition>
        <argsstring>(Space &amp;home, int i)</argsstring>
        <name>exclude</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Restrict least upper bound to not contain <emphasis>i</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="263" column="1" bodyfile="/usr/include/gecode/set/view/const.hpp" bodystart="168" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1ConstSetView_1a2b81ea8e6b9692a0a5c9653fd5b33c6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Set::ConstSetView::intersect</definition>
        <argsstring>(Space &amp;home, int i, int j)</argsstring>
        <name>intersect</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>Update least upper bound to contain at most all elements between and including <emphasis>i</emphasis> and <emphasis>j</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="268" column="1" bodyfile="/usr/include/gecode/set/view/const.hpp" bodystart="181" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1ConstSetView_1a37093341129d389d7e199d2f471e53fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>forceinline ModEvent Gecode::Set::ConstSetView::intersect</definition>
        <argsstring>(Space &amp;home, int i)</argsstring>
        <name>intersect</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Update least upper bound to contain at most the element <emphasis>i</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="270" column="1" bodyfile="/usr/include/gecode/set/view/const.hpp" bodystart="173" bodyend="178"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Domain update by range iterator</header>
      <memberdef kind="function" id="classGecode_1_1Set_1_1ConstSetView_1abdecaadeabbc3af48526143deb63035b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>ModEvent Gecode::Set::ConstSetView::excludeI</definition>
        <argsstring>(Space &amp;home, I &amp;i)</argsstring>
        <name>excludeI</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>I &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Remove range sequence described by <emphasis>i</emphasis> from least upper bound. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="277" column="1" bodyfile="/usr/include/gecode/set/view/const.hpp" bodystart="203" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1ConstSetView_1a8583aec5942130fbdc3228200565306f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>ModEvent Gecode::Set::ConstSetView::includeI</definition>
        <argsstring>(Space &amp;home, I &amp;i)</argsstring>
        <name>includeI</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>I &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Include range sequence described by <emphasis>i</emphasis> in greatest lower bound. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="279" column="1" bodyfile="/usr/include/gecode/set/view/const.hpp" bodystart="209" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1ConstSetView_1aaa604c47b188ea7f154bce5d44930f2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type><ref refid="group__TaskVarMEPC_1gafa985ae465bd12df08e29252cdb7519b" kindref="member">ModEvent</ref></type>
        <definition>ModEvent Gecode::Set::ConstSetView::intersectI</definition>
        <argsstring>(Space &amp;home, I &amp;iter)</argsstring>
        <name>intersectI</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>I &amp;</type>
          <declname>iter</declname>
        </param>
        <briefdescription>
<para>Intersect least upper bound with range sequence described by <emphasis>i</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="281" column="1" bodyfile="/usr/include/gecode/set/view/const.hpp" bodystart="215" bodyend="218"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Cloning</header>
      <memberdef kind="function" id="classGecode_1_1Set_1_1ConstSetView_1a5ba1699a283de9d148854797515d9b3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Set::ConstSetView::update</definition>
        <argsstring>(Space &amp;home, bool share, ConstSetView &amp;y)</argsstring>
        <name>update</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>share</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Set_1_1ConstSetView" kindref="compound">ConstSetView</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Update this view to be a clone of view <emphasis>y</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="287" column="1" bodyfile="/usr/include/gecode/set/view/const.hpp" bodystart="221" bodyend="239"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Delta information for advisors</header>
      <memberdef kind="function" id="classGecode_1_1Set_1_1ConstSetView_1a3fe14563dd1b9a418847063fdf60d56f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Set::ConstSetView::glbMin</definition>
        <argsstring>(const Delta &amp;d) const </argsstring>
        <name>glbMin</name>
        <param>
          <type>const <ref refid="classGecode_1_1Delta" kindref="compound">Delta</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Return minimum value just pruned from glb. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="293" column="1" bodyfile="/usr/include/gecode/set/view/const.hpp" bodystart="247" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1ConstSetView_1a3f949412269e3e099fbe875037d439e1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Set::ConstSetView::glbMax</definition>
        <argsstring>(const Delta &amp;d) const </argsstring>
        <name>glbMax</name>
        <param>
          <type>const <ref refid="classGecode_1_1Delta" kindref="compound">Delta</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Return maximum value just pruned from glb. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="295" column="1" bodyfile="/usr/include/gecode/set/view/const.hpp" bodystart="252" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1ConstSetView_1a5b5cff487562733b5c9dc8b3a29898f5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::Set::ConstSetView::glbAny</definition>
        <argsstring>(const Delta &amp;d) const </argsstring>
        <name>glbAny</name>
        <param>
          <type>const <ref refid="classGecode_1_1Delta" kindref="compound">Delta</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Test whether arbitrary values got pruned from glb. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="297" column="1" bodyfile="/usr/include/gecode/set/view/const.hpp" bodystart="257" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1ConstSetView_1adce50500e51d4838639d8f09ce5ccf35" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Set::ConstSetView::lubMin</definition>
        <argsstring>(const Delta &amp;d) const </argsstring>
        <name>lubMin</name>
        <param>
          <type>const <ref refid="classGecode_1_1Delta" kindref="compound">Delta</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Return minimum value just pruned from lub. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="299" column="1" bodyfile="/usr/include/gecode/set/view/const.hpp" bodystart="262" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1ConstSetView_1ab7effc190d389f9082f2b9e6fa211232" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>forceinline int Gecode::Set::ConstSetView::lubMax</definition>
        <argsstring>(const Delta &amp;d) const </argsstring>
        <name>lubMax</name>
        <param>
          <type>const <ref refid="classGecode_1_1Delta" kindref="compound">Delta</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Return maximum value just pruned from lub. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="301" column="1" bodyfile="/usr/include/gecode/set/view/const.hpp" bodystart="267" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Set_1_1ConstSetView_1ab95c909323b9a2bb1f06af98da801370" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::Set::ConstSetView::lubAny</definition>
        <argsstring>(const Delta &amp;d) const </argsstring>
        <name>lubAny</name>
        <param>
          <type>const <ref refid="classGecode_1_1Delta" kindref="compound">Delta</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Test whether arbitrary values got pruned from lub. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="303" column="1" bodyfile="/usr/include/gecode/set/view/const.hpp" bodystart="272" bodyend="275"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classGecode_1_1Set_1_1ConstSetView_1a339a2b3d44dc9f852c22897aa7597d96" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class LubRanges&lt; ConstSetView &gt;</definition>
        <argsstring></argsstring>
        <name>LubRanges&lt; ConstSetView &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="164" column="1" bodyfile="/usr/include/gecode/set/view.hpp" bodystart="191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classGecode_1_1Set_1_1ConstSetView_1ac59ba5be76cfe3c7bd4ae94af1eb6a7c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class GlbRanges&lt; ConstSetView &gt;</definition>
        <argsstring></argsstring>
        <name>GlbRanges&lt; ConstSetView &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="164" column="1" bodyfile="/usr/include/gecode/set/view.hpp" bodystart="192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classGecode_1_1Set_1_1ConstSetView_1ad07294d8ec8a7787ab91e2dff5752324" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool Gecode::Set::same</definition>
        <argsstring>(const Gecode::Set::ConstSetView &amp;, const Gecode::Set::ConstSetView &amp;)</argsstring>
        <name>Gecode::Set::same</name>
        <param>
          <type>const <ref refid="classGecode_1_1Set_1_1ConstSetView" kindref="compound">Gecode::Set::ConstSetView</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1Set_1_1ConstSetView" kindref="compound">Gecode::Set::ConstSetView</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="193" column="1"/>
      </memberdef>
      <memberdef kind="friend" id="classGecode_1_1Set_1_1ConstSetView_1ad8dd9bf483242d7cc5f01323b3d09a3d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool Gecode::Set::before</definition>
        <argsstring>(const Gecode::Set::ConstSetView &amp;, const Gecode::Set::ConstSetView &amp;)</argsstring>
        <name>Gecode::Set::before</name>
        <param>
          <type>const <ref refid="classGecode_1_1Set_1_1ConstSetView" kindref="compound">Gecode::Set::ConstSetView</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1Set_1_1ConstSetView" kindref="compound">Gecode::Set::ConstSetView</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="195" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classGecode_1_1Set_1_1ConstSetView_1a01ead23a05a2352a306f1f984991ac3d" prot="private" static="no" mutable="no">
        <type>int *</type>
        <definition>int* Gecode::Set::ConstSetView::ranges</definition>
        <argsstring></argsstring>
        <name>ranges</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="198" column="1" bodyfile="/usr/include/gecode/set/view.hpp" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Set_1_1ConstSetView_1a51948be7f5572cae0e4b58b162c5c9b0" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Gecode::Set::ConstSetView::size</definition>
        <argsstring></argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="199" column="1" bodyfile="/usr/include/gecode/set/view.hpp" bodystart="199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Set_1_1ConstSetView_1a9160d2e46d5b741b6411bbaebf93fb94" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int Gecode::Set::ConstSetView::domSize</definition>
        <argsstring></argsstring>
        <name>domSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="200" column="1" bodyfile="/usr/include/gecode/set/view.hpp" bodystart="200" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="related">
      <memberdef kind="function" id="classGecode_1_1Set_1_1ConstSetView_1ac9b46ae9303a34808d1bcba996782c86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Char</type>
          </param>
          <param>
            <type>class Traits</type>
          </param>
        </templateparamlist>
        <type>std::basic_ostream&lt; Char, Traits &gt; &amp;</type>
        <definition>std::basic_ostream&lt; Char, Traits &gt; &amp; operator&lt;&lt;</definition>
        <argsstring>(std::basic_ostream&lt; Char, Traits &gt; &amp;os, const ConstSetView &amp;x)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::basic_ostream&lt; Char, Traits &gt; &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1Set_1_1ConstSetView" kindref="compound">ConstSetView</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Print constant set view. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/set/view.hpp" line="181" column="1" bodyfile="/usr/include/gecode/set/view/print.hpp" bodystart="113" bodyend="120"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Constant view. </para>    </briefdescription>
    <detaileddescription>
<para>A constant set view <formula id="31">$x$</formula> for a set <formula id="36">$s$</formula> provides operations such that <formula id="31">$x$</formula> behaves like <formula id="36">$s$</formula>. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="1555">
        <label>Gecode::ConstView&lt; SetView &gt;</label>
        <link refid="classGecode_1_1ConstView"/>
      </node>
      <node id="1554">
        <label>Gecode::Set::ConstSetView</label>
        <link refid="classGecode_1_1Set_1_1ConstSetView"/>
        <childnode refid="1555" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1557">
        <label>Gecode::ConstView&lt; SetView &gt;</label>
        <link refid="classGecode_1_1ConstView"/>
      </node>
      <node id="1556">
        <label>Gecode::Set::ConstSetView</label>
        <link refid="classGecode_1_1Set_1_1ConstSetView"/>
        <childnode refid="1557" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/usr/include/gecode/set/view.hpp" line="190" column="1" bodyfile="/usr/include/gecode/set/view.hpp" bodystart="190" bodyend="306"/>
    <listofallmembers>
      <member refid="classGecode_1_1ConstView_1a4081cb5a97e8391b235dc11ff3c90ad9" prot="public" virt="non-virtual"><scope>Gecode::Set::ConstSetView</scope><name>afc</name></member>
      <member refid="classGecode_1_1ConstView_1a1e7c7e5b36175dd5a06382781f84df24" prot="public" virt="non-virtual"><scope>Gecode::Set::ConstSetView</scope><name>assigned</name></member>
      <member refid="classGecode_1_1Set_1_1ConstSetView_1aebb2b28f770043349d8208b380674309" prot="public" virt="non-virtual"><scope>Gecode::Set::ConstSetView</scope><name>before</name></member>
      <member refid="classGecode_1_1ConstView_1a0cc7502ec1d81feab4035e7e78233186" prot="public" virt="non-virtual"><scope>Gecode::Set::ConstSetView</scope><name>cancel</name></member>
      <member refid="classGecode_1_1ConstView_1a892e95a4cef1530ac569f4b1fdd5ff4f" prot="public" virt="non-virtual"><scope>Gecode::Set::ConstSetView</scope><name>cancel</name></member>
      <member refid="classGecode_1_1Set_1_1ConstSetView_1a7c6301dc5017a0e41d40461d8de407d6" prot="public" virt="non-virtual"><scope>Gecode::Set::ConstSetView</scope><name>cardMax</name></member>
      <member refid="classGecode_1_1Set_1_1ConstSetView_1a5261b770e63df165b68edba0e3311a80" prot="public" virt="non-virtual"><scope>Gecode::Set::ConstSetView</scope><name>cardMax</name></member>
      <member refid="classGecode_1_1Set_1_1ConstSetView_1a236f70cf598a7ad992b5bd75bfd052f7" prot="public" virt="non-virtual"><scope>Gecode::Set::ConstSetView</scope><name>cardMin</name></member>
      <member refid="classGecode_1_1Set_1_1ConstSetView_1a5fdcb3f1db64ada8c28c0b6687815c9a" prot="public" virt="non-virtual"><scope>Gecode::Set::ConstSetView</scope><name>cardMin</name></member>
      <member refid="classGecode_1_1Set_1_1ConstSetView_1aabefcaa7d5dbb456e213669e2678de87" prot="public" virt="non-virtual"><scope>Gecode::Set::ConstSetView</scope><name>ConstSetView</name></member>
      <member refid="classGecode_1_1Set_1_1ConstSetView_1a11881c622fe6d70a7444800cb4adc164" prot="public" virt="non-virtual"><scope>Gecode::Set::ConstSetView</scope><name>ConstSetView</name></member>
      <member refid="classGecode_1_1Set_1_1ConstSetView_1ad5a63733ffc7c5706472147f63499786" prot="public" virt="non-virtual"><scope>Gecode::Set::ConstSetView</scope><name>contains</name></member>
      <member refid="classGecode_1_1ConstView_1add4ca8530b19051f6bb64f38b0a943c0" prot="public" virt="non-virtual"><scope>Gecode::Set::ConstSetView</scope><name>degree</name></member>
      <member refid="classGecode_1_1Set_1_1ConstSetView_1a9160d2e46d5b741b6411bbaebf93fb94" prot="private" virt="non-virtual"><scope>Gecode::Set::ConstSetView</scope><name>domSize</name></member>
      <member refid="classGecode_1_1Set_1_1ConstSetView_1afc0de40dda24a6567f97b9d64796f07a" prot="public" virt="non-virtual"><scope>Gecode::Set::ConstSetView</scope><name>exclude</name></member>
      <member refid="classGecode_1_1Set_1_1ConstSetView_1ad4bf29c0d9bd7230a0ed322da624cd19" prot="public" virt="non-virtual"><scope>Gecode::Set::ConstSetView</scope><name>exclude</name></member>
      <member refid="classGecode_1_1Set_1_1ConstSetView_1abdecaadeabbc3af48526143deb63035b" prot="public" virt="non-virtual"><scope>Gecode::Set::ConstSetView</scope><name>excludeI</name></member>
      <member refid="classGecode_1_1Set_1_1ConstSetView_1ad8dd9bf483242d7cc5f01323b3d09a3d" prot="private" virt="non-virtual"><scope>Gecode::Set::ConstSetView</scope><name>Gecode::Set::before</name></member>
      <member refid="classGecode_1_1Set_1_1ConstSetView_1ad07294d8ec8a7787ab91e2dff5752324" prot="private" virt="non-virtual"><scope>Gecode::Set::ConstSetView</scope><name>Gecode::Set::same</name></member>
      <member refid="classGecode_1_1Set_1_1ConstSetView_1a5b5cff487562733b5c9dc8b3a29898f5" prot="public" virt="non-virtual"><scope>Gecode::Set::ConstSetView</scope><name>glbAny</name></member>
      <member refid="classGecode_1_1Set_1_1ConstSetView_1a961a3d4fbed9b9fb4576e9df900fda0f" prot="public" virt="non-virtual"><scope>Gecode::Set::ConstSetView</scope><name>glbMax</name></member>
      <member refid="classGecode_1_1Set_1_1ConstSetView_1a3f949412269e3e099fbe875037d439e1" prot="public" virt="non-virtual"><scope>Gecode::Set::ConstSetView</scope><name>glbMax</name></member>
      <member refid="classGecode_1_1Set_1_1ConstSetView_1a8d30f8aedfe104b9d806874609d92d7a" prot="public" virt="non-virtual"><scope>Gecode::Set::ConstSetView</scope><name>glbMin</name></member>
      <member refid="classGecode_1_1Set_1_1ConstSetView_1a3fe14563dd1b9a418847063fdf60d56f" prot="public" virt="non-virtual"><scope>Gecode::Set::ConstSetView</scope><name>glbMin</name></member>
      <member refid="classGecode_1_1Set_1_1ConstSetView_1ac59ba5be76cfe3c7bd4ae94af1eb6a7c" prot="private" virt="non-virtual"><scope>Gecode::Set::ConstSetView</scope><name>GlbRanges&lt; ConstSetView &gt;</name></member>
      <member refid="classGecode_1_1Set_1_1ConstSetView_1aa7832e29dc7cf15649db57841df76715" prot="public" virt="non-virtual"><scope>Gecode::Set::ConstSetView</scope><name>glbSize</name></member>
      <member refid="classGecode_1_1Set_1_1ConstSetView_1a7a137a197c000ab824285bb7d48e432f" prot="public" virt="non-virtual"><scope>Gecode::Set::ConstSetView</scope><name>include</name></member>
      <member refid="classGecode_1_1Set_1_1ConstSetView_1ab35289059c1796a035af226a69873164" prot="public" virt="non-virtual"><scope>Gecode::Set::ConstSetView</scope><name>include</name></member>
      <member refid="classGecode_1_1Set_1_1ConstSetView_1a8583aec5942130fbdc3228200565306f" prot="public" virt="non-virtual"><scope>Gecode::Set::ConstSetView</scope><name>includeI</name></member>
      <member refid="classGecode_1_1Set_1_1ConstSetView_1a2b81ea8e6b9692a0a5c9653fd5b33c6d" prot="public" virt="non-virtual"><scope>Gecode::Set::ConstSetView</scope><name>intersect</name></member>
      <member refid="classGecode_1_1Set_1_1ConstSetView_1a37093341129d389d7e199d2f471e53fb" prot="public" virt="non-virtual"><scope>Gecode::Set::ConstSetView</scope><name>intersect</name></member>
      <member refid="classGecode_1_1Set_1_1ConstSetView_1aaa604c47b188ea7f154bce5d44930f2e" prot="public" virt="non-virtual"><scope>Gecode::Set::ConstSetView</scope><name>intersectI</name></member>
      <member refid="classGecode_1_1Set_1_1ConstSetView_1ab95c909323b9a2bb1f06af98da801370" prot="public" virt="non-virtual"><scope>Gecode::Set::ConstSetView</scope><name>lubAny</name></member>
      <member refid="classGecode_1_1Set_1_1ConstSetView_1ab4fbcb1e46dc3328711b7dfa784ab484" prot="public" virt="non-virtual"><scope>Gecode::Set::ConstSetView</scope><name>lubMax</name></member>
      <member refid="classGecode_1_1Set_1_1ConstSetView_1ab7effc190d389f9082f2b9e6fa211232" prot="public" virt="non-virtual"><scope>Gecode::Set::ConstSetView</scope><name>lubMax</name></member>
      <member refid="classGecode_1_1Set_1_1ConstSetView_1a42192413e2ffc0fd4a12c9d6694a4c00" prot="public" virt="non-virtual"><scope>Gecode::Set::ConstSetView</scope><name>lubMin</name></member>
      <member refid="classGecode_1_1Set_1_1ConstSetView_1adce50500e51d4838639d8f09ce5ccf35" prot="public" virt="non-virtual"><scope>Gecode::Set::ConstSetView</scope><name>lubMin</name></member>
      <member refid="classGecode_1_1Set_1_1ConstSetView_1a58f555c7c768cfc02e35148186bc9d07" prot="public" virt="non-virtual"><scope>Gecode::Set::ConstSetView</scope><name>lubMinN</name></member>
      <member refid="classGecode_1_1Set_1_1ConstSetView_1a339a2b3d44dc9f852c22897aa7597d96" prot="private" virt="non-virtual"><scope>Gecode::Set::ConstSetView</scope><name>LubRanges&lt; ConstSetView &gt;</name></member>
      <member refid="classGecode_1_1Set_1_1ConstSetView_1ac7b65ab945a39883a2f8425f1ed2bf76" prot="public" virt="non-virtual"><scope>Gecode::Set::ConstSetView</scope><name>lubSize</name></member>
      <member refid="classGecode_1_1ConstView_1aac6f95f0c055e27122643a9b1abd56f7" prot="public" virt="non-virtual"><scope>Gecode::Set::ConstSetView</scope><name>me</name></member>
      <member refid="classGecode_1_1ConstView_1a7a73566c33cdb56acedb6a44dd919a8a" prot="public" virt="non-virtual"><scope>Gecode::Set::ConstSetView</scope><name>med</name></member>
      <member refid="classGecode_1_1ConstView_1a4cd961b1afc7330ca276cf905840182a" prot="public" virt="non-virtual"><scope>Gecode::Set::ConstSetView</scope><name>modevent</name></member>
      <member refid="classGecode_1_1Set_1_1ConstSetView_1acb05946f02d2a7e161177617b7bf262e" prot="public" virt="non-virtual"><scope>Gecode::Set::ConstSetView</scope><name>notContains</name></member>
      <member refid="classGecode_1_1Set_1_1ConstSetView_1ac9b46ae9303a34808d1bcba996782c86" prot="public" virt="non-virtual"><scope>Gecode::Set::ConstSetView</scope><name>operator&lt;&lt;</name></member>
      <member refid="classGecode_1_1Set_1_1ConstSetView_1a01ead23a05a2352a306f1f984991ac3d" prot="private" virt="non-virtual"><scope>Gecode::Set::ConstSetView</scope><name>ranges</name></member>
      <member refid="classGecode_1_1Set_1_1ConstSetView_1a227c7d4aa341a10ebdc9905f48d73a5a" prot="public" virt="non-virtual"><scope>Gecode::Set::ConstSetView</scope><name>same</name></member>
      <member refid="classGecode_1_1ConstView_1a88bd3f6f1de1748f08d6f386bd661c12" prot="public" virt="non-virtual"><scope>Gecode::Set::ConstSetView</scope><name>schedule</name></member>
      <member refid="classGecode_1_1Set_1_1ConstSetView_1a51948be7f5572cae0e4b58b162c5c9b0" prot="private" virt="non-virtual"><scope>Gecode::Set::ConstSetView</scope><name>size</name></member>
      <member refid="classGecode_1_1ConstView_1a2501b26a166e241f1fe0a3fb1f574682" prot="public" virt="non-virtual"><scope>Gecode::Set::ConstSetView</scope><name>subscribe</name></member>
      <member refid="classGecode_1_1ConstView_1a7661595fd39f25b91d0b8a55e9645c12" prot="public" virt="non-virtual"><scope>Gecode::Set::ConstSetView</scope><name>subscribe</name></member>
      <member refid="classGecode_1_1Set_1_1ConstSetView_1ad80ed0d577406ec0feb540b228024584" prot="public" virt="non-virtual"><scope>Gecode::Set::ConstSetView</scope><name>unknownSize</name></member>
      <member refid="classGecode_1_1Set_1_1ConstSetView_1a5ba1699a283de9d148854797515d9b3a" prot="public" virt="non-virtual"><scope>Gecode::Set::ConstSetView</scope><name>update</name></member>
      <member refid="classGecode_1_1ConstView_1aa707302c7d06b42165f614cff5dc6fc0" prot="public" virt="non-virtual" ambiguityscope="ConstView&lt; SetView &gt;::"><scope>Gecode::Set::ConstSetView</scope><name>update</name></member>
      <member refid="classGecode_1_1ConstView_1aee74dc7502b456703a1f44a8c34736c5" prot="public" virt="non-virtual"><scope>Gecode::Set::ConstSetView</scope><name>varderived</name></member>
      <member refid="classGecode_1_1ConstView_1aa39169631d6411a2c21e7b9785e7427d" prot="public" virt="non-virtual"><scope>Gecode::Set::ConstSetView</scope><name>varimp</name></member>
      <member refid="classGecode_1_1ConstView_1ab14fccf8cab1048f2c7bf4e30d89a338" prot="public" virt="non-virtual"><scope>Gecode::Set::ConstSetView</scope><name>VarImpType</name></member>
      <member refid="classGecode_1_1ConstView_1af241f74e7ca3d2a53b8d962a3fd36bcd" prot="public" virt="non-virtual"><scope>Gecode::Set::ConstSetView</scope><name>VarType</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
