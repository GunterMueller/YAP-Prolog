<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classGecode_1_1Int_1_1Extensional_1_1Base" kind="class" prot="public">
    <compoundname>Gecode::Int::Extensional::Base</compoundname>
    <basecompoundref refid="classGecode_1_1Propagator" prot="public" virt="non-virtual">Gecode::Propagator</basecompoundref>
    <includes refid="extensional_8hh" local="no">extensional.hh</includes>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>View</declname>
        <defname>View</defname>
      </param>
      <param>
        <type>bool</type>
        <declname>subscribe</declname>
        <defname>subscribe</defname>
        <defval>true</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classGecode_1_1Int_1_1Extensional_1_1Base_1a70a61f3ac2699efa6e497e8125e51889" prot="protected" static="no" mutable="no">
        <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; View &gt;</type>
        <definition>ViewArray&lt;View&gt; Gecode::Int::Extensional::Base&lt; View, subscribe &gt;::x</definition>
        <argsstring></argsstring>
        <name>x</name>
        <briefdescription>
<para>Variables. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/extensional.hh" line="244" column="1" bodyfile="/usr/include/gecode/int/extensional.hh" bodystart="244" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Int_1_1Extensional_1_1Base_1a1f848bb638fc625c1cea97a24349d586" prot="protected" static="no" mutable="no">
        <type><ref refid="classGecode_1_1TupleSet" kindref="compound">TupleSet</ref></type>
        <definition>TupleSet Gecode::Int::Extensional::Base&lt; View, subscribe &gt;::tupleSet</definition>
        <argsstring></argsstring>
        <name>tupleSet</name>
        <briefdescription>
<para>Definition of constraint. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/extensional.hh" line="245" column="1" bodyfile="/usr/include/gecode/int/extensional.hh" bodystart="245" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGecode_1_1Int_1_1Extensional_1_1Base_1a9e444c2e0f26a9d1f932a1df5dd2d864" prot="protected" static="no" mutable="no">
        <type>Tuple **</type>
        <definition>Tuple** Gecode::Int::Extensional::Base&lt; View, subscribe &gt;::last_data</definition>
        <argsstring></argsstring>
        <name>last_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Last tuple looked at </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/extensional.hh" line="246" column="1" bodyfile="/usr/include/gecode/int/extensional.hh" bodystart="246" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classGecode_1_1Int_1_1Extensional_1_1Base_1a884b18b778f4e07097d2b32f77b7ae84" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGecode_1_1TupleSet_1_1TupleSetI" kindref="compound">TupleSet::TupleSetI</ref> *</type>
        <definition>forceinline TupleSet::TupleSetI * Gecode::Int::Extensional::Base&lt; View, subscribe &gt;::ts</definition>
        <argsstring>(void)</argsstring>
        <name>ts</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Access real tuple-set. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/extensional.hh" line="248" column="1" bodyfile="/usr/include/gecode/int/extensional/base.hpp" bodystart="85" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Extensional_1_1Base_1a393c6e6d272599e0655a75da69d69802" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Int::Extensional::Base&lt; View, subscribe &gt;::Base</definition>
        <argsstring>(Space &amp;home, bool share, Base&lt; View, subscribe &gt; &amp;p)</argsstring>
        <name>Base</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>share</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1Extensional_1_1Base" kindref="compound">Base</ref>&lt; View, subscribe &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Constructor for cloning <emphasis>p</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/extensional.hh" line="251" column="1" bodyfile="/usr/include/gecode/int/extensional/base.hpp" bodystart="64" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Extensional_1_1Base_1ad16b2004dc17d050f0b5015e324210b5" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Int::Extensional::Base&lt; View, subscribe &gt;::Base</definition>
        <argsstring>(Home home, ViewArray&lt; View &gt; &amp;x, const TupleSet &amp;t)</argsstring>
        <name>Base</name>
        <param>
          <type><ref refid="classGecode_1_1Home" kindref="compound">Home</ref></type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1ViewArray" kindref="compound">ViewArray</ref>&lt; View &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classGecode_1_1TupleSet" kindref="compound">TupleSet</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Constructor for posting. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/extensional.hh" line="253" column="1" bodyfile="/usr/include/gecode/int/extensional/base.hpp" bodystart="49" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Extensional_1_1Base_1aacf08d8a2f61b62b42aba16309ce655c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Int::Extensional::Base&lt; View, subscribe &gt;::init_last</definition>
        <argsstring>(Space &amp;home, Tuple **source, Tuple *base)</argsstring>
        <name>init_last</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>Tuple **</type>
          <declname>source</declname>
        </param>
        <param>
          <type>Tuple *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Initialize last support. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/extensional.hh" line="255" column="1" bodyfile="/usr/include/gecode/int/extensional/base.hpp" bodystart="74" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Extensional_1_1Base_1a8c93b7e10bd12db690645b3c067ca57d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Tuple</type>
        <definition>forceinline Tuple Gecode::Int::Extensional::Base&lt; View, subscribe &gt;::last</definition>
        <argsstring>(int i, int n)</argsstring>
        <name>last</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Find last support for view at position <emphasis>i</emphasis> and value <emphasis>n</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/extensional.hh" line="257" column="1" bodyfile="/usr/include/gecode/int/extensional/base.hpp" bodystart="99" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Extensional_1_1Base_1a2458d2b428a19f00c599b9f437ab68f8" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Tuple</type>
        <definition>forceinline Tuple Gecode::Int::Extensional::Base&lt; View, subscribe &gt;::last_next</definition>
        <argsstring>(int i, int n)</argsstring>
        <name>last_next</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Find last support for view at position <emphasis>i</emphasis> and value <emphasis>n</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/extensional.hh" line="259" column="1" bodyfile="/usr/include/gecode/int/extensional/base.hpp" bodystart="105" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Extensional_1_1Base_1ac404e77cc7b925b9a1040515d6df63db" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>forceinline void Gecode::Int::Extensional::Base&lt; View, subscribe &gt;::init_dom</definition>
        <argsstring>(Space &amp;home, Domain dom)</argsstring>
        <name>init_dom</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Support_1_1BitSetBase" kindref="compound">Domain</ref></type>
          <declname>dom</declname>
        </param>
        <briefdescription>
<para>Initialize domain information. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/extensional.hh" line="261" column="1" bodyfile="/usr/include/gecode/int/extensional/base.hpp" bodystart="118" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Extensional_1_1Base_1a03a802508ea0138e0a5658d34a7dff0f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>forceinline bool Gecode::Int::Extensional::Base&lt; View, subscribe &gt;::valid</definition>
        <argsstring>(Tuple t, Domain dom)</argsstring>
        <name>valid</name>
        <param>
          <type>Tuple</type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Support_1_1BitSetBase" kindref="compound">Domain</ref></type>
          <declname>dom</declname>
        </param>
        <briefdescription>
<para>Check wether tuple is valid for domain. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/extensional.hh" line="263" column="1" bodyfile="/usr/include/gecode/int/extensional/base.hpp" bodystart="129" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Extensional_1_1Base_1a10593312be6b1492cf57331dfa888b63" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Tuple</type>
        <definition>forceinline Tuple Gecode::Int::Extensional::Base&lt; View, subscribe &gt;::find_support</definition>
        <argsstring>(Domain dom, int i, int n)</argsstring>
        <name>find_support</name>
        <param>
          <type><ref refid="classGecode_1_1Support_1_1BitSetBase" kindref="compound">Domain</ref></type>
          <declname>dom</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Find support for view at position <emphasis>i</emphasis> and value <emphasis>n</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/extensional.hh" line="265" column="1" bodyfile="/usr/include/gecode/int/extensional/base.hpp" bodystart="138" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Extensional_1_1Base_1ad3f827c2ae5f6d18f2f5201441cb0682" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual Gecode::Int::Extensional::Base&lt; View, subscribe &gt;::~Base</definition>
        <argsstring>(void)</argsstring>
        <name>~Base</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Unused destructor (to avoid warnings) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/extensional.hh" line="273" column="1" bodyfile="/usr/include/gecode/int/extensional.hh" bodystart="273" bodyend="273"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classGecode_1_1Int_1_1Extensional_1_1Base_1a2b516241a1082fc08fb4e75933e41a50" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classGecode_1_1PropCost" kindref="compound">PropCost</ref></type>
        <definition>PropCost Gecode::Int::Extensional::Base&lt; View, subscribe &gt;::cost</definition>
        <argsstring>(const Space &amp;home, const ModEventDelta &amp;med) const </argsstring>
        <name>cost</name>
        <reimplements refid="classGecode_1_1Propagator_1a3de049f07a191fb956c9dbd4153efe75">cost</reimplements>
        <reimplementedby refid="classGecode_1_1Int_1_1Extensional_1_1Basic_1afed0be7d0ec222e2150dd41a1f375026">cost</reimplementedby>
        <reimplementedby refid="classGecode_1_1Int_1_1Extensional_1_1Incremental_1ae8dfb674d356c77e9ead87c025549917">cost</reimplementedby>
        <param>
          <type>const <ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceGecode_1a129e41c1d037528010d7b6706495a560" kindref="member">ModEventDelta</ref> &amp;</type>
          <declname>med</declname>
        </param>
        <briefdescription>
<para>Cost function (defined as high quadratic) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/extensional.hh" line="268" column="1" bodyfile="/usr/include/gecode/int/extensional/base.hpp" bodystart="91" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Extensional_1_1Base_1a776d9a59a0594b1a5d9dbd5f985464ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>size_t</type>
        <definition>forceinline size_t Gecode::Int::Extensional::Base&lt; View, subscribe &gt;::dispose</definition>
        <argsstring>(Space &amp;home)</argsstring>
        <name>dispose</name>
        <reimplements refid="classGecode_1_1Actor_1a143253b3eceda40f36834e38c8ac05d9">dispose</reimplements>
        <reimplementedby refid="classGecode_1_1Int_1_1Extensional_1_1Incremental_1a587abf35813e9829f9ab2b1f5b24c30c">dispose</reimplementedby>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <briefdescription>
<para>Delete propagator and return its size. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/extensional.hh" line="270" column="1" bodyfile="/usr/include/gecode/int/extensional/base.hpp" bodystart="148" bodyend="158"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Base for domain consistent extensional propagation </para>    </briefdescription>
    <detaileddescription>
<para>This class contains support for implementing domain consistent extensional propagation algorithms that use positive tuple sets and a <emphasis>last</emphasis> data structure.</para><para>Requires<programlisting><codeline><highlight class="preprocessor">#include<sp/>&lt;gecode/int/extensional.hh&gt;</highlight><highlight class="normal"><sp/></highlight></codeline>
</programlisting> </para>    </detaileddescription>
    <inheritancegraph>
      <node id="1012">
        <label>Gecode::Int::Extensional::Base&lt; View, subscribe &gt;</label>
        <link refid="classGecode_1_1Int_1_1Extensional_1_1Base"/>
        <childnode refid="1013" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1013">
        <label>Gecode::Propagator</label>
        <link refid="classGecode_1_1Propagator"/>
        <childnode refid="1014" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1014">
        <label>Gecode::Actor</label>
        <link refid="classGecode_1_1Actor"/>
        <childnode refid="1015" relation="private-inheritance">
        </childnode>
      </node>
      <node id="1015">
        <label>Gecode::ActorLink</label>
        <link refid="classGecode_1_1ActorLink"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1021">
        <label>Gecode::SharedHandle</label>
        <link refid="classGecode_1_1SharedHandle"/>
      </node>
      <node id="1020">
        <label>Gecode::TupleSet</label>
        <link refid="classGecode_1_1TupleSet"/>
        <childnode refid="1021" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1016">
        <label>Gecode::Int::Extensional::Base&lt; View, subscribe &gt;</label>
        <link refid="classGecode_1_1Int_1_1Extensional_1_1Base"/>
        <childnode refid="1017" relation="public-inheritance">
        </childnode>
        <childnode refid="1020" relation="usage">
          <edgelabel>tupleSet</edgelabel>
        </childnode>
      </node>
      <node id="1017">
        <label>Gecode::Propagator</label>
        <link refid="classGecode_1_1Propagator"/>
        <childnode refid="1018" relation="public-inheritance">
        </childnode>
        <childnode refid="1019" relation="usage">
          <edgelabel>advisors</edgelabel>
        </childnode>
      </node>
      <node id="1018">
        <label>Gecode::Actor</label>
        <link refid="classGecode_1_1Actor"/>
        <childnode refid="1019" relation="private-inheritance">
        </childnode>
      </node>
      <node id="1019">
        <label>Gecode::ActorLink</label>
        <link refid="classGecode_1_1ActorLink"/>
      </node>
    </collaborationgraph>
    <location file="/usr/include/gecode/int/extensional.hh" line="242" column="1" bodyfile="/usr/include/gecode/int/extensional.hh" bodystart="242" bodyend="274"/>
    <listofallmembers>
      <member refid="classGecode_1_1Propagator_1a55629f061a0fd8ecb2a4c41aa1568e28" prot="public" virt="virtual"><scope>Gecode::Int::Extensional::Base</scope><name>advise</name></member>
      <member refid="classGecode_1_1Propagator_1afee33d8aed2bc9debee126f17b5015cf" prot="public" virt="non-virtual"><scope>Gecode::Int::Extensional::Base</scope><name>advisors</name></member>
      <member refid="classGecode_1_1Propagator_1a593de773d2204f47ea365a99df2f75d0" prot="public" virt="non-virtual"><scope>Gecode::Int::Extensional::Base</scope><name>afc</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1Base_1a393c6e6d272599e0655a75da69d69802" prot="protected" virt="non-virtual"><scope>Gecode::Int::Extensional::Base</scope><name>Base</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1Base_1ad16b2004dc17d050f0b5015e324210b5" prot="protected" virt="non-virtual"><scope>Gecode::Int::Extensional::Base</scope><name>Base</name></member>
      <member refid="classGecode_1_1ActorLink_1a8427f41a27a72b52ceb52d0fdad21063" prot="public" virt="non-virtual" ambiguityscope="Gecode::ActorLink::"><scope>Gecode::Int::Extensional::Base</scope><name>cast</name></member>
      <member refid="classGecode_1_1ActorLink_1a464526456db41981f82a1193a8b4e569" prot="public" virt="non-virtual" ambiguityscope="Gecode::ActorLink::"><scope>Gecode::Int::Extensional::Base</scope><name>cast</name></member>
      <member refid="classGecode_1_1Actor_1a67b240e2810720846c3632c94cc9c99d" prot="public" virt="pure-virtual"><scope>Gecode::Int::Extensional::Base</scope><name>copy</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1Base_1a2b516241a1082fc08fb4e75933e41a50" prot="public" virt="virtual"><scope>Gecode::Int::Extensional::Base</scope><name>cost</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1Base_1a776d9a59a0594b1a5d9dbd5f985464ad" prot="public" virt="virtual"><scope>Gecode::Int::Extensional::Base</scope><name>dispose</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1Base_1a10593312be6b1492cf57331dfa888b63" prot="protected" virt="non-virtual"><scope>Gecode::Int::Extensional::Base</scope><name>find_support</name></member>
      <member refid="classGecode_1_1Propagator_1a3b286c7aec9843b60a531b495015b5f7" prot="protected" virt="non-virtual"><scope>Gecode::Int::Extensional::Base</scope><name>fwd</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1Base_1ac404e77cc7b925b9a1040515d6df63db" prot="protected" virt="non-virtual"><scope>Gecode::Int::Extensional::Base</scope><name>init_dom</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1Base_1aacf08d8a2f61b62b42aba16309ce655c" prot="protected" virt="non-virtual"><scope>Gecode::Int::Extensional::Base</scope><name>init_last</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1Base_1a8c93b7e10bd12db690645b3c067ca57d" prot="protected" virt="non-virtual"><scope>Gecode::Int::Extensional::Base</scope><name>last</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1Base_1a9e444c2e0f26a9d1f932a1df5dd2d864" prot="protected" virt="non-virtual"><scope>Gecode::Int::Extensional::Base</scope><name>last_data</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1Base_1a2458d2b428a19f00c599b9f437ab68f8" prot="protected" virt="non-virtual"><scope>Gecode::Int::Extensional::Base</scope><name>last_next</name></member>
      <member refid="classGecode_1_1Propagator_1ae9dfa55e47e4ff8e0c8e4c2a6efdbfc0" prot="public" virt="non-virtual"><scope>Gecode::Int::Extensional::Base</scope><name>med</name></member>
      <member refid="classGecode_1_1Propagator_1a4905db55af49af8f38558bdbcf5fd4a2" prot="public" virt="non-virtual"><scope>Gecode::Int::Extensional::Base</scope><name>modeventdelta</name></member>
      <member refid="classGecode_1_1Actor_1a388f671145dcf906f81d22bde2dc0f3d" prot="public" virt="non-virtual"><scope>Gecode::Int::Extensional::Base</scope><name>operator delete</name></member>
      <member refid="classGecode_1_1Actor_1ac28b9601b530076a1bda75834487f898" prot="public" virt="non-virtual"><scope>Gecode::Int::Extensional::Base</scope><name>operator new</name></member>
      <member refid="classGecode_1_1Propagator_1ad2dc98c1345222892592339948c6cde1" prot="public" virt="pure-virtual"><scope>Gecode::Int::Extensional::Base</scope><name>propagate</name></member>
      <member refid="classGecode_1_1Propagator_1a891f3e84cde2e8e60f8ad9340ad74b05" prot="protected" virt="non-virtual"><scope>Gecode::Int::Extensional::Base</scope><name>Propagator</name></member>
      <member refid="classGecode_1_1Propagator_1afeaeed8dae67de4313858bd82fdae5d0" prot="protected" virt="non-virtual"><scope>Gecode::Int::Extensional::Base</scope><name>Propagator</name></member>
      <member refid="classGecode_1_1Propagator_1a1781b5b0df38c39dddca4b44c3a00530" prot="public" virt="non-virtual"><scope>Gecode::Int::Extensional::Base</scope><name>size</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1Base_1a884b18b778f4e07097d2b32f77b7ae84" prot="protected" virt="non-virtual"><scope>Gecode::Int::Extensional::Base</scope><name>ts</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1Base_1a1f848bb638fc625c1cea97a24349d586" prot="protected" virt="non-virtual"><scope>Gecode::Int::Extensional::Base</scope><name>tupleSet</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1Base_1a03a802508ea0138e0a5658d34a7dff0f" prot="protected" virt="non-virtual"><scope>Gecode::Int::Extensional::Base</scope><name>valid</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1Base_1a70a61f3ac2699efa6e497e8125e51889" prot="protected" virt="non-virtual"><scope>Gecode::Int::Extensional::Base</scope><name>x</name></member>
      <member refid="classGecode_1_1Int_1_1Extensional_1_1Base_1ad3f827c2ae5f6d18f2f5201441cb0682" prot="protected" virt="virtual"><scope>Gecode::Int::Extensional::Base</scope><name>~Base</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
