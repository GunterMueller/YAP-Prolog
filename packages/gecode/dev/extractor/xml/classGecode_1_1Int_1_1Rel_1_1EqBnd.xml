<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classGecode_1_1Int_1_1Rel_1_1EqBnd" kind="class" prot="public">
    <compoundname>Gecode::Int::Rel::EqBnd</compoundname>
    <basecompoundref refid="classGecode_1_1MixBinaryPropagator" prot="public" virt="non-virtual">Gecode::MixBinaryPropagator&lt; View0, PC_INT_BND, View1, PC_INT_BND &gt;</basecompoundref>
    <includes refid="int_2rel_8hh" local="no">rel.hh</includes>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>View0</declname>
        <defname>View0</defname>
      </param>
      <param>
        <type>class</type>
        <declname>View1</declname>
        <defname>View1</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classGecode_1_1Int_1_1Rel_1_1EqBnd_1a5e15e53394ab1825092e7f9035584b7a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Int::Rel::EqBnd&lt; View0, View1 &gt;::EqBnd</definition>
        <argsstring>(Space &amp;home, bool share, EqBnd&lt; View0, View1 &gt; &amp;p)</argsstring>
        <name>EqBnd</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>share</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Int_1_1Rel_1_1EqBnd" kindref="compound">EqBnd</ref>&lt; View0, View1 &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Constructor for cloning <emphasis>p</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/rel.hh" line="114" column="1" bodyfile="/usr/include/gecode/int/rel/eq.hpp" bodystart="69" bodyend="70"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classGecode_1_1Int_1_1Rel_1_1EqBnd_1a42899f13279102b5ba6ff81fad19fcc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Int::Rel::EqBnd&lt; View0, View1 &gt;::EqBnd</definition>
        <argsstring>(Home home, View0 x0, View1 x1)</argsstring>
        <name>EqBnd</name>
        <param>
          <type><ref refid="classGecode_1_1Home" kindref="compound">Home</ref></type>
          <declname>home</declname>
        </param>
        <param>
          <type>View0</type>
          <declname>x0</declname>
        </param>
        <param>
          <type>View1</type>
          <declname>x1</declname>
        </param>
        <briefdescription>
<para>Constructor for posting. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/rel.hh" line="117" column="1" bodyfile="/usr/include/gecode/int/rel/eq.hpp" bodystart="47" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Rel_1_1EqBnd_1a1187930bdda7d1366fdd1e6be992c66d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forceinline Gecode::Int::Rel::EqBnd&lt; View0, View1 &gt;::EqBnd</definition>
        <argsstring>(Space &amp;home, bool share, Propagator &amp;p, View0 x0, View1 x1)</argsstring>
        <name>EqBnd</name>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>share</declname>
        </param>
        <param>
          <type><ref refid="classGecode_1_1Propagator" kindref="compound">Propagator</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>View0</type>
          <declname>x0</declname>
        </param>
        <param>
          <type>View1</type>
          <declname>x1</declname>
        </param>
        <briefdescription>
<para>Constructor for rewriting <emphasis>p</emphasis> during cloning. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/rel.hh" line="119" column="1" bodyfile="/usr/include/gecode/int/rel/eq.hpp" bodystart="74" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Rel_1_1EqBnd_1aa094530ce8eb73834892d57d728c3eeb" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classGecode_1_1Actor" kindref="compound">Actor</ref> *</type>
        <definition>Actor * Gecode::Int::Rel::EqBnd&lt; View0, View1 &gt;::copy</definition>
        <argsstring>(Space &amp;home, bool share)</argsstring>
        <name>copy</name>
        <reimplements refid="classGecode_1_1Actor_1a67b240e2810720846c3632c94cc9c99d">copy</reimplements>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>share</declname>
        </param>
        <briefdescription>
<para>Copy propagator during cloning. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/rel.hh" line="121" column="1" bodyfile="/usr/include/gecode/int/rel/eq.hpp" bodystart="81" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classGecode_1_1Int_1_1Rel_1_1EqBnd_1a739c1a3af06aad97546e1fd9b7ef45a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>ExecStatus Gecode::Int::Rel::EqBnd&lt; View0, View1 &gt;::propagate</definition>
        <argsstring>(Space &amp;home, const ModEventDelta &amp;med)</argsstring>
        <name>propagate</name>
        <reimplements refid="classGecode_1_1Propagator_1ad2dc98c1345222892592339948c6cde1">propagate</reimplements>
        <param>
          <type><ref refid="classGecode_1_1Space" kindref="compound">Space</ref> &amp;</type>
          <declname>home</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceGecode_1a129e41c1d037528010d7b6706495a560" kindref="member">ModEventDelta</ref> &amp;</type>
          <declname>med</declname>
        </param>
        <briefdescription>
<para>Perform propagation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/rel.hh" line="123" column="1" bodyfile="/usr/include/gecode/int/rel/eq.hpp" bodystart="87" bodyend="106"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classGecode_1_1Int_1_1Rel_1_1EqBnd_1a6a4e15cf4b828abbaf95786b97530ca0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceGecode_1ab278aee34126d2f13c5429ee3c4ed3b5" kindref="member">ExecStatus</ref></type>
        <definition>ExecStatus Gecode::Int::Rel::EqBnd&lt; View0, View1 &gt;::post</definition>
        <argsstring>(Home home, View0 x0, View1 x1)</argsstring>
        <name>post</name>
        <param>
          <type><ref refid="classGecode_1_1Home" kindref="compound">Home</ref></type>
          <declname>home</declname>
        </param>
        <param>
          <type>View0</type>
          <declname>x0</declname>
        </param>
        <param>
          <type>View1</type>
          <declname>x1</declname>
        </param>
        <briefdescription>
<para>Post bounds consistent propagator <formula id="19">$ x_0 = x_1$</formula>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/gecode/int/rel.hh" line="125" column="1" bodyfile="/usr/include/gecode/int/rel/eq.hpp" bodystart="52" bodyend="65"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Binary bounds consistent equality propagator. </para>    </briefdescription>
    <detaileddescription>
<para>Requires<programlisting><codeline><highlight class="preprocessor">#include<sp/>&lt;gecode/int/rel.hh&gt;</highlight><highlight class="normal"><sp/></highlight></codeline>
</programlisting> </para>    </detaileddescription>
    <inheritancegraph>
      <node id="2063">
        <label>Gecode::MixBinaryPropagator&lt; View0, PC_INT_BND, View1, PC_INT_BND &gt;</label>
        <link refid="classGecode_1_1MixBinaryPropagator"/>
        <childnode refid="2064" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2064">
        <label>Gecode::Propagator</label>
        <link refid="classGecode_1_1Propagator"/>
        <childnode refid="2065" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2065">
        <label>Gecode::Actor</label>
        <link refid="classGecode_1_1Actor"/>
        <childnode refid="2066" relation="private-inheritance">
        </childnode>
      </node>
      <node id="2066">
        <label>Gecode::ActorLink</label>
        <link refid="classGecode_1_1ActorLink"/>
      </node>
      <node id="2062">
        <label>Gecode::Int::Rel::EqBnd&lt; View0, View1 &gt;</label>
        <link refid="classGecode_1_1Int_1_1Rel_1_1EqBnd"/>
        <childnode refid="2063" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2068">
        <label>Gecode::MixBinaryPropagator&lt; View0, PC_INT_BND, View1, PC_INT_BND &gt;</label>
        <link refid="classGecode_1_1MixBinaryPropagator"/>
        <childnode refid="2069" relation="public-inheritance">
        </childnode>
        <childnode refid="2072" relation="usage">
          <edgelabel>x0</edgelabel>
        </childnode>
        <childnode refid="2073" relation="usage">
          <edgelabel>x1</edgelabel>
        </childnode>
      </node>
      <node id="2069">
        <label>Gecode::Propagator</label>
        <link refid="classGecode_1_1Propagator"/>
        <childnode refid="2070" relation="public-inheritance">
        </childnode>
        <childnode refid="2071" relation="usage">
          <edgelabel>advisors</edgelabel>
        </childnode>
      </node>
      <node id="2072">
        <label>View0</label>
      </node>
      <node id="2073">
        <label>View1</label>
      </node>
      <node id="2070">
        <label>Gecode::Actor</label>
        <link refid="classGecode_1_1Actor"/>
        <childnode refid="2071" relation="private-inheritance">
        </childnode>
      </node>
      <node id="2071">
        <label>Gecode::ActorLink</label>
        <link refid="classGecode_1_1ActorLink"/>
      </node>
      <node id="2067">
        <label>Gecode::Int::Rel::EqBnd&lt; View0, View1 &gt;</label>
        <link refid="classGecode_1_1Int_1_1Rel_1_1EqBnd"/>
        <childnode refid="2068" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/usr/include/gecode/int/rel.hh" line="108" column="1" bodyfile="/usr/include/gecode/int/rel.hh" bodystart="107" bodyend="126"/>
    <listofallmembers>
      <member refid="classGecode_1_1Propagator_1a55629f061a0fd8ecb2a4c41aa1568e28" prot="public" virt="virtual"><scope>Gecode::Int::Rel::EqBnd</scope><name>advise</name></member>
      <member refid="classGecode_1_1Propagator_1afee33d8aed2bc9debee126f17b5015cf" prot="public" virt="non-virtual"><scope>Gecode::Int::Rel::EqBnd</scope><name>advisors</name></member>
      <member refid="classGecode_1_1Propagator_1a593de773d2204f47ea365a99df2f75d0" prot="public" virt="non-virtual"><scope>Gecode::Int::Rel::EqBnd</scope><name>afc</name></member>
      <member refid="classGecode_1_1ActorLink_1a8427f41a27a72b52ceb52d0fdad21063" prot="public" virt="non-virtual" ambiguityscope="Gecode::ActorLink::"><scope>Gecode::Int::Rel::EqBnd</scope><name>cast</name></member>
      <member refid="classGecode_1_1ActorLink_1a464526456db41981f82a1193a8b4e569" prot="public" virt="non-virtual" ambiguityscope="Gecode::ActorLink::"><scope>Gecode::Int::Rel::EqBnd</scope><name>cast</name></member>
      <member refid="classGecode_1_1Int_1_1Rel_1_1EqBnd_1aa094530ce8eb73834892d57d728c3eeb" prot="public" virt="virtual"><scope>Gecode::Int::Rel::EqBnd</scope><name>copy</name></member>
      <member refid="classGecode_1_1MixBinaryPropagator_1aef25c60dde63e8d9cda2cec8c17b51e8" prot="public" virt="virtual"><scope>Gecode::Int::Rel::EqBnd</scope><name>cost</name></member>
      <member refid="classGecode_1_1MixBinaryPropagator_1a10c621be7a2dfef913ce01e7678bac84" prot="public" virt="virtual"><scope>Gecode::Int::Rel::EqBnd</scope><name>dispose</name></member>
      <member refid="classGecode_1_1Int_1_1Rel_1_1EqBnd_1a5e15e53394ab1825092e7f9035584b7a" prot="protected" virt="non-virtual"><scope>Gecode::Int::Rel::EqBnd</scope><name>EqBnd</name></member>
      <member refid="classGecode_1_1Int_1_1Rel_1_1EqBnd_1a42899f13279102b5ba6ff81fad19fcc8" prot="public" virt="non-virtual"><scope>Gecode::Int::Rel::EqBnd</scope><name>EqBnd</name></member>
      <member refid="classGecode_1_1Int_1_1Rel_1_1EqBnd_1a1187930bdda7d1366fdd1e6be992c66d" prot="public" virt="non-virtual"><scope>Gecode::Int::Rel::EqBnd</scope><name>EqBnd</name></member>
      <member refid="classGecode_1_1Propagator_1a3b286c7aec9843b60a531b495015b5f7" prot="protected" virt="non-virtual"><scope>Gecode::Int::Rel::EqBnd</scope><name>fwd</name></member>
      <member refid="classGecode_1_1Propagator_1ae9dfa55e47e4ff8e0c8e4c2a6efdbfc0" prot="public" virt="non-virtual"><scope>Gecode::Int::Rel::EqBnd</scope><name>med</name></member>
      <member refid="classGecode_1_1MixBinaryPropagator_1a6d2a3d72b230c1d7f3628d35f12a5fad" prot="protected" virt="non-virtual"><scope>Gecode::Int::Rel::EqBnd</scope><name>MixBinaryPropagator</name></member>
      <member refid="classGecode_1_1MixBinaryPropagator_1a77d8edc82a546fde6866328412de52ba" prot="protected" virt="non-virtual"><scope>Gecode::Int::Rel::EqBnd</scope><name>MixBinaryPropagator</name></member>
      <member refid="classGecode_1_1MixBinaryPropagator_1a93a5256431c0f53076a11d440960d50b" prot="protected" virt="non-virtual"><scope>Gecode::Int::Rel::EqBnd</scope><name>MixBinaryPropagator</name></member>
      <member refid="classGecode_1_1Propagator_1a4905db55af49af8f38558bdbcf5fd4a2" prot="public" virt="non-virtual"><scope>Gecode::Int::Rel::EqBnd</scope><name>modeventdelta</name></member>
      <member refid="classGecode_1_1Actor_1a388f671145dcf906f81d22bde2dc0f3d" prot="public" virt="non-virtual"><scope>Gecode::Int::Rel::EqBnd</scope><name>operator delete</name></member>
      <member refid="classGecode_1_1Actor_1ac28b9601b530076a1bda75834487f898" prot="public" virt="non-virtual"><scope>Gecode::Int::Rel::EqBnd</scope><name>operator new</name></member>
      <member refid="classGecode_1_1Int_1_1Rel_1_1EqBnd_1a6a4e15cf4b828abbaf95786b97530ca0" prot="public" virt="non-virtual"><scope>Gecode::Int::Rel::EqBnd</scope><name>post</name></member>
      <member refid="classGecode_1_1Int_1_1Rel_1_1EqBnd_1a739c1a3af06aad97546e1fd9b7ef45a5" prot="public" virt="virtual"><scope>Gecode::Int::Rel::EqBnd</scope><name>propagate</name></member>
      <member refid="classGecode_1_1Propagator_1a891f3e84cde2e8e60f8ad9340ad74b05" prot="protected" virt="non-virtual"><scope>Gecode::Int::Rel::EqBnd</scope><name>Propagator</name></member>
      <member refid="classGecode_1_1Propagator_1afeaeed8dae67de4313858bd82fdae5d0" prot="protected" virt="non-virtual"><scope>Gecode::Int::Rel::EqBnd</scope><name>Propagator</name></member>
      <member refid="classGecode_1_1Propagator_1a1781b5b0df38c39dddca4b44c3a00530" prot="public" virt="non-virtual"><scope>Gecode::Int::Rel::EqBnd</scope><name>size</name></member>
      <member refid="classGecode_1_1MixBinaryPropagator_1af4b9b77e2ef3a4923fb0c86a9182158b" prot="protected" virt="non-virtual"><scope>Gecode::Int::Rel::EqBnd</scope><name>x0</name></member>
      <member refid="classGecode_1_1MixBinaryPropagator_1a7a162f63c3a35d6bbcdd6dbef1549caf" prot="protected" virt="non-virtual"><scope>Gecode::Int::Rel::EqBnd</scope><name>x1</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
